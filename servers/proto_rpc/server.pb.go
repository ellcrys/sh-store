// Code generated by protoc-gen-gogo.
// source: server.proto
// DO NOT EDIT!

/*
Package proto_rpc is a generated protocol buffer package.

It is generated from these files:
	server.proto

It has these top-level messages:
	Account
	CreateContractMsg
	Contract
	CreateBucketMsg
	Bucket
	GetAllMappingMsg
	Mappings
	GetMappingMsg
	CreateMappingMsg
	Mapping
	GetAccountMsg
	ObjectCountResponse
	GetObjectMsg
	UpdateObjectsMsg
	DeleteObjectsMsg
	AffectedResponse
	OrderBy
	Session
	CreateObjectsMsg
	GetObjectResponse
	GetObjectsResponse
	Object
*/
package proto_rpc

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Account represents an account
type Account struct {
	ID               string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id,omitempty" structs:"id,omitempty" mapstructure:"id,omitempty" jsonapi:"primary,accounts,omitempty"`
	FirstName        string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"first_name,omitempty" structs:"first_name,omitempty" mapstructure:"first_name,omitempty" jsonapi:"attr,first_name,omitempty"`
	LastName         string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"last_name,omitempty" structs:"last_name,omitempty" mapstructure:"last_name,omitempty" jsonapi:"attr,last_name,omitempty"`
	Email            string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty" structs:"email,omitempty" mapstructure:"email,omitempty" jsonapi:"attr,email,omitempty"`
	Password         string `protobuf:"bytes,5,opt,name=password,proto3" json:"-" structs:"password,omitempty" mapstructure:"password,omitempty" jsonapi:"attr,password,omitempty"`
	Confirmed        bool   `protobuf:"varint,6,opt,name=confirmed,proto3" json:"confirmed,omitempty" structs:"confirmed,omitempty" mapstructure:"confirmed,omitempty" jsonapi:"attr,confirmed,omitempty"`
	ConfirmationCode string `protobuf:"bytes,7,opt,name=confirmationCode,proto3" json:"confirmation_code,omitempty" structs:"confirmation_code,omitempty" mapstructure:"confirmation_code,omitempty" jsonapi:"attr,confirmation_code,omitempty"`
	CreatedAt        string `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"created_at,omitempty" structs:"created_at,omitempty" mapstructure:"created_at,omitempty" jsonapi:"attr,created_at,omitempty"`
	UpdatedAt        string `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updated_at,omitempty" structs:"updated_at,omitempty" mapstructure:"updated_at,omitempty" jsonapi:"attr,updated_at,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{0} }

func (m *Account) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Account) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Account) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Account) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *Account) GetConfirmationCode() string {
	if m != nil {
		return m.ConfirmationCode
	}
	return ""
}

func (m *Account) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Account) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

// CreateContractMsg represents a contract creating message
type CreateContractMsg struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" structs:"name,omitempty" mapstructure:"name,omitempty"`
}

func (m *CreateContractMsg) Reset()                    { *m = CreateContractMsg{} }
func (m *CreateContractMsg) String() string            { return proto.CompactTextString(m) }
func (*CreateContractMsg) ProtoMessage()               {}
func (*CreateContractMsg) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{1} }

func (m *CreateContractMsg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Contract represents a contract
type Contract struct {
	ID           string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id,omitempty" structs:"id,omitempty" mapstructure:"id,omitempty"`
	Creator      string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty" structs:"creator,omitempty" mapstructure:"creator,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" structs:"name,omitempty" mapstructure:"name,omitempty"`
	ClientID     string `protobuf:"bytes,4,opt,name=clientID,proto3" json:"client_id,omitempty" structs:"client_id,omitempty" mapstructure:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,5,opt,name=clientSecret,proto3" json:"client_secret,omitempty" structs:"client_secret,omitempty" mapstructure:"client_secret,omitempty"`
	CreatedAt    string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"created_at,omitempty" structs:"created_at,omitempty" mapstructure:"created_at,omitempty"`
}

func (m *Contract) Reset()                    { *m = Contract{} }
func (m *Contract) String() string            { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()               {}
func (*Contract) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{2} }

func (m *Contract) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Contract) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Contract) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contract) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *Contract) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *Contract) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

// CreateBucketMsg represents a request to create a bucket
type CreateBucketMsg struct {
	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" structs:"name,omitempty" mapstructure:"name,omitempty"`
	Immutable bool   `protobuf:"varint,2,opt,name=immutable,proto3" json:"immutable,omitempty" structs:"immutable,omitempty" mapstructure:"immutable,omitempty"`
}

func (m *CreateBucketMsg) Reset()                    { *m = CreateBucketMsg{} }
func (m *CreateBucketMsg) String() string            { return proto.CompactTextString(m) }
func (*CreateBucketMsg) ProtoMessage()               {}
func (*CreateBucketMsg) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{3} }

func (m *CreateBucketMsg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateBucketMsg) GetImmutable() bool {
	if m != nil {
		return m.Immutable
	}
	return false
}

// GetBucketResponse represents a bucket
type Bucket struct {
	ID        string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id,omitempty" structs:"id,omitempty" mapstructure:"id,omitempty" jsonapi:"primary,buckets,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" structs:"name,omitempty" mapstructure:"name,omitempty" jsonapi:"attr,name,omitempty"`
	Immutable bool   `protobuf:"varint,3,opt,name=immutable,proto3" json:"immutable,omitempty" structs:"immutable,omitempty" mapstructure:"immutable,omitempty" jsonapi:"attr,immutable,omitempty"`
	Creator   string `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty" structs:"creator,omitempty" mapstructure:"immutable,omitempty" jsonapi:"attr,creator,omitempty"`
	CreatedAt string `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"created_at,omitempty" structs:"created_at,omitempty" mapstructure:"created_at,omitempty" jsonapi:"attr,created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updated_at,omitempty" structs:"updated_at,omitempty" mapstructure:"updated_at,omitempty" jsonapi:"attr,updated_at,omitempty"`
}

func (m *Bucket) Reset()                    { *m = Bucket{} }
func (m *Bucket) String() string            { return proto.CompactTextString(m) }
func (*Bucket) ProtoMessage()               {}
func (*Bucket) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{4} }

func (m *Bucket) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Bucket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Bucket) GetImmutable() bool {
	if m != nil {
		return m.Immutable
	}
	return false
}

func (m *Bucket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Bucket) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Bucket) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

// GetAllMappingMsg represents a request for recent mappings
type GetAllMappingMsg struct {
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty" structs:"limit,omitempty" mapstructure:"limit,omitempty"`
}

func (m *GetAllMappingMsg) Reset()                    { *m = GetAllMappingMsg{} }
func (m *GetAllMappingMsg) String() string            { return proto.CompactTextString(m) }
func (*GetAllMappingMsg) ProtoMessage()               {}
func (*GetAllMappingMsg) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{5} }

func (m *GetAllMappingMsg) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// GetMappings represents a response container all mappings encoded in JSON
type Mappings struct {
	Mappings []*Mapping `protobuf:"bytes,1,rep,name=mappings" json:"mappings,omitempty" structs:"mappings,omitempty" mapstructure:"mappings,omitempty" jsonapi:"data,omitempty"`
}

func (m *Mappings) Reset()                    { *m = Mappings{} }
func (m *Mappings) String() string            { return proto.CompactTextString(m) }
func (*Mappings) ProtoMessage()               {}
func (*Mappings) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{6} }

func (m *Mappings) GetMappings() []*Mapping {
	if m != nil {
		return m.Mappings
	}
	return nil
}

// GetMappingMsg represents a request for a mapping
type GetMappingMsg struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" structs:"name,omitempty" mapstructure:"name,omitempty"`
}

func (m *GetMappingMsg) Reset()                    { *m = GetMappingMsg{} }
func (m *GetMappingMsg) String() string            { return proto.CompactTextString(m) }
func (*GetMappingMsg) ProtoMessage()               {}
func (*GetMappingMsg) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{7} }

func (m *GetMappingMsg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// CreateMappingMsg represents mapping creation parameters
type CreateMappingMsg struct {
	// The name of the mapping
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" structs:"name,omitempty" mapstructure:"name,omitempty"`
	// The bucket name
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty" structs:"bucket,omitempty" mapstructure:"bucket,omitempty"`
	// JSON mapping structure as bytes
	Mapping string `protobuf:"bytes,3,opt,name=mapping,proto3" json:"mapping,omitempty" structs:"mapping,omitempty" mapstructure:"mapping,omitempty"`
}

func (m *CreateMappingMsg) Reset()                    { *m = CreateMappingMsg{} }
func (m *CreateMappingMsg) String() string            { return proto.CompactTextString(m) }
func (*CreateMappingMsg) ProtoMessage()               {}
func (*CreateMappingMsg) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{8} }

func (m *CreateMappingMsg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateMappingMsg) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *CreateMappingMsg) GetMapping() string {
	if m != nil {
		return m.Mapping
	}
	return ""
}

type Mapping struct {
	ID      string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id,omitempty" structs:"id,omitempty" mapstructure:"id,omitempty" jsonapi:"primary,mappings,omitempty"`
	Bucket  string `protobuf:"bytes,2,opt,name=Bucket,proto3" json:"bucket,omitempty" structs:"bucket,omitempty" mapstructure:"bucket,omitempty" jsonapi:"attr,bucket,omitempty"`
	Creator string `protobuf:"bytes,3,opt,name=Creator,proto3" json:"creator,omitempty" structs:"creator,omitempty" mapstructure:"creator,omitempty" jsonapi:"attr,creator,omitempty"`
	Name    string `protobuf:"bytes,4,opt,name=Name,proto3" json:"name,omitempty" structs:"name,omitempty" mapstructure:"name,omitempty" jsonapi:"attr,name,omitempty"`
	Mapping string `protobuf:"bytes,5,opt,name=Mapping,proto3" json:"mapping,omitempty" structs:"mapping,omitempty" mapstructure:"mapping,omitempty" jsonapi:"attr,mapping,omitempty"`
}

func (m *Mapping) Reset()                    { *m = Mapping{} }
func (m *Mapping) String() string            { return proto.CompactTextString(m) }
func (*Mapping) ProtoMessage()               {}
func (*Mapping) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{9} }

func (m *Mapping) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Mapping) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *Mapping) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Mapping) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Mapping) GetMapping() string {
	if m != nil {
		return m.Mapping
	}
	return ""
}

// GetAccountMsg represents an account request message
type GetAccountMsg struct {
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id,omitempty" structs:"id,omitempty" mapstructure:"id,omitempty"`
}

func (m *GetAccountMsg) Reset()                    { *m = GetAccountMsg{} }
func (m *GetAccountMsg) String() string            { return proto.CompactTextString(m) }
func (*GetAccountMsg) ProtoMessage()               {}
func (*GetAccountMsg) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{10} }

func (m *GetAccountMsg) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

// ObjectCountResponse represents object counts
type ObjectCountResponse struct {
	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count" structs:"count,omitempty" mapstructure:"count,omitempty"`
}

func (m *ObjectCountResponse) Reset()                    { *m = ObjectCountResponse{} }
func (m *ObjectCountResponse) String() string            { return proto.CompactTextString(m) }
func (*ObjectCountResponse) ProtoMessage()               {}
func (*ObjectCountResponse) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{11} }

func (m *ObjectCountResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

// GetObjectMsg represents query parameters for retrieving objects
type GetObjectMsg struct {
	Bucket  string     `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty" structs:"bucket,omitempty" mapstructure:"bucket,omitempty"`
	Query   []byte     `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty" structs:"query,omitempty" mapstructure:"query,omitempty"`
	Owner   string     `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty" structs:"owner,omitempty" mapstructure:"owner,omitempty"`
	Order   []*OrderBy `protobuf:"bytes,4,rep,name=order" json:"order,omitempty" structs:"order,omitempty" mapstructure:"order,omitempty"`
	Limit   int32      `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty" structs:"limit,omitempty" mapstructure:"limit,omitempty"`
	Mapping string     `protobuf:"bytes,6,opt,name=mapping,proto3" json:"mapping,omitempty" structs:"mapping,omitempty" mapstructure:"mapping,omitempty"`
}

func (m *GetObjectMsg) Reset()                    { *m = GetObjectMsg{} }
func (m *GetObjectMsg) String() string            { return proto.CompactTextString(m) }
func (*GetObjectMsg) ProtoMessage()               {}
func (*GetObjectMsg) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{12} }

func (m *GetObjectMsg) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *GetObjectMsg) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *GetObjectMsg) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *GetObjectMsg) GetOrder() []*OrderBy {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *GetObjectMsg) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetObjectMsg) GetMapping() string {
	if m != nil {
		return m.Mapping
	}
	return ""
}

// UpdateObjectsMsg represents parameters for updating objects
type UpdateObjectsMsg struct {
	Bucket  string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty" structs:"bucket,omitempty" mapstructure:"bucket,omitempty"`
	Query   []byte `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty" structs:"query,omitempty" mapstructure:"query,omitempty"`
	Owner   string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty" structs:"owner,omitempty" mapstructure:"owner,omitempty"`
	Update  []byte `protobuf:"bytes,4,opt,name=update,proto3" json:"update,omitempty" structs:"update,omitempty" mapstructure:"update,omitempty"`
	Mapping string `protobuf:"bytes,5,opt,name=mapping,proto3" json:"mapping,omitempty" structs:"mapping,omitempty" mapstructure:"mapping,omitempty"`
}

func (m *UpdateObjectsMsg) Reset()                    { *m = UpdateObjectsMsg{} }
func (m *UpdateObjectsMsg) String() string            { return proto.CompactTextString(m) }
func (*UpdateObjectsMsg) ProtoMessage()               {}
func (*UpdateObjectsMsg) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{13} }

func (m *UpdateObjectsMsg) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *UpdateObjectsMsg) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *UpdateObjectsMsg) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *UpdateObjectsMsg) GetUpdate() []byte {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *UpdateObjectsMsg) GetMapping() string {
	if m != nil {
		return m.Mapping
	}
	return ""
}

// DeleteObjects represents parameter for deleting objects
type DeleteObjectsMsg struct {
	Bucket  string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty" structs:"bucket,omitempty" mapstructure:"bucket,omitempty"`
	Query   []byte `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty" structs:"query,omitempty" mapstructure:"query,omitempty"`
	Owner   string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty" structs:"owner,omitempty" mapstructure:"owner,omitempty"`
	Mapping string `protobuf:"bytes,4,opt,name=mapping,proto3" json:"mapping,omitempty" structs:"mapping,omitempty" mapstructure:"mapping,omitempty"`
}

func (m *DeleteObjectsMsg) Reset()                    { *m = DeleteObjectsMsg{} }
func (m *DeleteObjectsMsg) String() string            { return proto.CompactTextString(m) }
func (*DeleteObjectsMsg) ProtoMessage()               {}
func (*DeleteObjectsMsg) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{14} }

func (m *DeleteObjectsMsg) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *DeleteObjectsMsg) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *DeleteObjectsMsg) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *DeleteObjectsMsg) GetMapping() string {
	if m != nil {
		return m.Mapping
	}
	return ""
}

// AffectedResponse
type AffectedResponse struct {
	Affected int64 `protobuf:"varint,1,opt,name=affected,proto3" json:"bucket,omitempty" structs:"bucket,omitempty" mapstructure:"bucket,omitempty"`
}

func (m *AffectedResponse) Reset()                    { *m = AffectedResponse{} }
func (m *AffectedResponse) String() string            { return proto.CompactTextString(m) }
func (*AffectedResponse) ProtoMessage()               {}
func (*AffectedResponse) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{15} }

func (m *AffectedResponse) GetAffected() int64 {
	if m != nil {
		return m.Affected
	}
	return 0
}

// OrderBy represents how a field is ordered in a query
type OrderBy struct {
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty" structs:"field,omitempty" mapstructure:"field,omitempty"`
	Order int32  `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty" structs:"order,omitempty" mapstructure:"order,omitempty"`
}

func (m *OrderBy) Reset()                    { *m = OrderBy{} }
func (m *OrderBy) String() string            { return proto.CompactTextString(m) }
func (*OrderBy) ProtoMessage()               {}
func (*OrderBy) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{16} }

func (m *OrderBy) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *OrderBy) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

// Session represents a database session request body
type Session struct {
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id,omitempty" structs:"id,omitempty" mapstructure:"id,omitempty"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{17} }

func (m *Session) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

// CreateObjects represents a collection of objects to be created
type CreateObjectsMsg struct {
	// The bucket name to associated object to
	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket_id,omitempty" structs:"bucket_id,omitempty" mapstructure:"bucket_id,omitempty"`
	// Must be a slice of Objects encoded in json
	Objects []byte `protobuf:"bytes,2,opt,name=objects,proto3" json:"objects,omitempty" structs:"objects,omitempty" mapstructure:"objects,omitempty"`
	// Optional mapping to use during object decoding
	Mapping string `protobuf:"bytes,3,opt,name=mapping,proto3" json:"mapping,omitempty" structs:"mapping,omitempty" mapstructure:"mapping,omitempty"`
}

func (m *CreateObjectsMsg) Reset()                    { *m = CreateObjectsMsg{} }
func (m *CreateObjectsMsg) String() string            { return proto.CompactTextString(m) }
func (*CreateObjectsMsg) ProtoMessage()               {}
func (*CreateObjectsMsg) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{18} }

func (m *CreateObjectsMsg) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *CreateObjectsMsg) GetObjects() []byte {
	if m != nil {
		return m.Objects
	}
	return nil
}

func (m *CreateObjectsMsg) GetMapping() string {
	if m != nil {
		return m.Mapping
	}
	return ""
}

// GetObjectResponse describes a response of single object
type GetObjectResponse struct {
	Object []byte `protobuf:"bytes,1,opt,name=object,proto3" json:"data,omitempty" structs:"data,omitempty" mapstructure:"data,omitempty"`
}

func (m *GetObjectResponse) Reset()                    { *m = GetObjectResponse{} }
func (m *GetObjectResponse) String() string            { return proto.CompactTextString(m) }
func (*GetObjectResponse) ProtoMessage()               {}
func (*GetObjectResponse) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{19} }

func (m *GetObjectResponse) GetObject() []byte {
	if m != nil {
		return m.Object
	}
	return nil
}

// GetObjectsResponse describes a response of multiple objects
type GetObjectsResponse struct {
	Objects []byte `protobuf:"bytes,1,opt,name=objects,proto3" json:"data,omitempty" structs:"data,omitempty" mapstructure:"data,omitempty"`
}

func (m *GetObjectsResponse) Reset()                    { *m = GetObjectsResponse{} }
func (m *GetObjectsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetObjectsResponse) ProtoMessage()               {}
func (*GetObjectsResponse) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{20} }

func (m *GetObjectsResponse) GetObjects() []byte {
	if m != nil {
		return m.Objects
	}
	return nil
}

// Object describes an object
type Object struct {
	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id,omitempty" structs:"id,omitempty" mapstructure:"id,omitempty"`
	OwnerID     string `protobuf:"bytes,2,opt,name=ownerID,proto3" json:"owner_id,omitempty" structs:"owner_id,omitempty" mapstructure:"owner_id,omitempty"`
	CreatorID   string `protobuf:"bytes,3,opt,name=creatorID,proto3" json:"creator_id,omitempty" structs:"creator_id,omitempty" mapstructure:"creator_id,omitempty"`
	PartitionID string `protobuf:"bytes,4,opt,name=partitionID,proto3" json:"partition_id,omitempty" structs:"partition_id,omitempty" mapstructure:"partition_id,omitempty"`
	Key         string `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty" structs:"key,omitempty" mapstructure:"key,omitempty"`
	Value       string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty" structs:"value,omitempty" mapstructure:"value,omitempty"`
	Protected   bool   `protobuf:"varint,7,opt,name=protected,proto3" json:"protected,omitempty" structs:"protected,omitempty" mapstructure:"protected,omitempty"`
	RefOnly     bool   `protobuf:"varint,8,opt,name=refOnly,proto3" json:"ref_only,omitempty" structs:"ref_only,omitempty" mapstructure:"ref_only,omitempty"`
	Timestamp   int64  `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty" structs:"timestamp,omitempty" mapstructure:"timestamp,omitempty"`
	PrevHash    string `protobuf:"bytes,10,opt,name=prevHash,proto3" json:"prev_hash,omitempty" structs:"prev_hash,omitempty" mapstructure:"prev_hash,omitempty"`
	PeerHash    string `protobuf:"bytes,11,opt,name=peerHash,proto3" json:"peer_hash,omitempty" structs:"peer_hash,omitempty" mapstructure:"peer_hash,omitempty"`
	Hash        string `protobuf:"bytes,12,opt,name=hash,proto3" json:"hash,omitempty" structs:"hash,omitempty" mapstructure:"hash,omitempty"`
	Ref1        string `protobuf:"bytes,13,opt,name=ref1,proto3" json:"ref1,omitempty" structs:"ref1,omitempty" mapstructure:"ref1,omitempty"`
	Ref2        string `protobuf:"bytes,14,opt,name=ref2,proto3" json:"ref2,omitempty" structs:"ref2,omitempty" mapstructure:"ref2,omitempty"`
	Ref3        string `protobuf:"bytes,15,opt,name=ref3,proto3" json:"ref3,omitempty" structs:"ref3,omitempty" mapstructure:"ref3,omitempty"`
	Ref4        string `protobuf:"bytes,16,opt,name=ref4,proto3" json:"ref4,omitempty" structs:"ref4,omitempty" mapstructure:"ref4,omitempty"`
	Ref5        string `protobuf:"bytes,17,opt,name=ref5,proto3" json:"ref5,omitempty" structs:"ref5,omitempty" mapstructure:"ref5,omitempty"`
	Ref6        string `protobuf:"bytes,18,opt,name=ref6,proto3" json:"ref6,omitempty" structs:"ref6,omitempty" mapstructure:"ref6,omitempty"`
	Ref7        string `protobuf:"bytes,19,opt,name=ref7,proto3" json:"ref7,omitempty" structs:"ref7,omitempty" mapstructure:"ref7,omitempty"`
	Ref8        string `protobuf:"bytes,20,opt,name=ref8,proto3" json:"ref8,omitempty" structs:"ref8,omitempty" mapstructure:"ref8,omitempty"`
	Ref9        string `protobuf:"bytes,21,opt,name=ref9,proto3" json:"ref9,omitempty" structs:"ref9,omitempty" mapstructure:"ref9,omitempty"`
	Ref10       string `protobuf:"bytes,22,opt,name=ref10,proto3" json:"ref10,omitempty" structs:"ref10,omitempty" mapstructure:"ref10,omitempty"`
}

func (m *Object) Reset()                    { *m = Object{} }
func (m *Object) String() string            { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()               {}
func (*Object) Descriptor() ([]byte, []int) { return fileDescriptorServer, []int{21} }

func (m *Object) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Object) GetOwnerID() string {
	if m != nil {
		return m.OwnerID
	}
	return ""
}

func (m *Object) GetCreatorID() string {
	if m != nil {
		return m.CreatorID
	}
	return ""
}

func (m *Object) GetPartitionID() string {
	if m != nil {
		return m.PartitionID
	}
	return ""
}

func (m *Object) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Object) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Object) GetProtected() bool {
	if m != nil {
		return m.Protected
	}
	return false
}

func (m *Object) GetRefOnly() bool {
	if m != nil {
		return m.RefOnly
	}
	return false
}

func (m *Object) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Object) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *Object) GetPeerHash() string {
	if m != nil {
		return m.PeerHash
	}
	return ""
}

func (m *Object) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Object) GetRef1() string {
	if m != nil {
		return m.Ref1
	}
	return ""
}

func (m *Object) GetRef2() string {
	if m != nil {
		return m.Ref2
	}
	return ""
}

func (m *Object) GetRef3() string {
	if m != nil {
		return m.Ref3
	}
	return ""
}

func (m *Object) GetRef4() string {
	if m != nil {
		return m.Ref4
	}
	return ""
}

func (m *Object) GetRef5() string {
	if m != nil {
		return m.Ref5
	}
	return ""
}

func (m *Object) GetRef6() string {
	if m != nil {
		return m.Ref6
	}
	return ""
}

func (m *Object) GetRef7() string {
	if m != nil {
		return m.Ref7
	}
	return ""
}

func (m *Object) GetRef8() string {
	if m != nil {
		return m.Ref8
	}
	return ""
}

func (m *Object) GetRef9() string {
	if m != nil {
		return m.Ref9
	}
	return ""
}

func (m *Object) GetRef10() string {
	if m != nil {
		return m.Ref10
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "proto_rpc.Account")
	proto.RegisterType((*CreateContractMsg)(nil), "proto_rpc.CreateContractMsg")
	proto.RegisterType((*Contract)(nil), "proto_rpc.Contract")
	proto.RegisterType((*CreateBucketMsg)(nil), "proto_rpc.CreateBucketMsg")
	proto.RegisterType((*Bucket)(nil), "proto_rpc.Bucket")
	proto.RegisterType((*GetAllMappingMsg)(nil), "proto_rpc.GetAllMappingMsg")
	proto.RegisterType((*Mappings)(nil), "proto_rpc.Mappings")
	proto.RegisterType((*GetMappingMsg)(nil), "proto_rpc.GetMappingMsg")
	proto.RegisterType((*CreateMappingMsg)(nil), "proto_rpc.CreateMappingMsg")
	proto.RegisterType((*Mapping)(nil), "proto_rpc.Mapping")
	proto.RegisterType((*GetAccountMsg)(nil), "proto_rpc.GetAccountMsg")
	proto.RegisterType((*ObjectCountResponse)(nil), "proto_rpc.ObjectCountResponse")
	proto.RegisterType((*GetObjectMsg)(nil), "proto_rpc.GetObjectMsg")
	proto.RegisterType((*UpdateObjectsMsg)(nil), "proto_rpc.UpdateObjectsMsg")
	proto.RegisterType((*DeleteObjectsMsg)(nil), "proto_rpc.DeleteObjectsMsg")
	proto.RegisterType((*AffectedResponse)(nil), "proto_rpc.AffectedResponse")
	proto.RegisterType((*OrderBy)(nil), "proto_rpc.OrderBy")
	proto.RegisterType((*Session)(nil), "proto_rpc.Session")
	proto.RegisterType((*CreateObjectsMsg)(nil), "proto_rpc.CreateObjectsMsg")
	proto.RegisterType((*GetObjectResponse)(nil), "proto_rpc.GetObjectResponse")
	proto.RegisterType((*GetObjectsResponse)(nil), "proto_rpc.GetObjectsResponse")
	proto.RegisterType((*Object)(nil), "proto_rpc.Object")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for API service

type APIClient interface {
	CreateContract(ctx context.Context, in *CreateContractMsg, opts ...grpc.CallOption) (*Contract, error)
	CreateBucket(ctx context.Context, in *CreateBucketMsg, opts ...grpc.CallOption) (*Bucket, error)
	CreateObjects(ctx context.Context, in *CreateObjectsMsg, opts ...grpc.CallOption) (*GetObjectsResponse, error)
	CreateSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error)
	GetSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error)
	DeleteSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error)
	CommitSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error)
	RollbackSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error)
	GetObjects(ctx context.Context, in *GetObjectMsg, opts ...grpc.CallOption) (*GetObjectsResponse, error)
	CountObjects(ctx context.Context, in *GetObjectMsg, opts ...grpc.CallOption) (*ObjectCountResponse, error)
	UpdateObjects(ctx context.Context, in *UpdateObjectsMsg, opts ...grpc.CallOption) (*AffectedResponse, error)
	DeleteObjects(ctx context.Context, in *DeleteObjectsMsg, opts ...grpc.CallOption) (*AffectedResponse, error)
	GetAccount(ctx context.Context, in *GetAccountMsg, opts ...grpc.CallOption) (*Account, error)
	CreateMapping(ctx context.Context, in *CreateMappingMsg, opts ...grpc.CallOption) (*Mapping, error)
	GetMapping(ctx context.Context, in *GetMappingMsg, opts ...grpc.CallOption) (*Mapping, error)
	GetAllMapping(ctx context.Context, in *GetAllMappingMsg, opts ...grpc.CallOption) (*Mappings, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) CreateContract(ctx context.Context, in *CreateContractMsg, opts ...grpc.CallOption) (*Contract, error) {
	out := new(Contract)
	err := grpc.Invoke(ctx, "/proto_rpc.API/CreateContract", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) CreateBucket(ctx context.Context, in *CreateBucketMsg, opts ...grpc.CallOption) (*Bucket, error) {
	out := new(Bucket)
	err := grpc.Invoke(ctx, "/proto_rpc.API/CreateBucket", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) CreateObjects(ctx context.Context, in *CreateObjectsMsg, opts ...grpc.CallOption) (*GetObjectsResponse, error) {
	out := new(GetObjectsResponse)
	err := grpc.Invoke(ctx, "/proto_rpc.API/CreateObjects", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) CreateSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := grpc.Invoke(ctx, "/proto_rpc.API/CreateSession", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := grpc.Invoke(ctx, "/proto_rpc.API/GetSession", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) DeleteSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := grpc.Invoke(ctx, "/proto_rpc.API/DeleteSession", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) CommitSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := grpc.Invoke(ctx, "/proto_rpc.API/CommitSession", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) RollbackSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := grpc.Invoke(ctx, "/proto_rpc.API/RollbackSession", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetObjects(ctx context.Context, in *GetObjectMsg, opts ...grpc.CallOption) (*GetObjectsResponse, error) {
	out := new(GetObjectsResponse)
	err := grpc.Invoke(ctx, "/proto_rpc.API/GetObjects", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) CountObjects(ctx context.Context, in *GetObjectMsg, opts ...grpc.CallOption) (*ObjectCountResponse, error) {
	out := new(ObjectCountResponse)
	err := grpc.Invoke(ctx, "/proto_rpc.API/CountObjects", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) UpdateObjects(ctx context.Context, in *UpdateObjectsMsg, opts ...grpc.CallOption) (*AffectedResponse, error) {
	out := new(AffectedResponse)
	err := grpc.Invoke(ctx, "/proto_rpc.API/UpdateObjects", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) DeleteObjects(ctx context.Context, in *DeleteObjectsMsg, opts ...grpc.CallOption) (*AffectedResponse, error) {
	out := new(AffectedResponse)
	err := grpc.Invoke(ctx, "/proto_rpc.API/DeleteObjects", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetAccount(ctx context.Context, in *GetAccountMsg, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/proto_rpc.API/GetAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) CreateMapping(ctx context.Context, in *CreateMappingMsg, opts ...grpc.CallOption) (*Mapping, error) {
	out := new(Mapping)
	err := grpc.Invoke(ctx, "/proto_rpc.API/CreateMapping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetMapping(ctx context.Context, in *GetMappingMsg, opts ...grpc.CallOption) (*Mapping, error) {
	out := new(Mapping)
	err := grpc.Invoke(ctx, "/proto_rpc.API/GetMapping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetAllMapping(ctx context.Context, in *GetAllMappingMsg, opts ...grpc.CallOption) (*Mappings, error) {
	out := new(Mappings)
	err := grpc.Invoke(ctx, "/proto_rpc.API/GetAllMapping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for API service

type APIServer interface {
	CreateContract(context.Context, *CreateContractMsg) (*Contract, error)
	CreateBucket(context.Context, *CreateBucketMsg) (*Bucket, error)
	CreateObjects(context.Context, *CreateObjectsMsg) (*GetObjectsResponse, error)
	CreateSession(context.Context, *Session) (*Session, error)
	GetSession(context.Context, *Session) (*Session, error)
	DeleteSession(context.Context, *Session) (*Session, error)
	CommitSession(context.Context, *Session) (*Session, error)
	RollbackSession(context.Context, *Session) (*Session, error)
	GetObjects(context.Context, *GetObjectMsg) (*GetObjectsResponse, error)
	CountObjects(context.Context, *GetObjectMsg) (*ObjectCountResponse, error)
	UpdateObjects(context.Context, *UpdateObjectsMsg) (*AffectedResponse, error)
	DeleteObjects(context.Context, *DeleteObjectsMsg) (*AffectedResponse, error)
	GetAccount(context.Context, *GetAccountMsg) (*Account, error)
	CreateMapping(context.Context, *CreateMappingMsg) (*Mapping, error)
	GetMapping(context.Context, *GetMappingMsg) (*Mapping, error)
	GetAllMapping(context.Context, *GetAllMappingMsg) (*Mappings, error)
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_CreateContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateContractMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).CreateContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/CreateContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).CreateContract(ctx, req.(*CreateContractMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_CreateBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBucketMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).CreateBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/CreateBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).CreateBucket(ctx, req.(*CreateBucketMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_CreateObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateObjectsMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).CreateObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/CreateObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).CreateObjects(ctx, req.(*CreateObjectsMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_CreateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).CreateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/CreateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).CreateSession(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/GetSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetSession(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_DeleteSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).DeleteSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/DeleteSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).DeleteSession(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_CommitSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).CommitSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/CommitSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).CommitSession(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_RollbackSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).RollbackSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/RollbackSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).RollbackSession(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetObjectMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/GetObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetObjects(ctx, req.(*GetObjectMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_CountObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetObjectMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).CountObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/CountObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).CountObjects(ctx, req.(*GetObjectMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_UpdateObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateObjectsMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).UpdateObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/UpdateObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).UpdateObjects(ctx, req.(*UpdateObjectsMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_DeleteObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteObjectsMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).DeleteObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/DeleteObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).DeleteObjects(ctx, req.(*DeleteObjectsMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetAccount(ctx, req.(*GetAccountMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_CreateMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMappingMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).CreateMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/CreateMapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).CreateMapping(ctx, req.(*CreateMappingMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMappingMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/GetMapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetMapping(ctx, req.(*GetMappingMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetAllMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllMappingMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetAllMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_rpc.API/GetAllMapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetAllMapping(ctx, req.(*GetAllMappingMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto_rpc.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateContract",
			Handler:    _API_CreateContract_Handler,
		},
		{
			MethodName: "CreateBucket",
			Handler:    _API_CreateBucket_Handler,
		},
		{
			MethodName: "CreateObjects",
			Handler:    _API_CreateObjects_Handler,
		},
		{
			MethodName: "CreateSession",
			Handler:    _API_CreateSession_Handler,
		},
		{
			MethodName: "GetSession",
			Handler:    _API_GetSession_Handler,
		},
		{
			MethodName: "DeleteSession",
			Handler:    _API_DeleteSession_Handler,
		},
		{
			MethodName: "CommitSession",
			Handler:    _API_CommitSession_Handler,
		},
		{
			MethodName: "RollbackSession",
			Handler:    _API_RollbackSession_Handler,
		},
		{
			MethodName: "GetObjects",
			Handler:    _API_GetObjects_Handler,
		},
		{
			MethodName: "CountObjects",
			Handler:    _API_CountObjects_Handler,
		},
		{
			MethodName: "UpdateObjects",
			Handler:    _API_UpdateObjects_Handler,
		},
		{
			MethodName: "DeleteObjects",
			Handler:    _API_DeleteObjects_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _API_GetAccount_Handler,
		},
		{
			MethodName: "CreateMapping",
			Handler:    _API_CreateMapping_Handler,
		},
		{
			MethodName: "GetMapping",
			Handler:    _API_GetMapping_Handler,
		},
		{
			MethodName: "GetAllMapping",
			Handler:    _API_GetAllMapping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}

func init() { proto.RegisterFile("server.proto", fileDescriptorServer) }

var fileDescriptorServer = []byte{
	// 2177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x9a, 0xcd, 0x6f, 0x24, 0x47,
	0x15, 0xc0, 0xd5, 0x1e, 0xcf, 0x87, 0x6b, 0xc7, 0xbb, 0x76, 0x6d, 0x48, 0x5a, 0x0e, 0x30, 0xab,
	0x3e, 0xed, 0x61, 0xb3, 0x49, 0xfc, 0xed, 0x15, 0xa0, 0xf8, 0x83, 0x38, 0x16, 0x84, 0x45, 0x15,
	0x12, 0x10, 0xab, 0xe0, 0x6d, 0xf7, 0xd4, 0x78, 0xdb, 0x9e, 0x9e, 0x9e, 0xed, 0xee, 0xf1, 0x32,
	0x24, 0x8a, 0x50, 0x04, 0x1c, 0xc8, 0x05, 0x21, 0x4e, 0x80, 0x90, 0x38, 0x72, 0xe1, 0x88, 0x04,
	0x12, 0x7f, 0x01, 0x27, 0x4e, 0xdc, 0xfa, 0xce, 0x1c, 0x38, 0xe4, 0x2f, 0x40, 0x5d, 0x55, 0x5d,
	0xdd, 0xf5, 0xd5, 0xbb, 0x5e, 0xef, 0x8c, 0x40, 0xca, 0xc9, 0xee, 0xf7, 0x5e, 0xd7, 0xef, 0xf5,
	0xab, 0xaa, 0xf7, 0xea, 0x63, 0x40, 0x3b, 0xc6, 0xd1, 0x05, 0x8e, 0xee, 0x0e, 0xa3, 0x30, 0x09,
	0xe1, 0x02, 0xf9, 0x73, 0x1c, 0x0d, 0xbd, 0x95, 0xd7, 0x4e, 0xfd, 0xe4, 0xd1, 0xe8, 0xe4, 0xae,
	0x17, 0x06, 0xaf, 0x9f, 0x86, 0xa7, 0xe1, 0xeb, 0x44, 0x75, 0x32, 0xea, 0x91, 0x27, 0xf2, 0x40,
	0xfe, 0xa3, 0x6f, 0x3a, 0x9f, 0x5d, 0x03, 0xcd, 0x5d, 0xcf, 0x0b, 0x47, 0x83, 0x04, 0x7e, 0x04,
	0xe6, 0x8e, 0x0e, 0x6c, 0xeb, 0x96, 0x75, 0x7b, 0x61, 0xef, 0x7c, 0x92, 0x76, 0xda, 0x7e, 0xf7,
	0x4e, 0x18, 0xf8, 0x09, 0x0e, 0x86, 0xc9, 0xf8, 0xf3, 0xb4, 0xf3, 0xfd, 0x38, 0x89, 0x46, 0x5e,
	0x12, 0xdf, 0x73, 0xca, 0x0a, 0xe7, 0x56, 0xe0, 0x0e, 0xa9, 0x66, 0x14, 0x61, 0x59, 0x77, 0x16,
	0x87, 0x03, 0x77, 0xe8, 0xdf, 0x73, 0x86, 0x91, 0x1f, 0xb8, 0xd1, 0xf8, 0x8e, 0x4b, 0x61, 0x71,
	0xc9, 0x08, 0xcd, 0x1d, 0x1d, 0xc0, 0x3f, 0x5a, 0x60, 0xa1, 0xe7, 0x47, 0x71, 0xf2, 0x1d, 0x37,
	0xc0, 0xf6, 0x1c, 0x71, 0xe2, 0x53, 0x6b, 0x92, 0x76, 0x5e, 0x22, 0xd2, 0xe3, 0x81, 0x1b, 0x60,
	0xc1, 0x9b, 0x1e, 0xf7, 0x46, 0x67, 0x20, 0x7b, 0xa5, 0xb7, 0xe1, 0xde, 0xb9, 0x49, 0x12, 0xdd,
	0xd1, 0xda, 0xa0, 0xc2, 0x2b, 0xf8, 0x5b, 0x0b, 0xb4, 0xfa, 0x2e, 0x73, 0xb1, 0x46, 0x5c, 0xfc,
	0x64, 0x92, 0x76, 0x6e, 0x66, 0x32, 0xd5, 0x41, 0x8f, 0x3b, 0xa8, 0xd1, 0xcb, 0xfe, 0x69, 0x4d,
	0x44, 0xf7, 0x74, 0x26, 0x88, 0xfb, 0x03, 0x7f, 0x66, 0x81, 0x3a, 0x0e, 0x5c, 0xbf, 0x6f, 0xcf,
	0x13, 0xcf, 0x06, 0x93, 0xb4, 0x73, 0x83, 0x08, 0x0c, 0x9d, 0x28, 0xe9, 0x64, 0x8f, 0x14, 0xb5,
	0xe8, 0x8d, 0xac, 0x46, 0x14, 0x0e, 0x7f, 0x6e, 0x81, 0xd6, 0xd0, 0x8d, 0xe3, 0x27, 0x61, 0xd4,
	0xb5, 0xeb, 0xc4, 0x13, 0x7f, 0x92, 0x76, 0xac, 0xd7, 0x3e, 0x4f, 0x3b, 0x0f, 0x39, 0x3b, 0xb7,
	0x30, 0xe3, 0x75, 0x16, 0xa2, 0x07, 0x1a, 0x0b, 0xc4, 0xd1, 0xf0, 0xf7, 0x16, 0x58, 0xf0, 0xc2,
	0x41, 0xcf, 0x8f, 0x02, 0xdc, 0xb5, 0x1b, 0xb7, 0xac, 0xdb, 0x2d, 0xda, 0x59, 0x5c, 0x68, 0xe8,
	0x2c, 0x8d, 0x5e, 0xf6, 0x4d, 0x6b, 0x22, 0x3a, 0xa7, 0x33, 0x41, 0x85, 0x43, 0xf0, 0x1f, 0x16,
	0x58, 0x62, 0x4f, 0x6e, 0xe2, 0x87, 0x83, 0xfd, 0xb0, 0x8b, 0xed, 0x26, 0x09, 0xd7, 0x1f, 0xb2,
	0x51, 0xff, 0x6a, 0x59, 0x79, 0xec, 0x85, 0x5d, 0x71, 0x6c, 0x7d, 0x24, 0xbb, 0xab, 0xb3, 0x33,
	0xb8, 0xad, 0x37, 0xd5, 0xba, 0xaf, 0x35, 0x45, 0x8a, 0xe3, 0x64, 0xf2, 0x7a, 0x11, 0x76, 0x13,
	0xdc, 0xdd, 0x4d, 0xec, 0x56, 0x69, 0xf2, 0x32, 0xe9, 0xb1, 0x9b, 0x18, 0x26, 0xaf, 0xce, 0x40,
	0x71, 0x5c, 0x6b, 0x23, 0x79, 0xac, 0xb3, 0x41, 0x85, 0x57, 0xc4, 0xc7, 0xd1, 0xb0, 0xcb, 0x7c,
	0x5c, 0x28, 0xf9, 0xc8, 0xa4, 0x66, 0x1f, 0x75, 0x06, 0xb2, 0x8f, 0x7a, 0x1b, 0xd1, 0x47, 0xad,
	0x0d, 0x2a, 0xbc, 0x72, 0x46, 0x60, 0x79, 0x9f, 0x38, 0xbc, 0x1f, 0x0e, 0x92, 0xc8, 0xf5, 0x92,
	0x77, 0xe3, 0x53, 0xf8, 0x10, 0xcc, 0x67, 0xb3, 0x9e, 0x25, 0xe6, 0x6f, 0x4f, 0xd2, 0xce, 0x75,
	0x25, 0xd7, 0x6c, 0x72, 0x5f, 0xab, 0xd3, 0x8c, 0x9c, 0x3e, 0x48, 0xcb, 0xce, 0xdf, 0xea, 0xa0,
	0x95, 0x13, 0xe1, 0x07, 0xa5, 0x2a, 0xf0, 0xb6, 0xa6, 0x0a, 0xac, 0x5e, 0xbe, 0x0a, 0x90, 0x04,
	0x1f, 0x82, 0x26, 0xe9, 0x8c, 0x30, 0x62, 0xd9, 0xfd, 0xfd, 0x49, 0xda, 0x59, 0x66, 0x22, 0x81,
	0xf0, 0x35, 0x71, 0x70, 0x94, 0xb5, 0xda, 0x91, 0x21, 0x18, 0xa0, 0x9c, 0xc2, 0xe3, 0x56, 0x9b,
	0x56, 0xdc, 0xe0, 0x13, 0xd0, 0xf2, 0xfa, 0x3e, 0x1e, 0x24, 0x47, 0x07, 0x2c, 0xe9, 0x3e, 0x20,
	0x19, 0x86, 0xc8, 0x8e, 0xa5, 0xb8, 0xbd, 0x55, 0x7c, 0x95, 0xaa, 0x57, 0xbe, 0x4b, 0x63, 0x82,
	0x38, 0x0c, 0x7e, 0x66, 0x81, 0x36, 0x7d, 0x78, 0x0f, 0x7b, 0x11, 0x4e, 0x58, 0xa2, 0x3d, 0x9d,
	0xa4, 0x9d, 0x57, 0xd8, 0xab, 0x31, 0x51, 0x08, 0x1e, 0xbc, 0x23, 0x7b, 0x20, 0xdb, 0x18, 0xbc,
	0x50, 0xcc, 0x90, 0x00, 0x87, 0x1f, 0x97, 0x27, 0x7f, 0x83, 0x78, 0xf2, 0xa3, 0x8a, 0xb9, 0xbf,
	0x77, 0xf5, 0xb9, 0x5f, 0x9a, 0xd7, 0xce, 0x7f, 0x2c, 0x70, 0x83, 0x4e, 0x9a, 0xbd, 0x91, 0x77,
	0x8e, 0x67, 0x33, 0x65, 0xe0, 0x18, 0x2c, 0xf8, 0x41, 0x30, 0x4a, 0xdc, 0x93, 0x3e, 0x5d, 0xad,
	0xb4, 0x68, 0xdf, 0x73, 0xa1, 0xa1, 0xef, 0x35, 0x7a, 0x65, 0xea, 0x68, 0x4c, 0x50, 0x41, 0x73,
	0x7e, 0xda, 0x04, 0x0d, 0xfa, 0xa9, 0xf0, 0x27, 0xa5, 0xb9, 0x7a, 0xa6, 0x99, 0xab, 0x1f, 0xbc,
	0x88, 0x15, 0xdb, 0x09, 0x61, 0x29, 0x0b, 0xb6, 0x4f, 0x58, 0x8c, 0xe7, 0x38, 0x5d, 0x8d, 0xf1,
	0xf7, 0x9e, 0x2f, 0xc6, 0x52, 0xda, 0xd4, 0xf7, 0x40, 0x56, 0xe0, 0x8b, 0x2e, 0xa8, 0x15, 0x05,
	0x5e, 0xdf, 0x05, 0xde, 0x55, 0xbb, 0x40, 0x72, 0xea, 0x29, 0xbd, 0x04, 0x7f, 0x6d, 0x15, 0xf9,
	0x8e, 0xe6, 0x86, 0x1f, 0x9b, 0xf2, 0xdd, 0xf1, 0xb3, 0xe7, 0xbb, 0x67, 0x70, 0xac, 0x2a, 0x25,
	0x8a, 0x75, 0xba, 0xfe, 0x7f, 0x50, 0xa7, 0x1b, 0xff, 0x93, 0x75, 0x7a, 0x0c, 0x96, 0x0e, 0x71,
	0xb2, 0xdb, 0xef, 0xbf, 0xeb, 0x0e, 0x87, 0xfe, 0xe0, 0x34, 0xcb, 0x39, 0x18, 0xd4, 0xfb, 0x7e,
	0xe0, 0x27, 0x64, 0x3a, 0xd6, 0xf7, 0xee, 0x67, 0xcb, 0x6f, 0x22, 0x10, 0x9c, 0xdd, 0x2e, 0x36,
	0x05, 0xa2, 0x4e, 0xd9, 0x10, 0x48, 0x6a, 0x44, 0x5b, 0x77, 0xfe, 0x6c, 0x81, 0x16, 0xa3, 0xc6,
	0x59, 0xac, 0x5a, 0x01, 0x7b, 0xb0, 0xad, 0x5b, 0xb5, 0xdb, 0xd7, 0x56, 0xe1, 0x5d, 0xbe, 0x17,
	0xbc, 0xcb, 0xec, 0xf6, 0x1e, 0x4f, 0xd2, 0x0e, 0xcc, 0xed, 0x0c, 0xbb, 0x01, 0x55, 0x2d, 0x7b,
	0xa4, 0xb3, 0xe0, 0x71, 0xeb, 0xba, 0x89, 0x2b, 0xd4, 0xaa, 0xdc, 0xda, 0x79, 0x0c, 0x16, 0x0f,
	0x71, 0x52, 0x0a, 0xd4, 0xf4, 0xd7, 0x33, 0xff, 0x9c, 0x03, 0x4b, 0xb4, 0x24, 0xcc, 0x12, 0x0b,
	0xcf, 0x40, 0x83, 0xe6, 0x4a, 0x96, 0x13, 0xd1, 0x24, 0xed, 0x2c, 0x51, 0x89, 0x40, 0xb9, 0xc7,
	0x29, 0xb2, 0x52, 0xe6, 0x28, 0x7a, 0xc4, 0x08, 0xd9, 0x6a, 0x8a, 0x45, 0x98, 0xad, 0x6f, 0xc8,
	0x6a, 0x8a, 0x89, 0x0c, 0xab, 0x29, 0x45, 0x6b, 0xe8, 0x61, 0x21, 0x75, 0x30, 0x99, 0xf3, 0xd7,
	0x3a, 0x68, 0xb2, 0x68, 0xce, 0xe6, 0xa0, 0x40, 0x33, 0xdc, 0x48, 0xdd, 0xf9, 0xa5, 0x95, 0x97,
	0x3f, 0x16, 0xe6, 0xc8, 0x10, 0xe6, 0x1f, 0x3e, 0x7f, 0x98, 0xa5, 0x7c, 0xa0, 0xe9, 0x06, 0x56,
	0x80, 0x7f, 0x65, 0x81, 0xe6, 0x3e, 0xcb, 0xf2, 0xb4, 0x1f, 0x2e, 0x4c, 0x59, 0xfe, 0xc3, 0xab,
	0xac, 0x6a, 0x9f, 0x21, 0xc7, 0x33, 0x37, 0xb2, 0xba, 0x4c, 0xce, 0x27, 0xe6, 0x67, 0x5f, 0x97,
	0xc9, 0x39, 0x44, 0x16, 0x12, 0x36, 0x50, 0x58, 0x85, 0xb9, 0x30, 0x0d, 0xcd, 0x0f, 0xaf, 0x32,
	0x34, 0x25, 0x67, 0x74, 0x63, 0x97, 0xb9, 0xe1, 0x9c, 0x92, 0x14, 0xc4, 0x8e, 0xb9, 0xb2, 0x5c,
	0x30, 0xa5, 0x3d, 0x8e, 0x13, 0x81, 0x9b, 0xf7, 0x4f, 0xce, 0xb0, 0x97, 0xec, 0x67, 0x24, 0x84,
	0xe3, 0x61, 0x38, 0x88, 0x31, 0x7c, 0x00, 0xea, 0x04, 0x4d, 0x88, 0xb5, 0xbd, 0x6f, 0x4e, 0xd2,
	0x0e, 0x15, 0x08, 0x05, 0x81, 0x48, 0xaa, 0x76, 0xef, 0xa2, 0x1a, 0xd1, 0x26, 0x9c, 0xdf, 0xd5,
	0x41, 0xfb, 0x10, 0x27, 0x94, 0x9b, 0x7d, 0x5c, 0x91, 0x86, 0xac, 0xa9, 0xa7, 0x21, 0x0c, 0xea,
	0x8f, 0x47, 0x38, 0x1a, 0x93, 0xa9, 0xd8, 0xa6, 0x45, 0x8f, 0x08, 0x0c, 0x45, 0x4f, 0xd2, 0xc9,
	0x20, 0x59, 0x8d, 0x68, 0xeb, 0x19, 0x26, 0x7c, 0x32, 0xc0, 0xf9, 0x1c, 0x23, 0x18, 0x22, 0x30,
	0x60, 0x24, 0x9d, 0x8c, 0x91, 0xd5, 0x88, 0xb6, 0x0e, 0xc7, 0xa0, 0x1e, 0x46, 0x5d, 0x9c, 0x2d,
	0xd8, 0xe4, 0x52, 0x7a, 0x3f, 0x93, 0xef, 0x8d, 0x19, 0x3a, 0x7b, 0x30, 0xa1, 0x45, 0x9d, 0x82,
	0x96, 0xd4, 0x88, 0x12, 0x8b, 0xd5, 0x43, 0x7d, 0x9a, 0xab, 0x87, 0x72, 0xd9, 0x68, 0xcc, 0xa4,
	0x6c, 0xfc, 0x69, 0x1e, 0x2c, 0xbd, 0x4f, 0xd6, 0x4d, 0x74, 0x80, 0xc6, 0x5f, 0x8c, 0xd0, 0xab,
	0x8c, 0xd0, 0x33, 0xd0, 0xa0, 0xab, 0x50, 0x92, 0xde, 0xdb, 0x34, 0x72, 0x54, 0x62, 0x88, 0x9c,
	0xac, 0xd4, 0xaf, 0x87, 0x85, 0xc8, 0x51, 0x51, 0x79, 0xac, 0xd4, 0x67, 0x32, 0x56, 0xfe, 0x5e,
	0x03, 0x4b, 0x07, 0xb8, 0x8f, 0xbf, 0x18, 0x2b, 0x2f, 0x64, 0xac, 0x94, 0xfa, 0x6f, 0x7e, 0x26,
	0xfd, 0xf7, 0xa9, 0x05, 0x96, 0x76, 0x7b, 0x3d, 0xec, 0x25, 0xb8, 0xcb, 0x6b, 0xdf, 0x00, 0xb4,
	0x5c, 0x26, 0x63, 0xe5, 0x6f, 0x1a, 0x3d, 0xc8, 0x19, 0xce, 0xbf, 0x2c, 0xd0, 0x64, 0xc9, 0x3a,
	0x0b, 0x74, 0xcf, 0xc7, 0xfd, 0x2e, 0x1b, 0x3a, 0x24, 0xd0, 0x44, 0x60, 0x08, 0xb4, 0xa4, 0x53,
	0xef, 0x90, 0x44, 0x35, 0xa2, 0xad, 0x93, 0xfe, 0x24, 0x65, 0x63, 0xae, 0xc8, 0xdd, 0x2f, 0xbe,
	0x44, 0x38, 0x2e, 0x68, 0xbe, 0x87, 0xe3, 0xd8, 0x0f, 0x07, 0x53, 0x5b, 0xbf, 0xfc, 0x9b, 0x6f,
	0x9c, 0x4a, 0x33, 0x30, 0x96, 0x66, 0x20, 0x39, 0xe7, 0xa2, 0x12, 0xf3, 0x19, 0xa7, 0x46, 0xaf,
	0xef, 0x45, 0xe9, 0x8c, 0xb3, 0xb4, 0xbf, 0x09, 0xa9, 0x0b, 0x6c, 0x32, 0x92, 0xc1, 0xcb, 0x44,
	0x86, 0xc1, 0xab, 0x68, 0x95, 0xc8, 0x2a, 0x06, 0x28, 0xa7, 0xcc, 0x7e, 0x43, 0x35, 0x06, 0xcb,
	0x7c, 0xd9, 0xc6, 0x67, 0x4b, 0x17, 0x34, 0xa8, 0x43, 0x24, 0xd6, 0x6d, 0xba, 0x4d, 0x15, 0xf7,
	0xd6, 0xc2, 0x36, 0x55, 0xda, 0x76, 0x4b, 0x78, 0x79, 0x53, 0xce, 0xda, 0x76, 0x3e, 0x06, 0x90,
	0xa3, 0x63, 0xce, 0xee, 0x15, 0x21, 0x9f, 0x06, 0x3c, 0x6f, 0xdc, 0xf9, 0x0b, 0x04, 0x0d, 0xca,
	0x9e, 0xda, 0x5d, 0x43, 0x04, 0x9a, 0x24, 0x07, 0x1e, 0x1d, 0xb0, 0x3d, 0xe2, 0x0f, 0x26, 0x69,
	0x07, 0x12, 0x91, 0x3c, 0x64, 0xbf, 0x21, 0xa6, 0xd9, 0xca, 0x11, 0xab, 0xb1, 0x40, 0x39, 0x88,
	0x9f, 0x82, 0x87, 0x19, 0xb5, 0x26, 0x9d, 0x82, 0x87, 0x0a, 0x77, 0x4f, 0xde, 0x0e, 0x56, 0xdf,
	0x07, 0xe8, 0x6c, 0x50, 0x01, 0x84, 0xbf, 0xb0, 0xc0, 0xb5, 0xa1, 0x1b, 0x25, 0x7e, 0xe2, 0x87,
	0x03, 0x7e, 0x1d, 0xd1, 0x9d, 0xa4, 0x9d, 0x97, 0xb9, 0x58, 0x76, 0xe1, 0xed, 0xd2, 0x75, 0xac,
	0xce, 0x44, 0xbd, 0x92, 0xd5, 0x5a, 0xa1, 0x32, 0x18, 0x3e, 0x00, 0xb5, 0x73, 0x3c, 0x66, 0x2b,
	0x86, 0xa3, 0x49, 0xda, 0x59, 0x3c, 0xc7, 0x62, 0xfd, 0x5c, 0xe7, 0x58, 0x41, 0x23, 0xd3, 0x44,
	0x25, 0xca, 0x5a, 0xcd, 0x32, 0xed, 0x85, 0xdb, 0x1f, 0x61, 0xb6, 0x78, 0x25, 0x99, 0x96, 0x08,
	0x0c, 0x99, 0x56, 0xd2, 0xc9, 0x08, 0x59, 0x8d, 0x68, 0xeb, 0x70, 0x0c, 0xc8, 0x0f, 0x2a, 0x68,
	0xd1, 0x6a, 0x16, 0x87, 0xfb, 0x5c, 0x68, 0x48, 0x7a, 0x1a, 0xbd, 0x12, 0x43, 0x8d, 0x09, 0x2a,
	0x68, 0xd9, 0xc8, 0x8d, 0x70, 0xef, 0xfe, 0xa0, 0x3f, 0x26, 0xd7, 0xa8, 0x2d, 0x3a, 0x72, 0x23,
	0xdc, 0x3b, 0x0e, 0x07, 0xfd, 0xb1, 0x61, 0xe4, 0xaa, 0x6a, 0x19, 0xab, 0xb1, 0x40, 0x39, 0x28,
	0xfb, 0xdc, 0xc4, 0x0f, 0x70, 0x9c, 0xb8, 0xc1, 0x90, 0x5c, 0x8c, 0xd6, 0xe8, 0xe7, 0x72, 0xa1,
	0xe1, 0x73, 0x35, 0x7a, 0x99, 0xab, 0x33, 0x41, 0x05, 0x0d, 0x3e, 0x01, 0xad, 0x61, 0x84, 0x2f,
	0xde, 0x71, 0xe3, 0x47, 0x36, 0x28, 0xaa, 0x4b, 0x26, 0x3b, 0x7e, 0xe4, 0xc6, 0x8f, 0x8c, 0x81,
	0x56, 0xf4, 0x6a, 0xa0, 0x55, 0x13, 0xc4, 0x61, 0x04, 0x8c, 0x71, 0x44, 0xc0, 0xd7, 0x4a, 0x60,
	0x8c, 0xa3, 0x4a, 0xb0, 0xaa, 0x57, 0xc0, 0x1a, 0x13, 0xc4, 0x61, 0xf0, 0x21, 0x98, 0xcf, 0x94,
	0x76, 0xbb, 0x38, 0x86, 0x54, 0x78, 0x45, 0x8a, 0xad, 0x46, 0xc9, 0x14, 0xd2, 0x72, 0x46, 0x88,
	0x70, 0xef, 0x4d, 0x7b, 0xb1, 0x20, 0x64, 0xcf, 0x06, 0x82, 0xa8, 0xd2, 0x8c, 0x9b, 0x37, 0x05,
	0x42, 0x26, 0x60, 0x84, 0x55, 0xfb, 0xba, 0x40, 0x58, 0x35, 0x13, 0x56, 0x2b, 0x09, 0xab, 0x32,
	0x61, 0x95, 0x11, 0xd6, 0xec, 0x1b, 0x02, 0x61, 0xcd, 0x4c, 0x58, 0xab, 0x24, 0xac, 0xc9, 0x84,
	0x35, 0x46, 0x58, 0xb7, 0x97, 0x04, 0xc2, 0xba, 0x99, 0xb0, 0x5e, 0x49, 0x58, 0x97, 0x09, 0xeb,
	0x8c, 0xb0, 0x61, 0x2f, 0x0b, 0x84, 0x0d, 0x33, 0x61, 0xa3, 0x92, 0xb0, 0x21, 0x13, 0x36, 0x18,
	0x61, 0xd3, 0x86, 0x02, 0x61, 0xd3, 0x4c, 0xd8, 0xac, 0x24, 0x6c, 0xca, 0x84, 0x4d, 0x46, 0xd8,
	0xb2, 0x6f, 0x0a, 0x84, 0x2d, 0x33, 0x61, 0xab, 0x92, 0xb0, 0x25, 0x13, 0xb6, 0x18, 0x61, 0xdb,
	0x7e, 0x49, 0x20, 0x6c, 0x9b, 0x09, 0xdb, 0x95, 0x84, 0x6d, 0x99, 0xb0, 0xcd, 0x08, 0x3b, 0xf6,
	0x97, 0x04, 0xc2, 0x8e, 0x99, 0xb0, 0x53, 0x49, 0xd8, 0x91, 0x09, 0x3b, 0x59, 0x59, 0xca, 0xe6,
	0xc5, 0x1b, 0xf6, 0xcb, 0x45, 0x59, 0x22, 0x02, 0x43, 0x59, 0x92, 0x74, 0xba, 0x49, 0xf7, 0x86,
	0x50, 0x96, 0x88, 0x64, 0xf5, 0x37, 0x2d, 0x50, 0xdb, 0xfd, 0xee, 0x11, 0xdc, 0x07, 0xd7, 0xc5,
	0x5f, 0x89, 0xc0, 0x2f, 0x97, 0x4e, 0xaa, 0x94, 0x1f, 0x90, 0xac, 0xdc, 0x2c, 0x6b, 0xf3, 0x57,
	0xbe, 0x0e, 0xda, 0xe5, 0x5b, 0x73, 0xb8, 0xa2, 0x34, 0xc1, 0xaf, 0xd3, 0x57, 0x96, 0x4b, 0x3a,
	0x66, 0xfe, 0x2d, 0xb0, 0x28, 0x6c, 0x14, 0xe0, 0xab, 0xca, 0xfb, 0xc5, 0x16, 0x62, 0xe5, 0x2b,
	0x25, 0xa5, 0x66, 0xe5, 0xb9, 0x95, 0x37, 0x96, 0xef, 0x6f, 0xca, 0x27, 0x6f, 0x4c, 0xb6, 0xa2,
	0x91, 0xc1, 0x75, 0x00, 0x0e, 0x71, 0x72, 0xd9, 0xb7, 0xb6, 0xc0, 0x22, 0x3d, 0x66, 0x78, 0x8e,
	0x17, 0xf7, 0xc3, 0x20, 0xf0, 0x2f, 0x4d, 0xdc, 0x01, 0x37, 0x50, 0xd8, 0xef, 0x9f, 0xb8, 0xde,
	0xf9, 0x65, 0x5f, 0x3d, 0x20, 0x9f, 0x98, 0x47, 0xf9, 0x15, 0x5d, 0x20, 0x9f, 0x21, 0xc2, 0x87,
	0xa0, 0x4d, 0x8e, 0xa4, 0x9f, 0xda, 0xce, 0x57, 0xcb, 0x67, 0x9e, 0x9a, 0xa3, 0xec, 0x23, 0xb0,
	0x28, 0x1c, 0xe7, 0x09, 0xfd, 0x2e, 0x1f, 0xf4, 0xad, 0x94, 0x95, 0xca, 0xc9, 0xc0, 0x51, 0xde,
	0x0d, 0xba, 0xa6, 0xe4, 0x73, 0xa0, 0xea, 0xa6, 0xee, 0x91, 0x20, 0xe5, 0xbf, 0x63, 0xb5, 0xc5,
	0x8f, 0x2b, 0xce, 0xfd, 0x85, 0x00, 0xe7, 0xd6, 0x6f, 0xe5, 0x83, 0x2f, 0xbf, 0xdd, 0x52, 0x47,
	0x72, 0x71, 0x8b, 0xb8, 0xa2, 0xb9, 0x5e, 0x65, 0xf4, 0xfc, 0x49, 0xa2, 0x3f, 0xe5, 0xdd, 0x5d,
	0x7a, 0x35, 0xc1, 0x6f, 0x92, 0x05, 0xba, 0x7c, 0xc7, 0x2c, 0xcc, 0xe4, 0xfc, 0x12, 0xf8, 0xa4,
	0x41, 0x64, 0x6b, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x55, 0x20, 0x51, 0x13, 0x2c, 0x00,
	0x00,
}
