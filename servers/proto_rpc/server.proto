syntax = "proto3";
package proto_rpc;
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

service API {
    rpc CreateIdentity(CreateIdentityMsg) returns (GetObjectResponse);
    rpc CreateObjects(CreateObjectsMsg) returns (GetObjectsResponse);
    rpc CreateDBSession(DBSession) returns (DBSession);
    rpc GetDBSession(DBSession) returns (DBSession);
    rpc DeleteDBSession(DBSession) returns (DBSession);
    rpc GetObjects(GetObjectMsg) returns (GetObjectsResponse);
    rpc CountObjects(GetObjectMsg) returns (ObjectCountResponse);
    rpc GetIdentity(GetIdentityMsg) returns (GetObjectResponse);
    rpc CreateMapping(CreateMappingMsg) returns (CreateMappingResponse);
    rpc GetMapping(GetMappingMsg) returns (GetMappingResponse);
    rpc GetAllMapping(GetAllMappingMsg) returns (GetAllMappingResponse);
}

// GetAllMappingMsg represents a request for recent mappings
message GetAllMappingMsg {
    string name = 1           [(gogoproto.jsontag) = "name,omitempty", (gogoproto.moretags) = 'structs:"name,omitempty" mapstructure:"name,omitempty"']; 
    int32 limit = 2           [(gogoproto.jsontag) = "limit,omitempty", (gogoproto.moretags) = 'structs:"limit,omitempty" mapstructure:"limit,omitempty"']; 
}

// Mapping represents a single mapping
message Mapping {
    string name = 1          [(gogoproto.jsontag) = "name,omitempty", (gogoproto.moretags) = 'structs:"name,omitempty" mapstructure:"name,omitempty"']; 
    bytes mapping = 2        [(gogoproto.jsontag) = "mapping,omitempty", (gogoproto.moretags) = 'structs:"mapping,omitempty" mapstructure:"mapping,omitempty"']; 
}

// GetAllMappingResponse represents a response container all mappings encoded in JSON
message GetAllMappingResponse {
    repeated Mapping mappings = 1        [(gogoproto.jsontag) = "mappings,omitempty", (gogoproto.moretags) = 'structs:"mappings,omitempty" mapstructure:"mappings,omitempty"']; 
}

// GetMappingMsg represents a request for a mapping
message GetMappingMsg {
    string name = 1          [(gogoproto.jsontag) = "name,omitempty", (gogoproto.moretags) = 'structs:"name,omitempty" mapstructure:"name,omitempty"']; 
}

// GetMappingResponse represents a response containing a mapping
message GetMappingResponse {
    bytes mapping = 1          [(gogoproto.jsontag) = "mapping,omitempty", (gogoproto.moretags) = 'structs:"mapping,omitempty" mapstructure:"mapping,omitempty"']; 
}

// CreateMappingMsg represents mapping creation parameters
message CreateMappingMsg {
    // The name of the mapping
    string name = 2         [(gogoproto.jsontag) = "name,omitempty", (gogoproto.moretags) = 'structs:"name,omitempty" mapstructure:"name,omitempty"']; 
    // JSON mapping structure as bytes
    bytes mapping = 1          [(gogoproto.jsontag) = "mapping,omitempty", (gogoproto.moretags) = 'structs:"mapping,omitempty" mapstructure:"mapping,omitempty"'];
}

message CreateMappingResponse {
    string Name = 1       [(gogoproto.jsontag) = "name,omitempty", (gogoproto.moretags) = 'structs:"name,omitempty" mapstructure:"name,omitempty"'];
    string ID = 2         [(gogoproto.jsontag) = "id,omitempty", (gogoproto.moretags) = 'structs:"id,omitempty" mapstructure:"id,omitempty"'];
}

// GetIdentityMsg represents an identity request message
message GetIdentityMsg {
    string ID = 1   [(gogoproto.jsontag) = "id,omitempty", (gogoproto.moretags) = 'structs:"id,omitempty" mapstructure:"id,omitempty"'];
}

// ObjectCountResponse represents object counts 
message ObjectCountResponse {
    int64 count = 1;
}

// GetObjectMsg represents query parameters for retrieving objects
message GetObjectMsg {
    bytes query = 1                  [(gogoproto.jsontag) = "query,omitempty", (gogoproto.moretags) = 'structs:"query,omitempty" mapstructure:"query,omitempty"'];
    string owner = 2                 [(gogoproto.jsontag) = "owner,omitempty", (gogoproto.moretags) = 'structs:"owner,omitempty" mapstructure:"owner,omitempty"'];
    string creator = 3               [(gogoproto.jsontag) = "creator,omitempty", (gogoproto.moretags) = 'structs:"creator,omitempty" mapstructure:"creator,omitempty"'];
    repeated OrderBy order = 4       [(gogoproto.jsontag) = "order,omitempty", (gogoproto.moretags) = 'structs:"order,omitempty" mapstructure:"order,omitempty"'];
    int32 limit = 5                  [(gogoproto.jsontag) = "limit,omitempty", (gogoproto.moretags) = 'structs:"limit,omitempty" mapstructure:"limit,omitempty"']; 
    
    // Optional mapping to use during object decoding
    string mapping = 6               [(gogoproto.jsontag) = "mapping,omitempty", (gogoproto.moretags) = 'structs:"mapping,omitempty" mapstructure:"mapping,omitempty"']; 
}

// OrderBy represents how a field is ordered in a query
message OrderBy {
    string field = 1        [(gogoproto.jsontag) = "field,omitempty", (gogoproto.moretags) = 'structs:"field,omitempty" mapstructure:"field,omitempty"'];
    int32 order = 2         [(gogoproto.jsontag) = "order,omitempty", (gogoproto.moretags) = 'structs:"order,omitempty" mapstructure:"order,omitempty"'];
}

// DBSession represents a database session request body
message DBSession {
    string ID = 1 [(gogoproto.jsontag) = "id,omitempty", (gogoproto.moretags) = 'structs:"id,omitempty" mapstructure:"id,omitempty"'];
}


// CreateObjects represents a collection of objects to be created
message CreateObjectsMsg {
    
    // Must be a slice of Objects encoded in json
    bytes objects = 1     [(gogoproto.jsontag) = "objects,omitempty", (gogoproto.moretags) = 'structs:"objects,omitempty" mapstructure:"objects,omitempty"'];
    
    // Optional mapping to use during object decoding
    string mapping = 2              [(gogoproto.jsontag) = "mapping,omitempty", (gogoproto.moretags) = 'structs:"mapping,omitempty" mapstructure:"mapping,omitempty"'];
}

// CreateIdentityMsg represents an identity of a person or organization
message CreateIdentityMsg {
    string email = 1            [(gogoproto.jsontag) = "email,omitempty", (gogoproto.moretags) = 'structs:"email,omitempty" mapstructure:"email,omitempty"'];
    string password = 2         [(gogoproto.jsontag) = "password,omitempty", (gogoproto.moretags) = 'structs:"password,omitempty" mapstructure:"password,omitempty"'];
    bool developer = 3          [(gogoproto.jsontag) = "developer,omitempty", (gogoproto.moretags) = 'structs:"developer,omitempty" mapstructure:"developer,omitempty"'];
}

// GetObjectResponse describes a response of multiple objects
message GetObjectResponse {
    bytes object  = 1             [(gogoproto.jsontag) = "data,omitempty", (gogoproto.moretags) = 'structs:"data,omitempty" mapstructure:"data,omitempty"'];
}

// GetObjectsResponse describes a response of multiple objects
message GetObjectsResponse {
    // Must contain list of maps [{...},{...}]
    bytes objects  = 1             [(gogoproto.jsontag) = "data,omitempty", (gogoproto.moretags) = 'structs:"data,omitempty" mapstructure:"data,omitempty"'];
}

// Object describes an object
message Object {
    string ID = 1              [(gogoproto.jsontag) = "id,omitempty", (gogoproto.moretags) = 'structs:"id,omitempty" mapstructure:"id,omitempty"'];
    string ownerID = 2         [(gogoproto.jsontag) = "owner_id,omitempty", (gogoproto.moretags) = 'structs:"owner_id,omitempty" mapstructure:"owner_id,omitempty"'];
    string creatorID = 3       [(gogoproto.jsontag) = "creator_id,omitempty", (gogoproto.moretags) = 'structs:"creator_id,omitempty" mapstructure:"creator_id,omitempty"'];
    string partitionID = 4     [(gogoproto.jsontag) = "partition_id,omitempty", (gogoproto.moretags) = 'structs:"partition_id,omitempty" mapstructure:"partition_id,omitempty"'];
    string key = 5             [(gogoproto.jsontag) = "key,omitempty", (gogoproto.moretags) = 'structs:"key,omitempty" mapstructure:"key,omitempty"'];
    string value = 6           [(gogoproto.jsontag) = "value,omitempty", (gogoproto.moretags) = 'structs:"value,omitempty" mapstructure:"value,omitempty"'];
    bool protected = 7         [(gogoproto.jsontag) = "protected,omitempty", (gogoproto.moretags) = 'structs:"protected,omitempty" mapstructure:"protected,omitempty"'];
    bool refOnly = 8           [(gogoproto.jsontag) = "ref_only,omitempty", (gogoproto.moretags) = 'structs:"ref_only,omitempty" mapstructure:"ref_only,omitempty"'];
    int64 timestamp = 9        [(gogoproto.jsontag) = "timestamp,omitempty", (gogoproto.moretags) = 'structs:"timestamp,omitempty" mapstructure:"timestamp,omitempty"'];
    string prevHash = 10       [(gogoproto.jsontag) = "prev_hash,omitempty", (gogoproto.moretags) = 'structs:"prev_hash,omitempty" mapstructure:"prev_hash,omitempty"'];
    string peerHash = 11       [(gogoproto.jsontag) = "peer_hash,omitempty", (gogoproto.moretags) = 'structs:"peer_hash,omitempty" mapstructure:"peer_hash,omitempty"'];
    string hash = 12           [(gogoproto.jsontag) = "hash,omitempty", (gogoproto.moretags) = 'structs:"hash,omitempty" mapstructure:"hash,omitempty"'];
    string ref1 = 13           [(gogoproto.jsontag) = "ref1,omitempty", (gogoproto.moretags) = 'structs:"ref1,omitempty" mapstructure:"ref1,omitempty"'];
    string ref2 = 14           [(gogoproto.jsontag) = "ref2,omitempty", (gogoproto.moretags) = 'structs:"ref2,omitempty" mapstructure:"ref2,omitempty"'];
    string ref3 = 15           [(gogoproto.jsontag) = "ref3,omitempty", (gogoproto.moretags) = 'structs:"ref3,omitempty" mapstructure:"ref3,omitempty"'];
    string ref4 = 16           [(gogoproto.jsontag) = "ref4,omitempty", (gogoproto.moretags) = 'structs:"ref4,omitempty" mapstructure:"ref4,omitempty"'];
    string ref5 = 17           [(gogoproto.jsontag) = "ref5,omitempty", (gogoproto.moretags) = 'structs:"ref5,omitempty" mapstructure:"ref5,omitempty"'];
    string ref6 = 18           [(gogoproto.jsontag) = "ref6,omitempty", (gogoproto.moretags) = 'structs:"ref6,omitempty" mapstructure:"ref6,omitempty"'];
    string ref7 = 19           [(gogoproto.jsontag) = "ref7,omitempty", (gogoproto.moretags) = 'structs:"ref7,omitempty" mapstructure:"ref7,omitempty"'];
    string ref8 = 20           [(gogoproto.jsontag) = "ref8,omitempty", (gogoproto.moretags) = 'structs:"ref8,omitempty" mapstructure:"ref8,omitempty"'];
    string ref9 = 21           [(gogoproto.jsontag) = "ref9,omitempty", (gogoproto.moretags) = 'structs:"ref9,omitempty" mapstructure:"ref9,omitempty"'];
    string ref10 = 22          [(gogoproto.jsontag) = "ref10,omitempty", (gogoproto.moretags) = 'structs:"ref10,omitempty" mapstructure:"ref10,omitempty"'];
}