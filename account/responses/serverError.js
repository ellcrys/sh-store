/**
 * 500 (Server Error) Response
 *
 * Usage:
 * return res.serverError();
 * return res.serverError(err);
 * return res.serverError(err, 'some/specific/error/view');
 *
 * NOTE:
 * If something throws in a policy or controller, or an internal
 * error is encountered, Sails will call `res.serverError()`
 * automatically.
 */
module.exports = function serverError(data, options) {
    // Get access to `req`, `res`, & `sails`
    var req = this.req;
    var res = this.res;
    var sails = req._sails;
    // Set status code
    res.status(500);
    // Log error to console
    if (data !== undefined) {
        sails.log.error('Sending 500 ("Server Error") response: \n', data);
    }
    else
        sails.log.error('Sending empty 500 ("Server Error") response');
    // Only include errors in response if application environment
    // is not set to 'production'.  In production, we shouldn't
    // send back any identifying information about errors.
    if (sails.config.environment === 'production' && sails.config.keepResponseErrors !== true) {
        data = undefined;
    }
    // If the user-agent wants JSON, always respond with JSON
    // If views are disabled, revert to json
    if (req.wantsJSON || sails.config.hooks.views === false) {
        return res.jsonx(data);
    }
    // If second argument is a string, we take that to mean it refers to a view.
    // If it was omitted, use an empty object (`{}`)
    options = (typeof options === 'string') ? { view: options } : options || {};
    // Attempt to prettify data for views, if it's a non-error object
    var viewData = data;
    if (!(viewData instanceof Error) && 'object' == typeof viewData) {
        try {
            viewData = require('util').inspect(data, { depth: null });
        }
        catch (e) {
            viewData = undefined;
        }
    }
    // If a view was provided in options, serve it.
    // Otherwise try to guess an appropriate view, or if that doesn't
    // work, just send JSON.
    if (options.view) {
        return res.view(options.view, { data: viewData, title: 'Server Error' });
    }
    else
        return res.view('500', { data: viewData, title: 'Server Error' }, function (err, html) {
            // If a view error occured, fall back to JSON(P).
            if (err) {
                //
                // Additionally:
                // â€¢ If the view was missing, ignore the error but provide a verbose log.
                if (err.code === 'E_VIEW_FAILED') {
                    sails.log.verbose('res.serverError() :: Could not locate view for error page (sending JSON instead).  Details: ', err);
                }
                else {
                    sails.log.warn('res.serverError() :: When attempting to render error page view, an error occured (sending JSON instead).  Details: ', err);
                }
                return res.jsonx(data);
            }
            return res.send(html);
        });
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS9yZXNwb25zZXMvc2VydmVyRXJyb3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztHQVlHO0FBRUgsTUFBTSxDQUFDLE9BQU8sR0FBRyxxQkFBc0IsSUFBSSxFQUFFLE9BQU87SUFFbEQsd0NBQXdDO0lBQ3hDLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDbkIsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztJQUNuQixJQUFJLEtBQUssR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO0lBRXZCLGtCQUFrQjtJQUNsQixHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRWhCLHVCQUF1QjtJQUN2QixFQUFFLENBQUMsQ0FBQyxJQUFJLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztRQUN2QixLQUFLLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQywyQ0FBMkMsRUFBQyxJQUFJLENBQUMsQ0FBQztJQUNwRSxDQUFDO0lBQ0QsSUFBSTtRQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLDZDQUE2QyxDQUFDLENBQUM7SUFFcEUsNkRBQTZEO0lBQzdELDJEQUEyRDtJQUMzRCxzREFBc0Q7SUFDdEQsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxXQUFXLEtBQUssWUFBWSxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsa0JBQWtCLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztRQUMxRixJQUFJLEdBQUcsU0FBUyxDQUFDO0lBQ25CLENBQUM7SUFFRCx5REFBeUQ7SUFDekQsd0NBQXdDO0lBQ3hDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDeEQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekIsQ0FBQztJQUVELDRFQUE0RTtJQUM1RSxnREFBZ0Q7SUFDaEQsT0FBTyxHQUFHLENBQUMsT0FBTyxPQUFPLEtBQUssUUFBUSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLEdBQUcsT0FBTyxJQUFJLEVBQUUsQ0FBQztJQUU1RSxpRUFBaUU7SUFDakUsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDO0lBQ3BCLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLFlBQVksS0FBSyxDQUFDLElBQUksUUFBUSxJQUFJLE9BQU8sUUFBUSxDQUFDLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUM7WUFDSCxRQUFRLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBQyxLQUFLLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztRQUMxRCxDQUFDO1FBQ0QsS0FBSyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNSLFFBQVEsR0FBRyxTQUFTLENBQUM7UUFDdkIsQ0FBQztJQUNILENBQUM7SUFFRCwrQ0FBK0M7SUFDL0MsaUVBQWlFO0lBQ2pFLHdCQUF3QjtJQUN4QixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNqQixNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsY0FBYyxFQUFFLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBSUQsSUFBSTtRQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLGNBQWMsRUFBRSxFQUFFLFVBQVUsR0FBRyxFQUFFLElBQUk7WUFFeEYsaURBQWlEO1lBQ2pELEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ1IsRUFBRTtnQkFDRixnQkFBZ0I7Z0JBQ2hCLHlFQUF5RTtnQkFDekUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxlQUFlLENBQUMsQ0FBQyxDQUFDO29CQUNqQyxLQUFLLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyw4RkFBOEYsRUFBQyxHQUFHLENBQUMsQ0FBQztnQkFDeEgsQ0FBQztnQkFFRCxJQUFJLENBQUMsQ0FBQztvQkFDSixLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxxSEFBcUgsRUFBRSxHQUFHLENBQUMsQ0FBQztnQkFDN0ksQ0FBQztnQkFDRCxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN6QixDQUFDO1lBRUQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEIsQ0FBQyxDQUFDLENBQUM7QUFFTCxDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3Jlc3BvbnNlcy9zZXJ2ZXJFcnJvci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogNTAwIChTZXJ2ZXIgRXJyb3IpIFJlc3BvbnNlXG4gKlxuICogVXNhZ2U6XG4gKiByZXR1cm4gcmVzLnNlcnZlckVycm9yKCk7XG4gKiByZXR1cm4gcmVzLnNlcnZlckVycm9yKGVycik7XG4gKiByZXR1cm4gcmVzLnNlcnZlckVycm9yKGVyciwgJ3NvbWUvc3BlY2lmaWMvZXJyb3IvdmlldycpO1xuICpcbiAqIE5PVEU6XG4gKiBJZiBzb21ldGhpbmcgdGhyb3dzIGluIGEgcG9saWN5IG9yIGNvbnRyb2xsZXIsIG9yIGFuIGludGVybmFsXG4gKiBlcnJvciBpcyBlbmNvdW50ZXJlZCwgU2FpbHMgd2lsbCBjYWxsIGByZXMuc2VydmVyRXJyb3IoKWBcbiAqIGF1dG9tYXRpY2FsbHkuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzZXJ2ZXJFcnJvciAoZGF0YSwgb3B0aW9ucykge1xuXG4gIC8vIEdldCBhY2Nlc3MgdG8gYHJlcWAsIGByZXNgLCAmIGBzYWlsc2BcbiAgdmFyIHJlcSA9IHRoaXMucmVxO1xuICB2YXIgcmVzID0gdGhpcy5yZXM7XG4gIHZhciBzYWlscyA9IHJlcS5fc2FpbHM7XG5cbiAgLy8gU2V0IHN0YXR1cyBjb2RlXG4gIHJlcy5zdGF0dXMoNTAwKTtcblxuICAvLyBMb2cgZXJyb3IgdG8gY29uc29sZVxuICBpZiAoZGF0YSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgc2FpbHMubG9nLmVycm9yKCdTZW5kaW5nIDUwMCAoXCJTZXJ2ZXIgRXJyb3JcIikgcmVzcG9uc2U6IFxcbicsZGF0YSk7XG4gIH1cbiAgZWxzZSBzYWlscy5sb2cuZXJyb3IoJ1NlbmRpbmcgZW1wdHkgNTAwIChcIlNlcnZlciBFcnJvclwiKSByZXNwb25zZScpO1xuXG4gIC8vIE9ubHkgaW5jbHVkZSBlcnJvcnMgaW4gcmVzcG9uc2UgaWYgYXBwbGljYXRpb24gZW52aXJvbm1lbnRcbiAgLy8gaXMgbm90IHNldCB0byAncHJvZHVjdGlvbicuICBJbiBwcm9kdWN0aW9uLCB3ZSBzaG91bGRuJ3RcbiAgLy8gc2VuZCBiYWNrIGFueSBpZGVudGlmeWluZyBpbmZvcm1hdGlvbiBhYm91dCBlcnJvcnMuXG4gIGlmIChzYWlscy5jb25maWcuZW52aXJvbm1lbnQgPT09ICdwcm9kdWN0aW9uJyAmJiBzYWlscy5jb25maWcua2VlcFJlc3BvbnNlRXJyb3JzICE9PSB0cnVlKSB7XG4gICAgZGF0YSA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8vIElmIHRoZSB1c2VyLWFnZW50IHdhbnRzIEpTT04sIGFsd2F5cyByZXNwb25kIHdpdGggSlNPTlxuICAvLyBJZiB2aWV3cyBhcmUgZGlzYWJsZWQsIHJldmVydCB0byBqc29uXG4gIGlmIChyZXEud2FudHNKU09OIHx8IHNhaWxzLmNvbmZpZy5ob29rcy52aWV3cyA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm4gcmVzLmpzb254KGRhdGEpO1xuICB9XG5cbiAgLy8gSWYgc2Vjb25kIGFyZ3VtZW50IGlzIGEgc3RyaW5nLCB3ZSB0YWtlIHRoYXQgdG8gbWVhbiBpdCByZWZlcnMgdG8gYSB2aWV3LlxuICAvLyBJZiBpdCB3YXMgb21pdHRlZCwgdXNlIGFuIGVtcHR5IG9iamVjdCAoYHt9YClcbiAgb3B0aW9ucyA9ICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ3N0cmluZycpID8geyB2aWV3OiBvcHRpb25zIH0gOiBvcHRpb25zIHx8IHt9O1xuXG4gIC8vIEF0dGVtcHQgdG8gcHJldHRpZnkgZGF0YSBmb3Igdmlld3MsIGlmIGl0J3MgYSBub24tZXJyb3Igb2JqZWN0XG4gIHZhciB2aWV3RGF0YSA9IGRhdGE7XG4gIGlmICghKHZpZXdEYXRhIGluc3RhbmNlb2YgRXJyb3IpICYmICdvYmplY3QnID09IHR5cGVvZiB2aWV3RGF0YSkge1xuICAgIHRyeSB7XG4gICAgICB2aWV3RGF0YSA9IHJlcXVpcmUoJ3V0aWwnKS5pbnNwZWN0KGRhdGEsIHtkZXB0aDogbnVsbH0pO1xuICAgIH1cbiAgICBjYXRjaChlKSB7XG4gICAgICB2aWV3RGF0YSA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cblxuICAvLyBJZiBhIHZpZXcgd2FzIHByb3ZpZGVkIGluIG9wdGlvbnMsIHNlcnZlIGl0LlxuICAvLyBPdGhlcndpc2UgdHJ5IHRvIGd1ZXNzIGFuIGFwcHJvcHJpYXRlIHZpZXcsIG9yIGlmIHRoYXQgZG9lc24ndFxuICAvLyB3b3JrLCBqdXN0IHNlbmQgSlNPTi5cbiAgaWYgKG9wdGlvbnMudmlldykge1xuICAgIHJldHVybiByZXMudmlldyhvcHRpb25zLnZpZXcsIHsgZGF0YTogdmlld0RhdGEsIHRpdGxlOiAnU2VydmVyIEVycm9yJyB9KTtcbiAgfVxuXG4gIC8vIElmIG5vIHNlY29uZCBhcmd1bWVudCBwcm92aWRlZCwgdHJ5IHRvIHNlcnZlIHRoZSBkZWZhdWx0IHZpZXcsXG4gIC8vIGJ1dCBmYWxsIGJhY2sgdG8gc2VuZGluZyBKU09OKFApIGlmIGFueSBlcnJvcnMgb2NjdXIuXG4gIGVsc2UgcmV0dXJuIHJlcy52aWV3KCc1MDAnLCB7IGRhdGE6IHZpZXdEYXRhLCB0aXRsZTogJ1NlcnZlciBFcnJvcicgfSwgZnVuY3Rpb24gKGVyciwgaHRtbCkge1xuXG4gICAgLy8gSWYgYSB2aWV3IGVycm9yIG9jY3VyZWQsIGZhbGwgYmFjayB0byBKU09OKFApLlxuICAgIGlmIChlcnIpIHtcbiAgICAgIC8vXG4gICAgICAvLyBBZGRpdGlvbmFsbHk6XG4gICAgICAvLyDigKIgSWYgdGhlIHZpZXcgd2FzIG1pc3NpbmcsIGlnbm9yZSB0aGUgZXJyb3IgYnV0IHByb3ZpZGUgYSB2ZXJib3NlIGxvZy5cbiAgICAgIGlmIChlcnIuY29kZSA9PT0gJ0VfVklFV19GQUlMRUQnKSB7XG4gICAgICAgIHNhaWxzLmxvZy52ZXJib3NlKCdyZXMuc2VydmVyRXJyb3IoKSA6OiBDb3VsZCBub3QgbG9jYXRlIHZpZXcgZm9yIGVycm9yIHBhZ2UgKHNlbmRpbmcgSlNPTiBpbnN0ZWFkKS4gIERldGFpbHM6ICcsZXJyKTtcbiAgICAgIH1cbiAgICAgIC8vIE90aGVyd2lzZSwgaWYgdGhpcyB3YXMgYSBtb3JlIHNlcmlvdXMgZXJyb3IsIGxvZyB0byB0aGUgY29uc29sZSB3aXRoIHRoZSBkZXRhaWxzLlxuICAgICAgZWxzZSB7XG4gICAgICAgIHNhaWxzLmxvZy53YXJuKCdyZXMuc2VydmVyRXJyb3IoKSA6OiBXaGVuIGF0dGVtcHRpbmcgdG8gcmVuZGVyIGVycm9yIHBhZ2UgdmlldywgYW4gZXJyb3Igb2NjdXJlZCAoc2VuZGluZyBKU09OIGluc3RlYWQpLiAgRGV0YWlsczogJywgZXJyKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXMuanNvbngoZGF0YSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlcy5zZW5kKGh0bWwpO1xuICB9KTtcblxufTtcblxuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,
//# sourceMappingURL=data:application/json;charset=utf8;base64,
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
