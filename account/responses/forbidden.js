/**
 * 403 (Forbidden) Handler
 *
 * Usage:
 * return res.forbidden();
 * return res.forbidden(err);
 * return res.forbidden(err, 'some/specific/forbidden/view');
 *
 * e.g.:
 * ```
 * return res.forbidden('Access denied.');
 * ```
 */
module.exports = function forbidden(data, options) {
    // Get access to `req`, `res`, & `sails`
    var req = this.req;
    var res = this.res;
    var sails = req._sails;
    // Set status code
    res.status(403);
    // Log error to console
    if (data !== undefined) {
        sails.log.verbose('Sending 403 ("Forbidden") response: \n', data);
    }
    else
        sails.log.verbose('Sending 403 ("Forbidden") response');
    // Only include errors in response if application environment
    // is not set to 'production'.  In production, we shouldn't
    // send back any identifying information about errors.
    if (sails.config.environment === 'production' && sails.config.keepResponseErrors !== true) {
        data = undefined;
    }
    // If the user-agent wants JSON, always respond with JSON
    // If views are disabled, revert to json
    if (req.wantsJSON || sails.config.hooks.views === false) {
        return res.jsonx(data);
    }
    // If second argument is a string, we take that to mean it refers to a view.
    // If it was omitted, use an empty object (`{}`)
    options = (typeof options === 'string') ? { view: options } : options || {};
    // Attempt to prettify data for views, if it's a non-error object
    var viewData = data;
    if (!(viewData instanceof Error) && 'object' == typeof viewData) {
        try {
            viewData = require('util').inspect(data, { depth: null });
        }
        catch (e) {
            viewData = undefined;
        }
    }
    // If a view was provided in options, serve it.
    // Otherwise try to guess an appropriate view, or if that doesn't
    // work, just send JSON.
    if (options.view) {
        return res.view(options.view, { data: viewData, title: 'Forbidden' });
    }
    else
        return res.view('403', { data: viewData, title: 'Forbidden' }, function (err, html) {
            // If a view error occured, fall back to JSON(P).
            if (err) {
                //
                // Additionally:
                // â€¢ If the view was missing, ignore the error but provide a verbose log.
                if (err.code === 'E_VIEW_FAILED') {
                    sails.log.verbose('res.forbidden() :: Could not locate view for error page (sending JSON instead).  Details: ', err);
                }
                else {
                    sails.log.warn('res.forbidden() :: When attempting to render error page view, an error occured (sending JSON instead).  Details: ', err);
                }
                return res.jsonx(data);
            }
            return res.send(html);
        });
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS9yZXNwb25zZXMvZm9yYmlkZGVuLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7R0FZRztBQUVILE1BQU0sQ0FBQyxPQUFPLEdBQUcsbUJBQW9CLElBQUksRUFBRSxPQUFPO0lBRWhELHdDQUF3QztJQUN4QyxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDO0lBQ25CLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDbkIsSUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztJQUV2QixrQkFBa0I7SUFDbEIsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUVoQix1QkFBdUI7SUFDdkIsRUFBRSxDQUFDLENBQUMsSUFBSSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDdkIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsd0NBQXdDLEVBQUMsSUFBSSxDQUFDLENBQUM7SUFDbkUsQ0FBQztJQUNELElBQUk7UUFBQyxLQUFLLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO0lBRTdELDZEQUE2RDtJQUM3RCwyREFBMkQ7SUFDM0Qsc0RBQXNEO0lBQ3RELEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsV0FBVyxLQUFLLFlBQVksSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLGtCQUFrQixLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDMUYsSUFBSSxHQUFHLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQseURBQXlEO0lBQ3pELHdDQUF3QztJQUN4QyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ3hELE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFRCw0RUFBNEU7SUFDNUUsZ0RBQWdEO0lBQ2hELE9BQU8sR0FBRyxDQUFDLE9BQU8sT0FBTyxLQUFLLFFBQVEsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7SUFFNUUsaUVBQWlFO0lBQ2pFLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQztJQUNwQixFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxZQUFZLEtBQUssQ0FBQyxJQUFJLFFBQVEsSUFBSSxPQUFPLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDaEUsSUFBSSxDQUFDO1lBQ0gsUUFBUSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUMsS0FBSyxFQUFFLElBQUksRUFBQyxDQUFDLENBQUM7UUFDMUQsQ0FBQztRQUNELEtBQUssQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDUixRQUFRLEdBQUcsU0FBUyxDQUFDO1FBQ3ZCLENBQUM7SUFDSCxDQUFDO0lBRUQsK0NBQStDO0lBQy9DLGlFQUFpRTtJQUNqRSx3QkFBd0I7SUFDeEIsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDakIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUlELElBQUk7UUFBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsRUFBRSxVQUFVLEdBQUcsRUFBRSxJQUFJO1lBRXJGLGlEQUFpRDtZQUNqRCxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUNSLEVBQUU7Z0JBQ0YsZ0JBQWdCO2dCQUNoQix5RUFBeUU7Z0JBQ3pFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssZUFBZSxDQUFDLENBQUMsQ0FBQztvQkFDakMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsNEZBQTRGLEVBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ3RILENBQUM7Z0JBRUQsSUFBSSxDQUFDLENBQUM7b0JBQ0osS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsbUhBQW1ILEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQzNJLENBQUM7Z0JBQ0QsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDekIsQ0FBQztZQUVELE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxDQUFDO0FBRUwsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS9yZXNwb25zZXMvZm9yYmlkZGVuLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiA0MDMgKEZvcmJpZGRlbikgSGFuZGxlclxuICpcbiAqIFVzYWdlOlxuICogcmV0dXJuIHJlcy5mb3JiaWRkZW4oKTtcbiAqIHJldHVybiByZXMuZm9yYmlkZGVuKGVycik7XG4gKiByZXR1cm4gcmVzLmZvcmJpZGRlbihlcnIsICdzb21lL3NwZWNpZmljL2ZvcmJpZGRlbi92aWV3Jyk7XG4gKlxuICogZS5nLjpcbiAqIGBgYFxuICogcmV0dXJuIHJlcy5mb3JiaWRkZW4oJ0FjY2VzcyBkZW5pZWQuJyk7XG4gKiBgYGBcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZvcmJpZGRlbiAoZGF0YSwgb3B0aW9ucykge1xuXG4gIC8vIEdldCBhY2Nlc3MgdG8gYHJlcWAsIGByZXNgLCAmIGBzYWlsc2BcbiAgdmFyIHJlcSA9IHRoaXMucmVxO1xuICB2YXIgcmVzID0gdGhpcy5yZXM7XG4gIHZhciBzYWlscyA9IHJlcS5fc2FpbHM7XG5cbiAgLy8gU2V0IHN0YXR1cyBjb2RlXG4gIHJlcy5zdGF0dXMoNDAzKTtcblxuICAvLyBMb2cgZXJyb3IgdG8gY29uc29sZVxuICBpZiAoZGF0YSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgc2FpbHMubG9nLnZlcmJvc2UoJ1NlbmRpbmcgNDAzIChcIkZvcmJpZGRlblwiKSByZXNwb25zZTogXFxuJyxkYXRhKTtcbiAgfVxuICBlbHNlIHNhaWxzLmxvZy52ZXJib3NlKCdTZW5kaW5nIDQwMyAoXCJGb3JiaWRkZW5cIikgcmVzcG9uc2UnKTtcblxuICAvLyBPbmx5IGluY2x1ZGUgZXJyb3JzIGluIHJlc3BvbnNlIGlmIGFwcGxpY2F0aW9uIGVudmlyb25tZW50XG4gIC8vIGlzIG5vdCBzZXQgdG8gJ3Byb2R1Y3Rpb24nLiAgSW4gcHJvZHVjdGlvbiwgd2Ugc2hvdWxkbid0XG4gIC8vIHNlbmQgYmFjayBhbnkgaWRlbnRpZnlpbmcgaW5mb3JtYXRpb24gYWJvdXQgZXJyb3JzLlxuICBpZiAoc2FpbHMuY29uZmlnLmVudmlyb25tZW50ID09PSAncHJvZHVjdGlvbicgJiYgc2FpbHMuY29uZmlnLmtlZXBSZXNwb25zZUVycm9ycyAhPT0gdHJ1ZSkge1xuICAgIGRhdGEgPSB1bmRlZmluZWQ7XG4gIH1cblxuICAvLyBJZiB0aGUgdXNlci1hZ2VudCB3YW50cyBKU09OLCBhbHdheXMgcmVzcG9uZCB3aXRoIEpTT05cbiAgLy8gSWYgdmlld3MgYXJlIGRpc2FibGVkLCByZXZlcnQgdG8ganNvblxuICBpZiAocmVxLndhbnRzSlNPTiB8fCBzYWlscy5jb25maWcuaG9va3Mudmlld3MgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuIHJlcy5qc29ueChkYXRhKTtcbiAgfVxuXG4gIC8vIElmIHNlY29uZCBhcmd1bWVudCBpcyBhIHN0cmluZywgd2UgdGFrZSB0aGF0IHRvIG1lYW4gaXQgcmVmZXJzIHRvIGEgdmlldy5cbiAgLy8gSWYgaXQgd2FzIG9taXR0ZWQsIHVzZSBhbiBlbXB0eSBvYmplY3QgKGB7fWApXG4gIG9wdGlvbnMgPSAodHlwZW9mIG9wdGlvbnMgPT09ICdzdHJpbmcnKSA/IHsgdmlldzogb3B0aW9ucyB9IDogb3B0aW9ucyB8fCB7fTtcblxuICAvLyBBdHRlbXB0IHRvIHByZXR0aWZ5IGRhdGEgZm9yIHZpZXdzLCBpZiBpdCdzIGEgbm9uLWVycm9yIG9iamVjdFxuICB2YXIgdmlld0RhdGEgPSBkYXRhO1xuICBpZiAoISh2aWV3RGF0YSBpbnN0YW5jZW9mIEVycm9yKSAmJiAnb2JqZWN0JyA9PSB0eXBlb2Ygdmlld0RhdGEpIHtcbiAgICB0cnkge1xuICAgICAgdmlld0RhdGEgPSByZXF1aXJlKCd1dGlsJykuaW5zcGVjdChkYXRhLCB7ZGVwdGg6IG51bGx9KTtcbiAgICB9XG4gICAgY2F0Y2goZSkge1xuICAgICAgdmlld0RhdGEgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgYSB2aWV3IHdhcyBwcm92aWRlZCBpbiBvcHRpb25zLCBzZXJ2ZSBpdC5cbiAgLy8gT3RoZXJ3aXNlIHRyeSB0byBndWVzcyBhbiBhcHByb3ByaWF0ZSB2aWV3LCBvciBpZiB0aGF0IGRvZXNuJ3RcbiAgLy8gd29yaywganVzdCBzZW5kIEpTT04uXG4gIGlmIChvcHRpb25zLnZpZXcpIHtcbiAgICByZXR1cm4gcmVzLnZpZXcob3B0aW9ucy52aWV3LCB7IGRhdGE6IHZpZXdEYXRhLCB0aXRsZTogJ0ZvcmJpZGRlbicgfSk7XG4gIH1cblxuICAvLyBJZiBubyBzZWNvbmQgYXJndW1lbnQgcHJvdmlkZWQsIHRyeSB0byBzZXJ2ZSB0aGUgZGVmYXVsdCB2aWV3LFxuICAvLyBidXQgZmFsbCBiYWNrIHRvIHNlbmRpbmcgSlNPTihQKSBpZiBhbnkgZXJyb3JzIG9jY3VyLlxuICBlbHNlIHJldHVybiByZXMudmlldygnNDAzJywgeyBkYXRhOiB2aWV3RGF0YSwgdGl0bGU6ICdGb3JiaWRkZW4nIH0sIGZ1bmN0aW9uIChlcnIsIGh0bWwpIHtcblxuICAgIC8vIElmIGEgdmlldyBlcnJvciBvY2N1cmVkLCBmYWxsIGJhY2sgdG8gSlNPTihQKS5cbiAgICBpZiAoZXJyKSB7XG4gICAgICAvL1xuICAgICAgLy8gQWRkaXRpb25hbGx5OlxuICAgICAgLy8g4oCiIElmIHRoZSB2aWV3IHdhcyBtaXNzaW5nLCBpZ25vcmUgdGhlIGVycm9yIGJ1dCBwcm92aWRlIGEgdmVyYm9zZSBsb2cuXG4gICAgICBpZiAoZXJyLmNvZGUgPT09ICdFX1ZJRVdfRkFJTEVEJykge1xuICAgICAgICBzYWlscy5sb2cudmVyYm9zZSgncmVzLmZvcmJpZGRlbigpIDo6IENvdWxkIG5vdCBsb2NhdGUgdmlldyBmb3IgZXJyb3IgcGFnZSAoc2VuZGluZyBKU09OIGluc3RlYWQpLiAgRGV0YWlsczogJyxlcnIpO1xuICAgICAgfVxuICAgICAgLy8gT3RoZXJ3aXNlLCBpZiB0aGlzIHdhcyBhIG1vcmUgc2VyaW91cyBlcnJvciwgbG9nIHRvIHRoZSBjb25zb2xlIHdpdGggdGhlIGRldGFpbHMuXG4gICAgICBlbHNlIHtcbiAgICAgICAgc2FpbHMubG9nLndhcm4oJ3Jlcy5mb3JiaWRkZW4oKSA6OiBXaGVuIGF0dGVtcHRpbmcgdG8gcmVuZGVyIGVycm9yIHBhZ2UgdmlldywgYW4gZXJyb3Igb2NjdXJlZCAoc2VuZGluZyBKU09OIGluc3RlYWQpLiAgRGV0YWlsczogJywgZXJyKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXMuanNvbngoZGF0YSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlcy5zZW5kKGh0bWwpO1xuICB9KTtcblxufTtcblxuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS9yZXNwb25zZXMvZm9yYmlkZGVuLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7R0FZRztBQUNILE1BQU0sQ0FBQyxPQUFPLEdBQUcsbUJBQW1CLElBQUksRUFBRSxPQUFPO0lBQzdDLHdDQUF3QztJQUN4QyxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDO0lBQ25CLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDbkIsSUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztJQUN2QixrQkFBa0I7SUFDbEIsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNoQix1QkFBdUI7SUFDdkIsRUFBRSxDQUFDLENBQUMsSUFBSSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDckIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsd0NBQXdDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQUNELElBQUk7UUFDQSxLQUFLLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO0lBQzVELDZEQUE2RDtJQUM3RCwyREFBMkQ7SUFDM0Qsc0RBQXNEO0lBQ3RELEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsV0FBVyxLQUFLLFlBQVksSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLGtCQUFrQixLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDeEYsSUFBSSxHQUFHLFNBQVMsQ0FBQztJQUNyQixDQUFDO0lBQ0QseURBQXlEO0lBQ3pELHdDQUF3QztJQUN4QyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ3RELE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFDRCw0RUFBNEU7SUFDNUUsZ0RBQWdEO0lBQ2hELE9BQU8sR0FBRyxDQUFDLE9BQU8sT0FBTyxLQUFLLFFBQVEsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7SUFDNUUsaUVBQWlFO0lBQ2pFLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQztJQUNwQixFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxZQUFZLEtBQUssQ0FBQyxJQUFJLFFBQVEsSUFBSSxPQUFPLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDOUQsSUFBSSxDQUFDO1lBQ0QsUUFBUSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFDOUQsQ0FBQztRQUNELEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDUCxRQUFRLEdBQUcsU0FBUyxDQUFDO1FBQ3pCLENBQUM7SUFDTCxDQUFDO0lBQ0QsK0NBQStDO0lBQy9DLGlFQUFpRTtJQUNqRSx3QkFBd0I7SUFDeEIsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDZixNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLENBQUMsQ0FBQztJQUMxRSxDQUFDO0lBQ0QsSUFBSTtRQUNBLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxFQUFFLFVBQVUsR0FBRyxFQUFFLElBQUk7WUFDOUUsaURBQWlEO1lBQ2pELEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ04sRUFBRTtnQkFDRixnQkFBZ0I7Z0JBQ2hCLHlFQUF5RTtnQkFDekUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxlQUFlLENBQUMsQ0FBQyxDQUFDO29CQUMvQixLQUFLLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyw0RkFBNEYsRUFBRSxHQUFHLENBQUMsQ0FBQztnQkFDekgsQ0FBQztnQkFDRCxJQUFJLENBQUMsQ0FBQztvQkFDRixLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxtSEFBbUgsRUFBRSxHQUFHLENBQUMsQ0FBQztnQkFDN0ksQ0FBQztnQkFDRCxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMzQixDQUFDO1lBQ0QsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7QUFDWCxDQUFDLENBQUM7QUFFRiwrd05BQSt3TiIsImZpbGUiOiJhcGkvcmVzcG9uc2VzL2ZvcmJpZGRlbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogNDAzIChGb3JiaWRkZW4pIEhhbmRsZXJcbiAqXG4gKiBVc2FnZTpcbiAqIHJldHVybiByZXMuZm9yYmlkZGVuKCk7XG4gKiByZXR1cm4gcmVzLmZvcmJpZGRlbihlcnIpO1xuICogcmV0dXJuIHJlcy5mb3JiaWRkZW4oZXJyLCAnc29tZS9zcGVjaWZpYy9mb3JiaWRkZW4vdmlldycpO1xuICpcbiAqIGUuZy46XG4gKiBgYGBcbiAqIHJldHVybiByZXMuZm9yYmlkZGVuKCdBY2Nlc3MgZGVuaWVkLicpO1xuICogYGBgXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZm9yYmlkZGVuKGRhdGEsIG9wdGlvbnMpIHtcbiAgICAvLyBHZXQgYWNjZXNzIHRvIGByZXFgLCBgcmVzYCwgJiBgc2FpbHNgXG4gICAgdmFyIHJlcSA9IHRoaXMucmVxO1xuICAgIHZhciByZXMgPSB0aGlzLnJlcztcbiAgICB2YXIgc2FpbHMgPSByZXEuX3NhaWxzO1xuICAgIC8vIFNldCBzdGF0dXMgY29kZVxuICAgIHJlcy5zdGF0dXMoNDAzKTtcbiAgICAvLyBMb2cgZXJyb3IgdG8gY29uc29sZVxuICAgIGlmIChkYXRhICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgc2FpbHMubG9nLnZlcmJvc2UoJ1NlbmRpbmcgNDAzIChcIkZvcmJpZGRlblwiKSByZXNwb25zZTogXFxuJywgZGF0YSk7XG4gICAgfVxuICAgIGVsc2VcbiAgICAgICAgc2FpbHMubG9nLnZlcmJvc2UoJ1NlbmRpbmcgNDAzIChcIkZvcmJpZGRlblwiKSByZXNwb25zZScpO1xuICAgIC8vIE9ubHkgaW5jbHVkZSBlcnJvcnMgaW4gcmVzcG9uc2UgaWYgYXBwbGljYXRpb24gZW52aXJvbm1lbnRcbiAgICAvLyBpcyBub3Qgc2V0IHRvICdwcm9kdWN0aW9uJy4gIEluIHByb2R1Y3Rpb24sIHdlIHNob3VsZG4ndFxuICAgIC8vIHNlbmQgYmFjayBhbnkgaWRlbnRpZnlpbmcgaW5mb3JtYXRpb24gYWJvdXQgZXJyb3JzLlxuICAgIGlmIChzYWlscy5jb25maWcuZW52aXJvbm1lbnQgPT09ICdwcm9kdWN0aW9uJyAmJiBzYWlscy5jb25maWcua2VlcFJlc3BvbnNlRXJyb3JzICE9PSB0cnVlKSB7XG4gICAgICAgIGRhdGEgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8vIElmIHRoZSB1c2VyLWFnZW50IHdhbnRzIEpTT04sIGFsd2F5cyByZXNwb25kIHdpdGggSlNPTlxuICAgIC8vIElmIHZpZXdzIGFyZSBkaXNhYmxlZCwgcmV2ZXJ0IHRvIGpzb25cbiAgICBpZiAocmVxLndhbnRzSlNPTiB8fCBzYWlscy5jb25maWcuaG9va3Mudmlld3MgPT09IGZhbHNlKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbngoZGF0YSk7XG4gICAgfVxuICAgIC8vIElmIHNlY29uZCBhcmd1bWVudCBpcyBhIHN0cmluZywgd2UgdGFrZSB0aGF0IHRvIG1lYW4gaXQgcmVmZXJzIHRvIGEgdmlldy5cbiAgICAvLyBJZiBpdCB3YXMgb21pdHRlZCwgdXNlIGFuIGVtcHR5IG9iamVjdCAoYHt9YClcbiAgICBvcHRpb25zID0gKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJykgPyB7IHZpZXc6IG9wdGlvbnMgfSA6IG9wdGlvbnMgfHwge307XG4gICAgLy8gQXR0ZW1wdCB0byBwcmV0dGlmeSBkYXRhIGZvciB2aWV3cywgaWYgaXQncyBhIG5vbi1lcnJvciBvYmplY3RcbiAgICB2YXIgdmlld0RhdGEgPSBkYXRhO1xuICAgIGlmICghKHZpZXdEYXRhIGluc3RhbmNlb2YgRXJyb3IpICYmICdvYmplY3QnID09IHR5cGVvZiB2aWV3RGF0YSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdmlld0RhdGEgPSByZXF1aXJlKCd1dGlsJykuaW5zcGVjdChkYXRhLCB7IGRlcHRoOiBudWxsIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB2aWV3RGF0YSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBJZiBhIHZpZXcgd2FzIHByb3ZpZGVkIGluIG9wdGlvbnMsIHNlcnZlIGl0LlxuICAgIC8vIE90aGVyd2lzZSB0cnkgdG8gZ3Vlc3MgYW4gYXBwcm9wcmlhdGUgdmlldywgb3IgaWYgdGhhdCBkb2Vzbid0XG4gICAgLy8gd29yaywganVzdCBzZW5kIEpTT04uXG4gICAgaWYgKG9wdGlvbnMudmlldykge1xuICAgICAgICByZXR1cm4gcmVzLnZpZXcob3B0aW9ucy52aWV3LCB7IGRhdGE6IHZpZXdEYXRhLCB0aXRsZTogJ0ZvcmJpZGRlbicgfSk7XG4gICAgfVxuICAgIGVsc2VcbiAgICAgICAgcmV0dXJuIHJlcy52aWV3KCc0MDMnLCB7IGRhdGE6IHZpZXdEYXRhLCB0aXRsZTogJ0ZvcmJpZGRlbicgfSwgZnVuY3Rpb24gKGVyciwgaHRtbCkge1xuICAgICAgICAgICAgLy8gSWYgYSB2aWV3IGVycm9yIG9jY3VyZWQsIGZhbGwgYmFjayB0byBKU09OKFApLlxuICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgLy8gQWRkaXRpb25hbGx5OlxuICAgICAgICAgICAgICAgIC8vIOKAoiBJZiB0aGUgdmlldyB3YXMgbWlzc2luZywgaWdub3JlIHRoZSBlcnJvciBidXQgcHJvdmlkZSBhIHZlcmJvc2UgbG9nLlxuICAgICAgICAgICAgICAgIGlmIChlcnIuY29kZSA9PT0gJ0VfVklFV19GQUlMRUQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHNhaWxzLmxvZy52ZXJib3NlKCdyZXMuZm9yYmlkZGVuKCkgOjogQ291bGQgbm90IGxvY2F0ZSB2aWV3IGZvciBlcnJvciBwYWdlIChzZW5kaW5nIEpTT04gaW5zdGVhZCkuICBEZXRhaWxzOiAnLCBlcnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc2FpbHMubG9nLndhcm4oJ3Jlcy5mb3JiaWRkZW4oKSA6OiBXaGVuIGF0dGVtcHRpbmcgdG8gcmVuZGVyIGVycm9yIHBhZ2UgdmlldywgYW4gZXJyb3Igb2NjdXJlZCAoc2VuZGluZyBKU09OIGluc3RlYWQpLiAgRGV0YWlsczogJywgZXJyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29ueChkYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXMuc2VuZChodG1sKTtcbiAgICAgICAgfSk7XG59O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRndhUzl5WlhOd2IyNXpaWE12Wm05eVltbGtaR1Z1TG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPenM3T3pzN096czdPenM3UjBGWlJ6dEJRVVZJTEUxQlFVMHNRMEZCUXl4UFFVRlBMRWRCUVVjc2JVSkJRVzlDTEVsQlFVa3NSVUZCUlN4UFFVRlBPMGxCUldoRUxIZERRVUYzUXp0SlFVTjRReXhKUVVGSkxFZEJRVWNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRPMGxCUTI1Q0xFbEJRVWtzUjBGQlJ5eEhRVUZITEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNN1NVRkRia0lzU1VGQlNTeExRVUZMTEVkQlFVY3NSMEZCUnl4RFFVRkRMRTFCUVUwc1EwRkJRenRKUVVWMlFpeHJRa0ZCYTBJN1NVRkRiRUlzUjBGQlJ5eERRVUZETEUxQlFVMHNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRKUVVWb1FpeDFRa0ZCZFVJN1NVRkRka0lzUlVGQlJTeERRVUZETEVOQlFVTXNTVUZCU1N4TFFVRkxMRk5CUVZNc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRGRrSXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhQUVVGUExFTkJRVU1zZDBOQlFYZERMRVZCUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03U1VGRGJrVXNRMEZCUXp0SlFVTkVMRWxCUVVrN1VVRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEU5QlFVOHNRMEZCUXl4dlEwRkJiME1zUTBGQlF5eERRVUZETzBsQlJUZEVMRFpFUVVFMlJEdEpRVU0zUkN3eVJFRkJNa1E3U1VGRE0wUXNjMFJCUVhORU8wbEJRM1JFTEVWQlFVVXNRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRVU1zVjBGQlZ5eExRVUZMTEZsQlFWa3NTVUZCU1N4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRExHdENRVUZyUWl4TFFVRkxMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRE1VWXNTVUZCU1N4SFFVRkhMRk5CUVZNc1EwRkJRenRKUVVOdVFpeERRVUZETzBsQlJVUXNlVVJCUVhsRU8wbEJRM3BFTEhkRFFVRjNRenRKUVVONFF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1UwRkJVeXhKUVVGSkxFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1MwRkJTeXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETzFGQlEzaEVMRTFCUVUwc1EwRkJReXhIUVVGSExFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMGxCUTNwQ0xFTkJRVU03U1VGRlJDdzBSVUZCTkVVN1NVRkROVVVzWjBSQlFXZEVPMGxCUTJoRUxFOUJRVThzUjBGQlJ5eERRVUZETEU5QlFVOHNUMEZCVHl4TFFVRkxMRkZCUVZFc1EwRkJReXhIUVVGSExFVkJRVVVzU1VGQlNTeEZRVUZGTEU5QlFVOHNSVUZCUlN4SFFVRkhMRTlCUVU4c1NVRkJTU3hGUVVGRkxFTkJRVU03U1VGRk5VVXNhVVZCUVdsRk8wbEJRMnBGTEVsQlFVa3NVVUZCVVN4SFFVRkhMRWxCUVVrc1EwRkJRenRKUVVOd1FpeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1VVRkJVU3haUVVGWkxFdEJRVXNzUTBGQlF5eEpRVUZKTEZGQlFWRXNTVUZCU1N4UFFVRlBMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRGFFVXNTVUZCU1N4RFFVRkRPMWxCUTBnc1VVRkJVU3hIUVVGSExFOUJRVThzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hGUVVGRkxFVkJRVU1zUzBGQlN5eEZRVUZGTEVsQlFVa3NSVUZCUXl4RFFVRkRMRU5CUVVNN1VVRkRNVVFzUTBGQlF6dFJRVU5FTEV0QlFVc3NRMEZCUVN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRFVpeFJRVUZSTEVkQlFVY3NVMEZCVXl4RFFVRkRPMUZCUTNaQ0xFTkJRVU03U1VGRFNDeERRVUZETzBsQlJVUXNLME5CUVN0RE8wbEJReTlETEdsRlFVRnBSVHRKUVVOcVJTeDNRa0ZCZDBJN1NVRkRlRUlzUlVGQlJTeERRVUZETEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRGFrSXNUVUZCVFN4RFFVRkRMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NSVUZCUlN4RlFVRkZMRWxCUVVrc1JVRkJSU3hSUVVGUkxFVkJRVVVzUzBGQlN5eEZRVUZGTEZkQlFWY3NSVUZCUlN4RFFVRkRMRU5CUVVNN1NVRkRlRVVzUTBGQlF6dEpRVWxFTEVsQlFVazdVVUZCUXl4TlFVRk5MRU5CUVVNc1IwRkJSeXhEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVVXNSVUZCUlN4SlFVRkpMRVZCUVVVc1VVRkJVU3hGUVVGRkxFdEJRVXNzUlVGQlJTeFhRVUZYTEVWQlFVVXNSVUZCUlN4VlFVRlZMRWRCUVVjc1JVRkJSU3hKUVVGSk8xbEJSWEpHTEdsRVFVRnBSRHRaUVVOcVJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU5TTEVWQlFVVTdaMEpCUTBZc1owSkJRV2RDTzJkQ1FVTm9RaXg1UlVGQmVVVTdaMEpCUTNwRkxFVkJRVVVzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRXRCUVVzc1pVRkJaU3hEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZEYWtNc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF5eFBRVUZQTEVOQlFVTXNORVpCUVRSR0xFVkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdaMEpCUTNSSUxFTkJRVU03WjBKQlJVUXNTVUZCU1N4RFFVRkRMRU5CUVVNN2IwSkJRMG9zUzBGQlN5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc2JVaEJRVzFJTEVWQlFVVXNSMEZCUnl4RFFVRkRMRU5CUVVNN1owSkJRek5KTEVOQlFVTTdaMEpCUTBRc1RVRkJUU3hEUVVGRExFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1dVRkRla0lzUTBGQlF6dFpRVVZFTEUxQlFVMHNRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzFGQlEzaENMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJSVXdzUTBGQlF5eERRVUZESWl3aVptbHNaU0k2SW1Gd2FTOXlaWE53YjI1elpYTXZabTl5WW1sa1pHVnVMbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUx5b3FYRzRnS2lBME1ETWdLRVp2Y21KcFpHUmxiaWtnU0dGdVpHeGxjbHh1SUNwY2JpQXFJRlZ6WVdkbE9seHVJQ29nY21WMGRYSnVJSEpsY3k1bWIzSmlhV1JrWlc0b0tUdGNiaUFxSUhKbGRIVnliaUJ5WlhNdVptOXlZbWxrWkdWdUtHVnljaWs3WEc0Z0tpQnlaWFIxY200Z2NtVnpMbVp2Y21KcFpHUmxiaWhsY25Jc0lDZHpiMjFsTDNOd1pXTnBabWxqTDJadmNtSnBaR1JsYmk5MmFXVjNKeWs3WEc0Z0tseHVJQ29nWlM1bkxqcGNiaUFxSUdCZ1lGeHVJQ29nY21WMGRYSnVJSEpsY3k1bWIzSmlhV1JrWlc0b0owRmpZMlZ6Y3lCa1pXNXBaV1F1SnlrN1hHNGdLaUJnWUdCY2JpQXFMMXh1WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUdadmNtSnBaR1JsYmlBb1pHRjBZU3dnYjNCMGFXOXVjeWtnZTF4dVhHNGdJQzh2SUVkbGRDQmhZMk5sYzNNZ2RHOGdZSEpsY1dBc0lHQnlaWE5nTENBbUlHQnpZV2xzYzJCY2JpQWdkbUZ5SUhKbGNTQTlJSFJvYVhNdWNtVnhPMXh1SUNCMllYSWdjbVZ6SUQwZ2RHaHBjeTV5WlhNN1hHNGdJSFpoY2lCellXbHNjeUE5SUhKbGNTNWZjMkZwYkhNN1hHNWNiaUFnTHk4Z1UyVjBJSE4wWVhSMWN5QmpiMlJsWEc0Z0lISmxjeTV6ZEdGMGRYTW9OREF6S1R0Y2JseHVJQ0F2THlCTWIyY2daWEp5YjNJZ2RHOGdZMjl1YzI5c1pWeHVJQ0JwWmlBb1pHRjBZU0FoUFQwZ2RXNWtaV1pwYm1Wa0tTQjdYRzRnSUNBZ2MyRnBiSE11Ykc5bkxuWmxjbUp2YzJVb0oxTmxibVJwYm1jZ05EQXpJQ2hjSWtadmNtSnBaR1JsYmx3aUtTQnlaWE53YjI1elpUb2dYRnh1Snl4a1lYUmhLVHRjYmlBZ2ZWeHVJQ0JsYkhObElITmhhV3h6TG14dlp5NTJaWEppYjNObEtDZFRaVzVrYVc1bklEUXdNeUFvWENKR2IzSmlhV1JrWlc1Y0lpa2djbVZ6Y0c5dWMyVW5LVHRjYmx4dUlDQXZMeUJQYm14NUlHbHVZMngxWkdVZ1pYSnliM0p6SUdsdUlISmxjM0J2Ym5ObElHbG1JR0Z3Y0d4cFkyRjBhVzl1SUdWdWRtbHliMjV0Wlc1MFhHNGdJQzh2SUdseklHNXZkQ0J6WlhRZ2RHOGdKM0J5YjJSMVkzUnBiMjRuTGlBZ1NXNGdjSEp2WkhWamRHbHZiaXdnZDJVZ2MyaHZkV3hrYmlkMFhHNGdJQzh2SUhObGJtUWdZbUZqYXlCaGJua2dhV1JsYm5ScFpubHBibWNnYVc1bWIzSnRZWFJwYjI0Z1lXSnZkWFFnWlhKeWIzSnpMbHh1SUNCcFppQW9jMkZwYkhNdVkyOXVabWxuTG1WdWRtbHliMjV0Wlc1MElEMDlQU0FuY0hKdlpIVmpkR2x2YmljZ0ppWWdjMkZwYkhNdVkyOXVabWxuTG10bFpYQlNaWE53YjI1elpVVnljbTl5Y3lBaFBUMGdkSEoxWlNrZ2UxeHVJQ0FnSUdSaGRHRWdQU0IxYm1SbFptbHVaV1E3WEc0Z0lIMWNibHh1SUNBdkx5QkpaaUIwYUdVZ2RYTmxjaTFoWjJWdWRDQjNZVzUwY3lCS1UwOU9MQ0JoYkhkaGVYTWdjbVZ6Y0c5dVpDQjNhWFJvSUVwVFQwNWNiaUFnTHk4Z1NXWWdkbWxsZDNNZ1lYSmxJR1JwYzJGaWJHVmtMQ0J5WlhabGNuUWdkRzhnYW5OdmJseHVJQ0JwWmlBb2NtVnhMbmRoYm5SelNsTlBUaUI4ZkNCellXbHNjeTVqYjI1bWFXY3VhRzl2YTNNdWRtbGxkM01nUFQwOUlHWmhiSE5sS1NCN1hHNGdJQ0FnY21WMGRYSnVJSEpsY3k1cWMyOXVlQ2hrWVhSaEtUdGNiaUFnZlZ4dVhHNGdJQzh2SUVsbUlITmxZMjl1WkNCaGNtZDFiV1Z1ZENCcGN5QmhJSE4wY21sdVp5d2dkMlVnZEdGclpTQjBhR0YwSUhSdklHMWxZVzRnYVhRZ2NtVm1aWEp6SUhSdklHRWdkbWxsZHk1Y2JpQWdMeThnU1dZZ2FYUWdkMkZ6SUc5dGFYUjBaV1FzSUhWelpTQmhiaUJsYlhCMGVTQnZZbXBsWTNRZ0tHQjdmV0FwWEc0Z0lHOXdkR2x2Ym5NZ1BTQW9kSGx3Wlc5bUlHOXdkR2x2Ym5NZ1BUMDlJQ2R6ZEhKcGJtY25LU0EvSUhzZ2RtbGxkem9nYjNCMGFXOXVjeUI5SURvZ2IzQjBhVzl1Y3lCOGZDQjdmVHRjYmx4dUlDQXZMeUJCZEhSbGJYQjBJSFJ2SUhCeVpYUjBhV1o1SUdSaGRHRWdabTl5SUhacFpYZHpMQ0JwWmlCcGRDZHpJR0VnYm05dUxXVnljbTl5SUc5aWFtVmpkRnh1SUNCMllYSWdkbWxsZDBSaGRHRWdQU0JrWVhSaE8xeHVJQ0JwWmlBb0lTaDJhV1YzUkdGMFlTQnBibk4wWVc1alpXOW1JRVZ5Y205eUtTQW1KaUFuYjJKcVpXTjBKeUE5UFNCMGVYQmxiMllnZG1sbGQwUmhkR0VwSUh0Y2JpQWdJQ0IwY25rZ2UxeHVJQ0FnSUNBZ2RtbGxkMFJoZEdFZ1BTQnlaWEYxYVhKbEtDZDFkR2xzSnlrdWFXNXpjR1ZqZENoa1lYUmhMQ0I3WkdWd2RHZzZJRzUxYkd4OUtUdGNiaUFnSUNCOVhHNGdJQ0FnWTJGMFkyZ29aU2tnZTF4dUlDQWdJQ0FnZG1sbGQwUmhkR0VnUFNCMWJtUmxabWx1WldRN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0x5OGdTV1lnWVNCMmFXVjNJSGRoY3lCd2NtOTJhV1JsWkNCcGJpQnZjSFJwYjI1ekxDQnpaWEoyWlNCcGRDNWNiaUFnTHk4Z1QzUm9aWEozYVhObElIUnllU0IwYnlCbmRXVnpjeUJoYmlCaGNIQnliM0J5YVdGMFpTQjJhV1YzTENCdmNpQnBaaUIwYUdGMElHUnZaWE51SjNSY2JpQWdMeThnZDI5eWF5d2dhblZ6ZENCelpXNWtJRXBUVDA0dVhHNGdJR2xtSUNodmNIUnBiMjV6TG5acFpYY3BJSHRjYmlBZ0lDQnlaWFIxY200Z2NtVnpMblpwWlhjb2IzQjBhVzl1Y3k1MmFXVjNMQ0I3SUdSaGRHRTZJSFpwWlhkRVlYUmhMQ0IwYVhSc1pUb2dKMFp2Y21KcFpHUmxiaWNnZlNrN1hHNGdJSDFjYmx4dUlDQXZMeUJKWmlCdWJ5QnpaV052Ym1RZ1lYSm5kVzFsYm5RZ2NISnZkbWxrWldRc0lIUnllU0IwYnlCelpYSjJaU0IwYUdVZ1pHVm1ZWFZzZENCMmFXVjNMRnh1SUNBdkx5QmlkWFFnWm1Gc2JDQmlZV05ySUhSdklITmxibVJwYm1jZ1NsTlBUaWhRS1NCcFppQmhibmtnWlhKeWIzSnpJRzlqWTNWeUxseHVJQ0JsYkhObElISmxkSFZ5YmlCeVpYTXVkbWxsZHlnbk5EQXpKeXdnZXlCa1lYUmhPaUIyYVdWM1JHRjBZU3dnZEdsMGJHVTZJQ2RHYjNKaWFXUmtaVzRuSUgwc0lHWjFibU4wYVc5dUlDaGxjbklzSUdoMGJXd3BJSHRjYmx4dUlDQWdJQzh2SUVsbUlHRWdkbWxsZHlCbGNuSnZjaUJ2WTJOMWNtVmtMQ0JtWVd4c0lHSmhZMnNnZEc4Z1NsTlBUaWhRS1M1Y2JpQWdJQ0JwWmlBb1pYSnlLU0I3WEc0Z0lDQWdJQ0F2TDF4dUlDQWdJQ0FnTHk4Z1FXUmthWFJwYjI1aGJHeDVPbHh1SUNBZ0lDQWdMeThnNG9DaUlFbG1JSFJvWlNCMmFXVjNJSGRoY3lCdGFYTnphVzVuTENCcFoyNXZjbVVnZEdobElHVnljbTl5SUdKMWRDQndjbTkyYVdSbElHRWdkbVZ5WW05elpTQnNiMmN1WEc0Z0lDQWdJQ0JwWmlBb1pYSnlMbU52WkdVZ1BUMDlJQ2RGWDFaSlJWZGZSa0ZKVEVWRUp5a2dlMXh1SUNBZ0lDQWdJQ0J6WVdsc2N5NXNiMmN1ZG1WeVltOXpaU2duY21WekxtWnZjbUpwWkdSbGJpZ3BJRG82SUVOdmRXeGtJRzV2ZENCc2IyTmhkR1VnZG1sbGR5Qm1iM0lnWlhKeWIzSWdjR0ZuWlNBb2MyVnVaR2x1WnlCS1UwOU9JR2x1YzNSbFlXUXBMaUFnUkdWMFlXbHNjem9nSnl4bGNuSXBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdMeThnVDNSb1pYSjNhWE5sTENCcFppQjBhR2x6SUhkaGN5QmhJRzF2Y21VZ2MyVnlhVzkxY3lCbGNuSnZjaXdnYkc5bklIUnZJSFJvWlNCamIyNXpiMnhsSUhkcGRHZ2dkR2hsSUdSbGRHRnBiSE11WEc0Z0lDQWdJQ0JsYkhObElIdGNiaUFnSUNBZ0lDQWdjMkZwYkhNdWJHOW5MbmRoY200b0ozSmxjeTVtYjNKaWFXUmtaVzRvS1NBNk9pQlhhR1Z1SUdGMGRHVnRjSFJwYm1jZ2RHOGdjbVZ1WkdWeUlHVnljbTl5SUhCaFoyVWdkbWxsZHl3Z1lXNGdaWEp5YjNJZ2IyTmpkWEpsWkNBb2MyVnVaR2x1WnlCS1UwOU9JR2x1YzNSbFlXUXBMaUFnUkdWMFlXbHNjem9nSnl3Z1pYSnlLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJSEpsZEhWeWJpQnlaWE11YW5OdmJuZ29aR0YwWVNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJSEpsY3k1elpXNWtLR2gwYld3cE8xeHVJQ0I5S1R0Y2JseHVmVHRjYmx4dUlsMTlcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf8;base64,
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
