(function () {
    var OUTPUT_HTML, SETUP_JS, activate, deactivate, getOutput, init, run, setupBlock, tethers, uniqueId;
    uniqueId = Tether.Utils.uniqueId;
    SETUP_JS = "yellowBox = $('.yellow-box', $output);\ngreenBox = $('.green-box', $output);\nscrollBox = $('.scroll-box', $output);";
    OUTPUT_HTML = function (key) {
        return "<div class=\"scroll-box\">\n  <div class=\"scroll-content\">\n    <div class=\"yellow-box\" data-example=\"" + key + "\"></div>\n    <div class=\"green-box\" data-example=\"" + key + "\"></div>\n  </div>\n</div>";
    };
    tethers = {};
    getOutput = function ($block) {
        var key;
        key = $block.data('example');
        if (key && typeof key === 'string') {
            return $("output[data-example='" + key + "']");
        }
        else {
            return $block.parents('pre').nextAll('output').first();
        }
    };
    run = function (key) {
        var $block, $output, code;
        if (typeof key === 'string') {
            $block = $("code[data-example='" + key + "']");
        }
        else {
            $block = key;
        }
        key = $block.attr('data-example');
        $output = getOutput($block);
        code = $block.text();
        code = SETUP_JS + code;
        window.$output = $output;
        return tethers[key] = eval(code);
    };
    setupBlock = function ($block) {
        var $output, $scrollBox, $scrollContent, key;
        key = $block.data('example');
        $output = getOutput($block);
        if (!key) {
            key = uniqueId();
            $block.attr('data-example', key);
            $output.attr('data-example', key);
            $output.find('.tether-element').attr('data-example', key);
        }
        $output.html(OUTPUT_HTML(key));
        $scrollBox = $output.find('.scroll-box');
        $scrollContent = $scrollBox.find('.scroll-content');
        $scrollBox.scrollTop(parseInt($scrollContent.css('height')) / 2 - $scrollBox.height() / 2);
        $scrollBox.scrollLeft(parseInt($scrollContent.css('width')) / 2 - $scrollBox.width() / 2);
        setTimeout(function () {
            return $scrollBox.on('scroll', function () {
                return $output.addClass('scrolled');
            });
        });
        $scrollBox.css('height', "" + ($block.parent().outerHeight()) + "px");
        if ($output.attr('deactivated') == null) {
            return run($block);
        }
    };
    $(document.body).on('click', function (e) {
        if ($(e.target).is('output[deactivated]')) {
            activate($(e.target));
            return false;
        }
        else if ($(e.target).is('output[activated]')) {
            deactivate($(e.target));
            return false;
        }
    });
    activate = function ($output) {
        var $block, key;
        $block = $output.prev().find('code');
        run($block);
        $output.find('.tether-element').show();
        key = $output.data('example');
        $(tethers[key].element).show();
        tethers[key].enable();
        $output.removeAttr('deactivated');
        return $output.attr('activated', true);
    };
    deactivate = function ($output) {
        var $block, $el, key;
        $block = $output.prev().find('code');
        key = $output.data('example');
        tethers[key].disable();
        $el = $(tethers[key].element);
        $el.detach();
        $output.find('.scroll-content').append($el);
        $el.hide();
        $output.removeAttr('activated');
        return $output.attr('deactivated', true);
    };
    init = function () {
        var $blocks, block, _i, _len, _results;
        $blocks = $('code[data-example]');
        _results = [];
        for (_i = 0, _len = $blocks.length; _i < _len; _i++) {
            block = $blocks[_i];
            _results.push(setupBlock($(block)));
        }
        return _results;
    };
    window.EXECUTR_OPTIONS = {
        codeSelector: 'code[executable]'
    };
    $(init);
}).call(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy90ZXRoZXIvZG9jcy9qcy9pbnRyby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDO0lBQ0csSUFBSSxXQUFXLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUM7SUFDckcsUUFBUSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDO0lBQ2pDLFFBQVEsR0FBRyxzSEFBc0gsQ0FBQztJQUNsSSxXQUFXLEdBQUcsVUFBVSxHQUFHO1FBQ3ZCLE1BQU0sQ0FBQyw2R0FBNkcsR0FBRyxHQUFHLEdBQUcseURBQXlELEdBQUcsR0FBRyxHQUFHLDZCQUE2QixDQUFDO0lBQ2pPLENBQUMsQ0FBQztJQUNGLE9BQU8sR0FBRyxFQUFFLENBQUM7SUFDYixTQUFTLEdBQUcsVUFBVSxNQUFNO1FBQ3hCLElBQUksR0FBRyxDQUFDO1FBQ1IsR0FBRyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDN0IsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDakMsTUFBTSxDQUFDLENBQUMsQ0FBQyx1QkFBdUIsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDbkQsQ0FBQztRQUNELElBQUksQ0FBQyxDQUFDO1lBQ0YsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzNELENBQUM7SUFDTCxDQUFDLENBQUM7SUFDRixHQUFHLEdBQUcsVUFBVSxHQUFHO1FBQ2YsSUFBSSxNQUFNLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQztRQUMxQixFQUFFLENBQUMsQ0FBQyxPQUFPLEdBQUcsS0FBSyxRQUFRLENBQUMs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Q0FBQztJQUNGLE1BQU0sQ0FBQyxlQUFlLEdBQUc7UUFDckIsWUFBWSxFQUFFLGtCQUFrQjtLQUNuQyxDQUFDO0lBQ0YsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ1osQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRWQsbWlXQUFtaVciLCJmaWxlIjoid3d3L3BhY2tzL3RldGhlci9kb2NzL2pzL2ludHJvLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgT1VUUFVUX0hUTUwsIFNFVFVQX0pTLCBhY3RpdmF0ZSwgZGVhY3RpdmF0ZSwgZ2V0T3V0cHV0LCBpbml0LCBydW4sIHNldHVwQmxvY2ssIHRldGhlcnMsIHVuaXF1ZUlkO1xuICAgIHVuaXF1ZUlkID0gVGV0aGVyLlV0aWxzLnVuaXF1ZUlkO1xuICAgIFNFVFVQX0pTID0gXCJ5ZWxsb3dCb3ggPSAkKCcueWVsbG93LWJveCcsICRvdXRwdXQpO1xcbmdyZWVuQm94ID0gJCgnLmdyZWVuLWJveCcsICRvdXRwdXQpO1xcbnNjcm9sbEJveCA9ICQoJy5zY3JvbGwtYm94JywgJG91dHB1dCk7XCI7XG4gICAgT1VUUFVUX0hUTUwgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiBcIjxkaXYgY2xhc3M9XFxcInNjcm9sbC1ib3hcXFwiPlxcbiAgPGRpdiBjbGFzcz1cXFwic2Nyb2xsLWNvbnRlbnRcXFwiPlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJ5ZWxsb3ctYm94XFxcIiBkYXRhLWV4YW1wbGU9XFxcIlwiICsga2V5ICsgXCJcXFwiPjwvZGl2PlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJncmVlbi1ib3hcXFwiIGRhdGEtZXhhbXBsZT1cXFwiXCIgKyBrZXkgKyBcIlxcXCI+PC9kaXY+XFxuICA8L2Rpdj5cXG48L2Rpdj5cIjtcbiAgICB9O1xuICAgIHRldGhlcnMgPSB7fTtcbiAgICBnZXRPdXRwdXQgPSBmdW5jdGlvbiAoJGJsb2NrKSB7XG4gICAgICAgIHZhciBrZXk7XG4gICAgICAgIGtleSA9ICRibG9jay5kYXRhKCdleGFtcGxlJyk7XG4gICAgICAgIGlmIChrZXkgJiYgdHlwZW9mIGtleSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiAkKFwib3V0cHV0W2RhdGEtZXhhbXBsZT0nXCIgKyBrZXkgKyBcIiddXCIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuICRibG9jay5wYXJlbnRzKCdwcmUnKS5uZXh0QWxsKCdvdXRwdXQnKS5maXJzdCgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBydW4gPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHZhciAkYmxvY2ssICRvdXRwdXQsIGNvZGU7XG4gICAgICAgIGlmICh0eXBlb2Yga2V5ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgJGJsb2NrID0gJChcImNvZGVbZGF0YS1leGFtcGxlPSdcIiArIGtleSArIFwiJ11cIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAkYmxvY2sgPSBrZXk7XG4gICAgICAgIH1cbiAgICAgICAga2V5ID0gJGJsb2NrLmF0dHIoJ2RhdGEtZXhhbXBsZScpO1xuICAgICAgICAkb3V0cHV0ID0gZ2V0T3V0cHV0KCRibG9jayk7XG4gICAgICAgIGNvZGUgPSAkYmxvY2sudGV4dCgpO1xuICAgICAgICBjb2RlID0gU0VUVVBfSlMgKyBjb2RlO1xuICAgICAgICB3aW5kb3cuJG91dHB1dCA9ICRvdXRwdXQ7XG4gICAgICAgIHJldHVybiB0ZXRoZXJzW2tleV0gPSBldmFsKGNvZGUpO1xuICAgIH07XG4gICAgc2V0dXBCbG9jayA9IGZ1bmN0aW9uICgkYmxvY2spIHtcbiAgICAgICAgdmFyICRvdXRwdXQsICRzY3JvbGxCb3gsICRzY3JvbGxDb250ZW50LCBrZXk7XG4gICAgICAgIGtleSA9ICRibG9jay5kYXRhKCdleGFtcGxlJyk7XG4gICAgICAgICRvdXRwdXQgPSBnZXRPdXRwdXQoJGJsb2NrKTtcbiAgICAgICAgaWYgKCFrZXkpIHtcbiAgICAgICAgICAgIGtleSA9IHVuaXF1ZUlkKCk7XG4gICAgICAgICAgICAkYmxvY2suYXR0cignZGF0YS1leGFtcGxlJywga2V5KTtcbiAgICAgICAgICAgICRvdXRwdXQuYXR0cignZGF0YS1leGFtcGxlJywga2V5KTtcbiAgICAgICAgICAgICRvdXRwdXQuZmluZCgnLnRldGhlci1lbGVtZW50JykuYXR0cignZGF0YS1leGFtcGxlJywga2V5KTtcbiAgICAgICAgfVxuICAgICAgICAkb3V0cHV0Lmh0bWwoT1VUUFVUX0hUTUwoa2V5KSk7XG4gICAgICAgICRzY3JvbGxCb3ggPSAkb3V0cHV0LmZpbmQoJy5zY3JvbGwtYm94Jyk7XG4gICAgICAgICRzY3JvbGxDb250ZW50ID0gJHNjcm9sbEJveC5maW5kKCcuc2Nyb2xsLWNvbnRlbnQnKTtcbiAgICAgICAgJHNjcm9sbEJveC5zY3JvbGxUb3AocGFyc2VJbnQoJHNjcm9sbENvbnRlbnQuY3NzKCdoZWlnaHQnKSkgLyAyIC0gJHNjcm9sbEJveC5oZWlnaHQoKSAvIDIpO1xuICAgICAgICAkc2Nyb2xsQm94LnNjcm9sbExlZnQocGFyc2VJbnQoJHNjcm9sbENvbnRlbnQuY3NzKCd3aWR0aCcpKSAvIDIgLSAkc2Nyb2xsQm94LndpZHRoKCkgLyAyKTtcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gJHNjcm9sbEJveC5vbignc2Nyb2xsJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAkb3V0cHV0LmFkZENsYXNzKCdzY3JvbGxlZCcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICAkc2Nyb2xsQm94LmNzcygnaGVpZ2h0JywgXCJcIiArICgkYmxvY2sucGFyZW50KCkub3V0ZXJIZWlnaHQoKSkgKyBcInB4XCIpO1xuICAgICAgICBpZiAoJG91dHB1dC5hdHRyKCdkZWFjdGl2YXRlZCcpID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBydW4oJGJsb2NrKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgJChkb2N1bWVudC5ib2R5KS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoJChlLnRhcmdldCkuaXMoJ291dHB1dFtkZWFjdGl2YXRlZF0nKSkge1xuICAgICAgICAgICAgYWN0aXZhdGUoJChlLnRhcmdldCkpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKCQoZS50YXJnZXQpLmlzKCdvdXRwdXRbYWN0aXZhdGVkXScpKSB7XG4gICAgICAgICAgICBkZWFjdGl2YXRlKCQoZS50YXJnZXQpKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGFjdGl2YXRlID0gZnVuY3Rpb24gKCRvdXRwdXQpIHtcbiAgICAgICAgdmFyICRibG9jaywga2V5O1xuICAgICAgICAkYmxvY2sgPSAkb3V0cHV0LnByZXYoKS5maW5kKCdjb2RlJyk7XG4gICAgICAgIHJ1bigkYmxvY2spO1xuICAgICAgICAkb3V0cHV0LmZpbmQoJy50ZXRoZXItZWxlbWVudCcpLnNob3coKTtcbiAgICAgICAga2V5ID0gJG91dHB1dC5kYXRhKCdleGFtcGxlJyk7XG4gICAgICAgICQodGV0aGVyc1trZXldLmVsZW1lbnQpLnNob3coKTtcbiAgICAgICAgdGV0aGVyc1trZXldLmVuYWJsZSgpO1xuICAgICAgICAkb3V0cHV0LnJlbW92ZUF0dHIoJ2RlYWN0aXZhdGVkJyk7XG4gICAgICAgIHJldHVybiAkb3V0cHV0LmF0dHIoJ2FjdGl2YXRlZCcsIHRydWUpO1xuICAgIH07XG4gICAgZGVhY3RpdmF0ZSA9IGZ1bmN0aW9uICgkb3V0cHV0KSB7XG4gICAgICAgIHZhciAkYmxvY2ssICRlbCwga2V5O1xuICAgICAgICAkYmxvY2sgPSAkb3V0cHV0LnByZXYoKS5maW5kKCdjb2RlJyk7XG4gICAgICAgIGtleSA9ICRvdXRwdXQuZGF0YSgnZXhhbXBsZScpO1xuICAgICAgICB0ZXRoZXJzW2tleV0uZGlzYWJsZSgpO1xuICAgICAgICAkZWwgPSAkKHRldGhlcnNba2V5XS5lbGVtZW50KTtcbiAgICAgICAgJGVsLmRldGFjaCgpO1xuICAgICAgICAkb3V0cHV0LmZpbmQoJy5zY3JvbGwtY29udGVudCcpLmFwcGVuZCgkZWwpO1xuICAgICAgICAkZWwuaGlkZSgpO1xuICAgICAgICAkb3V0cHV0LnJlbW92ZUF0dHIoJ2FjdGl2YXRlZCcpO1xuICAgICAgICByZXR1cm4gJG91dHB1dC5hdHRyKCdkZWFjdGl2YXRlZCcsIHRydWUpO1xuICAgIH07XG4gICAgaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyICRibG9ja3MsIGJsb2NrLCBfaSwgX2xlbiwgX3Jlc3VsdHM7XG4gICAgICAgICRibG9ja3MgPSAkKCdjb2RlW2RhdGEtZXhhbXBsZV0nKTtcbiAgICAgICAgX3Jlc3VsdHMgPSBbXTtcbiAgICAgICAgZm9yIChfaSA9IDAsIF9sZW4gPSAkYmxvY2tzLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7XG4gICAgICAgICAgICBibG9jayA9ICRibG9ja3NbX2ldO1xuICAgICAgICAgICAgX3Jlc3VsdHMucHVzaChzZXR1cEJsb2NrKCQoYmxvY2spKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9yZXN1bHRzO1xuICAgIH07XG4gICAgd2luZG93LkVYRUNVVFJfT1BUSU9OUyA9IHtcbiAgICAgICAgY29kZVNlbGVjdG9yOiAnY29kZVtleGVjdXRhYmxlXSdcbiAgICB9O1xuICAgICQoaW5pdCk7XG59KS5jYWxsKHRoaXMpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluZDNkeTl3WVdOcmN5OTBaWFJvWlhJdlpHOWpjeTlxY3k5cGJuUnlieTVxY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeERRVUZETzBsQlEwTXNTVUZCU1N4WFFVRlhMRVZCUVVVc1VVRkJVU3hGUVVGRkxGRkJRVkVzUlVGQlJTeFZRVUZWTEVWQlFVVXNVMEZCVXl4RlFVRkZMRWxCUVVrc1JVRkJSU3hIUVVGSExFVkJRVVVzVlVGQlZTeEZRVUZGTEU5QlFVOHNSVUZCUlN4UlFVRlJMRU5CUVVNN1NVRkZja2NzVVVGQlVTeEhRVUZITEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVNc1VVRkJVU3hEUVVGRE8wbEJSV3BETEZGQlFWRXNSMEZCUnl4elNFRkJjMGdzUTBGQlF6dEpRVVZzU1N4WFFVRlhMRWRCUVVjc1ZVRkJVeXhIUVVGSE8xRkJRM2hDTEUxQlFVMHNRMEZCUXl3MlIwRkJOa2NzUjBGQlJ5eEhRVUZITEVkQlFVY3NlVVJCUVhsRUxFZEJRVWNzUjBGQlJ5eEhRVUZITERaQ1FVRTJRaXhEUVVGRE8wbEJReTlPTEVOQlFVTXNRMEZCUXp0SlFVVkdMRTlCUVU4c1IwRkJSeXhGUVVGRkxFTkJRVU03U1VGRllpeFRRVUZUTEVkQlFVY3NWVUZCVXl4TlFVRk5PMUZCUTNwQ0xFbEJRVWtzUjBGQlJ5eERRVUZETzFGQlExSXNSMEZCUnl4SFFVRkhMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTTdVVUZETjBJc1JVRkJSU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEU5QlFVOHNSMEZCUnl4TFFVRkxMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGJrTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJReXgxUWtGQmRVSXNSMEZCUnl4SFFVRkhMRWRCUVVjc1NVRkJTU3hEUVVGRExFTkJRVU03VVVGRGFrUXNRMEZCUXp0UlFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8xbEJRMDRzVFVGQlRTeERRVUZETEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zVDBGQlR5eERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRE8xRkJRM3BFTEVOQlFVTTdTVUZEU0N4RFFVRkRMRU5CUVVNN1NVRkZSaXhIUVVGSExFZEJRVWNzVlVGQlV5eEhRVUZITzFGQlEyaENMRWxCUVVrc1RVRkJUU3hGUVVGRkxFOUJRVThzUlVGQlJTeEpRVUZKTEVOQlFVTTdVVUZETVVJc1JVRkJSU3hEUVVGRExFTkJRVU1zVDBGQlR5eEhRVUZITEV0QlFVc3NVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVNMVFpeE5RVUZOTEVkQlFVY3NRMEZCUXl4RFFVRkRMSEZDUVVGeFFpeEhRVUZITEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1EwRkJRenRSUVVOcVJDeERRVUZETzFGQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1dVRkRUaXhOUVVGTkxFZEJRVWNzUjBGQlJ5eERRVUZETzFGQlEyWXNRMEZCUXp0UlFVTkVMRWRCUVVjc1IwRkJSeXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEdOQlFXTXNRMEZCUXl4RFFVRkRPMUZCUTJ4RExFOUJRVThzUjBGQlJ5eFRRVUZUTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNN1VVRkROVUlzU1VGQlNTeEhRVUZITEUxQlFVMHNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRSUVVOeVFpeEpRVUZKTEVkQlFVY3NVVUZCVVN4SFFVRkhMRWxCUVVrc1EwRkJRenRSUVVOMlFpeE5RVUZOTEVOQlFVTXNUMEZCVHl4SFFVRkhMRTlCUVU4c1EwRkJRenRSUVVONlFpeE5RVUZOTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0SlFVTnVReXhEUVVGRExFTkJRVU03U1VGRlJpeFZRVUZWTEVkQlFVY3NWVUZCVXl4TlFVRk5PMUZCUXpGQ0xFbEJRVWtzVDBGQlR5eEZRVUZGTEZWQlFWVXNSVUZCUlN4alFVRmpMRVZCUVVVc1IwRkJSeXhEUVVGRE8xRkJRemRETEVkQlFVY3NSMEZCUnl4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETzFGQlF6ZENMRTlCUVU4c1IwRkJSeXhUUVVGVExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTTdVVUZETlVJc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTFRc1IwRkJSeXhIUVVGSExGRkJRVkVzUlVGQlJTeERRVUZETzFsQlEycENMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zWTBGQll5eEZRVUZGTEVkQlFVY3NRMEZCUXl4RFFVRkRPMWxCUTJwRExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNZMEZCWXl4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGRE8xbEJRMnhETEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc2FVSkJRV2xDTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1kwRkJZeXhGUVVGRkxFZEJRVWNzUTBGQlF5eERRVUZETzFGQlF6VkVMRU5CUVVNN1VVRkRSQ3hQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRE8xRkJReTlDTEZWQlFWVXNSMEZCUnl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExHRkJRV0VzUTBGQlF5eERRVUZETzFGQlEzcERMR05CUVdNc1IwRkJSeXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEdsQ1FVRnBRaXhEUVVGRExFTkJRVU03VVVGRGNFUXNWVUZCVlN4RFFVRkRMRk5CUVZNc1EwRkJReXhSUVVGUkxFTkJRVU1zWTBGQll5eERRVUZETEVkQlFVY3NRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eFZRVUZWTEVOQlFVTXNUVUZCVFN4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRE0wWXNWVUZCVlN4RFFVRkRMRlZCUVZVc1EwRkJReXhSUVVGUkxFTkJRVU1zWTBGQll5eERRVUZETEVkQlFVY3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eFZRVUZWTEVOQlFVTXNTMEZCU3l4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRE1VWXNWVUZCVlN4RFFVRkRPMWxCUTFRc1RVRkJUU3hEUVVGRExGVkJRVlVzUTBGQlF5eEZRVUZGTEVOQlFVTXNVVUZCVVN4RlFVRkZPMmRDUVVNM1FpeE5RVUZOTEVOQlFVTXNUMEZCVHl4RFFVRkRMRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVU1zUTBGQlF6dFpRVU4wUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRSUVVOTUxFTkJRVU1zUTBGQlF5eERRVUZETzFGQlEwZ3NWVUZCVlN4RFFVRkRMRWRCUVVjc1EwRkJReXhSUVVGUkxFVkJRVVVzUlVGQlJTeEhRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRExGZEJRVmNzUlVGQlJTeERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRU5CUVVNN1VVRkRkRVVzUlVGQlJTeERRVUZETEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhoUVVGaExFTkJRVU1zU1VGQlNTeEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTNoRExFMUJRVTBzUTBGQlF5eEhRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNN1VVRkRja0lzUTBGQlF6dEpRVU5JTEVOQlFVTXNRMEZCUXp0SlFVVkdMRU5CUVVNc1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRTlCUVU4c1JVRkJSU3hWUVVGVExFTkJRVU03VVVGRGNrTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc2NVSkJRWEZDTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRNVU1zVVVGQlVTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU4wUWl4TlFVRk5MRU5CUVVNc1MwRkJTeXhEUVVGRE8xRkJRMllzUTBGQlF6dFJRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXh0UWtGQmJVSXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVNdlF5eFZRVUZWTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETzFsQlEzaENMRTFCUVUwc1EwRkJReXhMUVVGTExFTkJRVU03VVVGRFppeERRVUZETzBsQlEwZ3NRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkZTQ3hSUVVGUkxFZEJRVWNzVlVGQlV5eFBRVUZQTzFGQlEzcENMRWxCUVVrc1RVRkJUU3hGUVVGRkxFZEJRVWNzUTBGQlF6dFJRVU5vUWl4TlFVRk5MRWRCUVVjc1QwRkJUeXhEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJRenRSUVVOeVF5eEhRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNN1VVRkRXaXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEdsQ1FVRnBRaXhEUVVGRExFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTTdVVUZEZGtNc1IwRkJSeXhIUVVGSExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN1VVRkRPVUlzUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0UlFVTXZRaXhQUVVGUExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNN1VVRkRkRUlzVDBGQlR5eERRVUZETEZWQlFWVXNRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenRSUVVOc1F5eE5RVUZOTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhYUVVGWExFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdTVUZEZWtNc1EwRkJReXhEUVVGRE8wbEJSVVlzVlVGQlZTeEhRVUZITEZWQlFWTXNUMEZCVHp0UlFVTXpRaXhKUVVGSkxFMUJRVTBzUlVGQlJTeEhRVUZITEVWQlFVVXNSMEZCUnl4RFFVRkRPMUZCUTNKQ0xFMUJRVTBzUjBGQlJ5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzFGQlEzSkRMRWRCUVVjc1IwRkJSeXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRPMUZCUXpsQ0xFOUJRVThzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4UFFVRlBMRVZCUVVVc1EwRkJRenRSUVVOMlFpeEhRVUZITEVkQlFVY3NRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXp0UlFVTTVRaXhIUVVGSExFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTTdVVUZEWWl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExHbENRVUZwUWl4RFFVRkRMRU5CUVVNc1RVRkJUU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzFGQlF6VkRMRWRCUVVjc1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlF6dFJRVU5ZTEU5QlFVOHNRMEZCUXl4VlFVRlZMRU5CUVVNc1YwRkJWeXhEUVVGRExFTkJRVU03VVVGRGFFTXNUVUZCVFN4RFFVRkRMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zWVVGQllTeEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRPMGxCUXpORExFTkJRVU1zUTBGQlF6dEpRVVZHTEVsQlFVa3NSMEZCUnp0UlFVTk1MRWxCUVVrc1QwRkJUeXhGUVVGRkxFdEJRVXNzUlVGQlJTeEZRVUZGTEVWQlFVVXNTVUZCU1N4RlFVRkZMRkZCUVZFc1EwRkJRenRSUVVOMlF5eFBRVUZQTEVkQlFVY3NRMEZCUXl4RFFVRkRMRzlDUVVGdlFpeERRVUZETEVOQlFVTTdVVUZEYkVNc1VVRkJVU3hIUVVGSExFVkJRVVVzUTBGQlF6dFJRVU5rTEVkQlFVY3NRMEZCUXl4RFFVRkRMRVZCUVVVc1IwRkJSeXhEUVVGRExFVkJRVVVzU1VGQlNTeEhRVUZITEU5QlFVOHNRMEZCUXl4TlFVRk5MRVZCUVVVc1JVRkJSU3hIUVVGSExFbEJRVWtzUlVGQlJTeEZRVUZGTEVWQlFVVXNSVUZCUlN4RFFVRkRPMWxCUTNCRUxFdEJRVXNzUjBGQlJ5eFBRVUZQTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN1dVRkRjRUlzVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTjBReXhEUVVGRE8xRkJRMFFzVFVGQlRTeERRVUZETEZGQlFWRXNRMEZCUXp0SlFVTnNRaXhEUVVGRExFTkJRVU03U1VGRlJpeE5RVUZOTEVOQlFVTXNaVUZCWlN4SFFVRkhPMUZCUTNaQ0xGbEJRVmtzUlVGQlJTeHJRa0ZCYTBJN1MwRkRha01zUTBGQlF6dEpRVVZHTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRCUVVWV0xFTkJRVU1zUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReUlzSW1acGJHVWlPaUozZDNjdmNHRmphM012ZEdWMGFHVnlMMlJ2WTNNdmFuTXZhVzUwY204dWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUlvWm5WdVkzUnBiMjRvS1NCN1hHNGdJSFpoY2lCUFZWUlFWVlJmU0ZSTlRDd2dVMFZVVlZCZlNsTXNJR0ZqZEdsMllYUmxMQ0JrWldGamRHbDJZWFJsTENCblpYUlBkWFJ3ZFhRc0lHbHVhWFFzSUhKMWJpd2djMlYwZFhCQ2JHOWpheXdnZEdWMGFHVnljeXdnZFc1cGNYVmxTV1E3WEc1Y2JpQWdkVzVwY1hWbFNXUWdQU0JVWlhSb1pYSXVWWFJwYkhNdWRXNXBjWFZsU1dRN1hHNWNiaUFnVTBWVVZWQmZTbE1nUFNCY0lubGxiR3h2ZDBKdmVDQTlJQ1FvSnk1NVpXeHNiM2N0WW05NEp5d2dKRzkxZEhCMWRDazdYRnh1WjNKbFpXNUNiM2dnUFNBa0tDY3VaM0psWlc0dFltOTRKeXdnSkc5MWRIQjFkQ2s3WEZ4dWMyTnliMnhzUW05NElEMGdKQ2duTG5OamNtOXNiQzFpYjNnbkxDQWtiM1YwY0hWMEtUdGNJanRjYmx4dUlDQlBWVlJRVlZSZlNGUk5UQ0E5SUdaMWJtTjBhVzl1S0d0bGVTa2dlMXh1SUNBZ0lISmxkSFZ5YmlCY0lqeGthWFlnWTJ4aGMzTTlYRnhjSW5OamNtOXNiQzFpYjNoY1hGd2lQbHhjYmlBZ1BHUnBkaUJqYkdGemN6MWNYRndpYzJOeWIyeHNMV052Ym5SbGJuUmNYRndpUGx4Y2JpQWdJQ0E4WkdsMklHTnNZWE56UFZ4Y1hDSjVaV3hzYjNjdFltOTRYRnhjSWlCa1lYUmhMV1Y0WVcxd2JHVTlYRnhjSWx3aUlDc2dhMlY1SUNzZ1hDSmNYRndpUGp3dlpHbDJQbHhjYmlBZ0lDQThaR2wySUdOc1lYTnpQVnhjWENKbmNtVmxiaTFpYjNoY1hGd2lJR1JoZEdFdFpYaGhiWEJzWlQxY1hGd2lYQ0lnS3lCclpYa2dLeUJjSWx4Y1hDSStQQzlrYVhZK1hGeHVJQ0E4TDJScGRqNWNYRzQ4TDJScGRqNWNJanRjYmlBZ2ZUdGNibHh1SUNCMFpYUm9aWEp6SUQwZ2UzMDdYRzVjYmlBZ1oyVjBUM1YwY0hWMElEMGdablZ1WTNScGIyNG9KR0pzYjJOcktTQjdYRzRnSUNBZ2RtRnlJR3RsZVR0Y2JpQWdJQ0JyWlhrZ1BTQWtZbXh2WTJzdVpHRjBZU2duWlhoaGJYQnNaU2NwTzF4dUlDQWdJR2xtSUNoclpYa2dKaVlnZEhsd1pXOW1JR3RsZVNBOVBUMGdKM04wY21sdVp5Y3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQWtLRndpYjNWMGNIVjBXMlJoZEdFdFpYaGhiWEJzWlQwblhDSWdLeUJyWlhrZ0t5QmNJaWRkWENJcE8xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdKR0pzYjJOckxuQmhjbVZ1ZEhNb0ozQnlaU2NwTG01bGVIUkJiR3dvSjI5MWRIQjFkQ2NwTG1acGNuTjBLQ2s3WEc0Z0lDQWdmVnh1SUNCOU8xeHVYRzRnSUhKMWJpQTlJR1oxYm1OMGFXOXVLR3RsZVNrZ2UxeHVJQ0FnSUhaaGNpQWtZbXh2WTJzc0lDUnZkWFJ3ZFhRc0lHTnZaR1U3WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJyWlhrZ1BUMDlJQ2R6ZEhKcGJtY25LU0I3WEc0Z0lDQWdJQ0FrWW14dlkyc2dQU0FrS0Z3aVkyOWtaVnRrWVhSaExXVjRZVzF3YkdVOUoxd2lJQ3NnYTJWNUlDc2dYQ0luWFZ3aUtUdGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSkdKc2IyTnJJRDBnYTJWNU8xeHVJQ0FnSUgxY2JpQWdJQ0JyWlhrZ1BTQWtZbXh2WTJzdVlYUjBjaWduWkdGMFlTMWxlR0Z0Y0d4bEp5azdYRzRnSUNBZ0pHOTFkSEIxZENBOUlHZGxkRTkxZEhCMWRDZ2tZbXh2WTJzcE8xeHVJQ0FnSUdOdlpHVWdQU0FrWW14dlkyc3VkR1Y0ZENncE8xeHVJQ0FnSUdOdlpHVWdQU0JUUlZSVlVGOUtVeUFySUdOdlpHVTdYRzRnSUNBZ2QybHVaRzkzTGlSdmRYUndkWFFnUFNBa2IzVjBjSFYwTzF4dUlDQWdJSEpsZEhWeWJpQjBaWFJvWlhKelcydGxlVjBnUFNCbGRtRnNLR052WkdVcE8xeHVJQ0I5TzF4dVhHNGdJSE5sZEhWd1FteHZZMnNnUFNCbWRXNWpkR2x2Ymlna1lteHZZMnNwSUh0Y2JpQWdJQ0IyWVhJZ0pHOTFkSEIxZEN3Z0pITmpjbTlzYkVKdmVDd2dKSE5qY205c2JFTnZiblJsYm5Rc0lHdGxlVHRjYmlBZ0lDQnJaWGtnUFNBa1lteHZZMnN1WkdGMFlTZ25aWGhoYlhCc1pTY3BPMXh1SUNBZ0lDUnZkWFJ3ZFhRZ1BTQm5aWFJQZFhSd2RYUW9KR0pzYjJOcktUdGNiaUFnSUNCcFppQW9JV3RsZVNrZ2UxeHVJQ0FnSUNBZ2EyVjVJRDBnZFc1cGNYVmxTV1FvS1R0Y2JpQWdJQ0FnSUNSaWJHOWpheTVoZEhSeUtDZGtZWFJoTFdWNFlXMXdiR1VuTENCclpYa3BPMXh1SUNBZ0lDQWdKRzkxZEhCMWRDNWhkSFJ5S0Nka1lYUmhMV1Y0WVcxd2JHVW5MQ0JyWlhrcE8xeHVJQ0FnSUNBZ0pHOTFkSEIxZEM1bWFXNWtLQ2N1ZEdWMGFHVnlMV1ZzWlcxbGJuUW5LUzVoZEhSeUtDZGtZWFJoTFdWNFlXMXdiR1VuTENCclpYa3BPMXh1SUNBZ0lIMWNiaUFnSUNBa2IzVjBjSFYwTG1oMGJXd29UMVZVVUZWVVgwaFVUVXdvYTJWNUtTazdYRzRnSUNBZ0pITmpjbTlzYkVKdmVDQTlJQ1J2ZFhSd2RYUXVabWx1WkNnbkxuTmpjbTlzYkMxaWIzZ25LVHRjYmlBZ0lDQWtjMk55YjJ4c1EyOXVkR1Z1ZENBOUlDUnpZM0p2Ykd4Q2IzZ3VabWx1WkNnbkxuTmpjbTlzYkMxamIyNTBaVzUwSnlrN1hHNGdJQ0FnSkhOamNtOXNiRUp2ZUM1elkzSnZiR3hVYjNBb2NHRnljMlZKYm5Rb0pITmpjbTlzYkVOdmJuUmxiblF1WTNOektDZG9aV2xuYUhRbktTa2dMeUF5SUMwZ0pITmpjbTlzYkVKdmVDNW9aV2xuYUhRb0tTQXZJRElwTzF4dUlDQWdJQ1J6WTNKdmJHeENiM2d1YzJOeWIyeHNUR1ZtZENod1lYSnpaVWx1ZENna2MyTnliMnhzUTI5dWRHVnVkQzVqYzNNb0ozZHBaSFJvSnlrcElDOGdNaUF0SUNSelkzSnZiR3hDYjNndWQybGtkR2dvS1NBdklESXBPMXh1SUNBZ0lITmxkRlJwYldWdmRYUW9ablZ1WTNScGIyNG9LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdKSE5qY205c2JFSnZlQzV2YmlnbmMyTnliMnhzSnl3Z1puVnVZM1JwYjI0b0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQWtiM1YwY0hWMExtRmtaRU5zWVhOektDZHpZM0p2Ykd4bFpDY3BPMXh1SUNBZ0lDQWdmU2s3WEc0Z0lDQWdmU2s3WEc0Z0lDQWdKSE5qY205c2JFSnZlQzVqYzNNb0oyaGxhV2RvZENjc0lGd2lYQ0lnS3lBb0pHSnNiMk5yTG5CaGNtVnVkQ2dwTG05MWRHVnlTR1ZwWjJoMEtDa3BJQ3NnWENKd2VGd2lLVHRjYmlBZ0lDQnBaaUFvSkc5MWRIQjFkQzVoZEhSeUtDZGtaV0ZqZEdsMllYUmxaQ2NwSUQwOUlHNTFiR3dwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJ5ZFc0b0pHSnNiMk5yS1R0Y2JpQWdJQ0I5WEc0Z0lIMDdYRzVjYmlBZ0pDaGtiMk4xYldWdWRDNWliMlI1S1M1dmJpZ25ZMnhwWTJzbkxDQm1kVzVqZEdsdmJpaGxLU0I3WEc0Z0lDQWdhV1lnS0NRb1pTNTBZWEpuWlhRcExtbHpLQ2R2ZFhSd2RYUmJaR1ZoWTNScGRtRjBaV1JkSnlrcElIdGNiaUFnSUNBZ0lHRmpkR2wyWVhSbEtDUW9aUzUwWVhKblpYUXBLVHRjYmlBZ0lDQWdJSEpsZEhWeWJpQm1ZV3h6WlR0Y2JpQWdJQ0I5SUdWc2MyVWdhV1lnS0NRb1pTNTBZWEpuWlhRcExtbHpLQ2R2ZFhSd2RYUmJZV04wYVhaaGRHVmtYU2NwS1NCN1hHNGdJQ0FnSUNCa1pXRmpkR2wyWVhSbEtDUW9aUzUwWVhKblpYUXBLVHRjYmlBZ0lDQWdJSEpsZEhWeWJpQm1ZV3h6WlR0Y2JpQWdJQ0I5WEc0Z0lIMHBPMXh1WEc0Z0lHRmpkR2wyWVhSbElEMGdablZ1WTNScGIyNG9KRzkxZEhCMWRDa2dlMXh1SUNBZ0lIWmhjaUFrWW14dlkyc3NJR3RsZVR0Y2JpQWdJQ0FrWW14dlkyc2dQU0FrYjNWMGNIVjBMbkJ5WlhZb0tTNW1hVzVrS0NkamIyUmxKeWs3WEc0Z0lDQWdjblZ1S0NSaWJHOWpheWs3WEc0Z0lDQWdKRzkxZEhCMWRDNW1hVzVrS0NjdWRHVjBhR1Z5TFdWc1pXMWxiblFuS1M1emFHOTNLQ2s3WEc0Z0lDQWdhMlY1SUQwZ0pHOTFkSEIxZEM1a1lYUmhLQ2RsZUdGdGNHeGxKeWs3WEc0Z0lDQWdKQ2gwWlhSb1pYSnpXMnRsZVYwdVpXeGxiV1Z1ZENrdWMyaHZkeWdwTzF4dUlDQWdJSFJsZEdobGNuTmJhMlY1WFM1bGJtRmliR1VvS1R0Y2JpQWdJQ0FrYjNWMGNIVjBMbkpsYlc5MlpVRjBkSElvSjJSbFlXTjBhWFpoZEdWa0p5azdYRzRnSUNBZ2NtVjBkWEp1SUNSdmRYUndkWFF1WVhSMGNpZ25ZV04wYVhaaGRHVmtKeXdnZEhKMVpTazdYRzRnSUgwN1hHNWNiaUFnWkdWaFkzUnBkbUYwWlNBOUlHWjFibU4wYVc5dUtDUnZkWFJ3ZFhRcElIdGNiaUFnSUNCMllYSWdKR0pzYjJOckxDQWtaV3dzSUd0bGVUdGNiaUFnSUNBa1lteHZZMnNnUFNBa2IzVjBjSFYwTG5CeVpYWW9LUzVtYVc1a0tDZGpiMlJsSnlrN1hHNGdJQ0FnYTJWNUlEMGdKRzkxZEhCMWRDNWtZWFJoS0NkbGVHRnRjR3hsSnlrN1hHNGdJQ0FnZEdWMGFHVnljMXRyWlhsZExtUnBjMkZpYkdVb0tUdGNiaUFnSUNBa1pXd2dQU0FrS0hSbGRHaGxjbk5iYTJWNVhTNWxiR1Z0Wlc1MEtUdGNiaUFnSUNBa1pXd3VaR1YwWVdOb0tDazdYRzRnSUNBZ0pHOTFkSEIxZEM1bWFXNWtLQ2N1YzJOeWIyeHNMV052Ym5SbGJuUW5LUzVoY0hCbGJtUW9KR1ZzS1R0Y2JpQWdJQ0FrWld3dWFHbGtaU2dwTzF4dUlDQWdJQ1J2ZFhSd2RYUXVjbVZ0YjNabFFYUjBjaWduWVdOMGFYWmhkR1ZrSnlrN1hHNGdJQ0FnY21WMGRYSnVJQ1J2ZFhSd2RYUXVZWFIwY2lnblpHVmhZM1JwZG1GMFpXUW5MQ0IwY25WbEtUdGNiaUFnZlR0Y2JseHVJQ0JwYm1sMElEMGdablZ1WTNScGIyNG9LU0I3WEc0Z0lDQWdkbUZ5SUNSaWJHOWphM01zSUdKc2IyTnJMQ0JmYVN3Z1gyeGxiaXdnWDNKbGMzVnNkSE03WEc0Z0lDQWdKR0pzYjJOcmN5QTlJQ1FvSjJOdlpHVmJaR0YwWVMxbGVHRnRjR3hsWFNjcE8xeHVJQ0FnSUY5eVpYTjFiSFJ6SUQwZ1cxMDdYRzRnSUNBZ1ptOXlJQ2hmYVNBOUlEQXNJRjlzWlc0Z1BTQWtZbXh2WTJ0ekxteGxibWQwYURzZ1gya2dQQ0JmYkdWdU95QmZhU3NyS1NCN1hHNGdJQ0FnSUNCaWJHOWpheUE5SUNSaWJHOWphM05iWDJsZE8xeHVJQ0FnSUNBZ1gzSmxjM1ZzZEhNdWNIVnphQ2h6WlhSMWNFSnNiMk5yS0NRb1lteHZZMnNwS1NrN1hHNGdJQ0FnZlZ4dUlDQWdJSEpsZEhWeWJpQmZjbVZ6ZFd4MGN6dGNiaUFnZlR0Y2JseHVJQ0IzYVc1a2IzY3VSVmhGUTFWVVVsOVBVRlJKVDA1VElEMGdlMXh1SUNBZ0lHTnZaR1ZUWld4bFkzUnZjam9nSjJOdlpHVmJaWGhsWTNWMFlXSnNaVjBuWEc0Z0lIMDdYRzVjYmlBZ0pDaHBibWwwS1R0Y2JseHVmU2t1WTJGc2JDaDBhR2x6S1R0Y2JpSmRmUT09XG4iXX0=
