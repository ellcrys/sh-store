(function () {
    var Evented, MIRROR_ATTACH, addClass, allDrops, clickEvent, createContext, extend, hasClass, removeClass, sortAttach, touchDevice, _ref, __hasProp = {}.hasOwnProperty, __extends = function (child, parent) {
        for (var key in parent) {
            if (__hasProp.call(parent, key))
                child[key] = parent[key];
        }
        function ctor() { this.constructor = child; }
        ctor.prototype = parent.prototype;
        child.prototype = new ctor();
        child.__super__ = parent.prototype;
        return child;
    }, __indexOf = [].indexOf || function (item) {
        for (var i = 0, l = this.length; i < l; i++) {
            if (i in this && this[i] === item)
                return i;
        }
        return -1;
    };
    _ref = Tether.Utils, extend = _ref.extend, addClass = _ref.addClass, removeClass = _ref.removeClass, hasClass = _ref.hasClass, Evented = _ref.Evented;
    touchDevice = 'ontouchstart' in document.documentElement;
    clickEvent = touchDevice ? 'touchstart' : 'click';
    sortAttach = function (str) {
        var first, second, _ref1, _ref2;
        _ref1 = str.split(' '), first = _ref1[0], second = _ref1[1];
        if (first === 'left' || first === 'right') {
            _ref2 = [second, first], first = _ref2[0], second = _ref2[1];
        }
        return [first, second].join(' ');
    };
    MIRROR_ATTACH = {
        left: 'right',
        right: 'left',
        top: 'bottom',
        bottom: 'top',
        middle: 'middle',
        center: 'center'
    };
    allDrops = {};
    createContext = function (options) {
        var DropInstance, defaultOptions, drop, _name;
        if (options == null) {
            options = {};
        }
        drop = function () {
            return (function (func, args, ctor) {
                ctor.prototype = func.prototype;
                var child = new ctor, result = func.apply(child, args);
                return Object(result) === result ? result : child;
            })(DropInstance, arguments, function () { });
        };
        extend(drop, {
            createContext: createContext,
            drops: [],
            defaults: {}
        });
        defaultOptions = {
            classPrefix: 'drop',
            defaults: {
                attach: 'bottom left',
                openOn: 'click',
                constrainToScrollParent: true,
                constrainToWindow: true,
                classes: '',
                tetherOptions: {}
            }
        };
        extend(drop, defaultOptions, options);
        extend(drop.defaults, defaultOptions.defaults, options.defaults);
        if (allDrops[_name = drop.classPrefix] == null) {
            allDrops[_name] = [];
        }
        drop.updateBodyClasses = function () {
            var anyOpen, _drop, _i, _len, _ref1;
            anyOpen = false;
            _ref1 = allDrops[drop.classPrefix];
            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
                _drop = _ref1[_i];
                if (!(_drop.isOpened())) {
                    continue;
                }
                anyOpen = true;
                break;
            }
            if (anyOpen) {
                return addClass(document.body, "" + drop.classPrefix + "-open");
            }
            else {
                return removeClass(document.body, "" + drop.classPrefix + "-open");
            }
        };
        DropInstance = (function (_super) {
            __extends(DropInstance, _super);
            function DropInstance(options) {
                this.options = options;
                this.options = extend({}, drop.defaults, this.options);
                this.target = this.options.target;
                if (this.target == null) {
                    throw new Error('Drop Error: You must provide a target.');
                }
                drop.drops.push(this);
                allDrops[drop.classPrefix].push(this);
                this.setupElements();
                this.setupEvents();
                this.setupTether();
            }
            DropInstance.prototype.setupElements = function () {
                this.drop = document.createElement('div');
                addClass(this.drop, drop.classPrefix);
                if (this.options.classes) {
                    addClass(this.drop, this.options.classes);
                }
                this.dropContent = document.createElement('div');
                addClass(this.dropContent, "" + drop.classPrefix + "-content");
                if (typeof this.options.content === 'object') {
                    this.dropContent.appendChild(this.options.content);
                }
                else {
                    this.dropContent.innerHTML = this.options.content;
                }
                return this.drop.appendChild(this.dropContent);
            };
            DropInstance.prototype.setupTether = function () {
                var constraints, dropAttach;
                dropAttach = this.options.position.split(' ');
                dropAttach[0] = MIRROR_ATTACH[dropAttach[0]];
                dropAttach = dropAttach.join(' ');
                constraints = [];
                if (this.options.constrainToScrollParent) {
                    constraints.push({
                        to: 'scrollParent',
                        pin: 'top, bottom',
                        attachment: 'together none'
                    });
                }
                if (this.options.constrainToWindow !== false) {
                    constraints.push({
                        to: 'window',
                        pin: true,
                        attachment: 'together'
                    });
                }
                constraints.push({
                    to: 'scrollParent'
                });
                options = {
                    element: this.drop,
                    target: this.target,
                    attachment: sortAttach(dropAttach),
                    targetAttachment: sortAttach(this.options.position),
                    classPrefix: drop.classPrefix,
                    offset: '0 0',
                    targetOffset: '0 0',
                    enabled: false,
                    constraints: constraints
                };
                if (this.options.tether !== false) {
                    return this.tether = new Tether(extend({}, options, this.options.tether));
                }
            };
            DropInstance.prototype.setupEvents = function () {
                var events, _this = this;
                if (!this.options.openOn) {
                    return;
                }
                events = this.options.openOn.split(' ');
                if (__indexOf.call(events, 'click') >= 0) {
                    this.target.addEventListener(clickEvent, function () {
                        return _this.toggle();
                    });
                    document.addEventListener(clickEvent, function (event) {
                        if (!_this.isOpened()) {
                            return;
                        }
                        if (event.target === _this.drop || _this.drop.contains(event.target)) {
                            return;
                        }
                        if (event.target === _this.target || _this.target.contains(event.target)) {
                            return;
                        }
                        return _this.close();
                    });
                }
                if (__indexOf.call(events, 'hover') >= 0) {
                    this.target.addEventListener('mouseover', function () {
                        return _this.open();
                    });
                    return this.target.addEventListener('mouseout', function () {
                        return _this.close();
                    });
                }
            };
            DropInstance.prototype.isOpened = function () {
                return hasClass(this.drop, "" + drop.classPrefix + "-open");
            };
            DropInstance.prototype.toggle = function () {
                if (this.isOpened()) {
                    return this.close();
                }
                else {
                    return this.open();
                }
            };
            DropInstance.prototype.open = function () {
                var _ref1;
                if (!this.drop.parentNode) {
                    document.body.appendChild(this.drop);
                }
                addClass(this.target, "" + drop.classPrefix + "-open");
                addClass(this.drop, "" + drop.classPrefix + "-open");
                if ((_ref1 = this.tether) != null) {
                    _ref1.enable();
                }
                this.trigger('open');
                return drop.updateBodyClasses();
            };
            DropInstance.prototype.close = function () {
                var _ref1;
                removeClass(this.target, "" + drop.classPrefix + "-open");
                removeClass(this.drop, "" + drop.classPrefix + "-open");
                this.trigger('close');
                if ((_ref1 = this.tether) != null) {
                    _ref1.disable();
                }
                return drop.updateBodyClasses();
            };
            return DropInstance;
        })(Evented);
        return drop;
    };
    window.Drop = createContext();
    document.addEventListener('DOMContentLoaded', function () {
        return Drop.updateBodyClasses();
    });
}).call(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy90ZXRoZXIvZG9jcy93ZWxjb21lL2pzL2Ryb3AuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsQ0FBQztJQUNHLElBQUksT0FBTyxFQUFFLGFBQWEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsU0FBUyxHQUFHLEVBQUUsQ0FBQyxjQUFjLEVBQUUsU0FBUyxHQUFHLFVBQVUsS0FBSyxFQUFFLE1BQU07UUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ3BPLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUM1QixLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pDLENBQUM7UUFBQyxrQkFBa0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDO1FBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO1FBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDO1FBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUFDLENBQUMsRUFBRSxTQUFTLEdBQUcsRUFBRSxDQUFDLE9BQU8sSUFBSSxVQUFVLElBQUk7UUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQzVQLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLElB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QUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDaEMsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO2dCQUNwQixDQUFDO2dCQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztZQUNwQyxDQUFDLENBQUM7WUFDRixNQUFNLENBQUMsWUFBWSxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ1osTUFBTSxDQUFDLElBQUksQ0FBQztJQUNoQixDQUFDLENBQUM7SUFDRixNQUFNLENBQUMsSUFBSSxHQUFHLGFBQWEsRUFBRSxDQUFDO0lBQzlCLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRTtRQUMxQyxNQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7SUFDcEMsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7QUFFZCxtaHVCQUFtaHVCIiwiZmlsZSI6Ind3dy9wYWNrcy90ZXRoZXIvZG9jcy93ZWxjb21lL2pzL2Ryb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCkge1xuICAgIHZhciBFdmVudGVkLCBNSVJST1JfQVRUQUNILCBhZGRDbGFzcywgYWxsRHJvcHMsIGNsaWNrRXZlbnQsIGNyZWF0ZUNvbnRleHQsIGV4dGVuZCwgaGFzQ2xhc3MsIHJlbW92ZUNsYXNzLCBzb3J0QXR0YWNoLCB0b3VjaERldmljZSwgX3JlZiwgX19oYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHksIF9fZXh0ZW5kcyA9IGZ1bmN0aW9uIChjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHtcbiAgICAgICAgaWYgKF9faGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSlcbiAgICAgICAgICAgIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTtcbiAgICB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSwgX19pbmRleE9mID0gW10uaW5kZXhPZiB8fCBmdW5jdGlvbiAoaXRlbSkgeyBmb3IgKHZhciBpID0gMCwgbCA9IHRoaXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChpIGluIHRoaXMgJiYgdGhpc1tpXSA9PT0gaXRlbSlcbiAgICAgICAgICAgIHJldHVybiBpO1xuICAgIH0gcmV0dXJuIC0xOyB9O1xuICAgIF9yZWYgPSBUZXRoZXIuVXRpbHMsIGV4dGVuZCA9IF9yZWYuZXh0ZW5kLCBhZGRDbGFzcyA9IF9yZWYuYWRkQ2xhc3MsIHJlbW92ZUNsYXNzID0gX3JlZi5yZW1vdmVDbGFzcywgaGFzQ2xhc3MgPSBfcmVmLmhhc0NsYXNzLCBFdmVudGVkID0gX3JlZi5FdmVudGVkO1xuICAgIHRvdWNoRGV2aWNlID0gJ29udG91Y2hzdGFydCcgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICAgIGNsaWNrRXZlbnQgPSB0b3VjaERldmljZSA/ICd0b3VjaHN0YXJ0JyA6ICdjbGljayc7XG4gICAgc29ydEF0dGFjaCA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgdmFyIGZpcnN0LCBzZWNvbmQsIF9yZWYxLCBfcmVmMjtcbiAgICAgICAgX3JlZjEgPSBzdHIuc3BsaXQoJyAnKSwgZmlyc3QgPSBfcmVmMVswXSwgc2Vjb25kID0gX3JlZjFbMV07XG4gICAgICAgIGlmIChmaXJzdCA9PT0gJ2xlZnQnIHx8IGZpcnN0ID09PSAncmlnaHQnKSB7XG4gICAgICAgICAgICBfcmVmMiA9IFtzZWNvbmQsIGZpcnN0XSwgZmlyc3QgPSBfcmVmMlswXSwgc2Vjb25kID0gX3JlZjJbMV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFtmaXJzdCwgc2Vjb25kXS5qb2luKCcgJyk7XG4gICAgfTtcbiAgICBNSVJST1JfQVRUQUNIID0ge1xuICAgICAgICBsZWZ0OiAncmlnaHQnLFxuICAgICAgICByaWdodDogJ2xlZnQnLFxuICAgICAgICB0b3A6ICdib3R0b20nLFxuICAgICAgICBib3R0b206ICd0b3AnLFxuICAgICAgICBtaWRkbGU6ICdtaWRkbGUnLFxuICAgICAgICBjZW50ZXI6ICdjZW50ZXInXG4gICAgfTtcbiAgICBhbGxEcm9wcyA9IHt9O1xuICAgIGNyZWF0ZUNvbnRleHQgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgRHJvcEluc3RhbmNlLCBkZWZhdWx0T3B0aW9ucywgZHJvcCwgX25hbWU7XG4gICAgICAgIGlmIChvcHRpb25zID09IG51bGwpIHtcbiAgICAgICAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICBkcm9wID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIChmdW5jdGlvbiAoZnVuYywgYXJncywgY3Rvcikge1xuICAgICAgICAgICAgICAgIGN0b3IucHJvdG90eXBlID0gZnVuYy5wcm90b3R5cGU7XG4gICAgICAgICAgICAgICAgdmFyIGNoaWxkID0gbmV3IGN0b3IsIHJlc3VsdCA9IGZ1bmMuYXBwbHkoY2hpbGQsIGFyZ3MpO1xuICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3QocmVzdWx0KSA9PT0gcmVzdWx0ID8gcmVzdWx0IDogY2hpbGQ7XG4gICAgICAgICAgICB9KShEcm9wSW5zdGFuY2UsIGFyZ3VtZW50cywgZnVuY3Rpb24gKCkgeyB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgZXh0ZW5kKGRyb3AsIHtcbiAgICAgICAgICAgIGNyZWF0ZUNvbnRleHQ6IGNyZWF0ZUNvbnRleHQsXG4gICAgICAgICAgICBkcm9wczogW10sXG4gICAgICAgICAgICBkZWZhdWx0czoge31cbiAgICAgICAgfSk7XG4gICAgICAgIGRlZmF1bHRPcHRpb25zID0ge1xuICAgICAgICAgICAgY2xhc3NQcmVmaXg6ICdkcm9wJyxcbiAgICAgICAgICAgIGRlZmF1bHRzOiB7XG4gICAgICAgICAgICAgICAgYXR0YWNoOiAnYm90dG9tIGxlZnQnLFxuICAgICAgICAgICAgICAgIG9wZW5PbjogJ2NsaWNrJyxcbiAgICAgICAgICAgICAgICBjb25zdHJhaW5Ub1Njcm9sbFBhcmVudDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjb25zdHJhaW5Ub1dpbmRvdzogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjbGFzc2VzOiAnJyxcbiAgICAgICAgICAgICAgICB0ZXRoZXJPcHRpb25zOiB7fVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBleHRlbmQoZHJvcCwgZGVmYXVsdE9wdGlvbnMsIG9wdGlvbnMpO1xuICAgICAgICBleHRlbmQoZHJvcC5kZWZhdWx0cywgZGVmYXVsdE9wdGlvbnMuZGVmYXVsdHMsIG9wdGlvbnMuZGVmYXVsdHMpO1xuICAgICAgICBpZiAoYWxsRHJvcHNbX25hbWUgPSBkcm9wLmNsYXNzUHJlZml4XSA9PSBudWxsKSB7XG4gICAgICAgICAgICBhbGxEcm9wc1tfbmFtZV0gPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBkcm9wLnVwZGF0ZUJvZHlDbGFzc2VzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGFueU9wZW4sIF9kcm9wLCBfaSwgX2xlbiwgX3JlZjE7XG4gICAgICAgICAgICBhbnlPcGVuID0gZmFsc2U7XG4gICAgICAgICAgICBfcmVmMSA9IGFsbERyb3BzW2Ryb3AuY2xhc3NQcmVmaXhdO1xuICAgICAgICAgICAgZm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmMS5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykge1xuICAgICAgICAgICAgICAgIF9kcm9wID0gX3JlZjFbX2ldO1xuICAgICAgICAgICAgICAgIGlmICghKF9kcm9wLmlzT3BlbmVkKCkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhbnlPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhbnlPcGVuKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFkZENsYXNzKGRvY3VtZW50LmJvZHksIFwiXCIgKyBkcm9wLmNsYXNzUHJlZml4ICsgXCItb3BlblwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiByZW1vdmVDbGFzcyhkb2N1bWVudC5ib2R5LCBcIlwiICsgZHJvcC5jbGFzc1ByZWZpeCArIFwiLW9wZW5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIERyb3BJbnN0YW5jZSA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgICAgICAgICBfX2V4dGVuZHMoRHJvcEluc3RhbmNlLCBfc3VwZXIpO1xuICAgICAgICAgICAgZnVuY3Rpb24gRHJvcEluc3RhbmNlKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICAgICAgICAgIHRoaXMub3B0aW9ucyA9IGV4dGVuZCh7fSwgZHJvcC5kZWZhdWx0cywgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgICAgICB0aGlzLnRhcmdldCA9IHRoaXMub3B0aW9ucy50YXJnZXQ7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudGFyZ2V0ID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdEcm9wIEVycm9yOiBZb3UgbXVzdCBwcm92aWRlIGEgdGFyZ2V0LicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkcm9wLmRyb3BzLnB1c2godGhpcyk7XG4gICAgICAgICAgICAgICAgYWxsRHJvcHNbZHJvcC5jbGFzc1ByZWZpeF0ucHVzaCh0aGlzKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldHVwRWxlbWVudHMoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldHVwRXZlbnRzKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXR1cFRldGhlcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgRHJvcEluc3RhbmNlLnByb3RvdHlwZS5zZXR1cEVsZW1lbnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZHJvcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgIGFkZENsYXNzKHRoaXMuZHJvcCwgZHJvcC5jbGFzc1ByZWZpeCk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5jbGFzc2VzKSB7XG4gICAgICAgICAgICAgICAgICAgIGFkZENsYXNzKHRoaXMuZHJvcCwgdGhpcy5vcHRpb25zLmNsYXNzZXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmRyb3BDb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgYWRkQ2xhc3ModGhpcy5kcm9wQ29udGVudCwgXCJcIiArIGRyb3AuY2xhc3NQcmVmaXggKyBcIi1jb250ZW50XCIpO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLmNvbnRlbnQgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZHJvcENvbnRlbnQuYXBwZW5kQ2hpbGQodGhpcy5vcHRpb25zLmNvbnRlbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kcm9wQ29udGVudC5pbm5lckhUTUwgPSB0aGlzLm9wdGlvbnMuY29udGVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZHJvcC5hcHBlbmRDaGlsZCh0aGlzLmRyb3BDb250ZW50KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBEcm9wSW5zdGFuY2UucHJvdG90eXBlLnNldHVwVGV0aGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBjb25zdHJhaW50cywgZHJvcEF0dGFjaDtcbiAgICAgICAgICAgICAgICBkcm9wQXR0YWNoID0gdGhpcy5vcHRpb25zLnBvc2l0aW9uLnNwbGl0KCcgJyk7XG4gICAgICAgICAgICAgICAgZHJvcEF0dGFjaFswXSA9IE1JUlJPUl9BVFRBQ0hbZHJvcEF0dGFjaFswXV07XG4gICAgICAgICAgICAgICAgZHJvcEF0dGFjaCA9IGRyb3BBdHRhY2guam9pbignICcpO1xuICAgICAgICAgICAgICAgIGNvbnN0cmFpbnRzID0gW107XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5jb25zdHJhaW5Ub1Njcm9sbFBhcmVudCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdHJhaW50cy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvOiAnc2Nyb2xsUGFyZW50JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBpbjogJ3RvcCwgYm90dG9tJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dGFjaG1lbnQ6ICd0b2dldGhlciBub25lJ1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5jb25zdHJhaW5Ub1dpbmRvdyAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3RyYWludHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICB0bzogJ3dpbmRvdycsXG4gICAgICAgICAgICAgICAgICAgICAgICBwaW46IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRhY2htZW50OiAndG9nZXRoZXInXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdHJhaW50cy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgdG86ICdzY3JvbGxQYXJlbnQnXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogdGhpcy5kcm9wLFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6IHRoaXMudGFyZ2V0LFxuICAgICAgICAgICAgICAgICAgICBhdHRhY2htZW50OiBzb3J0QXR0YWNoKGRyb3BBdHRhY2gpLFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRBdHRhY2htZW50OiBzb3J0QXR0YWNoKHRoaXMub3B0aW9ucy5wb3NpdGlvbiksXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzUHJlZml4OiBkcm9wLmNsYXNzUHJlZml4LFxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6ICcwIDAnLFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRPZmZzZXQ6ICcwIDAnLFxuICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgY29uc3RyYWludHM6IGNvbnN0cmFpbnRzXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnRldGhlciAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudGV0aGVyID0gbmV3IFRldGhlcihleHRlbmQoe30sIG9wdGlvbnMsIHRoaXMub3B0aW9ucy50ZXRoZXIpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgRHJvcEluc3RhbmNlLnByb3RvdHlwZS5zZXR1cEV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgZXZlbnRzLCBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMub3Blbk9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZXZlbnRzID0gdGhpcy5vcHRpb25zLm9wZW5Pbi5zcGxpdCgnICcpO1xuICAgICAgICAgICAgICAgIGlmIChfX2luZGV4T2YuY2FsbChldmVudHMsICdjbGljaycpID49IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihjbGlja0V2ZW50LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMudG9nZ2xlKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKGNsaWNrRXZlbnQsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5pc09wZW5lZCgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gX3RoaXMuZHJvcCB8fCBfdGhpcy5kcm9wLmNvbnRhaW5zKGV2ZW50LnRhcmdldCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSBfdGhpcy50YXJnZXQgfHwgX3RoaXMudGFyZ2V0LmNvbnRhaW5zKGV2ZW50LnRhcmdldCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChfX2luZGV4T2YuY2FsbChldmVudHMsICdob3ZlcicpID49IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLm9wZW4oKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRhcmdldC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW91dCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgRHJvcEluc3RhbmNlLnByb3RvdHlwZS5pc09wZW5lZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaGFzQ2xhc3ModGhpcy5kcm9wLCBcIlwiICsgZHJvcC5jbGFzc1ByZWZpeCArIFwiLW9wZW5cIik7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgRHJvcEluc3RhbmNlLnByb3RvdHlwZS50b2dnbGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNPcGVuZWQoKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMub3BlbigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBEcm9wSW5zdGFuY2UucHJvdG90eXBlLm9wZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9yZWYxO1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5kcm9wLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmRyb3ApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhZGRDbGFzcyh0aGlzLnRhcmdldCwgXCJcIiArIGRyb3AuY2xhc3NQcmVmaXggKyBcIi1vcGVuXCIpO1xuICAgICAgICAgICAgICAgIGFkZENsYXNzKHRoaXMuZHJvcCwgXCJcIiArIGRyb3AuY2xhc3NQcmVmaXggKyBcIi1vcGVuXCIpO1xuICAgICAgICAgICAgICAgIGlmICgoX3JlZjEgPSB0aGlzLnRldGhlcikgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBfcmVmMS5lbmFibGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy50cmlnZ2VyKCdvcGVuJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRyb3AudXBkYXRlQm9keUNsYXNzZXMoKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBEcm9wSW5zdGFuY2UucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBfcmVmMTtcbiAgICAgICAgICAgICAgICByZW1vdmVDbGFzcyh0aGlzLnRhcmdldCwgXCJcIiArIGRyb3AuY2xhc3NQcmVmaXggKyBcIi1vcGVuXCIpO1xuICAgICAgICAgICAgICAgIHJlbW92ZUNsYXNzKHRoaXMuZHJvcCwgXCJcIiArIGRyb3AuY2xhc3NQcmVmaXggKyBcIi1vcGVuXCIpO1xuICAgICAgICAgICAgICAgIHRoaXMudHJpZ2dlcignY2xvc2UnKTtcbiAgICAgICAgICAgICAgICBpZiAoKF9yZWYxID0gdGhpcy50ZXRoZXIpICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgX3JlZjEuZGlzYWJsZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZHJvcC51cGRhdGVCb2R5Q2xhc3NlcygpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBEcm9wSW5zdGFuY2U7XG4gICAgICAgIH0pKEV2ZW50ZWQpO1xuICAgICAgICByZXR1cm4gZHJvcDtcbiAgICB9O1xuICAgIHdpbmRvdy5Ecm9wID0gY3JlYXRlQ29udGV4dCgpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBEcm9wLnVwZGF0ZUJvZHlDbGFzc2VzKCk7XG4gICAgfSk7XG59KS5jYWxsKHRoaXMpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluZDNkeTl3WVdOcmN5OTBaWFJvWlhJdlpHOWpjeTkzWld4amIyMWxMMnB6TDJSeWIzQXVhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1EwRkJRenRKUVVORExFbEJRVWtzVDBGQlR5eEZRVUZGTEdGQlFXRXNSVUZCUlN4UlFVRlJMRVZCUVVVc1VVRkJVU3hGUVVGRkxGVkJRVlVzUlVGQlJTeGhRVUZoTEVWQlFVVXNUVUZCVFN4RlFVRkZMRkZCUVZFc1JVRkJSU3hYUVVGWExFVkJRVVVzVlVGQlZTeEZRVUZGTEZkQlFWY3NSVUZCUlN4SlFVRkpMRVZCUTNKSkxGTkJRVk1zUjBGQlJ5eEZRVUZGTEVOQlFVTXNZMEZCWXl4RlFVTTNRaXhUUVVGVExFZEJRVWNzVlVGQlV5eExRVUZMTEVWQlFVVXNUVUZCVFN4SlFVRkpMRWRCUVVjc1EwRkJReXhEUVVGRExFbEJRVWtzUjBGQlJ5eEpRVUZKTEUxQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVNN1VVRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eFRRVUZUTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTFCUVUwc1JVRkJSU3hIUVVGSExFTkJRVU1zUTBGQlF6dFpRVUZETEV0QlFVc3NRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhOUVVGTkxFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdTVUZCUXl4RFFVRkRMRU5CUVVNc2EwSkJRV3RDTEVsQlFVa3NRMEZCUXl4WFFVRlhMRWRCUVVjc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRWRCUVVjc1RVRkJUU3hEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4VFFVRlRMRWRCUVVjc1NVRkJTU3hKUVVGSkxFVkJRVVVzUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4VFFVRlRMRWRCUVVjc1RVRkJUU3hEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJReTlTTEZOQlFWTXNSMEZCUnl4RlFVRkZMRU5CUVVNc1QwRkJUeXhKUVVGSkxGVkJRVk1zU1VGQlNTeEpRVUZKTEVkQlFVY3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZMRU5CUVVNN1VVRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEVsQlFVa3NTVUZCU1N4SlFVRkpMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zUzBGQlN5eEpRVUZKTEVOQlFVTTdXVUZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhEUVVGRE8wbEJRVU1zUTBGQlF5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEpRVVY0U2l4SlFVRkpMRWRCUVVjc1RVRkJUU3hEUVVGRExFdEJRVXNzUlVGQlJTeE5RVUZOTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1JVRkJSU3hSUVVGUkxFZEJRVWNzU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4WFFVRlhMRWRCUVVjc1NVRkJTU3hEUVVGRExGZEJRVmNzUlVGQlJTeFJRVUZSTEVkQlFVY3NTVUZCU1N4RFFVRkRMRkZCUVZFc1JVRkJSU3hQUVVGUExFZEJRVWNzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXp0SlFVVjBTaXhYUVVGWExFZEJRVWNzWTBGQll5eEpRVUZKTEZGQlFWRXNRMEZCUXl4bFFVRmxMRU5CUVVNN1NVRkZla1FzVlVGQlZTeEhRVUZITEZkQlFWY3NSMEZCUnl4WlFVRlpMRWRCUVVjc1QwRkJUeXhEUVVGRE8wbEJSV3hFTEZWQlFWVXNSMEZCUnl4VlFVRlRMRWRCUVVjN1VVRkRka0lzU1VGQlNTeExRVUZMTEVWQlFVVXNUVUZCVFN4RlFVRkZMRXRCUVVzc1JVRkJSU3hMUVVGTExFTkJRVU03VVVGRGFFTXNTMEZCU3l4SFFVRkhMRWRCUVVjc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVVXNTMEZCU3l4SFFVRkhMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJTeE5RVUZOTEVkQlFVY3NTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xRkJRelZFTEVWQlFVVXNRMEZCUXl4RFFVRkRMRXRCUVVzc1MwRkJTeXhOUVVGTkxFbEJRVWtzUzBGQlN5eExRVUZMTEU5QlFVOHNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRNVU1zUzBGQlN5eEhRVUZITEVOQlFVTXNUVUZCVFN4RlFVRkZMRXRCUVVzc1EwRkJReXhGUVVGRkxFdEJRVXNzUjBGQlJ5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1RVRkJUU3hIUVVGSExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTXZSQ3hEUVVGRE8xRkJRMFFzVFVGQlRTeERRVUZETEVOQlFVTXNTMEZCU3l4RlFVRkZMRTFCUVUwc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0SlFVTnVReXhEUVVGRExFTkJRVU03U1VGRlJpeGhRVUZoTEVkQlFVYzdVVUZEWkN4SlFVRkpMRVZCUVVVc1QwRkJUenRSUVVOaUxFdEJRVXNzUlVGQlJTeE5RVUZOTzFGQlEySXNSMEZCUnl4RlFVRkZMRkZCUVZFN1VVRkRZaXhOUVVGTkxFVkJRVVVzUzBGQlN6dFJRVU5pTEUxQlFVMHNSVUZCUlN4UlFVRlJPMUZCUTJoQ0xFMUJRVTBzUlVGQlJTeFJRVUZSTzB0QlEycENMRU5CUVVNN1NVRkZSaXhSUVVGUkxFZEJRVWNzUlVGQlJTeERRVUZETzBsQlJXUXNZVUZCWVN4SFFVRkhMRlZCUVZNc1QwRkJUenRSUVVNNVFpeEpRVUZKTEZsQlFWa3NSVUZCUlN4alFVRmpMRVZCUVVVc1NVRkJTU3hGUVVGRkxFdEJRVXNzUTBGQlF6dFJRVU01UXl4RlFVRkZMRU5CUVVNc1EwRkJReXhQUVVGUExFbEJRVWtzU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTndRaXhQUVVGUExFZEJRVWNzUlVGQlJTeERRVUZETzFGQlEyWXNRMEZCUXp0UlFVTkVMRWxCUVVrc1IwRkJSenRaUVVOTUxFMUJRVTBzUTBGQlF5eERRVUZETEZWQlFWTXNTVUZCU1N4RlFVRkZMRWxCUVVrc1JVRkJSU3hKUVVGSk8yZENRVU12UWl4SlFVRkpMRU5CUVVNc1UwRkJVeXhIUVVGSExFbEJRVWtzUTBGQlF5eFRRVUZUTEVOQlFVTTdaMEpCUTJoRExFbEJRVWtzUzBGQlN5eEhRVUZITEVsQlFVa3NTVUZCU1N4RlFVRkZMRTFCUVUwc1IwRkJSeXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVc3NSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJRenRuUWtGRGRrUXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eE5RVUZOTEVkQlFVY3NUVUZCVFN4SFFVRkhMRXRCUVVzc1EwRkJRenRaUVVOd1JDeERRVUZETEVOQlFVTXNRMEZCUXl4WlFVRlpMRVZCUVVVc1UwRkJVeXhGUVVGRkxHTkJRVmNzUTBGQlF5eERRVUZETEVOQlFVTTdVVUZETlVNc1EwRkJReXhEUVVGRE8xRkJRMFlzVFVGQlRTeERRVUZETEVsQlFVa3NSVUZCUlR0WlFVTllMR0ZCUVdFc1JVRkJSU3hoUVVGaE8xbEJRelZDTEV0QlFVc3NSVUZCUlN4RlFVRkZPMWxCUTFRc1VVRkJVU3hGUVVGRkxFVkJRVVU3VTBGRFlpeERRVUZETEVOQlFVTTdVVUZEU0N4alFVRmpMRWRCUVVjN1dVRkRaaXhYUVVGWExFVkJRVVVzVFVGQlRUdFpRVU51UWl4UlFVRlJMRVZCUVVVN1owSkJRMUlzVFVGQlRTeEZRVUZGTEdGQlFXRTdaMEpCUTNKQ0xFMUJRVTBzUlVGQlJTeFBRVUZQTzJkQ1FVTm1MSFZDUVVGMVFpeEZRVUZGTEVsQlFVazdaMEpCUXpkQ0xHbENRVUZwUWl4RlFVRkZMRWxCUVVrN1owSkJRM1pDTEU5QlFVOHNSVUZCUlN4RlFVRkZPMmRDUVVOWUxHRkJRV0VzUlVGQlJTeEZRVUZGTzJGQlEyeENPMU5CUTBZc1EwRkJRenRSUVVOR0xFMUJRVTBzUTBGQlF5eEpRVUZKTEVWQlFVVXNZMEZCWXl4RlFVRkZMRTlCUVU4c1EwRkJReXhEUVVGRE8xRkJRM1JETEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hGUVVGRkxHTkJRV01zUTBGQlF5eFJRVUZSTEVWQlFVVXNUMEZCVHl4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRE8xRkJRMnBGTEVWQlFVVXNRMEZCUXl4RFFVRkRMRkZCUVZFc1EwRkJReXhMUVVGTExFZEJRVWNzU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4SlFVRkpMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU03V1VGREwwTXNVVUZCVVN4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlF6dFJRVU4yUWl4RFFVRkRPMUZCUTBRc1NVRkJTU3hEUVVGRExHbENRVUZwUWl4SFFVRkhPMWxCUTNaQ0xFbEJRVWtzVDBGQlR5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RlFVRkZMRVZCUVVVc1NVRkJTU3hGUVVGRkxFdEJRVXNzUTBGQlF6dFpRVU53UXl4UFFVRlBMRWRCUVVjc1MwRkJTeXhEUVVGRE8xbEJRMmhDTEV0QlFVc3NSMEZCUnl4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETzFsQlEyNURMRWRCUVVjc1EwRkJReXhEUVVGRExFVkJRVVVzUjBGQlJ5eERRVUZETEVWQlFVVXNTVUZCU1N4SFFVRkhMRXRCUVVzc1EwRkJReXhOUVVGTkxFVkJRVVVzUlVGQlJTeEhRVUZITEVsQlFVa3NSVUZCUlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hEUVVGRE8yZENRVU5zUkN4TFFVRkxMRWRCUVVjc1MwRkJTeXhEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETzJkQ1FVTnNRaXhGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzI5Q1FVTjRRaXhSUVVGUkxFTkJRVU03WjBKQlExZ3NRMEZCUXp0blFrRkRSQ3hQUVVGUExFZEJRVWNzU1VGQlNTeERRVUZETzJkQ1FVTm1MRXRCUVVzc1EwRkJRenRaUVVOU0xFTkJRVU03V1VGRFJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU5hTEUxQlFVMHNRMEZCUXl4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzUlVGQlJTeEZRVUZGTEVkQlFVY3NTVUZCU1N4RFFVRkRMRmRCUVZjc1IwRkJSeXhQUVVGUExFTkJRVU1zUTBGQlF6dFpRVU5zUlN4RFFVRkRPMWxCUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03WjBKQlEwNHNUVUZCVFN4RFFVRkRMRmRCUVZjc1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeEZRVUZGTEVWQlFVVXNSMEZCUnl4SlFVRkpMRU5CUVVNc1YwRkJWeXhIUVVGSExFOUJRVThzUTBGQlF5eERRVUZETzFsQlEzSkZMRU5CUVVNN1VVRkRTQ3hEUVVGRExFTkJRVU03VVVGRFJpeFpRVUZaTEVkQlFVY3NRMEZCUXl4VlFVRlRMRTFCUVUwN1dVRkROMElzVTBGQlV5eERRVUZETEZsQlFWa3NSVUZCUlN4TlFVRk5MRU5CUVVNc1EwRkJRenRaUVVWb1F5eHpRa0ZCYzBJc1QwRkJUenRuUWtGRE0wSXNTVUZCU1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhQUVVGUExFTkJRVU03WjBKQlEzWkNMRWxCUVVrc1EwRkJReXhQUVVGUExFZEJRVWNzVFVGQlRTeERRVUZETEVWQlFVVXNSVUZCUlN4SlFVRkpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXp0blFrRkRka1FzU1VGQlNTeERRVUZETEUxQlFVMHNSMEZCUnl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFMUJRVTBzUTBGQlF6dG5Ra0ZEYkVNc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEUxQlFVMHNTVUZCU1N4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRE8yOUNRVU40UWl4TlFVRk5MRWxCUVVrc1MwRkJTeXhEUVVGRExIZERRVUYzUXl4RFFVRkRMRU5CUVVNN1owSkJRelZFTEVOQlFVTTdaMEpCUTBRc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1owSkJRM1JDTEZGQlFWRXNRMEZCUXl4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMmRDUVVOMFF5eEpRVUZKTEVOQlFVTXNZVUZCWVN4RlFVRkZMRU5CUVVNN1owSkJRM0pDTEVsQlFVa3NRMEZCUXl4WFFVRlhMRVZCUVVVc1EwRkJRenRuUWtGRGJrSXNTVUZCU1N4RFFVRkRMRmRCUVZjc1JVRkJSU3hEUVVGRE8xbEJRM0pDTEVOQlFVTTdXVUZGUkN4WlFVRlpMRU5CUVVNc1UwRkJVeXhEUVVGRExHRkJRV0VzUjBGQlJ6dG5Ra0ZEY2tNc1NVRkJTU3hEUVVGRExFbEJRVWtzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8yZENRVU14UXl4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMRU5CUVVNN1owSkJRM1JETEVWQlFVVXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkRla0lzVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXp0blFrRkROVU1zUTBGQlF6dG5Ra0ZEUkN4SlFVRkpMRU5CUVVNc1YwRkJWeXhIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1owSkJRMnBFTEZGQlFWRXNRMEZCUXl4SlFVRkpMRU5CUVVNc1YwRkJWeXhGUVVGRkxFVkJRVVVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWMEZCVnl4SFFVRkhMRlZCUVZVc1EwRkJReXhEUVVGRE8yZENRVU12UkN4RlFVRkZMRU5CUVVNc1EwRkJReXhQUVVGUExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNUMEZCVHl4TFFVRkxMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU03YjBKQlF6ZERMRWxCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zVjBGQlZ5eERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU03WjBKQlEzSkVMRU5CUVVNN1owSkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdiMEpCUTA0c1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eFRRVUZUTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhQUVVGUExFTkJRVU03WjBKQlEzQkVMRU5CUVVNN1owSkJRMFFzVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFbEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXp0WlFVTnFSQ3hEUVVGRExFTkJRVU03V1VGRlJpeFpRVUZaTEVOQlFVTXNVMEZCVXl4RFFVRkRMRmRCUVZjc1IwRkJSenRuUWtGRGJrTXNTVUZCU1N4WFFVRlhMRVZCUVVVc1ZVRkJWU3hEUVVGRE8yZENRVU0xUWl4VlFVRlZMRWRCUVVjc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRE8yZENRVU01UXl4VlFVRlZMRU5CUVVNc1EwRkJReXhEUVVGRExFZEJRVWNzWVVGQllTeERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU0zUXl4VlFVRlZMRWRCUVVjc1ZVRkJWU3hEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0blFrRkRiRU1zVjBGQlZ5eEhRVUZITEVWQlFVVXNRMEZCUXp0blFrRkRha0lzUlVGQlJTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXgxUWtGQmRVSXNRMEZCUXl4RFFVRkRMRU5CUVVNN2IwSkJRM3BETEZkQlFWY3NRMEZCUXl4SlFVRkpMRU5CUVVNN2QwSkJRMllzUlVGQlJTeEZRVUZGTEdOQlFXTTdkMEpCUTJ4Q0xFZEJRVWNzUlVGQlJTeGhRVUZoTzNkQ1FVTnNRaXhWUVVGVkxFVkJRVVVzWlVGQlpUdHhRa0ZETlVJc1EwRkJReXhEUVVGRE8yZENRVU5NTEVOQlFVTTdaMEpCUTBRc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4cFFrRkJhVUlzUzBGQlN5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRPMjlDUVVNM1F5eFhRVUZYTEVOQlFVTXNTVUZCU1N4RFFVRkRPM2RDUVVObUxFVkJRVVVzUlVGQlJTeFJRVUZSTzNkQ1FVTmFMRWRCUVVjc1JVRkJSU3hKUVVGSk8zZENRVU5VTEZWQlFWVXNSVUZCUlN4VlFVRlZPM0ZDUVVOMlFpeERRVUZETEVOQlFVTTdaMEpCUTB3c1EwRkJRenRuUWtGRFJDeFhRVUZYTEVOQlFVTXNTVUZCU1N4RFFVRkRPMjlDUVVObUxFVkJRVVVzUlVGQlJTeGpRVUZqTzJsQ1FVTnVRaXhEUVVGRExFTkJRVU03WjBKQlEwZ3NUMEZCVHl4SFFVRkhPMjlDUVVOU0xFOUJRVThzUlVGQlJTeEpRVUZKTEVOQlFVTXNTVUZCU1R0dlFrRkRiRUlzVFVGQlRTeEZRVUZGTEVsQlFVa3NRMEZCUXl4TlFVRk5PMjlDUVVOdVFpeFZRVUZWTEVWQlFVVXNWVUZCVlN4RFFVRkRMRlZCUVZVc1EwRkJRenR2UWtGRGJFTXNaMEpCUVdkQ0xFVkJRVVVzVlVGQlZTeERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1VVRkJVU3hEUVVGRE8yOUNRVU51UkN4WFFVRlhMRVZCUVVVc1NVRkJTU3hEUVVGRExGZEJRVmM3YjBKQlF6ZENMRTFCUVUwc1JVRkJSU3hMUVVGTE8yOUNRVU5pTEZsQlFWa3NSVUZCUlN4TFFVRkxPMjlDUVVOdVFpeFBRVUZQTEVWQlFVVXNTMEZCU3p0dlFrRkRaQ3hYUVVGWExFVkJRVVVzVjBGQlZ6dHBRa0ZEZWtJc1EwRkJRenRuUWtGRFJpeEZRVUZGTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFMUJRVTBzUzBGQlN5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRPMjlDUVVOc1F5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhKUVVGSkxFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlN4RlFVRkZMRTlCUVU4c1JVRkJSU3hKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRelZGTEVOQlFVTTdXVUZEU0N4RFFVRkRMRU5CUVVNN1dVRkZSaXhaUVVGWkxFTkJRVU1zVTBGQlV5eERRVUZETEZkQlFWY3NSMEZCUnp0blFrRkRia01zU1VGQlNTeE5RVUZOTEVWQlExSXNTMEZCU3l4SFFVRkhMRWxCUVVrc1EwRkJRenRuUWtGRFppeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkRla0lzVFVGQlRTeERRVUZETzJkQ1FVTlVMRU5CUVVNN1owSkJRMFFzVFVGQlRTeEhRVUZITEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1RVRkJUU3hEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0blFrRkRlRU1zUlVGQlJTeERRVUZETEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJReXhOUVVGTkxFVkJRVVVzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenR2UWtGRGVrTXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4VlFVRlZMRVZCUVVVN2QwSkJRM1pETEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVNc1RVRkJUU3hGUVVGRkxFTkJRVU03YjBKQlEzaENMRU5CUVVNc1EwRkJReXhEUVVGRE8yOUNRVU5JTEZGQlFWRXNRMEZCUXl4blFrRkJaMElzUTBGQlF5eFZRVUZWTEVWQlFVVXNWVUZCVXl4TFFVRkxPM2RDUVVOc1JDeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTTdORUpCUTNSQ0xFMUJRVTBzUTBGQlF6dDNRa0ZEVkN4RFFVRkRPM2RDUVVORUxFVkJRVVVzUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4TlFVRk5MRXRCUVVzc1MwRkJTeXhEUVVGRExFbEJRVWtzU1VGQlNTeExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPelJDUVVOeVJTeE5RVUZOTEVOQlFVTTdkMEpCUTFRc1EwRkJRenQzUWtGRFJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1RVRkJUU3hMUVVGTExFdEJRVXNzUTBGQlF5eE5RVUZOTEVsQlFVa3NTMEZCU3l4RFFVRkRMRTFCUVUwc1EwRkJReXhSUVVGUkxFTkJRVU1zUzBGQlN5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenMwUWtGRGVrVXNUVUZCVFN4RFFVRkRPM2RDUVVOVUxFTkJRVU03ZDBKQlEwUXNUVUZCVFN4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF6dHZRa0ZEZGtJc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlEwd3NRMEZCUXp0blFrRkRSQ3hGUVVGRkxFTkJRVU1zUTBGQlF5eFRRVUZUTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTFCUVUwc1JVRkJSU3hQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMjlDUVVONlF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMR2RDUVVGblFpeERRVUZETEZkQlFWY3NSVUZCUlR0M1FrRkRlRU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenR2UWtGRGRFSXNRMEZCUXl4RFFVRkRMRU5CUVVNN2IwSkJRMGdzVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNWVUZCVlN4RlFVRkZPM2RDUVVNNVF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRE8yOUNRVU4yUWl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRFRDeERRVUZETzFsQlEwZ3NRMEZCUXl4RFFVRkRPMWxCUlVZc1dVRkJXU3hEUVVGRExGTkJRVk1zUTBGQlF5eFJRVUZSTEVkQlFVYzdaMEpCUTJoRExFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1JVRkJSU3hGUVVGRkxFZEJRVWNzU1VGQlNTeERRVUZETEZkQlFWY3NSMEZCUnl4UFFVRlBMRU5CUVVNc1EwRkJRenRaUVVNNVJDeERRVUZETEVOQlFVTTdXVUZGUml4WlFVRlpMRU5CUVVNc1UwRkJVeXhEUVVGRExFMUJRVTBzUjBGQlJ6dG5Ra0ZET1VJc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJRenR2UWtGRGNFSXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF6dG5Ra0ZEZEVJc1EwRkJRenRuUWtGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0dlFrRkRUaXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMmRDUVVOeVFpeERRVUZETzFsQlEwZ3NRMEZCUXl4RFFVRkRPMWxCUlVZc1dVRkJXU3hEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVkQlFVYzdaMEpCUXpWQ0xFbEJRVWtzUzBGQlN5eERRVUZETzJkQ1FVTldMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJReXhEUVVGRE8yOUNRVU14UWl4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1owSkJRM1pETEVOQlFVTTdaMEpCUTBRc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVWQlFVVXNSVUZCUlN4SFFVRkhMRWxCUVVrc1EwRkJReXhYUVVGWExFZEJRVWNzVDBGQlR5eERRVUZETEVOQlFVTTdaMEpCUTNaRUxGRkJRVkVzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RlFVRkZMRVZCUVVVc1IwRkJSeXhKUVVGSkxFTkJRVU1zVjBGQlZ5eEhRVUZITEU5QlFVOHNRMEZCUXl4RFFVRkRPMmRDUVVOeVJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRXRCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVsQlFVa3NTVUZCU1N4RFFVRkRMRU5CUVVNc1EwRkJRenR2UWtGRGJFTXNTMEZCU3l4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRE8yZENRVU5xUWl4RFFVRkRPMmRDUVVORUxFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNN1owSkJRM0pDTEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc2FVSkJRV2xDTEVWQlFVVXNRMEZCUXp0WlFVTnNReXhEUVVGRExFTkJRVU03V1VGRlJpeFpRVUZaTEVOQlFVTXNVMEZCVXl4RFFVRkRMRXRCUVVzc1IwRkJSenRuUWtGRE4wSXNTVUZCU1N4TFFVRkxMRU5CUVVNN1owSkJRMVlzVjBGQlZ5eERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVc1JVRkJSU3hIUVVGSExFbEJRVWtzUTBGQlF5eFhRVUZYTEVkQlFVY3NUMEZCVHl4RFFVRkRMRU5CUVVNN1owSkJRekZFTEZkQlFWY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hGUVVGRkxFVkJRVVVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWMEZCVnl4SFFVRkhMRTlCUVU4c1EwRkJReXhEUVVGRE8yZENRVU40UkN4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETzJkQ1FVTjBRaXhGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEV0QlFVc3NSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFbEJRVWtzU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkRiRU1zUzBGQlN5eERRVUZETEU5QlFVOHNSVUZCUlN4RFFVRkRPMmRDUVVOc1FpeERRVUZETzJkQ1FVTkVMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zYVVKQlFXbENMRVZCUVVVc1EwRkJRenRaUVVOc1F5eERRVUZETEVOQlFVTTdXVUZGUml4TlFVRk5MRU5CUVVNc1dVRkJXU3hEUVVGRE8xRkJSWFJDTEVOQlFVTXNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRE8xRkJRMW9zVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXp0SlFVTmtMRU5CUVVNc1EwRkJRenRKUVVWR0xFMUJRVTBzUTBGQlF5eEpRVUZKTEVkQlFVY3NZVUZCWVN4RlFVRkZMRU5CUVVNN1NVRkZPVUlzVVVGQlVTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExHdENRVUZyUWl4RlFVRkZPMUZCUXpWRExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNhVUpCUVdsQ0xFVkJRVVVzUTBGQlF6dEpRVU5zUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVWTUxFTkJRVU1zUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReUlzSW1acGJHVWlPaUozZDNjdmNHRmphM012ZEdWMGFHVnlMMlJ2WTNNdmQyVnNZMjl0WlM5cWN5OWtjbTl3TG1weklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lLR1oxYm1OMGFXOXVLQ2tnZTF4dUlDQjJZWElnUlhabGJuUmxaQ3dnVFVsU1VrOVNYMEZVVkVGRFNDd2dZV1JrUTJ4aGMzTXNJR0ZzYkVSeWIzQnpMQ0JqYkdsamEwVjJaVzUwTENCamNtVmhkR1ZEYjI1MFpYaDBMQ0JsZUhSbGJtUXNJR2hoYzBOc1lYTnpMQ0J5WlcxdmRtVkRiR0Z6Y3l3Z2MyOXlkRUYwZEdGamFDd2dkRzkxWTJoRVpYWnBZMlVzSUY5eVpXWXNYRzRnSUNBZ1gxOW9ZWE5RY205d0lEMGdlMzB1YUdGelQzZHVVSEp2Y0dWeWRIa3NYRzRnSUNBZ1gxOWxlSFJsYm1SeklEMGdablZ1WTNScGIyNG9ZMmhwYkdRc0lIQmhjbVZ1ZENrZ2V5Qm1iM0lnS0haaGNpQnJaWGtnYVc0Z2NHRnlaVzUwS1NCN0lHbG1JQ2hmWDJoaGMxQnliM0F1WTJGc2JDaHdZWEpsYm5Rc0lHdGxlU2twSUdOb2FXeGtXMnRsZVYwZ1BTQndZWEpsYm5SYmEyVjVYVHNnZlNCbWRXNWpkR2x2YmlCamRHOXlLQ2tnZXlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5SUQwZ1kyaHBiR1E3SUgwZ1kzUnZjaTV3Y205MGIzUjVjR1VnUFNCd1lYSmxiblF1Y0hKdmRHOTBlWEJsT3lCamFHbHNaQzV3Y205MGIzUjVjR1VnUFNCdVpYY2dZM1J2Y2lncE95QmphR2xzWkM1ZlgzTjFjR1Z5WDE4Z1BTQndZWEpsYm5RdWNISnZkRzkwZVhCbE95QnlaWFIxY200Z1kyaHBiR1E3SUgwc1hHNGdJQ0FnWDE5cGJtUmxlRTltSUQwZ1cxMHVhVzVrWlhoUFppQjhmQ0JtZFc1amRHbHZiaWhwZEdWdEtTQjdJR1p2Y2lBb2RtRnlJR2tnUFNBd0xDQnNJRDBnZEdocGN5NXNaVzVuZEdnN0lHa2dQQ0JzT3lCcEt5c3BJSHNnYVdZZ0tHa2dhVzRnZEdocGN5QW1KaUIwYUdselcybGRJRDA5UFNCcGRHVnRLU0J5WlhSMWNtNGdhVHNnZlNCeVpYUjFjbTRnTFRFN0lIMDdYRzVjYmlBZ1gzSmxaaUE5SUZSbGRHaGxjaTVWZEdsc2N5d2daWGgwWlc1a0lEMGdYM0psWmk1bGVIUmxibVFzSUdGa1pFTnNZWE56SUQwZ1gzSmxaaTVoWkdSRGJHRnpjeXdnY21WdGIzWmxRMnhoYzNNZ1BTQmZjbVZtTG5KbGJXOTJaVU5zWVhOekxDQm9ZWE5EYkdGemN5QTlJRjl5WldZdWFHRnpRMnhoYzNNc0lFVjJaVzUwWldRZ1BTQmZjbVZtTGtWMlpXNTBaV1E3WEc1Y2JpQWdkRzkxWTJoRVpYWnBZMlVnUFNBbmIyNTBiM1ZqYUhOMFlYSjBKeUJwYmlCa2IyTjFiV1Z1ZEM1a2IyTjFiV1Z1ZEVWc1pXMWxiblE3WEc1Y2JpQWdZMnhwWTJ0RmRtVnVkQ0E5SUhSdmRXTm9SR1YyYVdObElEOGdKM1J2ZFdOb2MzUmhjblFuSURvZ0oyTnNhV05ySnp0Y2JseHVJQ0J6YjNKMFFYUjBZV05vSUQwZ1puVnVZM1JwYjI0b2MzUnlLU0I3WEc0Z0lDQWdkbUZ5SUdacGNuTjBMQ0J6WldOdmJtUXNJRjl5WldZeExDQmZjbVZtTWp0Y2JpQWdJQ0JmY21WbU1TQTlJSE4wY2k1emNHeHBkQ2duSUNjcExDQm1hWEp6ZENBOUlGOXlaV1l4V3pCZExDQnpaV052Ym1RZ1BTQmZjbVZtTVZzeFhUdGNiaUFnSUNCcFppQW9abWx5YzNRZ1BUMDlJQ2RzWldaMEp5QjhmQ0JtYVhKemRDQTlQVDBnSjNKcFoyaDBKeWtnZTF4dUlDQWdJQ0FnWDNKbFpqSWdQU0JiYzJWamIyNWtMQ0JtYVhKemRGMHNJR1pwY25OMElEMGdYM0psWmpKYk1GMHNJSE5sWTI5dVpDQTlJRjl5WldZeVd6RmRPMXh1SUNBZ0lIMWNiaUFnSUNCeVpYUjFjbTRnVzJacGNuTjBMQ0J6WldOdmJtUmRMbXB2YVc0b0p5QW5LVHRjYmlBZ2ZUdGNibHh1SUNCTlNWSlNUMUpmUVZSVVFVTklJRDBnZTF4dUlDQWdJR3hsWm5RNklDZHlhV2RvZENjc1hHNGdJQ0FnY21sbmFIUTZJQ2RzWldaMEp5eGNiaUFnSUNCMGIzQTZJQ2RpYjNSMGIyMG5MRnh1SUNBZ0lHSnZkSFJ2YlRvZ0ozUnZjQ2NzWEc0Z0lDQWdiV2xrWkd4bE9pQW5iV2xrWkd4bEp5eGNiaUFnSUNCalpXNTBaWEk2SUNkalpXNTBaWEluWEc0Z0lIMDdYRzVjYmlBZ1lXeHNSSEp2Y0hNZ1BTQjdmVHRjYmx4dUlDQmpjbVZoZEdWRGIyNTBaWGgwSUQwZ1puVnVZM1JwYjI0b2IzQjBhVzl1Y3lrZ2UxeHVJQ0FnSUhaaGNpQkVjbTl3U1c1emRHRnVZMlVzSUdSbFptRjFiSFJQY0hScGIyNXpMQ0JrY205d0xDQmZibUZ0WlR0Y2JpQWdJQ0JwWmlBb2IzQjBhVzl1Y3lBOVBTQnVkV3hzS1NCN1hHNGdJQ0FnSUNCdmNIUnBiMjV6SUQwZ2UzMDdYRzRnSUNBZ2ZWeHVJQ0FnSUdSeWIzQWdQU0JtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUFvWm5WdVkzUnBiMjRvWm5WdVl5d2dZWEpuY3l3Z1kzUnZjaWtnZTF4dUlDQWdJQ0FnSUNCamRHOXlMbkJ5YjNSdmRIbHdaU0E5SUdaMWJtTXVjSEp2ZEc5MGVYQmxPMXh1SUNBZ0lDQWdJQ0IyWVhJZ1kyaHBiR1FnUFNCdVpYY2dZM1J2Y2l3Z2NtVnpkV3gwSUQwZ1puVnVZeTVoY0hCc2VTaGphR2xzWkN3Z1lYSm5jeWs3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJQWW1wbFkzUW9jbVZ6ZFd4MEtTQTlQVDBnY21WemRXeDBJRDhnY21WemRXeDBJRG9nWTJocGJHUTdYRzRnSUNBZ0lDQjlLU2hFY205d1NXNXpkR0Z1WTJVc0lHRnlaM1Z0Wlc1MGN5d2dablZ1WTNScGIyNG9LWHQ5S1R0Y2JpQWdJQ0I5TzF4dUlDQWdJR1Y0ZEdWdVpDaGtjbTl3TENCN1hHNGdJQ0FnSUNCamNtVmhkR1ZEYjI1MFpYaDBPaUJqY21WaGRHVkRiMjUwWlhoMExGeHVJQ0FnSUNBZ1pISnZjSE02SUZ0ZExGeHVJQ0FnSUNBZ1pHVm1ZWFZzZEhNNklIdDlYRzRnSUNBZ2ZTazdYRzRnSUNBZ1pHVm1ZWFZzZEU5d2RHbHZibk1nUFNCN1hHNGdJQ0FnSUNCamJHRnpjMUJ5WldacGVEb2dKMlJ5YjNBbkxGeHVJQ0FnSUNBZ1pHVm1ZWFZzZEhNNklIdGNiaUFnSUNBZ0lDQWdZWFIwWVdOb09pQW5ZbTkwZEc5dElHeGxablFuTEZ4dUlDQWdJQ0FnSUNCdmNHVnVUMjQ2SUNkamJHbGpheWNzWEc0Z0lDQWdJQ0FnSUdOdmJuTjBjbUZwYmxSdlUyTnliMnhzVUdGeVpXNTBPaUIwY25WbExGeHVJQ0FnSUNBZ0lDQmpiMjV6ZEhKaGFXNVViMWRwYm1SdmR6b2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ1kyeGhjM05sY3pvZ0p5Y3NYRzRnSUNBZ0lDQWdJSFJsZEdobGNrOXdkR2x2Ym5NNklIdDlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZUdGNiaUFnSUNCbGVIUmxibVFvWkhKdmNDd2daR1ZtWVhWc2RFOXdkR2x2Ym5Nc0lHOXdkR2x2Ym5NcE8xeHVJQ0FnSUdWNGRHVnVaQ2hrY205d0xtUmxabUYxYkhSekxDQmtaV1poZFd4MFQzQjBhVzl1Y3k1a1pXWmhkV3gwY3l3Z2IzQjBhVzl1Y3k1a1pXWmhkV3gwY3lrN1hHNGdJQ0FnYVdZZ0tHRnNiRVJ5YjNCelcxOXVZVzFsSUQwZ1pISnZjQzVqYkdGemMxQnlaV1pwZUYwZ1BUMGdiblZzYkNrZ2UxeHVJQ0FnSUNBZ1lXeHNSSEp2Y0hOYlgyNWhiV1ZkSUQwZ1cxMDdYRzRnSUNBZ2ZWeHVJQ0FnSUdSeWIzQXVkWEJrWVhSbFFtOWtlVU5zWVhOelpYTWdQU0JtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUhaaGNpQmhibmxQY0dWdUxDQmZaSEp2Y0N3Z1gya3NJRjlzWlc0c0lGOXlaV1l4TzF4dUlDQWdJQ0FnWVc1NVQzQmxiaUE5SUdaaGJITmxPMXh1SUNBZ0lDQWdYM0psWmpFZ1BTQmhiR3hFY205d2MxdGtjbTl3TG1Oc1lYTnpVSEpsWm1sNFhUdGNiaUFnSUNBZ0lHWnZjaUFvWDJrZ1BTQXdMQ0JmYkdWdUlEMGdYM0psWmpFdWJHVnVaM1JvT3lCZmFTQThJRjlzWlc0N0lGOXBLeXNwSUh0Y2JpQWdJQ0FnSUNBZ1gyUnliM0FnUFNCZmNtVm1NVnRmYVYwN1hHNGdJQ0FnSUNBZ0lHbG1JQ2doS0Y5a2NtOXdMbWx6VDNCbGJtVmtLQ2twS1NCN1hHNGdJQ0FnSUNBZ0lDQWdZMjl1ZEdsdWRXVTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnWVc1NVQzQmxiaUE5SUhSeWRXVTdYRzRnSUNBZ0lDQWdJR0p5WldGck8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2FXWWdLR0Z1ZVU5d1pXNHBJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR0ZrWkVOc1lYTnpLR1J2WTNWdFpXNTBMbUp2Wkhrc0lGd2lYQ0lnS3lCa2NtOXdMbU5zWVhOelVISmxabWw0SUNzZ1hDSXRiM0JsYmx3aUtUdGNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCeVpXMXZkbVZEYkdGemN5aGtiMk4xYldWdWRDNWliMlI1TENCY0lsd2lJQ3NnWkhKdmNDNWpiR0Z6YzFCeVpXWnBlQ0FySUZ3aUxXOXdaVzVjSWlrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlR0Y2JpQWdJQ0JFY205d1NXNXpkR0Z1WTJVZ1BTQW9ablZ1WTNScGIyNG9YM04xY0dWeUtTQjdYRzRnSUNBZ0lDQmZYMlY0ZEdWdVpITW9SSEp2Y0VsdWMzUmhibU5sTENCZmMzVndaWElwTzF4dVhHNGdJQ0FnSUNCbWRXNWpkR2x2YmlCRWNtOXdTVzV6ZEdGdVkyVW9iM0IwYVc5dWN5a2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxtOXdkR2x2Ym5NZ1BTQnZjSFJwYjI1ek8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG05d2RHbHZibk1nUFNCbGVIUmxibVFvZTMwc0lHUnliM0F1WkdWbVlYVnNkSE1zSUhSb2FYTXViM0IwYVc5dWN5azdYRzRnSUNBZ0lDQWdJSFJvYVhNdWRHRnlaMlYwSUQwZ2RHaHBjeTV2Y0hScGIyNXpMblJoY21kbGREdGNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVkR0Z5WjJWMElEMDlJRzUxYkd3cElIdGNiaUFnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9KMFJ5YjNBZ1JYSnliM0k2SUZsdmRTQnRkWE4wSUhCeWIzWnBaR1VnWVNCMFlYSm5aWFF1SnlrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdaSEp2Y0M1a2NtOXdjeTV3ZFhOb0tIUm9hWE1wTzF4dUlDQWdJQ0FnSUNCaGJHeEVjbTl3YzF0a2NtOXdMbU5zWVhOelVISmxabWw0WFM1d2RYTm9LSFJvYVhNcE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRIVndSV3hsYldWdWRITW9LVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXpaWFIxY0VWMlpXNTBjeWdwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbk5sZEhWd1ZHVjBhR1Z5S0NrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lFUnliM0JKYm5OMFlXNWpaUzV3Y205MGIzUjVjR1V1YzJWMGRYQkZiR1Z0Wlc1MGN5QTlJR1oxYm1OMGFXOXVLQ2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbVJ5YjNBZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0Nka2FYWW5LVHRjYmlBZ0lDQWdJQ0FnWVdSa1EyeGhjM01vZEdocGN5NWtjbTl3TENCa2NtOXdMbU5zWVhOelVISmxabWw0S1R0Y2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWIzQjBhVzl1Y3k1amJHRnpjMlZ6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdZV1JrUTJ4aGMzTW9kR2hwY3k1a2NtOXdMQ0IwYUdsekxtOXdkR2x2Ym5NdVkyeGhjM05sY3lrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdkR2hwY3k1a2NtOXdRMjl1ZEdWdWRDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0oyUnBkaWNwTzF4dUlDQWdJQ0FnSUNCaFpHUkRiR0Z6Y3loMGFHbHpMbVJ5YjNCRGIyNTBaVzUwTENCY0lsd2lJQ3NnWkhKdmNDNWpiR0Z6YzFCeVpXWnBlQ0FySUZ3aUxXTnZiblJsYm5SY0lpazdYRzRnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnZEdocGN5NXZjSFJwYjI1ekxtTnZiblJsYm5RZ1BUMDlJQ2R2WW1wbFkzUW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ2RHaHBjeTVrY205d1EyOXVkR1Z1ZEM1aGNIQmxibVJEYUdsc1pDaDBhR2x6TG05d2RHbHZibk11WTI5dWRHVnVkQ2s3WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ2RHaHBjeTVrY205d1EyOXVkR1Z1ZEM1cGJtNWxja2hVVFV3Z1BTQjBhR2x6TG05d2RHbHZibk11WTI5dWRHVnVkRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtjbTl3TG1Gd2NHVnVaRU5vYVd4a0tIUm9hWE11WkhKdmNFTnZiblJsYm5RcE8xeHVJQ0FnSUNBZ2ZUdGNibHh1SUNBZ0lDQWdSSEp2Y0VsdWMzUmhibU5sTG5CeWIzUnZkSGx3WlM1elpYUjFjRlJsZEdobGNpQTlJR1oxYm1OMGFXOXVLQ2tnZTF4dUlDQWdJQ0FnSUNCMllYSWdZMjl1YzNSeVlXbHVkSE1zSUdSeWIzQkJkSFJoWTJnN1hHNGdJQ0FnSUNBZ0lHUnliM0JCZEhSaFkyZ2dQU0IwYUdsekxtOXdkR2x2Ym5NdWNHOXphWFJwYjI0dWMzQnNhWFFvSnlBbktUdGNiaUFnSUNBZ0lDQWdaSEp2Y0VGMGRHRmphRnN3WFNBOUlFMUpVbEpQVWw5QlZGUkJRMGhiWkhKdmNFRjBkR0ZqYUZzd1hWMDdYRzRnSUNBZ0lDQWdJR1J5YjNCQmRIUmhZMmdnUFNCa2NtOXdRWFIwWVdOb0xtcHZhVzRvSnlBbktUdGNiaUFnSUNBZ0lDQWdZMjl1YzNSeVlXbHVkSE1nUFNCYlhUdGNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXViM0IwYVc5dWN5NWpiMjV6ZEhKaGFXNVViMU5qY205c2JGQmhjbVZ1ZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJR052Ym5OMGNtRnBiblJ6TG5CMWMyZ29lMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHODZJQ2R6WTNKdmJHeFFZWEpsYm5RbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnY0dsdU9pQW5kRzl3TENCaWIzUjBiMjBuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdZWFIwWVdOb2JXVnVkRG9nSjNSdloyVjBhR1Z5SUc1dmJtVW5YRzRnSUNBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXViM0IwYVc5dWN5NWpiMjV6ZEhKaGFXNVViMWRwYm1SdmR5QWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJQ0FnSUNCamIyNXpkSEpoYVc1MGN5NXdkWE5vS0h0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ2T2lBbmQybHVaRzkzSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJwYmpvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHRjBkR0ZqYUcxbGJuUTZJQ2QwYjJkbGRHaGxjaWRjYmlBZ0lDQWdJQ0FnSUNCOUtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0JqYjI1emRISmhhVzUwY3k1d2RYTm9LSHRjYmlBZ0lDQWdJQ0FnSUNCMGJ6b2dKM05qY205c2JGQmhjbVZ1ZENkY2JpQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJRzl3ZEdsdmJuTWdQU0I3WEc0Z0lDQWdJQ0FnSUNBZ1pXeGxiV1Z1ZERvZ2RHaHBjeTVrY205d0xGeHVJQ0FnSUNBZ0lDQWdJSFJoY21kbGREb2dkR2hwY3k1MFlYSm5aWFFzWEc0Z0lDQWdJQ0FnSUNBZ1lYUjBZV05vYldWdWREb2djMjl5ZEVGMGRHRmphQ2hrY205d1FYUjBZV05vS1N4Y2JpQWdJQ0FnSUNBZ0lDQjBZWEpuWlhSQmRIUmhZMmh0Wlc1ME9pQnpiM0owUVhSMFlXTm9LSFJvYVhNdWIzQjBhVzl1Y3k1d2IzTnBkR2x2Ymlrc1hHNGdJQ0FnSUNBZ0lDQWdZMnhoYzNOUWNtVm1hWGc2SUdSeWIzQXVZMnhoYzNOUWNtVm1hWGdzWEc0Z0lDQWdJQ0FnSUNBZ2IyWm1jMlYwT2lBbk1DQXdKeXhjYmlBZ0lDQWdJQ0FnSUNCMFlYSm5aWFJQWm1aelpYUTZJQ2N3SURBbkxGeHVJQ0FnSUNBZ0lDQWdJR1Z1WVdKc1pXUTZJR1poYkhObExGeHVJQ0FnSUNBZ0lDQWdJR052Ym5OMGNtRnBiblJ6T2lCamIyNXpkSEpoYVc1MGMxeHVJQ0FnSUNBZ0lDQjlPMXh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTV2Y0hScGIyNXpMblJsZEdobGNpQWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTBaWFJvWlhJZ1BTQnVaWGNnVkdWMGFHVnlLR1Y0ZEdWdVpDaDdmU3dnYjNCMGFXOXVjeXdnZEdocGN5NXZjSFJwYjI1ekxuUmxkR2hsY2lrcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlPMXh1WEc0Z0lDQWdJQ0JFY205d1NXNXpkR0Z1WTJVdWNISnZkRzkwZVhCbExuTmxkSFZ3UlhabGJuUnpJRDBnWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnSUNBZ0lIWmhjaUJsZG1WdWRITXNYRzRnSUNBZ0lDQWdJQ0FnWDNSb2FYTWdQU0IwYUdsek8xeHVJQ0FnSUNBZ0lDQnBaaUFvSVhSb2FYTXViM0IwYVc5dWN5NXZjR1Z1VDI0cElIdGNiaUFnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnWlhabGJuUnpJRDBnZEdocGN5NXZjSFJwYjI1ekxtOXdaVzVQYmk1emNHeHBkQ2duSUNjcE8xeHVJQ0FnSUNBZ0lDQnBaaUFvWDE5cGJtUmxlRTltTG1OaGJHd29aWFpsYm5SekxDQW5ZMnhwWTJzbktTQStQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdkR2hwY3k1MFlYSm5aWFF1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWhqYkdsamEwVjJaVzUwTENCbWRXNWpkR2x2YmlncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJmZEdocGN5NTBiMmRuYkdVb0tUdGNiaUFnSUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ0lDQmtiMk4xYldWdWRDNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtHTnNhV05yUlhabGJuUXNJR1oxYm1OMGFXOXVLR1YyWlc1MEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JVjkwYUdsekxtbHpUM0JsYm1Wa0tDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dWMlpXNTBMblJoY21kbGRDQTlQVDBnWDNSb2FYTXVaSEp2Y0NCOGZDQmZkR2hwY3k1a2NtOXdMbU52Ym5SaGFXNXpLR1YyWlc1MExuUmhjbWRsZENrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1YyWlc1MExuUmhjbWRsZENBOVBUMGdYM1JvYVhNdWRHRnlaMlYwSUh4OElGOTBhR2x6TG5SaGNtZGxkQzVqYjI1MFlXbHVjeWhsZG1WdWRDNTBZWEpuWlhRcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCZmRHaHBjeTVqYkc5elpTZ3BPMXh1SUNBZ0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR2xtSUNoZlgybHVaR1Y0VDJZdVkyRnNiQ2hsZG1WdWRITXNJQ2RvYjNabGNpY3BJRDQ5SURBcElIdGNiaUFnSUNBZ0lDQWdJQ0IwYUdsekxuUmhjbWRsZEM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkdGIzVnpaVzkyWlhJbkxDQm1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCZmRHaHBjeTV2Y0dWdUtDazdYRzRnSUNBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZEdGeVoyVjBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMjF2ZFhObGIzVjBKeXdnWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdYM1JvYVhNdVkyeHZjMlVvS1R0Y2JpQWdJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlR0Y2JseHVJQ0FnSUNBZ1JISnZjRWx1YzNSaGJtTmxMbkJ5YjNSdmRIbHdaUzVwYzA5d1pXNWxaQ0E5SUdaMWJtTjBhVzl1S0NrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2FHRnpRMnhoYzNNb2RHaHBjeTVrY205d0xDQmNJbHdpSUNzZ1pISnZjQzVqYkdGemMxQnlaV1pwZUNBcklGd2lMVzl3Wlc1Y0lpazdYRzRnSUNBZ0lDQjlPMXh1WEc0Z0lDQWdJQ0JFY205d1NXNXpkR0Z1WTJVdWNISnZkRzkwZVhCbExuUnZaMmRzWlNBOUlHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVwYzA5d1pXNWxaQ2dwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJ4dmMyVW9LVHRjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXZjR1Z1S0NrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMDdYRzVjYmlBZ0lDQWdJRVJ5YjNCSmJuTjBZVzVqWlM1d2NtOTBiM1I1Y0dVdWIzQmxiaUE5SUdaMWJtTjBhVzl1S0NrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnWDNKbFpqRTdYRzRnSUNBZ0lDQWdJR2xtSUNnaGRHaHBjeTVrY205d0xuQmhjbVZ1ZEU1dlpHVXBJSHRjYmlBZ0lDQWdJQ0FnSUNCa2IyTjFiV1Z1ZEM1aWIyUjVMbUZ3Y0dWdVpFTm9hV3hrS0hSb2FYTXVaSEp2Y0NrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdZV1JrUTJ4aGMzTW9kR2hwY3k1MFlYSm5aWFFzSUZ3aVhDSWdLeUJrY205d0xtTnNZWE56VUhKbFptbDRJQ3NnWENJdGIzQmxibHdpS1R0Y2JpQWdJQ0FnSUNBZ1lXUmtRMnhoYzNNb2RHaHBjeTVrY205d0xDQmNJbHdpSUNzZ1pISnZjQzVqYkdGemMxQnlaV1pwZUNBcklGd2lMVzl3Wlc1Y0lpazdYRzRnSUNBZ0lDQWdJR2xtSUNnb1gzSmxaakVnUFNCMGFHbHpMblJsZEdobGNpa2dJVDBnYm5Wc2JDa2dlMXh1SUNBZ0lDQWdJQ0FnSUY5eVpXWXhMbVZ1WVdKc1pTZ3BPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkSEpwWjJkbGNpZ25iM0JsYmljcE8xeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1pISnZjQzUxY0dSaGRHVkNiMlI1UTJ4aGMzTmxjeWdwTzF4dUlDQWdJQ0FnZlR0Y2JseHVJQ0FnSUNBZ1JISnZjRWx1YzNSaGJtTmxMbkJ5YjNSdmRIbHdaUzVqYkc5elpTQTlJR1oxYm1OMGFXOXVLQ2tnZTF4dUlDQWdJQ0FnSUNCMllYSWdYM0psWmpFN1hHNGdJQ0FnSUNBZ0lISmxiVzkyWlVOc1lYTnpLSFJvYVhNdWRHRnlaMlYwTENCY0lsd2lJQ3NnWkhKdmNDNWpiR0Z6YzFCeVpXWnBlQ0FySUZ3aUxXOXdaVzVjSWlrN1hHNGdJQ0FnSUNBZ0lISmxiVzkyWlVOc1lYTnpLSFJvYVhNdVpISnZjQ3dnWENKY0lpQXJJR1J5YjNBdVkyeGhjM05RY21WbWFYZ2dLeUJjSWkxdmNHVnVYQ0lwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMblJ5YVdkblpYSW9KMk5zYjNObEp5azdYRzRnSUNBZ0lDQWdJR2xtSUNnb1gzSmxaakVnUFNCMGFHbHpMblJsZEdobGNpa2dJVDBnYm5Wc2JDa2dlMXh1SUNBZ0lDQWdJQ0FnSUY5eVpXWXhMbVJwYzJGaWJHVW9LVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWkhKdmNDNTFjR1JoZEdWQ2IyUjVRMnhoYzNObGN5Z3BPMXh1SUNBZ0lDQWdmVHRjYmx4dUlDQWdJQ0FnY21WMGRYSnVJRVJ5YjNCSmJuTjBZVzVqWlR0Y2JseHVJQ0FnSUgwcEtFVjJaVzUwWldRcE8xeHVJQ0FnSUhKbGRIVnliaUJrY205d08xeHVJQ0I5TzF4dVhHNGdJSGRwYm1SdmR5NUVjbTl3SUQwZ1kzSmxZWFJsUTI5dWRHVjRkQ2dwTzF4dVhHNGdJR1J2WTNWdFpXNTBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMFJQVFVOdmJuUmxiblJNYjJGa1pXUW5MQ0JtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdSSEp2Y0M1MWNHUmhkR1ZDYjJSNVEyeGhjM05sY3lncE8xeHVJQ0I5S1R0Y2JseHVmU2t1WTJGc2JDaDBhR2x6S1RzaVhYMD1cbiJdfQ==
