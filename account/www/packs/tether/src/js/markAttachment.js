/* globals Tether */
Tether.modules.push({
    initialize: function () {
        var _this = this;
        this.markers = {};
        ['target', 'element'].forEach(function (type) {
            var el = document.createElement('div');
            el.className = _this.getClass(type + "-marker");
            var dot = document.createElement('div');
            dot.className = _this.getClass('marker-dot');
            el.appendChild(dot);
            _this[type].appendChild(el);
            _this.markers[type] = { dot: dot, el: el };
        });
    },
    position: function (_b) {
        var manualOffset = _b.manualOffset, manualTargetOffset = _b.manualTargetOffset;
        var offsets = {
            element: manualOffset,
            target: manualTargetOffset
        };
        for (var type in offsets) {
            var offset = offsets[type];
            for (var side in offset) {
                var val = offset[side];
                var notString = typeof val !== 'string';
                if (notString ||
                    val.indexOf('%') === -1 &&
                        val.indexOf('px') === -1) {
                    val += 'px';
                }
                if (this.markers[type].dot.style[side] !== val) {
                    this.markers[type].dot.style[side] = val;
                }
            }
        }
        return true;
    }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy90ZXRoZXIvc3JjL2pzL21hcmtBdHRhY2htZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUVwQixNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUNsQixVQUFVO1FBQVYsaUJBZUM7UUFkQyxJQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUVsQixDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxJQUFJO1lBQ2hDLElBQU0sRUFBRSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDekMsRUFBRSxDQUFDLFNBQVMsR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFLLElBQUksWUFBVSxDQUFDLENBQUM7WUFFakQsSUFBTSxHQUFHLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMxQyxHQUFHLENBQUMsU0FBUyxHQUFHLEtBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDNUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUVwQixLQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBRTNCLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBQyxHQUFHLEtBQUEsRUFBRSxFQUFFLElBQUEsRUFBQyxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFFBQVEsWUFBQyxFQUFrQztZQUFqQyw4QkFBWSxFQUFFLDBDQUFrQjtRQUN4QyxJQUFNLE9BQU8sR0FBRztZQUNkLE9BQU8sRUFBRSxZQUFZO1lBQ3JCLE1BQU0sRUFBRSxrQkFBa0I7U0FDM0IsQ0FBQztRQUVGLEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDekIsSUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzdCLEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUM7Z0JBQ3hCLElBQUksR0FBRyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDdkIsSUFBTSxTQUFTLEdBQUcsT0FBTyxHQUFHLEtBQUssUUFBUSxDQUFDO2dCQUMxQyxFQUFFLENBQUMsQ0FBQyxTQUFTO29CQUNULEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO3dCQUN2QixHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDN0IsR0FBRyxJQUFJLElBQUksQ0FBQztnQkFDZCxDQUFDO2dCQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO29CQUMvQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDO2dCQUMzQyxDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUM7UUFFRCxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGLENBQUMsQ0FBQyIsImZpbGUiOiJ3d3cvcGFja3MvdGV0aGVyL3NyYy9qcy9tYXJrQXR0YWNobWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgVGV0aGVyICovXG5cblRldGhlci5tb2R1bGVzLnB1c2goe1xuICBpbml0aWFsaXplKCkge1xuICAgIHRoaXMubWFya2VycyA9IHt9O1xuXG4gICAgWyd0YXJnZXQnLCAnZWxlbWVudCddLmZvckVhY2godHlwZSA9PiB7XG4gICAgICBjb25zdCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgZWwuY2xhc3NOYW1lID0gdGhpcy5nZXRDbGFzcyhgJHsgdHlwZSB9LW1hcmtlcmApO1xuXG4gICAgICBjb25zdCBkb3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGRvdC5jbGFzc05hbWUgPSB0aGlzLmdldENsYXNzKCdtYXJrZXItZG90Jyk7XG4gICAgICBlbC5hcHBlbmRDaGlsZChkb3QpO1xuXG4gICAgICB0aGlzW3R5cGVdLmFwcGVuZENoaWxkKGVsKTtcblxuICAgICAgdGhpcy5tYXJrZXJzW3R5cGVdID0ge2RvdCwgZWx9O1xuICAgIH0pO1xuICB9LFxuXG4gIHBvc2l0aW9uKHttYW51YWxPZmZzZXQsIG1hbnVhbFRhcmdldE9mZnNldH0pIHtcbiAgICBjb25zdCBvZmZzZXRzID0ge1xuICAgICAgZWxlbWVudDogbWFudWFsT2Zmc2V0LFxuICAgICAgdGFyZ2V0OiBtYW51YWxUYXJnZXRPZmZzZXRcbiAgICB9O1xuXG4gICAgZm9yIChsZXQgdHlwZSBpbiBvZmZzZXRzKSB7XG4gICAgICBjb25zdCBvZmZzZXQgPSBvZmZzZXRzW3R5cGVdO1xuICAgICAgZm9yIChsZXQgc2lkZSBpbiBvZmZzZXQpIHtcbiAgICAgICAgbGV0IHZhbCA9IG9mZnNldFtzaWRlXTtcbiAgICAgICAgY29uc3Qgbm90U3RyaW5nID0gdHlwZW9mIHZhbCAhPT0gJ3N0cmluZyc7XG4gICAgICAgIGlmIChub3RTdHJpbmcgfHxcbiAgICAgICAgICAgIHZhbC5pbmRleE9mKCclJykgPT09IC0xICYmXG4gICAgICAgICAgICB2YWwuaW5kZXhPZigncHgnKSA9PT0gLTEpIHtcbiAgICAgICAgICB2YWwgKz0gJ3B4JztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLm1hcmtlcnNbdHlwZV0uZG90LnN0eWxlW3NpZGVdICE9PSB2YWwpIHtcbiAgICAgICAgICB0aGlzLm1hcmtlcnNbdHlwZV0uZG90LnN0eWxlW3NpZGVdID0gdmFsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn0pO1xuIl19

//# sourceMappingURL=data:application/json;charset=utf8;base64,
