var del = require('del');
var gulp = require('gulp');
var babel = require('gulp-babel');
var bump = require('gulp-bump');
var concat = require('gulp-concat');
var header = require('gulp-header');
var minify = require('gulp-minify-css');
var plumber = require('gulp-plumber');
var prefixer = require('gulp-autoprefixer');
var rename = require('gulp-rename');
var uglify = require('gulp-uglify');
var sass = require('gulp-sass');
var umd = require('gulp-wrap-umd');
// Variables
var distDir = './dist';
var pkg = require('./package.json');
var banner = ['/*!', pkg.name, pkg.version, '*/\n'].join(' ');
var umdOptions = {
    exports: 'Tether',
    namespace: 'Tether'
};
// Clean
gulp.task('clean', function () {
    del.sync([distDir]);
});
// Javascript
gulp.task('js', function () {
    gulp.src([
        './src/js/utils.js',
        './src/js/tether.js',
        './src/js/constraint.js',
        './src/js/abutment.js',
        './src/js/shift.js'
    ])
        .pipe(plumber())
        .pipe(babel())
        .pipe(concat('tether.js'))
        .pipe(umd(umdOptions))
        .pipe(header(banner))
        .pipe(gulp.dest(distDir + '/js'))
        .pipe(uglify())
        .pipe(rename({ suffix: '.min' }))
        .pipe(gulp.dest(distDir + '/js'));
});
// CSS
gulp.task('css', function () {
    gulp.src('./src/css/**/*.sass')
        .pipe(plumber())
        .pipe(sass())
        .pipe(prefixer())
        .pipe(gulp.dest(distDir + '/css'))
        .pipe(minify())
        .pipe(rename({ suffix: '.min' }))
        .pipe(gulp.dest(distDir + '/css'));
});
// Version bump
var VERSIONS = ['patch', 'minor', 'major'];
for (var i = 0; i < VERSIONS.length; ++i) {
    (function (version) {
        gulp.task('version:' + version, function () {
            gulp.src(['package.json', 'bower.json', 'component.json'])
                .pipe(bump({ type: version }))
                .pipe(gulp.dest('.'));
        });
    })(VERSIONS[i]);
}
// Watch
gulp.task('watch', ['js', 'css'], function () {
    gulp.watch('./src/js/**/*', ['js']);
    gulp.watch('./src/css/**/*', ['css']);
});
// Defaults
gulp.task('build', ['js', 'css']);
gulp.task('default', ['build']);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy90ZXRoZXIvZ3VscGZpbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSSxHQUFHLEdBQVcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2pDLElBQUksSUFBSSxHQUFVLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNsQyxJQUFJLEtBQUssR0FBUyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDeEMsSUFBSSxJQUFJLEdBQVUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3ZDLElBQUksTUFBTSxHQUFRLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUN6QyxJQUFJLE1BQU0sR0FBUSxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDekMsSUFBSSxNQUFNLEdBQVEsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDN0MsSUFBSSxPQUFPLEdBQU8sT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQzFDLElBQUksUUFBUSxHQUFNLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQy9DLElBQUksTUFBTSxHQUFRLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUN6QyxJQUFJLE1BQU0sR0FBUSxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDekMsSUFBSSxJQUFJLEdBQVUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3ZDLElBQUksR0FBRyxHQUFXLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUUzQyxZQUFZO0FBQ1osSUFBSSxPQUFPLEdBQUcsUUFBUSxDQUFDO0FBQ3ZCLElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3BDLElBQUksTUFBTSxHQUFHLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDOUQsSUFBSSxVQUFVLEdBQUc7SUFDZixPQUFPLEVBQUUsUUFBUTtJQUNqQixTQUFTLEVBQUUsUUFBUTtDQUNwQixDQUFDO0FBR0YsUUFBUTtBQUNSLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO0lBQ2pCLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBQ3RCLENBQUMsQ0FBQyxDQUFDO0FBR0gsYUFBYTtBQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFO0lBQ2QsSUFBSSxDQUFDLEdBQUcsQ0FBQztRQUNQLG1CQUFtQjtRQUNuQixvQkFBb0I7UUFDcEIsd0JBQXdCO1FBQ3hCLHNCQUFzQjtRQUN0QixtQkFBbUI7S0FDcEIsQ0FBQztTQUNDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNmLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztTQUNiLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDekIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUNyQixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBR3BCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsQ0FBQztTQUdoQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7U0FDZCxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUMsTUFBTSxFQUFFLE1BQU0sRUFBQyxDQUFDLENBQUM7U0FDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7QUFDdEMsQ0FBQyxDQUFDLENBQUM7QUFHSCxNQUFNO0FBQ04sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUU7SUFDZixJQUFJLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDO1NBQzVCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNmLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNaLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUdoQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLENBQUM7U0FHakMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ2QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUMsQ0FBQyxDQUFDO1NBQzlCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ3ZDLENBQUMsQ0FBQyxDQUFDO0FBR0gsZUFBZTtBQUNmLElBQUksUUFBUSxHQUFHLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztBQUMzQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUMsQ0FBQztJQUN4QyxDQUFDLFVBQVMsT0FBTztRQUNmLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLE9BQU8sRUFBRTtZQUM5QixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsY0FBYyxFQUFFLFlBQVksRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO2lCQUN2RCxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7aUJBQzNCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsQixDQUFDO0FBR0QsUUFBUTtBQUNSLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxFQUFFO0lBQ2hDLElBQUksQ0FBQyxLQUFLLENBQUMsZUFBZSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNwQyxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUN4QyxDQUFDLENBQUMsQ0FBQztBQUdILFdBQVc7QUFDWCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQ2xDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJ3d3cvcGFja3MvdGV0aGVyL2d1bHBmaWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGRlbCAgICAgICAgID0gcmVxdWlyZSgnZGVsJyk7XG52YXIgZ3VscCAgICAgICAgPSByZXF1aXJlKCdndWxwJyk7XG52YXIgYmFiZWwgICAgICAgPSByZXF1aXJlKCdndWxwLWJhYmVsJyk7XG52YXIgYnVtcCAgICAgICAgPSByZXF1aXJlKCdndWxwLWJ1bXAnKTtcbnZhciBjb25jYXQgICAgICA9IHJlcXVpcmUoJ2d1bHAtY29uY2F0Jyk7XG52YXIgaGVhZGVyICAgICAgPSByZXF1aXJlKCdndWxwLWhlYWRlcicpO1xudmFyIG1pbmlmeSAgICAgID0gcmVxdWlyZSgnZ3VscC1taW5pZnktY3NzJyk7XG52YXIgcGx1bWJlciAgICAgPSByZXF1aXJlKCdndWxwLXBsdW1iZXInKTtcbnZhciBwcmVmaXhlciAgICA9IHJlcXVpcmUoJ2d1bHAtYXV0b3ByZWZpeGVyJyk7XG52YXIgcmVuYW1lICAgICAgPSByZXF1aXJlKCdndWxwLXJlbmFtZScpO1xudmFyIHVnbGlmeSAgICAgID0gcmVxdWlyZSgnZ3VscC11Z2xpZnknKTtcbnZhciBzYXNzICAgICAgICA9IHJlcXVpcmUoJ2d1bHAtc2FzcycpO1xudmFyIHVtZCAgICAgICAgID0gcmVxdWlyZSgnZ3VscC13cmFwLXVtZCcpO1xuXG4vLyBWYXJpYWJsZXNcbnZhciBkaXN0RGlyID0gJy4vZGlzdCc7XG52YXIgcGtnID0gcmVxdWlyZSgnLi9wYWNrYWdlLmpzb24nKTtcbnZhciBiYW5uZXIgPSBbJy8qIScsIHBrZy5uYW1lLCBwa2cudmVyc2lvbiwgJyovXFxuJ10uam9pbignICcpO1xudmFyIHVtZE9wdGlvbnMgPSB7XG4gIGV4cG9ydHM6ICdUZXRoZXInLFxuICBuYW1lc3BhY2U6ICdUZXRoZXInXG59O1xuXG5cbi8vIENsZWFuXG5ndWxwLnRhc2soJ2NsZWFuJywgZnVuY3Rpb24oKSB7XG4gIGRlbC5zeW5jKFtkaXN0RGlyXSk7XG59KTtcblxuXG4vLyBKYXZhc2NyaXB0XG5ndWxwLnRhc2soJ2pzJywgZnVuY3Rpb24oKSB7XG4gIGd1bHAuc3JjKFtcbiAgICAnLi9zcmMvanMvdXRpbHMuanMnLFxuICAgICcuL3NyYy9qcy90ZXRoZXIuanMnLFxuICAgICcuL3NyYy9qcy9jb25zdHJhaW50LmpzJyxcbiAgICAnLi9zcmMvanMvYWJ1dG1lbnQuanMnLFxuICAgICcuL3NyYy9qcy9zaGlmdC5qcydcbiAgXSlcbiAgICAucGlwZShwbHVtYmVyKCkpXG4gICAgLnBpcGUoYmFiZWwoKSlcbiAgICAucGlwZShjb25jYXQoJ3RldGhlci5qcycpKVxuICAgIC5waXBlKHVtZCh1bWRPcHRpb25zKSlcbiAgICAucGlwZShoZWFkZXIoYmFubmVyKSlcblxuICAgIC8vIE9yaWdpbmFsXG4gICAgLnBpcGUoZ3VscC5kZXN0KGRpc3REaXIgKyAnL2pzJykpXG5cbiAgICAvLyBNaW5pZmllZFxuICAgIC5waXBlKHVnbGlmeSgpKVxuICAgIC5waXBlKHJlbmFtZSh7c3VmZml4OiAnLm1pbid9KSlcbiAgICAucGlwZShndWxwLmRlc3QoZGlzdERpciArICcvanMnKSk7XG59KTtcblxuXG4vLyBDU1Ncbmd1bHAudGFzaygnY3NzJywgZnVuY3Rpb24oKSB7XG4gIGd1bHAuc3JjKCcuL3NyYy9jc3MvKiovKi5zYXNzJylcbiAgICAucGlwZShwbHVtYmVyKCkpXG4gICAgLnBpcGUoc2FzcygpKVxuICAgIC5waXBlKHByZWZpeGVyKCkpXG5cbiAgICAvLyBPcmlnaW5hbFxuICAgIC5waXBlKGd1bHAuZGVzdChkaXN0RGlyICsgJy9jc3MnKSlcblxuICAgIC8vIE1pbmlmaWVkXG4gICAgLnBpcGUobWluaWZ5KCkpXG4gICAgLnBpcGUocmVuYW1lKHtzdWZmaXg6ICcubWluJ30pKVxuICAgIC5waXBlKGd1bHAuZGVzdChkaXN0RGlyICsgJy9jc3MnKSk7XG59KTtcblxuXG4vLyBWZXJzaW9uIGJ1bXBcbnZhciBWRVJTSU9OUyA9IFsncGF0Y2gnLCAnbWlub3InLCAnbWFqb3InXTtcbmZvciAodmFyIGkgPSAwOyBpIDwgVkVSU0lPTlMubGVuZ3RoOyArK2kpe1xuICAoZnVuY3Rpb24odmVyc2lvbikge1xuICAgIGd1bHAudGFzaygndmVyc2lvbjonICsgdmVyc2lvbiwgZnVuY3Rpb24oKSB7XG4gICAgICBndWxwLnNyYyhbJ3BhY2thZ2UuanNvbicsICdib3dlci5qc29uJywgJ2NvbXBvbmVudC5qc29uJ10pXG4gICAgICAgIC5waXBlKGJ1bXAoe3R5cGU6IHZlcnNpb259KSlcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KCcuJykpO1xuICAgIH0pO1xuICB9KShWRVJTSU9OU1tpXSk7XG59XG5cblxuLy8gV2F0Y2hcbmd1bHAudGFzaygnd2F0Y2gnLCBbJ2pzJywgJ2NzcyddLCBmdW5jdGlvbigpIHtcbiAgZ3VscC53YXRjaCgnLi9zcmMvanMvKiovKicsIFsnanMnXSk7XG4gIGd1bHAud2F0Y2goJy4vc3JjL2Nzcy8qKi8qJywgWydjc3MnXSk7XG59KTtcblxuXG4vLyBEZWZhdWx0c1xuZ3VscC50YXNrKCdidWlsZCcsIFsnanMnLCAnY3NzJ10pO1xuZ3VscC50YXNrKCdkZWZhdWx0JywgWydidWlsZCddKTtcblxuIl19

//# sourceMappingURL=data:application/json;charset=utf8;base64,
