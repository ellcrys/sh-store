define([
    "./core",
    "./core/nodeName"
], function (jQuery, nodeName) {
    "use strict";
    jQuery.fn.extend({
        bind: function (types, data, fn) {
            return this.on(types, null, data, fn);
        },
        unbind: function (types, fn) {
            return this.off(types, null, fn);
        },
        delegate: function (selector, types, data, fn) {
            return this.on(types, selector, data, fn);
        },
        undelegate: function (selector, types, fn) {
            // ( namespace ) or ( selector, types [, fn] )
            return arguments.length === 1 ?
                this.off(selector, "**") :
                this.off(types, selector || "**", fn);
        }
    });
    jQuery.holdReady = function (hold) {
        if (hold) {
            jQuery.readyWait++;
        }
        else {
            jQuery.ready(true);
        }
    };
    jQuery.isArray = Array.isArray;
    jQuery.parseJSON = JSON.parse;
    jQuery.nodeName = nodeName;
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9qcXVlcnkvc3JjL2RlcHJlY2F0ZWQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFFO0lBQ1AsUUFBUTtJQUNSLGlCQUFpQjtDQUNqQixFQUFFLFVBQVUsTUFBTSxFQUFFLFFBQVE7SUFFN0IsWUFBWSxDQUFDO0lBRWIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUU7UUFFakIsSUFBSSxFQUFFLFVBQVUsS0FBSyxFQUFFLElBQUksRUFBRSxFQUFFO1lBQzlCLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBRSxDQUFDO1FBQ3pDLENBQUM7UUFDRCxNQUFNLEVBQUUsVUFBVSxLQUFLLEVBQUUsRUFBRTtZQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBRSxDQUFDO1FBQ3BDLENBQUM7UUFFRCxRQUFRLEVBQUUsVUFBVSxRQUFRLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxFQUFFO1lBQzVDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBRSxDQUFDO1FBQzdDLENBQUM7UUFDRCxVQUFVLEVBQUUsVUFBVSxRQUFRLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFFeEMsOENBQThDO1lBQzlDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxLQUFLLENBQUM7Z0JBQzVCLElBQUksQ0FBQyxHQUFHLENBQUUsUUFBUSxFQUFFLElBQUksQ0FBRTtnQkFDMUIsSUFBSSxDQUFDLEdBQUcsQ0FBRSxLQUFLLEVBQUUsUUFBUSxJQUFJLElBQUksRUFBRSxFQUFFLENBQUUsQ0FBQztRQUMxQyxDQUFDO0tBQ0QsQ0FBRSxDQUFDO0lBRUosTUFBTSxDQUFDLFNBQVMsR0FBRyxVQUFVLElBQUk7UUFDaEMsRUFBRSxDQUFDLENBQUUsSUFBSyxDQUFDLENBQUMsQ0FBQztZQUNaLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNwQixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDUCxNQUFNLENBQUMsS0FBSyxDQUFFLElBQUksQ0FBRSxDQUFDO1FBQ3RCLENBQUM7SUFDRixDQUFDLENBQUM7SUFDRixNQUFNLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUM7SUFDL0IsTUFBTSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQzlCLE1BQU0sQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0FBRTNCLENBQUMsQ0FBRSxDQUFDIiwiZmlsZSI6Ind3dy9wYWNrcy9qcXVlcnkvc3JjL2RlcHJlY2F0ZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoIFtcblx0XCIuL2NvcmVcIixcblx0XCIuL2NvcmUvbm9kZU5hbWVcIlxuXSwgZnVuY3Rpb24oIGpRdWVyeSwgbm9kZU5hbWUgKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0YmluZDogZnVuY3Rpb24oIHR5cGVzLCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZXMsIG51bGwsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuYmluZDogZnVuY3Rpb24oIHR5cGVzLCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vZmYoIHR5cGVzLCBudWxsLCBmbiApO1xuXHR9LFxuXG5cdGRlbGVnYXRlOiBmdW5jdGlvbiggc2VsZWN0b3IsIHR5cGVzLCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApO1xuXHR9LFxuXHR1bmRlbGVnYXRlOiBmdW5jdGlvbiggc2VsZWN0b3IsIHR5cGVzLCBmbiApIHtcblxuXHRcdC8vICggbmFtZXNwYWNlICkgb3IgKCBzZWxlY3RvciwgdHlwZXMgWywgZm5dIClcblx0XHRyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/XG5cdFx0XHR0aGlzLm9mZiggc2VsZWN0b3IsIFwiKipcIiApIDpcblx0XHRcdHRoaXMub2ZmKCB0eXBlcywgc2VsZWN0b3IgfHwgXCIqKlwiLCBmbiApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5ob2xkUmVhZHkgPSBmdW5jdGlvbiggaG9sZCApIHtcblx0aWYgKCBob2xkICkge1xuXHRcdGpRdWVyeS5yZWFkeVdhaXQrKztcblx0fSBlbHNlIHtcblx0XHRqUXVlcnkucmVhZHkoIHRydWUgKTtcblx0fVxufTtcbmpRdWVyeS5pc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbmpRdWVyeS5wYXJzZUpTT04gPSBKU09OLnBhcnNlO1xualF1ZXJ5Lm5vZGVOYW1lID0gbm9kZU5hbWU7XG5cbn0gKTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9qcXVlcnkvc3JjL2RlcHJlY2F0ZWQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDO0lBQ0gsUUFBUTtJQUNSLGlCQUFpQjtDQUNwQixFQUFFLFVBQVUsTUFBTSxFQUFFLFFBQVE7SUFDekIsWUFBWSxDQUFDO0lBQ2IsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7UUFDYixJQUFJLEVBQUUsVUFBVSxLQUFLLEVBQUUsSUFBSSxFQUFFLEVBQUU7WUFDM0IsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDMUMsQ0FBQztRQUNELE1BQU0sRUFBRSxVQUFVLEtBQUssRUFBRSxFQUFFO1lBQ3ZCLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDckMsQ0FBQztRQUNELFFBQVEsRUFBRSxVQUFVLFFBQVEsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEVBQUU7WUFDekMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDOUMsQ0FBQztRQUNELFVBQVUsRUFBRSxVQUFVLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUNyQyw4Q0FBOEM7WUFDOUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEtBQUssQ0FBQztnQkFDekIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDO2dCQUN4QixJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxRQUFRLElBQUksSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQzlDLENBQUM7S0FDSixDQUFDLENBQUM7SUFDSCxNQUFNLENBQUMsU0FBUyxHQUFHLFVBQVUsSUFBSTtRQUM3QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ1AsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3ZCLENBQUM7UUFDRCxJQUFJLENBQUMsQ0FBQztZQUNGLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkIsQ0FBQztJQUNMLENBQUMsQ0FBQztJQUNGLE1BQU0sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQztJQUMvQixNQUFNLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDOUIsTUFBTSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7QUFDL0IsQ0FBQyxDQUFDLENBQUM7QUFFSCx1M0ZBQXUzRiIsImZpbGUiOiJ3d3cvcGFja3MvanF1ZXJ5L3NyYy9kZXByZWNhdGVkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcbiAgICBcIi4vY29yZVwiLFxuICAgIFwiLi9jb3JlL25vZGVOYW1lXCJcbl0sIGZ1bmN0aW9uIChqUXVlcnksIG5vZGVOYW1lKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgalF1ZXJ5LmZuLmV4dGVuZCh7XG4gICAgICAgIGJpbmQ6IGZ1bmN0aW9uICh0eXBlcywgZGF0YSwgZm4pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm9uKHR5cGVzLCBudWxsLCBkYXRhLCBmbik7XG4gICAgICAgIH0sXG4gICAgICAgIHVuYmluZDogZnVuY3Rpb24gKHR5cGVzLCBmbikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMub2ZmKHR5cGVzLCBudWxsLCBmbik7XG4gICAgICAgIH0sXG4gICAgICAgIGRlbGVnYXRlOiBmdW5jdGlvbiAoc2VsZWN0b3IsIHR5cGVzLCBkYXRhLCBmbikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMub24odHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbik7XG4gICAgICAgIH0sXG4gICAgICAgIHVuZGVsZWdhdGU6IGZ1bmN0aW9uIChzZWxlY3RvciwgdHlwZXMsIGZuKSB7XG4gICAgICAgICAgICAvLyAoIG5hbWVzcGFjZSApIG9yICggc2VsZWN0b3IsIHR5cGVzIFssIGZuXSApXG4gICAgICAgICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/XG4gICAgICAgICAgICAgICAgdGhpcy5vZmYoc2VsZWN0b3IsIFwiKipcIikgOlxuICAgICAgICAgICAgICAgIHRoaXMub2ZmKHR5cGVzLCBzZWxlY3RvciB8fCBcIioqXCIsIGZuKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGpRdWVyeS5ob2xkUmVhZHkgPSBmdW5jdGlvbiAoaG9sZCkge1xuICAgICAgICBpZiAoaG9sZCkge1xuICAgICAgICAgICAgalF1ZXJ5LnJlYWR5V2FpdCsrO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgalF1ZXJ5LnJlYWR5KHRydWUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBqUXVlcnkuaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XG4gICAgalF1ZXJ5LnBhcnNlSlNPTiA9IEpTT04ucGFyc2U7XG4gICAgalF1ZXJ5Lm5vZGVOYW1lID0gbm9kZU5hbWU7XG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbmQzZHk5d1lXTnJjeTlxY1hWbGNua3ZjM0pqTDJSbGNISmxZMkYwWldRdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzVFVGQlRTeERRVUZGTzBsQlExQXNVVUZCVVR0SlFVTlNMR2xDUVVGcFFqdERRVU5xUWl4RlFVRkZMRlZCUVZVc1RVRkJUU3hGUVVGRkxGRkJRVkU3U1VGRk4wSXNXVUZCV1N4RFFVRkRPMGxCUldJc1RVRkJUU3hEUVVGRExFVkJRVVVzUTBGQlF5eE5RVUZOTEVOQlFVVTdVVUZGYWtJc1NVRkJTU3hGUVVGRkxGVkJRVlVzUzBGQlN5eEZRVUZGTEVsQlFVa3NSVUZCUlN4RlFVRkZPMWxCUXpsQ0xFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkZMRXRCUVVzc1JVRkJSU3hKUVVGSkxFVkJRVVVzU1VGQlNTeEZRVUZGTEVWQlFVVXNRMEZCUlN4RFFVRkRPMUZCUTNwRExFTkJRVU03VVVGRFJDeE5RVUZOTEVWQlFVVXNWVUZCVlN4TFFVRkxMRVZCUVVVc1JVRkJSVHRaUVVNeFFpeE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJSU3hMUVVGTExFVkJRVVVzU1VGQlNTeEZRVUZGTEVWQlFVVXNRMEZCUlN4RFFVRkRPMUZCUTNCRExFTkJRVU03VVVGRlJDeFJRVUZSTEVWQlFVVXNWVUZCVlN4UlFVRlJMRVZCUVVVc1MwRkJTeXhGUVVGRkxFbEJRVWtzUlVGQlJTeEZRVUZGTzFsQlF6VkRMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZGTEV0QlFVc3NSVUZCUlN4UlFVRlJMRVZCUVVVc1NVRkJTU3hGUVVGRkxFVkJRVVVzUTBGQlJTeERRVUZETzFGQlF6ZERMRU5CUVVNN1VVRkRSQ3hWUVVGVkxFVkJRVVVzVlVGQlZTeFJRVUZSTEVWQlFVVXNTMEZCU3l4RlFVRkZMRVZCUVVVN1dVRkZlRU1zT0VOQlFUaERPMWxCUXpsRExFMUJRVTBzUTBGQlF5eFRRVUZUTEVOQlFVTXNUVUZCVFN4TFFVRkxMRU5CUVVNN1owSkJRelZDTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVVc1VVRkJVU3hGUVVGRkxFbEJRVWtzUTBGQlJUdG5Ra0ZETVVJc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlJTeExRVUZMTEVWQlFVVXNVVUZCVVN4SlFVRkpMRWxCUVVrc1JVRkJSU3hGUVVGRkxFTkJRVVVzUTBGQlF6dFJRVU14UXl4RFFVRkRPMHRCUTBRc1EwRkJSU3hEUVVGRE8wbEJSVW9zVFVGQlRTeERRVUZETEZOQlFWTXNSMEZCUnl4VlFVRlZMRWxCUVVrN1VVRkRhRU1zUlVGQlJTeERRVUZETEVOQlFVVXNTVUZCU3l4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVOYUxFMUJRVTBzUTBGQlF5eFRRVUZUTEVWQlFVVXNRMEZCUXp0UlFVTndRaXhEUVVGRE8xRkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdXVUZEVUN4TlFVRk5MRU5CUVVNc1MwRkJTeXhEUVVGRkxFbEJRVWtzUTBGQlJTeERRVUZETzFGQlEzUkNMRU5CUVVNN1NVRkRSaXhEUVVGRExFTkJRVU03U1VGRFJpeE5RVUZOTEVOQlFVTXNUMEZCVHl4SFFVRkhMRXRCUVVzc1EwRkJReXhQUVVGUExFTkJRVU03U1VGREwwSXNUVUZCVFN4RFFVRkRMRk5CUVZNc1IwRkJSeXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETzBsQlF6bENMRTFCUVUwc1EwRkJReXhSUVVGUkxFZEJRVWNzVVVGQlVTeERRVUZETzBGQlJUTkNMRU5CUVVNc1EwRkJSU3hEUVVGRElpd2labWxzWlNJNkluZDNkeTl3WVdOcmN5OXFjWFZsY25rdmMzSmpMMlJsY0hKbFkyRjBaV1F1YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SmtaV1pwYm1Vb0lGdGNibHgwWENJdUwyTnZjbVZjSWl4Y2JseDBYQ0l1TDJOdmNtVXZibTlrWlU1aGJXVmNJbHh1WFN3Z1puVnVZM1JwYjI0b0lHcFJkV1Z5ZVN3Z2JtOWtaVTVoYldVZ0tTQjdYRzVjYmx3aWRYTmxJSE4wY21samRGd2lPMXh1WEc1cVVYVmxjbmt1Wm00dVpYaDBaVzVrS0NCN1hHNWNibHgwWW1sdVpEb2dablZ1WTNScGIyNG9JSFI1Y0dWekxDQmtZWFJoTENCbWJpQXBJSHRjYmx4MFhIUnlaWFIxY200Z2RHaHBjeTV2YmlnZ2RIbHdaWE1zSUc1MWJHd3NJR1JoZEdFc0lHWnVJQ2s3WEc1Y2RIMHNYRzVjZEhWdVltbHVaRG9nWm5WdVkzUnBiMjRvSUhSNWNHVnpMQ0JtYmlBcElIdGNibHgwWEhSeVpYUjFjbTRnZEdocGN5NXZabVlvSUhSNWNHVnpMQ0J1ZFd4c0xDQm1iaUFwTzF4dVhIUjlMRnh1WEc1Y2RHUmxiR1ZuWVhSbE9pQm1kVzVqZEdsdmJpZ2djMlZzWldOMGIzSXNJSFI1Y0dWekxDQmtZWFJoTENCbWJpQXBJSHRjYmx4MFhIUnlaWFIxY200Z2RHaHBjeTV2YmlnZ2RIbHdaWE1zSUhObGJHVmpkRzl5TENCa1lYUmhMQ0JtYmlBcE8xeHVYSFI5TEZ4dVhIUjFibVJsYkdWbllYUmxPaUJtZFc1amRHbHZiaWdnYzJWc1pXTjBiM0lzSUhSNWNHVnpMQ0JtYmlBcElIdGNibHh1WEhSY2RDOHZJQ2dnYm1GdFpYTndZV05sSUNrZ2IzSWdLQ0J6Wld4bFkzUnZjaXdnZEhsd1pYTWdXeXdnWm01ZElDbGNibHgwWEhSeVpYUjFjbTRnWVhKbmRXMWxiblJ6TG14bGJtZDBhQ0E5UFQwZ01TQS9YRzVjZEZ4MFhIUjBhR2x6TG05bVppZ2djMlZzWldOMGIzSXNJRndpS2lwY0lpQXBJRHBjYmx4MFhIUmNkSFJvYVhNdWIyWm1LQ0IwZVhCbGN5d2djMlZzWldOMGIzSWdmSHdnWENJcUtsd2lMQ0JtYmlBcE8xeHVYSFI5WEc1OUlDazdYRzVjYm1wUmRXVnllUzVvYjJ4a1VtVmhaSGtnUFNCbWRXNWpkR2x2YmlnZ2FHOXNaQ0FwSUh0Y2JseDBhV1lnS0NCb2IyeGtJQ2tnZTF4dVhIUmNkR3BSZFdWeWVTNXlaV0ZrZVZkaGFYUXJLenRjYmx4MGZTQmxiSE5sSUh0Y2JseDBYSFJxVVhWbGNua3VjbVZoWkhrb0lIUnlkV1VnS1R0Y2JseDBmVnh1ZlR0Y2JtcFJkV1Z5ZVM1cGMwRnljbUY1SUQwZ1FYSnlZWGt1YVhOQmNuSmhlVHRjYm1wUmRXVnllUzV3WVhKelpVcFRUMDRnUFNCS1UwOU9MbkJoY25ObE8xeHVhbEYxWlhKNUxtNXZaR1ZPWVcxbElEMGdibTlrWlU1aGJXVTdYRzVjYm4wZ0tUdGNiaUpkZlE9PVxuIl19

//# sourceMappingURL=data:application/json;charset=utf8;base64,
