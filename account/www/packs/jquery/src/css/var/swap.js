define(function () {
    "use strict";
    // A method for quickly swapping in/out CSS properties to get correct calculations.
    return function (elem, options, callback, args) {
        var ret, name, old = {};
        // Remember the old values, and insert the new ones
        for (name in options) {
            old[name] = elem.style[name];
            elem.style[name] = options[name];
        }
        ret = callback.apply(elem, args || []);
        // Revert the old values
        for (name in options) {
            elem.style[name] = old[name];
        }
        return ret;
    };
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9qcXVlcnkvc3JjL2Nzcy92YXIvc3dhcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUU7SUFFUixZQUFZLENBQUM7SUFFYixtRkFBbUY7SUFDbkYsTUFBTSxDQUFDLFVBQVUsSUFBSSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSTtRQUM3QyxJQUFJLEdBQUcsRUFBRSxJQUFJLEVBQ1osR0FBRyxHQUFHLEVBQUUsQ0FBQztRQUVWLG1EQUFtRDtRQUNuRCxHQUFHLENBQUMsQ0FBRSxJQUFJLElBQUksT0FBUSxDQUFDLENBQUMsQ0FBQztZQUN4QixHQUFHLENBQUUsSUFBSSxDQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBRSxJQUFJLENBQUUsQ0FBQztZQUNqQyxJQUFJLENBQUMsS0FBSyxDQUFFLElBQUksQ0FBRSxHQUFHLE9BQU8sQ0FBRSxJQUFJLENBQUUsQ0FBQztRQUN0QyxDQUFDO1FBRUQsR0FBRyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUUsSUFBSSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUUsQ0FBQztRQUV6Qyx3QkFBd0I7UUFDeEIsR0FBRyxDQUFDLENBQUUsSUFBSSxJQUFJLE9BQVEsQ0FBQyxDQUFDLENBQUM7WUFDeEIsSUFBSSxDQUFDLEtBQUssQ0FBRSxJQUFJLENBQUUsR0FBRyxHQUFHLENBQUUsSUFBSSxDQUFFLENBQUM7UUFDbEMsQ0FBQztRQUVELE1BQU0sQ0FBQyxHQUFHLENBQUM7SUFDWixDQUFDLENBQUM7QUFFRixDQUFDLENBQUUsQ0FBQyIsImZpbGUiOiJ3d3cvcGFja3MvanF1ZXJ5L3NyYy9jc3MvdmFyL3N3YXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoIGZ1bmN0aW9uKCkge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLy8gQSBtZXRob2QgZm9yIHF1aWNrbHkgc3dhcHBpbmcgaW4vb3V0IENTUyBwcm9wZXJ0aWVzIHRvIGdldCBjb3JyZWN0IGNhbGN1bGF0aW9ucy5cbnJldHVybiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgY2FsbGJhY2ssIGFyZ3MgKSB7XG5cdHZhciByZXQsIG5hbWUsXG5cdFx0b2xkID0ge307XG5cblx0Ly8gUmVtZW1iZXIgdGhlIG9sZCB2YWx1ZXMsIGFuZCBpbnNlcnQgdGhlIG5ldyBvbmVzXG5cdGZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHtcblx0XHRvbGRbIG5hbWUgXSA9IGVsZW0uc3R5bGVbIG5hbWUgXTtcblx0XHRlbGVtLnN0eWxlWyBuYW1lIF0gPSBvcHRpb25zWyBuYW1lIF07XG5cdH1cblxuXHRyZXQgPSBjYWxsYmFjay5hcHBseSggZWxlbSwgYXJncyB8fCBbXSApO1xuXG5cdC8vIFJldmVydCB0aGUgb2xkIHZhbHVlc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb2xkWyBuYW1lIF07XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufTtcblxufSApO1xuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9qcXVlcnkvc3JjL2Nzcy92YXIvc3dhcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUM7SUFDSCxZQUFZLENBQUM7SUFDYixtRkFBbUY7SUFDbkYsTUFBTSxDQUFDLFVBQVUsSUFBSSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSTtRQUMxQyxJQUFJLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxHQUFHLEVBQUUsQ0FBQztRQUN4QixtREFBbUQ7UUFDbkQsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDbkIsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDN0IsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsQ0FBQztRQUNELEdBQUcsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7UUFDdkMsd0JBQXdCO1FBQ3hCLEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ25CLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2pDLENBQUM7UUFDRCxNQUFNLENBQUMsR0FBRyxDQUFDO0lBQ2YsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDLENBQUM7QUFFSCxtMERBQW0wRCIsImZpbGUiOiJ3d3cvcGFja3MvanF1ZXJ5L3NyYy9jc3MvdmFyL3N3YXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoZnVuY3Rpb24gKCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIC8vIEEgbWV0aG9kIGZvciBxdWlja2x5IHN3YXBwaW5nIGluL291dCBDU1MgcHJvcGVydGllcyB0byBnZXQgY29ycmVjdCBjYWxjdWxhdGlvbnMuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtLCBvcHRpb25zLCBjYWxsYmFjaywgYXJncykge1xuICAgICAgICB2YXIgcmV0LCBuYW1lLCBvbGQgPSB7fTtcbiAgICAgICAgLy8gUmVtZW1iZXIgdGhlIG9sZCB2YWx1ZXMsIGFuZCBpbnNlcnQgdGhlIG5ldyBvbmVzXG4gICAgICAgIGZvciAobmFtZSBpbiBvcHRpb25zKSB7XG4gICAgICAgICAgICBvbGRbbmFtZV0gPSBlbGVtLnN0eWxlW25hbWVdO1xuICAgICAgICAgICAgZWxlbS5zdHlsZVtuYW1lXSA9IG9wdGlvbnNbbmFtZV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0ID0gY2FsbGJhY2suYXBwbHkoZWxlbSwgYXJncyB8fCBbXSk7XG4gICAgICAgIC8vIFJldmVydCB0aGUgb2xkIHZhbHVlc1xuICAgICAgICBmb3IgKG5hbWUgaW4gb3B0aW9ucykge1xuICAgICAgICAgICAgZWxlbS5zdHlsZVtuYW1lXSA9IG9sZFtuYW1lXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH07XG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbmQzZHk5d1lXTnJjeTlxY1hWbGNua3ZjM0pqTDJOemN5OTJZWEl2YzNkaGNDNXFjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRU5CUVVVN1NVRkZVaXhaUVVGWkxFTkJRVU03U1VGRllpeHRSa0ZCYlVZN1NVRkRia1lzVFVGQlRTeERRVUZETEZWQlFWVXNTVUZCU1N4RlFVRkZMRTlCUVU4c1JVRkJSU3hSUVVGUkxFVkJRVVVzU1VGQlNUdFJRVU0zUXl4SlFVRkpMRWRCUVVjc1JVRkJSU3hKUVVGSkxFVkJRMW9zUjBGQlJ5eEhRVUZITEVWQlFVVXNRMEZCUXp0UlFVVldMRzFFUVVGdFJEdFJRVU51UkN4SFFVRkhMRU5CUVVNc1EwRkJSU3hKUVVGSkxFbEJRVWtzVDBGQlVTeERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTjRRaXhIUVVGSExFTkJRVVVzU1VGQlNTeERRVUZGTEVkQlFVY3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJSU3hKUVVGSkxFTkJRVVVzUTBGQlF6dFpRVU5xUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRkxFbEJRVWtzUTBGQlJTeEhRVUZITEU5QlFVOHNRMEZCUlN4SlFVRkpMRU5CUVVVc1EwRkJRenRSUVVOMFF5eERRVUZETzFGQlJVUXNSMEZCUnl4SFFVRkhMRkZCUVZFc1EwRkJReXhMUVVGTExFTkJRVVVzU1VGQlNTeEZRVUZGTEVsQlFVa3NTVUZCU1N4RlFVRkZMRU5CUVVVc1EwRkJRenRSUVVWNlF5eDNRa0ZCZDBJN1VVRkRlRUlzUjBGQlJ5eERRVUZETEVOQlFVVXNTVUZCU1N4SlFVRkpMRTlCUVZFc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGVFSXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJSU3hKUVVGSkxFTkJRVVVzUjBGQlJ5eEhRVUZITEVOQlFVVXNTVUZCU1N4RFFVRkZMRU5CUVVNN1VVRkRiRU1zUTBGQlF6dFJRVVZFTEUxQlFVMHNRMEZCUXl4SFFVRkhMRU5CUVVNN1NVRkRXaXhEUVVGRExFTkJRVU03UVVGRlJpeERRVUZETEVOQlFVVXNRMEZCUXlJc0ltWnBiR1VpT2lKM2QzY3ZjR0ZqYTNNdmFuRjFaWEo1TDNOeVl5OWpjM012ZG1GeUwzTjNZWEF1YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SmtaV1pwYm1Vb0lHWjFibU4wYVc5dUtDa2dlMXh1WEc1Y0luVnpaU0J6ZEhKcFkzUmNJanRjYmx4dUx5OGdRU0J0WlhSb2IyUWdabTl5SUhGMWFXTnJiSGtnYzNkaGNIQnBibWNnYVc0dmIzVjBJRU5UVXlCd2NtOXdaWEowYVdWeklIUnZJR2RsZENCamIzSnlaV04wSUdOaGJHTjFiR0YwYVc5dWN5NWNibkpsZEhWeWJpQm1kVzVqZEdsdmJpZ2daV3hsYlN3Z2IzQjBhVzl1Y3l3Z1kyRnNiR0poWTJzc0lHRnlaM01nS1NCN1hHNWNkSFpoY2lCeVpYUXNJRzVoYldVc1hHNWNkRngwYjJ4a0lEMGdlMzA3WEc1Y2JseDBMeThnVW1WdFpXMWlaWElnZEdobElHOXNaQ0IyWVd4MVpYTXNJR0Z1WkNCcGJuTmxjblFnZEdobElHNWxkeUJ2Ym1WelhHNWNkR1p2Y2lBb0lHNWhiV1VnYVc0Z2IzQjBhVzl1Y3lBcElIdGNibHgwWEhSdmJHUmJJRzVoYldVZ1hTQTlJR1ZzWlcwdWMzUjViR1ZiSUc1aGJXVWdYVHRjYmx4MFhIUmxiR1Z0TG5OMGVXeGxXeUJ1WVcxbElGMGdQU0J2Y0hScGIyNXpXeUJ1WVcxbElGMDdYRzVjZEgxY2JseHVYSFJ5WlhRZ1BTQmpZV3hzWW1GamF5NWhjSEJzZVNnZ1pXeGxiU3dnWVhKbmN5QjhmQ0JiWFNBcE8xeHVYRzVjZEM4dklGSmxkbVZ5ZENCMGFHVWdiMnhrSUhaaGJIVmxjMXh1WEhSbWIzSWdLQ0J1WVcxbElHbHVJRzl3ZEdsdmJuTWdLU0I3WEc1Y2RGeDBaV3hsYlM1emRIbHNaVnNnYm1GdFpTQmRJRDBnYjJ4a1d5QnVZVzFsSUYwN1hHNWNkSDFjYmx4dVhIUnlaWFIxY200Z2NtVjBPMXh1ZlR0Y2JseHVmU0FwTzF4dUlsMTlcbiJdfQ==

//# sourceMappingURL=data:application/json;charset=utf8;base64,
