define(function () {
    "use strict";
    // We have to close these tags to support XHTML (#13200)
    var wrapMap = {
        // Support: IE <=9 only
        option: [1, "<select multiple='multiple'>", "</select>"],
        // XHTML parsers do not magically insert elements in the
        // same way that tag soup parsers do. So we cannot shorten
        // this by omitting <tbody> or other required elements.
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
    };
    // Support: IE <=9 only
    wrapMap.optgroup = wrapMap.option;
    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
    wrapMap.th = wrapMap.td;
    return wrapMap;
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9qcXVlcnkvc3JjL21hbmlwdWxhdGlvbi93cmFwTWFwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBRTtJQUVSLFlBQVksQ0FBQztJQUViLHdEQUF3RDtJQUN4RCxJQUFJLE9BQU8sR0FBRztRQUViLHVCQUF1QjtRQUN2QixNQUFNLEVBQUUsQ0FBRSxDQUFDLEVBQUUsOEJBQThCLEVBQUUsV0FBVyxDQUFFO1FBRTFELHdEQUF3RDtRQUN4RCwwREFBMEQ7UUFDMUQsdURBQXVEO1FBQ3ZELEtBQUssRUFBRSxDQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsVUFBVSxDQUFFO1FBQ25DLEdBQUcsRUFBRSxDQUFFLENBQUMsRUFBRSxtQkFBbUIsRUFBRSxxQkFBcUIsQ0FBRTtRQUN0RCxFQUFFLEVBQUUsQ0FBRSxDQUFDLEVBQUUsZ0JBQWdCLEVBQUUsa0JBQWtCLENBQUU7UUFDL0MsRUFBRSxFQUFFLENBQUUsQ0FBQyxFQUFFLG9CQUFvQixFQUFFLHVCQUF1QixDQUFFO1FBRXhELFFBQVEsRUFBRSxDQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFFO0tBQ3ZCLENBQUM7SUFFRix1QkFBdUI7SUFDdkIsT0FBTyxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDO0lBRWxDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQztJQUNuRixPQUFPLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUM7SUFFeEIsTUFBTSxDQUFDLE9BQU8sQ0FBQztBQUNmLENBQUMsQ0FBRSxDQUFDIiwiZmlsZSI6Ind3dy9wYWNrcy9qcXVlcnkvc3JjL21hbmlwdWxhdGlvbi93cmFwTWFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKCBmdW5jdGlvbigpIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIFdlIGhhdmUgdG8gY2xvc2UgdGhlc2UgdGFncyB0byBzdXBwb3J0IFhIVE1MICgjMTMyMDApXG52YXIgd3JhcE1hcCA9IHtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRvcHRpb246IFsgMSwgXCI8c2VsZWN0IG11bHRpcGxlPSdtdWx0aXBsZSc+XCIsIFwiPC9zZWxlY3Q+XCIgXSxcblxuXHQvLyBYSFRNTCBwYXJzZXJzIGRvIG5vdCBtYWdpY2FsbHkgaW5zZXJ0IGVsZW1lbnRzIGluIHRoZVxuXHQvLyBzYW1lIHdheSB0aGF0IHRhZyBzb3VwIHBhcnNlcnMgZG8uIFNvIHdlIGNhbm5vdCBzaG9ydGVuXG5cdC8vIHRoaXMgYnkgb21pdHRpbmcgPHRib2R5PiBvciBvdGhlciByZXF1aXJlZCBlbGVtZW50cy5cblx0dGhlYWQ6IFsgMSwgXCI8dGFibGU+XCIsIFwiPC90YWJsZT5cIiBdLFxuXHRjb2w6IFsgMiwgXCI8dGFibGU+PGNvbGdyb3VwPlwiLCBcIjwvY29sZ3JvdXA+PC90YWJsZT5cIiBdLFxuXHR0cjogWyAyLCBcIjx0YWJsZT48dGJvZHk+XCIsIFwiPC90Ym9keT48L3RhYmxlPlwiIF0sXG5cdHRkOiBbIDMsIFwiPHRhYmxlPjx0Ym9keT48dHI+XCIsIFwiPC90cj48L3Rib2R5PjwvdGFibGU+XCIgXSxcblxuXHRfZGVmYXVsdDogWyAwLCBcIlwiLCBcIlwiIF1cbn07XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG53cmFwTWFwLm9wdGdyb3VwID0gd3JhcE1hcC5vcHRpb247XG5cbndyYXBNYXAudGJvZHkgPSB3cmFwTWFwLnRmb290ID0gd3JhcE1hcC5jb2xncm91cCA9IHdyYXBNYXAuY2FwdGlvbiA9IHdyYXBNYXAudGhlYWQ7XG53cmFwTWFwLnRoID0gd3JhcE1hcC50ZDtcblxucmV0dXJuIHdyYXBNYXA7XG59ICk7XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9qcXVlcnkvc3JjL21hbmlwdWxhdGlvbi93cmFwTWFwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQztJQUNILFlBQVksQ0FBQztJQUNiLHdEQUF3RDtJQUN4RCxJQUFJLE9BQU8sR0FBRztRQUNWLHVCQUF1QjtRQUN2QixNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsOEJBQThCLEVBQUUsV0FBVyxDQUFDO1FBQ3hELHdEQUF3RDtRQUN4RCwwREFBMEQ7UUFDMUQsdURBQXVEO1FBQ3ZELEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxTQUFTLEVBQUUsVUFBVSxDQUFDO1FBQ2pDLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSxtQkFBbUIsRUFBRSxxQkFBcUIsQ0FBQztRQUNwRCxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsZ0JBQWdCLEVBQUUsa0JBQWtCLENBQUM7UUFDN0MsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLG9CQUFvQixFQUFFLHVCQUF1QixDQUFDO1FBQ3RELFFBQVEsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0tBQ3hCLENBQUM7SUFDRix1QkFBdUI7SUFDdkIsT0FBTyxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDO0lBQ2xDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQztJQUNuRixPQUFPLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUM7SUFDeEIsTUFBTSxDQUFDLE9BQU8sQ0FBQztBQUNuQixDQUFDLENBQUMsQ0FBQztBQUVILDIwRUFBMjBFIiwiZmlsZSI6Ind3dy9wYWNrcy9qcXVlcnkvc3JjL21hbmlwdWxhdGlvbi93cmFwTWFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKGZ1bmN0aW9uICgpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICAvLyBXZSBoYXZlIHRvIGNsb3NlIHRoZXNlIHRhZ3MgdG8gc3VwcG9ydCBYSFRNTCAoIzEzMjAwKVxuICAgIHZhciB3cmFwTWFwID0ge1xuICAgICAgICAvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuICAgICAgICBvcHRpb246IFsxLCBcIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz5cIiwgXCI8L3NlbGVjdD5cIl0sXG4gICAgICAgIC8vIFhIVE1MIHBhcnNlcnMgZG8gbm90IG1hZ2ljYWxseSBpbnNlcnQgZWxlbWVudHMgaW4gdGhlXG4gICAgICAgIC8vIHNhbWUgd2F5IHRoYXQgdGFnIHNvdXAgcGFyc2VycyBkby4gU28gd2UgY2Fubm90IHNob3J0ZW5cbiAgICAgICAgLy8gdGhpcyBieSBvbWl0dGluZyA8dGJvZHk+IG9yIG90aGVyIHJlcXVpcmVkIGVsZW1lbnRzLlxuICAgICAgICB0aGVhZDogWzEsIFwiPHRhYmxlPlwiLCBcIjwvdGFibGU+XCJdLFxuICAgICAgICBjb2w6IFsyLCBcIjx0YWJsZT48Y29sZ3JvdXA+XCIsIFwiPC9jb2xncm91cD48L3RhYmxlPlwiXSxcbiAgICAgICAgdHI6IFsyLCBcIjx0YWJsZT48dGJvZHk+XCIsIFwiPC90Ym9keT48L3RhYmxlPlwiXSxcbiAgICAgICAgdGQ6IFszLCBcIjx0YWJsZT48dGJvZHk+PHRyPlwiLCBcIjwvdHI+PC90Ym9keT48L3RhYmxlPlwiXSxcbiAgICAgICAgX2RlZmF1bHQ6IFswLCBcIlwiLCBcIlwiXVxuICAgIH07XG4gICAgLy8gU3VwcG9ydDogSUUgPD05IG9ubHlcbiAgICB3cmFwTWFwLm9wdGdyb3VwID0gd3JhcE1hcC5vcHRpb247XG4gICAgd3JhcE1hcC50Ym9keSA9IHdyYXBNYXAudGZvb3QgPSB3cmFwTWFwLmNvbGdyb3VwID0gd3JhcE1hcC5jYXB0aW9uID0gd3JhcE1hcC50aGVhZDtcbiAgICB3cmFwTWFwLnRoID0gd3JhcE1hcC50ZDtcbiAgICByZXR1cm4gd3JhcE1hcDtcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluZDNkeTl3WVdOcmN5OXFjWFZsY25rdmMzSmpMMjFoYm1sd2RXeGhkR2x2Ymk5M2NtRndUV0Z3TG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRTFCUVUwc1EwRkJSVHRKUVVWU0xGbEJRVmtzUTBGQlF6dEpRVVZpTEhkRVFVRjNSRHRKUVVONFJDeEpRVUZKTEU5QlFVOHNSMEZCUnp0UlFVVmlMSFZDUVVGMVFqdFJRVU4yUWl4TlFVRk5MRVZCUVVVc1EwRkJSU3hEUVVGRExFVkJRVVVzT0VKQlFUaENMRVZCUVVVc1YwRkJWeXhEUVVGRk8xRkJSVEZFTEhkRVFVRjNSRHRSUVVONFJDd3dSRUZCTUVRN1VVRkRNVVFzZFVSQlFYVkVPMUZCUTNaRUxFdEJRVXNzUlVGQlJTeERRVUZGTEVOQlFVTXNSVUZCUlN4VFFVRlRMRVZCUVVVc1ZVRkJWU3hEUVVGRk8xRkJRMjVETEVkQlFVY3NSVUZCUlN4RFFVRkZMRU5CUVVNc1JVRkJSU3h0UWtGQmJVSXNSVUZCUlN4eFFrRkJjVUlzUTBGQlJUdFJRVU4wUkN4RlFVRkZMRVZCUVVVc1EwRkJSU3hEUVVGRExFVkJRVVVzWjBKQlFXZENMRVZCUVVVc2EwSkJRV3RDTEVOQlFVVTdVVUZETDBNc1JVRkJSU3hGUVVGRkxFTkJRVVVzUTBGQlF5eEZRVUZGTEc5Q1FVRnZRaXhGUVVGRkxIVkNRVUYxUWl4RFFVRkZPMUZCUlhoRUxGRkJRVkVzUlVGQlJTeERRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hEUVVGRk8wdEJRM1pDTEVOQlFVTTdTVUZGUml4MVFrRkJkVUk3U1VGRGRrSXNUMEZCVHl4RFFVRkRMRkZCUVZFc1IwRkJSeXhQUVVGUExFTkJRVU1zVFVGQlRTeERRVUZETzBsQlJXeERMRTlCUVU4c1EwRkJReXhMUVVGTExFZEJRVWNzVDBGQlR5eERRVUZETEV0QlFVc3NSMEZCUnl4UFFVRlBMRU5CUVVNc1VVRkJVU3hIUVVGSExFOUJRVThzUTBGQlF5eFBRVUZQTEVkQlFVY3NUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJRenRKUVVOdVJpeFBRVUZQTEVOQlFVTXNSVUZCUlN4SFFVRkhMRTlCUVU4c1EwRkJReXhGUVVGRkxFTkJRVU03U1VGRmVFSXNUVUZCVFN4RFFVRkRMRTlCUVU4c1EwRkJRenRCUVVObUxFTkJRVU1zUTBGQlJTeERRVUZESWl3aVptbHNaU0k2SW5kM2R5OXdZV05yY3k5cWNYVmxjbmt2YzNKakwyMWhibWx3ZFd4aGRHbHZiaTkzY21Gd1RXRndMbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVpHVm1hVzVsS0NCbWRXNWpkR2x2YmlncElIdGNibHh1WENKMWMyVWdjM1J5YVdOMFhDSTdYRzVjYmk4dklGZGxJR2hoZG1VZ2RHOGdZMnh2YzJVZ2RHaGxjMlVnZEdGbmN5QjBieUJ6ZFhCd2IzSjBJRmhJVkUxTUlDZ2pNVE15TURBcFhHNTJZWElnZDNKaGNFMWhjQ0E5SUh0Y2JseHVYSFF2THlCVGRYQndiM0owT2lCSlJTQThQVGtnYjI1c2VWeHVYSFJ2Y0hScGIyNDZJRnNnTVN3Z1hDSThjMlZzWldOMElHMTFiSFJwY0d4bFBTZHRkV3gwYVhCc1pTYytYQ0lzSUZ3aVBDOXpaV3hsWTNRK1hDSWdYU3hjYmx4dVhIUXZMeUJZU0ZSTlRDQndZWEp6WlhKeklHUnZJRzV2ZENCdFlXZHBZMkZzYkhrZ2FXNXpaWEowSUdWc1pXMWxiblJ6SUdsdUlIUm9aVnh1WEhRdkx5QnpZVzFsSUhkaGVTQjBhR0YwSUhSaFp5QnpiM1Z3SUhCaGNuTmxjbk1nWkc4dUlGTnZJSGRsSUdOaGJtNXZkQ0J6YUc5eWRHVnVYRzVjZEM4dklIUm9hWE1nWW5rZ2IyMXBkSFJwYm1jZ1BIUmliMlI1UGlCdmNpQnZkR2hsY2lCeVpYRjFhWEpsWkNCbGJHVnRaVzUwY3k1Y2JseDBkR2hsWVdRNklGc2dNU3dnWENJOGRHRmliR1UrWENJc0lGd2lQQzkwWVdKc1pUNWNJaUJkTEZ4dVhIUmpiMnc2SUZzZ01pd2dYQ0k4ZEdGaWJHVStQR052YkdkeWIzVndQbHdpTENCY0lqd3ZZMjlzWjNKdmRYQStQQzkwWVdKc1pUNWNJaUJkTEZ4dVhIUjBjam9nV3lBeUxDQmNJangwWVdKc1pUNDhkR0p2WkhrK1hDSXNJRndpUEM5MFltOWtlVDQ4TDNSaFlteGxQbHdpSUYwc1hHNWNkSFJrT2lCYklETXNJRndpUEhSaFlteGxQangwWW05a2VUNDhkSEkrWENJc0lGd2lQQzkwY2o0OEwzUmliMlI1UGp3dmRHRmliR1UrWENJZ1hTeGNibHh1WEhSZlpHVm1ZWFZzZERvZ1d5QXdMQ0JjSWx3aUxDQmNJbHdpSUYxY2JuMDdYRzVjYmk4dklGTjFjSEJ2Y25RNklFbEZJRHc5T1NCdmJteDVYRzUzY21Gd1RXRndMbTl3ZEdkeWIzVndJRDBnZDNKaGNFMWhjQzV2Y0hScGIyNDdYRzVjYm5keVlYQk5ZWEF1ZEdKdlpIa2dQU0IzY21Gd1RXRndMblJtYjI5MElEMGdkM0poY0UxaGNDNWpiMnhuY205MWNDQTlJSGR5WVhCTllYQXVZMkZ3ZEdsdmJpQTlJSGR5WVhCTllYQXVkR2hsWVdRN1hHNTNjbUZ3VFdGd0xuUm9JRDBnZDNKaGNFMWhjQzUwWkR0Y2JseHVjbVYwZFhKdUlIZHlZWEJOWVhBN1hHNTlJQ2s3WEc0aVhYMD1cbiJdfQ==

//# sourceMappingURL=data:application/json;charset=utf8;base64,
