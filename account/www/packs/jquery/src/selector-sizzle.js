define([
    "./core",
    "../external/sizzle/dist/sizzle"
], function (jQuery, Sizzle) {
    "use strict";
    jQuery.find = Sizzle;
    jQuery.expr = Sizzle.selectors;
    // Deprecated
    jQuery.expr[":"] = jQuery.expr.pseudos;
    jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
    jQuery.text = Sizzle.getText;
    jQuery.isXMLDoc = Sizzle.isXML;
    jQuery.contains = Sizzle.contains;
    jQuery.escapeSelector = Sizzle.escape;
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9qcXVlcnkvc3JjL3NlbGVjdG9yLXNpenpsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUU7SUFDUCxRQUFRO0lBQ1IsZ0NBQWdDO0NBQ2hDLEVBQUUsVUFBVSxNQUFNLEVBQUUsTUFBTTtJQUUzQixZQUFZLENBQUM7SUFFYixNQUFNLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQztJQUNyQixNQUFNLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUM7SUFFL0IsYUFBYTtJQUNiLE1BQU0sQ0FBQyxJQUFJLENBQUUsR0FBRyxDQUFFLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDekMsTUFBTSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUM7SUFDdEQsTUFBTSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDO0lBQzdCLE1BQU0sQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUMvQixNQUFNLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7SUFDbEMsTUFBTSxDQUFDLGNBQWMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBRXRDLENBQUMsQ0FBRSxDQUFDIiwiZmlsZSI6Ind3dy9wYWNrcy9qcXVlcnkvc3JjL3NlbGVjdG9yLXNpenpsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZSggW1xuXHRcIi4vY29yZVwiLFxuXHRcIi4uL2V4dGVybmFsL3NpenpsZS9kaXN0L3NpenpsZVwiXG5dLCBmdW5jdGlvbiggalF1ZXJ5LCBTaXp6bGUgKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5qUXVlcnkuZmluZCA9IFNpenpsZTtcbmpRdWVyeS5leHByID0gU2l6emxlLnNlbGVjdG9ycztcblxuLy8gRGVwcmVjYXRlZFxualF1ZXJ5LmV4cHJbIFwiOlwiIF0gPSBqUXVlcnkuZXhwci5wc2V1ZG9zO1xualF1ZXJ5LnVuaXF1ZVNvcnQgPSBqUXVlcnkudW5pcXVlID0gU2l6emxlLnVuaXF1ZVNvcnQ7XG5qUXVlcnkudGV4dCA9IFNpenpsZS5nZXRUZXh0O1xualF1ZXJ5LmlzWE1MRG9jID0gU2l6emxlLmlzWE1MO1xualF1ZXJ5LmNvbnRhaW5zID0gU2l6emxlLmNvbnRhaW5zO1xualF1ZXJ5LmVzY2FwZVNlbGVjdG9yID0gU2l6emxlLmVzY2FwZTtcblxufSApO1xuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9qcXVlcnkvc3JjL3NlbGVjdG9yLXNpenpsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUM7SUFDSCxRQUFRO0lBQ1IsZ0NBQWdDO0NBQ25DLEVBQUUsVUFBVSxNQUFNLEVBQUUsTUFBTTtJQUN2QixZQUFZLENBQUM7SUFDYixNQUFNLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQztJQUNyQixNQUFNLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUM7SUFDL0IsYUFBYTtJQUNiLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdkMsTUFBTSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUM7SUFDdEQsTUFBTSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDO0lBQzdCLE1BQU0sQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUMvQixNQUFNLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7SUFDbEMsTUFBTSxDQUFDLGNBQWMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQzFDLENBQUMsQ0FBQyxDQUFDO0FBRUgsbWhEQUFtaEQiLCJmaWxlIjoid3d3L3BhY2tzL2pxdWVyeS9zcmMvc2VsZWN0b3Itc2l6emxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcbiAgICBcIi4vY29yZVwiLFxuICAgIFwiLi4vZXh0ZXJuYWwvc2l6emxlL2Rpc3Qvc2l6emxlXCJcbl0sIGZ1bmN0aW9uIChqUXVlcnksIFNpenpsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIGpRdWVyeS5maW5kID0gU2l6emxlO1xuICAgIGpRdWVyeS5leHByID0gU2l6emxlLnNlbGVjdG9ycztcbiAgICAvLyBEZXByZWNhdGVkXG4gICAgalF1ZXJ5LmV4cHJbXCI6XCJdID0galF1ZXJ5LmV4cHIucHNldWRvcztcbiAgICBqUXVlcnkudW5pcXVlU29ydCA9IGpRdWVyeS51bmlxdWUgPSBTaXp6bGUudW5pcXVlU29ydDtcbiAgICBqUXVlcnkudGV4dCA9IFNpenpsZS5nZXRUZXh0O1xuICAgIGpRdWVyeS5pc1hNTERvYyA9IFNpenpsZS5pc1hNTDtcbiAgICBqUXVlcnkuY29udGFpbnMgPSBTaXp6bGUuY29udGFpbnM7XG4gICAgalF1ZXJ5LmVzY2FwZVNlbGVjdG9yID0gU2l6emxlLmVzY2FwZTtcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluZDNkeTl3WVdOcmN5OXFjWFZsY25rdmMzSmpMM05sYkdWamRHOXlMWE5wZW5wc1pTNXFjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRU5CUVVVN1NVRkRVQ3hSUVVGUk8wbEJRMUlzWjBOQlFXZERPME5CUTJoRExFVkJRVVVzVlVGQlZTeE5RVUZOTEVWQlFVVXNUVUZCVFR0SlFVVXpRaXhaUVVGWkxFTkJRVU03U1VGRllpeE5RVUZOTEVOQlFVTXNTVUZCU1N4SFFVRkhMRTFCUVUwc1EwRkJRenRKUVVOeVFpeE5RVUZOTEVOQlFVTXNTVUZCU1N4SFFVRkhMRTFCUVUwc1EwRkJReXhUUVVGVExFTkJRVU03U1VGRkwwSXNZVUZCWVR0SlFVTmlMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVVVzUjBGQlJ5eERRVUZGTEVkQlFVY3NUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU03U1VGRGVrTXNUVUZCVFN4RFFVRkRMRlZCUVZVc1IwRkJSeXhOUVVGTkxFTkJRVU1zVFVGQlRTeEhRVUZITEUxQlFVMHNRMEZCUXl4VlFVRlZMRU5CUVVNN1NVRkRkRVFzVFVGQlRTeERRVUZETEVsQlFVa3NSMEZCUnl4TlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRE8wbEJRemRDTEUxQlFVMHNRMEZCUXl4UlFVRlJMRWRCUVVjc1RVRkJUU3hEUVVGRExFdEJRVXNzUTBGQlF6dEpRVU12UWl4TlFVRk5MRU5CUVVNc1VVRkJVU3hIUVVGSExFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTTdTVUZEYkVNc1RVRkJUU3hEUVVGRExHTkJRV01zUjBGQlJ5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRPMEZCUlhSRExFTkJRVU1zUTBGQlJTeERRVUZESWl3aVptbHNaU0k2SW5kM2R5OXdZV05yY3k5cWNYVmxjbmt2YzNKakwzTmxiR1ZqZEc5eUxYTnBlbnBzWlM1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbVJsWm1sdVpTZ2dXMXh1WEhSY0lpNHZZMjl5WlZ3aUxGeHVYSFJjSWk0dUwyVjRkR1Z5Ym1Gc0wzTnBlbnBzWlM5a2FYTjBMM05wZW5wc1pWd2lYRzVkTENCbWRXNWpkR2x2YmlnZ2FsRjFaWEo1TENCVGFYcDZiR1VnS1NCN1hHNWNibHdpZFhObElITjBjbWxqZEZ3aU8xeHVYRzVxVVhWbGNua3VabWx1WkNBOUlGTnBlbnBzWlR0Y2JtcFJkV1Z5ZVM1bGVIQnlJRDBnVTJsNmVteGxMbk5sYkdWamRHOXljenRjYmx4dUx5OGdSR1Z3Y21WallYUmxaRnh1YWxGMVpYSjVMbVY0Y0hKYklGd2lPbHdpSUYwZ1BTQnFVWFZsY25rdVpYaHdjaTV3YzJWMVpHOXpPMXh1YWxGMVpYSjVMblZ1YVhGMVpWTnZjblFnUFNCcVVYVmxjbmt1ZFc1cGNYVmxJRDBnVTJsNmVteGxMblZ1YVhGMVpWTnZjblE3WEc1cVVYVmxjbmt1ZEdWNGRDQTlJRk5wZW5wc1pTNW5aWFJVWlhoME8xeHVhbEYxWlhKNUxtbHpXRTFNUkc5aklEMGdVMmw2ZW14bExtbHpXRTFNTzF4dWFsRjFaWEo1TG1OdmJuUmhhVzV6SUQwZ1UybDZlbXhsTG1OdmJuUmhhVzV6TzF4dWFsRjFaWEo1TG1WelkyRndaVk5sYkdWamRHOXlJRDBnVTJsNmVteGxMbVZ6WTJGd1pUdGNibHh1ZlNBcE8xeHVJbDE5XG4iXX0=

//# sourceMappingURL=data:application/json;charset=utf8;base64,
