define([
    "./core",
    "./selector",
    "./traversing",
    "./callbacks",
    "./deferred",
    "./deferred/exceptionHook",
    "./core/ready",
    "./data",
    "./queue",
    "./queue/delay",
    "./attributes",
    "./event",
    "./event/alias",
    "./event/focusin",
    "./manipulation",
    "./manipulation/_evalUrl",
    "./wrap",
    "./css",
    "./css/hiddenVisibleSelectors",
    "./serialize",
    "./ajax",
    "./ajax/xhr",
    "./ajax/script",
    "./ajax/jsonp",
    "./ajax/load",
    "./event/ajax",
    "./effects",
    "./effects/animatedSelector",
    "./offset",
    "./dimensions",
    "./deprecated",
    "./exports/amd",
    "./exports/global"
], function (jQuery) {
    "use strict";
    return jQuery;
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9qcXVlcnkvc3JjL2pxdWVyeS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUU7SUFDUCxRQUFRO0lBQ1IsWUFBWTtJQUNaLGNBQWM7SUFDZCxhQUFhO0lBQ2IsWUFBWTtJQUNaLDBCQUEwQjtJQUMxQixjQUFjO0lBQ2QsUUFBUTtJQUNSLFNBQVM7SUFDVCxlQUFlO0lBQ2YsY0FBYztJQUNkLFNBQVM7SUFDVCxlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsUUFBUTtJQUNSLE9BQU87SUFDUCw4QkFBOEI7SUFDOUIsYUFBYTtJQUNiLFFBQVE7SUFDUixZQUFZO0lBQ1osZUFBZTtJQUNmLGNBQWM7SUFDZCxhQUFhO0lBQ2IsY0FBYztJQUNkLFdBQVc7SUFDWCw0QkFBNEI7SUFDNUIsVUFBVTtJQUNWLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCQUFrQjtDQUNsQixFQUFFLFVBQVUsTUFBTTtJQUVuQixZQUFZLENBQUM7SUFFYixNQUFNLENBQUMsTUFBTSxDQUFDO0FBRWQsQ0FBQyxDQUFFLENBQUMiLCJmaWxlIjoid3d3L3BhY2tzL2pxdWVyeS9zcmMvanF1ZXJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKCBbXG5cdFwiLi9jb3JlXCIsXG5cdFwiLi9zZWxlY3RvclwiLFxuXHRcIi4vdHJhdmVyc2luZ1wiLFxuXHRcIi4vY2FsbGJhY2tzXCIsXG5cdFwiLi9kZWZlcnJlZFwiLFxuXHRcIi4vZGVmZXJyZWQvZXhjZXB0aW9uSG9va1wiLFxuXHRcIi4vY29yZS9yZWFkeVwiLFxuXHRcIi4vZGF0YVwiLFxuXHRcIi4vcXVldWVcIixcblx0XCIuL3F1ZXVlL2RlbGF5XCIsXG5cdFwiLi9hdHRyaWJ1dGVzXCIsXG5cdFwiLi9ldmVudFwiLFxuXHRcIi4vZXZlbnQvYWxpYXNcIixcblx0XCIuL2V2ZW50L2ZvY3VzaW5cIixcblx0XCIuL21hbmlwdWxhdGlvblwiLFxuXHRcIi4vbWFuaXB1bGF0aW9uL19ldmFsVXJsXCIsXG5cdFwiLi93cmFwXCIsXG5cdFwiLi9jc3NcIixcblx0XCIuL2Nzcy9oaWRkZW5WaXNpYmxlU2VsZWN0b3JzXCIsXG5cdFwiLi9zZXJpYWxpemVcIixcblx0XCIuL2FqYXhcIixcblx0XCIuL2FqYXgveGhyXCIsXG5cdFwiLi9hamF4L3NjcmlwdFwiLFxuXHRcIi4vYWpheC9qc29ucFwiLFxuXHRcIi4vYWpheC9sb2FkXCIsXG5cdFwiLi9ldmVudC9hamF4XCIsXG5cdFwiLi9lZmZlY3RzXCIsXG5cdFwiLi9lZmZlY3RzL2FuaW1hdGVkU2VsZWN0b3JcIixcblx0XCIuL29mZnNldFwiLFxuXHRcIi4vZGltZW5zaW9uc1wiLFxuXHRcIi4vZGVwcmVjYXRlZFwiLFxuXHRcIi4vZXhwb3J0cy9hbWRcIixcblx0XCIuL2V4cG9ydHMvZ2xvYmFsXCJcbl0sIGZ1bmN0aW9uKCBqUXVlcnkgKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5yZXR1cm4galF1ZXJ5O1xuXG59ICk7XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9qcXVlcnkvc3JjL2pxdWVyeS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUM7SUFDSCxRQUFRO0lBQ1IsWUFBWTtJQUNaLGNBQWM7SUFDZCxhQUFhO0lBQ2IsWUFBWTtJQUNaLDBCQUEwQjtJQUMxQixjQUFjO0lBQ2QsUUFBUTtJQUNSLFNBQVM7SUFDVCxlQUFlO0lBQ2YsY0FBYztJQUNkLFNBQVM7SUFDVCxlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsUUFBUTtJQUNSLE9BQU87SUFDUCw4QkFBOEI7SUFDOUIsYUFBYTtJQUNiLFFBQVE7SUFDUixZQUFZO0lBQ1osZUFBZTtJQUNmLGNBQWM7SUFDZCxhQUFhO0lBQ2IsY0FBYztJQUNkLFdBQVc7SUFDWCw0QkFBNEI7SUFDNUIsVUFBVTtJQUNWLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCQUFrQjtDQUNyQixFQUFFLFVBQVUsTUFBTTtJQUNmLFlBQVksQ0FBQztJQUNiLE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFDbEIsQ0FBQyxDQUFDLENBQUM7QUFFSCx1MkRBQXUyRCIsImZpbGUiOiJ3d3cvcGFja3MvanF1ZXJ5L3NyYy9qcXVlcnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1xuICAgIFwiLi9jb3JlXCIsXG4gICAgXCIuL3NlbGVjdG9yXCIsXG4gICAgXCIuL3RyYXZlcnNpbmdcIixcbiAgICBcIi4vY2FsbGJhY2tzXCIsXG4gICAgXCIuL2RlZmVycmVkXCIsXG4gICAgXCIuL2RlZmVycmVkL2V4Y2VwdGlvbkhvb2tcIixcbiAgICBcIi4vY29yZS9yZWFkeVwiLFxuICAgIFwiLi9kYXRhXCIsXG4gICAgXCIuL3F1ZXVlXCIsXG4gICAgXCIuL3F1ZXVlL2RlbGF5XCIsXG4gICAgXCIuL2F0dHJpYnV0ZXNcIixcbiAgICBcIi4vZXZlbnRcIixcbiAgICBcIi4vZXZlbnQvYWxpYXNcIixcbiAgICBcIi4vZXZlbnQvZm9jdXNpblwiLFxuICAgIFwiLi9tYW5pcHVsYXRpb25cIixcbiAgICBcIi4vbWFuaXB1bGF0aW9uL19ldmFsVXJsXCIsXG4gICAgXCIuL3dyYXBcIixcbiAgICBcIi4vY3NzXCIsXG4gICAgXCIuL2Nzcy9oaWRkZW5WaXNpYmxlU2VsZWN0b3JzXCIsXG4gICAgXCIuL3NlcmlhbGl6ZVwiLFxuICAgIFwiLi9hamF4XCIsXG4gICAgXCIuL2FqYXgveGhyXCIsXG4gICAgXCIuL2FqYXgvc2NyaXB0XCIsXG4gICAgXCIuL2FqYXgvanNvbnBcIixcbiAgICBcIi4vYWpheC9sb2FkXCIsXG4gICAgXCIuL2V2ZW50L2FqYXhcIixcbiAgICBcIi4vZWZmZWN0c1wiLFxuICAgIFwiLi9lZmZlY3RzL2FuaW1hdGVkU2VsZWN0b3JcIixcbiAgICBcIi4vb2Zmc2V0XCIsXG4gICAgXCIuL2RpbWVuc2lvbnNcIixcbiAgICBcIi4vZGVwcmVjYXRlZFwiLFxuICAgIFwiLi9leHBvcnRzL2FtZFwiLFxuICAgIFwiLi9leHBvcnRzL2dsb2JhbFwiXG5dLCBmdW5jdGlvbiAoalF1ZXJ5KSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgcmV0dXJuIGpRdWVyeTtcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluZDNkeTl3WVdOcmN5OXFjWFZsY25rdmMzSmpMMnB4ZFdWeWVTNXFjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRU5CUVVVN1NVRkRVQ3hSUVVGUk8wbEJRMUlzV1VGQldUdEpRVU5hTEdOQlFXTTdTVUZEWkN4aFFVRmhPMGxCUTJJc1dVRkJXVHRKUVVOYUxEQkNRVUV3UWp0SlFVTXhRaXhqUVVGak8wbEJRMlFzVVVGQlVUdEpRVU5TTEZOQlFWTTdTVUZEVkN4bFFVRmxPMGxCUTJZc1kwRkJZenRKUVVOa0xGTkJRVk03U1VGRFZDeGxRVUZsTzBsQlEyWXNhVUpCUVdsQ08wbEJRMnBDTEdkQ1FVRm5RanRKUVVOb1FpeDVRa0ZCZVVJN1NVRkRla0lzVVVGQlVUdEpRVU5TTEU5QlFVODdTVUZEVUN3NFFrRkJPRUk3U1VGRE9VSXNZVUZCWVR0SlFVTmlMRkZCUVZFN1NVRkRVaXhaUVVGWk8wbEJRMW9zWlVGQlpUdEpRVU5tTEdOQlFXTTdTVUZEWkN4aFFVRmhPMGxCUTJJc1kwRkJZenRKUVVOa0xGZEJRVmM3U1VGRFdDdzBRa0ZCTkVJN1NVRkROVUlzVlVGQlZUdEpRVU5XTEdOQlFXTTdTVUZEWkN4alFVRmpPMGxCUTJRc1pVRkJaVHRKUVVObUxHdENRVUZyUWp0RFFVTnNRaXhGUVVGRkxGVkJRVlVzVFVGQlRUdEpRVVZ1UWl4WlFVRlpMRU5CUVVNN1NVRkZZaXhOUVVGTkxFTkJRVU1zVFVGQlRTeERRVUZETzBGQlJXUXNRMEZCUXl4RFFVRkZMRU5CUVVNaUxDSm1hV3hsSWpvaWQzZDNMM0JoWTJ0ekwycHhkV1Z5ZVM5emNtTXZhbkYxWlhKNUxtcHpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpWkdWbWFXNWxLQ0JiWEc1Y2RGd2lMaTlqYjNKbFhDSXNYRzVjZEZ3aUxpOXpaV3hsWTNSdmNsd2lMRnh1WEhSY0lpNHZkSEpoZG1WeWMybHVaMXdpTEZ4dVhIUmNJaTR2WTJGc2JHSmhZMnR6WENJc1hHNWNkRndpTGk5a1pXWmxjbkpsWkZ3aUxGeHVYSFJjSWk0dlpHVm1aWEp5WldRdlpYaGpaWEIwYVc5dVNHOXZhMXdpTEZ4dVhIUmNJaTR2WTI5eVpTOXlaV0ZrZVZ3aUxGeHVYSFJjSWk0dlpHRjBZVndpTEZ4dVhIUmNJaTR2Y1hWbGRXVmNJaXhjYmx4MFhDSXVMM0YxWlhWbEwyUmxiR0Y1WENJc1hHNWNkRndpTGk5aGRIUnlhV0oxZEdWelhDSXNYRzVjZEZ3aUxpOWxkbVZ1ZEZ3aUxGeHVYSFJjSWk0dlpYWmxiblF2WVd4cFlYTmNJaXhjYmx4MFhDSXVMMlYyWlc1MEwyWnZZM1Z6YVc1Y0lpeGNibHgwWENJdUwyMWhibWx3ZFd4aGRHbHZibHdpTEZ4dVhIUmNJaTR2YldGdWFYQjFiR0YwYVc5dUwxOWxkbUZzVlhKc1hDSXNYRzVjZEZ3aUxpOTNjbUZ3WENJc1hHNWNkRndpTGk5amMzTmNJaXhjYmx4MFhDSXVMMk56Y3k5b2FXUmtaVzVXYVhOcFlteGxVMlZzWldOMGIzSnpYQ0lzWEc1Y2RGd2lMaTl6WlhKcFlXeHBlbVZjSWl4Y2JseDBYQ0l1TDJGcVlYaGNJaXhjYmx4MFhDSXVMMkZxWVhndmVHaHlYQ0lzWEc1Y2RGd2lMaTloYW1GNEwzTmpjbWx3ZEZ3aUxGeHVYSFJjSWk0dllXcGhlQzlxYzI5dWNGd2lMRnh1WEhSY0lpNHZZV3BoZUM5c2IyRmtYQ0lzWEc1Y2RGd2lMaTlsZG1WdWRDOWhhbUY0WENJc1hHNWNkRndpTGk5bFptWmxZM1J6WENJc1hHNWNkRndpTGk5bFptWmxZM1J6TDJGdWFXMWhkR1ZrVTJWc1pXTjBiM0pjSWl4Y2JseDBYQ0l1TDI5bVpuTmxkRndpTEZ4dVhIUmNJaTR2WkdsdFpXNXphVzl1YzF3aUxGeHVYSFJjSWk0dlpHVndjbVZqWVhSbFpGd2lMRnh1WEhSY0lpNHZaWGh3YjNKMGN5OWhiV1JjSWl4Y2JseDBYQ0l1TDJWNGNHOXlkSE12WjJ4dlltRnNYQ0pjYmwwc0lHWjFibU4wYVc5dUtDQnFVWFZsY25rZ0tTQjdYRzVjYmx3aWRYTmxJSE4wY21samRGd2lPMXh1WEc1eVpYUjFjbTRnYWxGMVpYSjVPMXh1WEc1OUlDazdYRzRpWFgwPVxuIl19

//# sourceMappingURL=data:application/json;charset=utf8;base64,
