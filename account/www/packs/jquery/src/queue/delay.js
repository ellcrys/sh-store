define([
    "../core",
    "../queue",
    "../effects" // Delay is optional because of this dependency
], function (jQuery) {
    "use strict";
    // Based off of the plugin by Clint Helfers, with permission.
    // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
    jQuery.fn.delay = function (time, type) {
        time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
        type = type || "fx";
        return this.queue(type, function (next, hooks) {
            var timeout = window.setTimeout(next, time);
            hooks.stop = function () {
                window.clearTimeout(timeout);
            };
        });
    };
    return jQuery.fn.delay;
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9qcXVlcnkvc3JjL3F1ZXVlL2RlbGF5LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBRTtJQUNQLFNBQVM7SUFDVCxVQUFVO0lBQ1YsWUFBWSxDQUFDLCtDQUErQztDQUM1RCxFQUFFLFVBQVUsTUFBTTtJQUVuQixZQUFZLENBQUM7SUFFYiw2REFBNkQ7SUFDN0QscUdBQXFHO0lBQ3JHLE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxHQUFHLFVBQVUsSUFBSSxFQUFFLElBQUk7UUFDckMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxFQUFFLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUUsSUFBSSxDQUFFLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUMzRCxJQUFJLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQztRQUVwQixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBRSxJQUFJLEVBQUUsVUFBVSxJQUFJLEVBQUUsS0FBSztZQUM3QyxJQUFJLE9BQU8sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFFLElBQUksRUFBRSxJQUFJLENBQUUsQ0FBQztZQUM5QyxLQUFLLENBQUMsSUFBSSxHQUFHO2dCQUNaLE1BQU0sQ0FBQyxZQUFZLENBQUUsT0FBTyxDQUFFLENBQUM7WUFDaEMsQ0FBQyxDQUFDO1FBQ0gsQ0FBQyxDQUFFLENBQUM7SUFDTCxDQUFDLENBQUM7SUFFRixNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7QUFDdkIsQ0FBQyxDQUFFLENBQUMiLCJmaWxlIjoid3d3L3BhY2tzL2pxdWVyeS9zcmMvcXVldWUvZGVsYXkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoIFtcblx0XCIuLi9jb3JlXCIsXG5cdFwiLi4vcXVldWVcIixcblx0XCIuLi9lZmZlY3RzXCIgLy8gRGVsYXkgaXMgb3B0aW9uYWwgYmVjYXVzZSBvZiB0aGlzIGRlcGVuZGVuY3lcbl0sIGZ1bmN0aW9uKCBqUXVlcnkgKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG4vLyBCYXNlZCBvZmYgb2YgdGhlIHBsdWdpbiBieSBDbGludCBIZWxmZXJzLCB3aXRoIHBlcm1pc3Npb24uXG4vLyBodHRwczovL3dlYi5hcmNoaXZlLm9yZy93ZWIvMjAxMDAzMjQwMTQ3NDcvaHR0cDovL2JsaW5kc2lnbmFscy5jb20vaW5kZXgucGhwLzIwMDkvMDcvanF1ZXJ5LWRlbGF5L1xualF1ZXJ5LmZuLmRlbGF5ID0gZnVuY3Rpb24oIHRpbWUsIHR5cGUgKSB7XG5cdHRpbWUgPSBqUXVlcnkuZnggPyBqUXVlcnkuZnguc3BlZWRzWyB0aW1lIF0gfHwgdGltZSA6IHRpbWU7XG5cdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSwgZnVuY3Rpb24oIG5leHQsIGhvb2tzICkge1xuXHRcdHZhciB0aW1lb3V0ID0gd2luZG93LnNldFRpbWVvdXQoIG5leHQsIHRpbWUgKTtcblx0XHRob29rcy5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdFx0XHR3aW5kb3cuY2xlYXJUaW1lb3V0KCB0aW1lb3V0ICk7XG5cdFx0fTtcblx0fSApO1xufTtcblxucmV0dXJuIGpRdWVyeS5mbi5kZWxheTtcbn0gKTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9qcXVlcnkvc3JjL3F1ZXVlL2RlbGF5LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQztJQUNILFNBQVM7SUFDVCxVQUFVO0lBQ1YsWUFBWSxDQUFDLCtDQUErQztDQUMvRCxFQUFFLFVBQVUsTUFBTTtJQUNmLFlBQVksQ0FBQztJQUNiLDZEQUE2RDtJQUM3RCxxR0FBcUc7SUFDckcsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLEdBQUcsVUFBVSxJQUFJLEVBQUUsSUFBSTtRQUNsQyxJQUFJLEdBQUcsTUFBTSxDQUFDLEVBQUUsR0FBRyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ3pELElBQUksR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDO1FBQ3BCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxVQUFVLElBQUksRUFBRSxLQUFLO1lBQ3pDLElBQUksT0FBTyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzVDLEtBQUssQ0FBQyxJQUFJLEdBQUc7Z0JBQ1QsTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUNqQyxDQUFDLENBQUM7UUFDTixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQztJQUNGLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQztBQUMzQixDQUFDLENBQUMsQ0FBQztBQUVILHUrREFBdStEIiwiZmlsZSI6Ind3dy9wYWNrcy9qcXVlcnkvc3JjL3F1ZXVlL2RlbGF5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcbiAgICBcIi4uL2NvcmVcIixcbiAgICBcIi4uL3F1ZXVlXCIsXG4gICAgXCIuLi9lZmZlY3RzXCIgLy8gRGVsYXkgaXMgb3B0aW9uYWwgYmVjYXVzZSBvZiB0aGlzIGRlcGVuZGVuY3lcbl0sIGZ1bmN0aW9uIChqUXVlcnkpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICAvLyBCYXNlZCBvZmYgb2YgdGhlIHBsdWdpbiBieSBDbGludCBIZWxmZXJzLCB3aXRoIHBlcm1pc3Npb24uXG4gICAgLy8gaHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTAwMzI0MDE0NzQ3L2h0dHA6Ly9ibGluZHNpZ25hbHMuY29tL2luZGV4LnBocC8yMDA5LzA3L2pxdWVyeS1kZWxheS9cbiAgICBqUXVlcnkuZm4uZGVsYXkgPSBmdW5jdGlvbiAodGltZSwgdHlwZSkge1xuICAgICAgICB0aW1lID0galF1ZXJ5LmZ4ID8galF1ZXJ5LmZ4LnNwZWVkc1t0aW1lXSB8fCB0aW1lIDogdGltZTtcbiAgICAgICAgdHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuICAgICAgICByZXR1cm4gdGhpcy5xdWV1ZSh0eXBlLCBmdW5jdGlvbiAobmV4dCwgaG9va3MpIHtcbiAgICAgICAgICAgIHZhciB0aW1lb3V0ID0gd2luZG93LnNldFRpbWVvdXQobmV4dCwgdGltZSk7XG4gICAgICAgICAgICBob29rcy5zdG9wID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBqUXVlcnkuZm4uZGVsYXk7XG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbmQzZHk5d1lXTnJjeTlxY1hWbGNua3ZjM0pqTDNGMVpYVmxMMlJsYkdGNUxtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEUxQlFVMHNRMEZCUlR0SlFVTlFMRk5CUVZNN1NVRkRWQ3hWUVVGVk8wbEJRMVlzV1VGQldTeERRVUZETEN0RFFVRXJRenREUVVNMVJDeEZRVUZGTEZWQlFWVXNUVUZCVFR0SlFVVnVRaXhaUVVGWkxFTkJRVU03U1VGRllpdzJSRUZCTmtRN1NVRkROMFFzY1VkQlFYRkhPMGxCUTNKSExFMUJRVTBzUTBGQlF5eEZRVUZGTEVOQlFVTXNTMEZCU3l4SFFVRkhMRlZCUVZVc1NVRkJTU3hGUVVGRkxFbEJRVWs3VVVGRGNrTXNTVUZCU1N4SFFVRkhMRTFCUVUwc1EwRkJReXhGUVVGRkxFZEJRVWNzVFVGQlRTeERRVUZETEVWQlFVVXNRMEZCUXl4TlFVRk5MRU5CUVVVc1NVRkJTU3hEUVVGRkxFbEJRVWtzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXp0UlFVTXpSQ3hKUVVGSkxFZEJRVWNzU1VGQlNTeEpRVUZKTEVsQlFVa3NRMEZCUXp0UlFVVndRaXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUlN4SlFVRkpMRVZCUVVVc1ZVRkJWU3hKUVVGSkxFVkJRVVVzUzBGQlN6dFpRVU0zUXl4SlFVRkpMRTlCUVU4c1IwRkJSeXhOUVVGTkxFTkJRVU1zVlVGQlZTeERRVUZGTEVsQlFVa3NSVUZCUlN4SlFVRkpMRU5CUVVVc1EwRkJRenRaUVVNNVF5eExRVUZMTEVOQlFVTXNTVUZCU1N4SFFVRkhPMmRDUVVOYUxFMUJRVTBzUTBGQlF5eFpRVUZaTEVOQlFVVXNUMEZCVHl4RFFVRkZMRU5CUVVNN1dVRkRhRU1zUTBGQlF5eERRVUZETzFGQlEwZ3NRMEZCUXl4RFFVRkZMRU5CUVVNN1NVRkRUQ3hEUVVGRExFTkJRVU03U1VGRlJpeE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRVZCUVVVc1EwRkJReXhMUVVGTExFTkJRVU03UVVGRGRrSXNRMEZCUXl4RFFVRkZMRU5CUVVNaUxDSm1hV3hsSWpvaWQzZDNMM0JoWTJ0ekwycHhkV1Z5ZVM5emNtTXZjWFZsZFdVdlpHVnNZWGt1YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SmtaV1pwYm1Vb0lGdGNibHgwWENJdUxpOWpiM0psWENJc1hHNWNkRndpTGk0dmNYVmxkV1ZjSWl4Y2JseDBYQ0l1TGk5bFptWmxZM1J6WENJZ0x5OGdSR1ZzWVhrZ2FYTWdiM0IwYVc5dVlXd2dZbVZqWVhWelpTQnZaaUIwYUdseklHUmxjR1Z1WkdWdVkzbGNibDBzSUdaMWJtTjBhVzl1S0NCcVVYVmxjbmtnS1NCN1hHNWNibHdpZFhObElITjBjbWxqZEZ3aU8xeHVYRzR2THlCQ1lYTmxaQ0J2Wm1ZZ2IyWWdkR2hsSUhCc2RXZHBiaUJpZVNCRGJHbHVkQ0JJWld4bVpYSnpMQ0IzYVhSb0lIQmxjbTFwYzNOcGIyNHVYRzR2THlCb2RIUndjem92TDNkbFlpNWhjbU5vYVhabExtOXlaeTkzWldJdk1qQXhNREF6TWpRd01UUTNORGN2YUhSMGNEb3ZMMkpzYVc1a2MybG5ibUZzY3k1amIyMHZhVzVrWlhndWNHaHdMekl3TURrdk1EY3ZhbkYxWlhKNUxXUmxiR0Y1TDF4dWFsRjFaWEo1TG1adUxtUmxiR0Y1SUQwZ1puVnVZM1JwYjI0b0lIUnBiV1VzSUhSNWNHVWdLU0I3WEc1Y2RIUnBiV1VnUFNCcVVYVmxjbmt1Wm5nZ1B5QnFVWFZsY25rdVpuZ3VjM0JsWldSeld5QjBhVzFsSUYwZ2ZId2dkR2x0WlNBNklIUnBiV1U3WEc1Y2RIUjVjR1VnUFNCMGVYQmxJSHg4SUZ3aVpuaGNJanRjYmx4dVhIUnlaWFIxY200Z2RHaHBjeTV4ZFdWMVpTZ2dkSGx3WlN3Z1puVnVZM1JwYjI0b0lHNWxlSFFzSUdodmIydHpJQ2tnZTF4dVhIUmNkSFpoY2lCMGFXMWxiM1YwSUQwZ2QybHVaRzkzTG5ObGRGUnBiV1Z2ZFhRb0lHNWxlSFFzSUhScGJXVWdLVHRjYmx4MFhIUm9iMjlyY3k1emRHOXdJRDBnWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwWEhSM2FXNWtiM2N1WTJ4bFlYSlVhVzFsYjNWMEtDQjBhVzFsYjNWMElDazdYRzVjZEZ4MGZUdGNibHgwZlNBcE8xeHVmVHRjYmx4dWNtVjBkWEp1SUdwUmRXVnllUzVtYmk1a1pXeGhlVHRjYm4wZ0tUdGNiaUpkZlE9PVxuIl19

//# sourceMappingURL=data:application/json;charset=utf8;base64,
