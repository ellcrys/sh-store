var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
                descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function (Constructor, protoProps, staticProps) {
        if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
            defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): carousel.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Carousel = function ($) {
    /**
     * ------------------------------------------------------------------------
     * Constants
     * ------------------------------------------------------------------------
     */
    var NAME = 'carousel';
    var VERSION = '4.0.0-alpha.6';
    var DATA_KEY = 'bs.carousel';
    var EVENT_KEY = '.' + DATA_KEY;
    var DATA_API_KEY = '.data-api';
    var JQUERY_NO_CONFLICT = $.fn[NAME];
    var TRANSITION_DURATION = 600;
    var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key
    var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key
    var Default = {
        interval: 5000,
        keyboard: true,
        slide: false,
        pause: 'hover',
        wrap: true
    };
    var DefaultType = {
        interval: '(number|boolean)',
        keyboard: 'boolean',
        slide: '(boolean|string)',
        pause: '(string|boolean)',
        wrap: 'boolean'
    };
    var Direction = {
        NEXT: 'next',
        PREV: 'prev',
        LEFT: 'left',
        RIGHT: 'right'
    };
    var Event = {
        SLIDE: 'slide' + EVENT_KEY,
        SLID: 'slid' + EVENT_KEY,
        KEYDOWN: 'keydown' + EVENT_KEY,
        MOUSEENTER: 'mouseenter' + EVENT_KEY,
        MOUSELEAVE: 'mouseleave' + EVENT_KEY,
        LOAD_DATA_API: 'load' + EVENT_KEY + DATA_API_KEY,
        CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY
    };
    var ClassName = {
        CAROUSEL: 'carousel',
        ACTIVE: 'active',
        SLIDE: 'slide',
        RIGHT: 'carousel-item-right',
        LEFT: 'carousel-item-left',
        NEXT: 'carousel-item-next',
        PREV: 'carousel-item-prev',
        ITEM: 'carousel-item'
    };
    var Selector = {
        ACTIVE: '.active',
        ACTIVE_ITEM: '.active.carousel-item',
        ITEM: '.carousel-item',
        NEXT_PREV: '.carousel-item-next, .carousel-item-prev',
        INDICATORS: '.carousel-indicators',
        DATA_SLIDE: '[data-slide], [data-slide-to]',
        DATA_RIDE: '[data-ride="carousel"]'
    };
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */
    var Carousel = function () {
        function Carousel(element, config) {
            _classCallCheck(this, Carousel);
            this._items = null;
            this._interval = null;
            this._activeElement = null;
            this._isPaused = false;
            this._isSliding = false;
            this._config = this._getConfig(config);
            this._element = $(element)[0];
            this._indicatorsElement = $(this._element).find(Selector.INDICATORS)[0];
            this._addEventListeners();
        }
        // getters
        // public
        Carousel.prototype.next = function next() {
            if (this._isSliding) {
                throw new Error('Carousel is sliding');
            }
            this._slide(Direction.NEXT);
        };
        Carousel.prototype.nextWhenVisible = function nextWhenVisible() {
            // Don't call next when the page isn't visible
            if (!document.hidden) {
                this.next();
            }
        };
        Carousel.prototype.prev = function prev() {
            if (this._isSliding) {
                throw new Error('Carousel is sliding');
            }
            this._slide(Direction.PREVIOUS);
        };
        Carousel.prototype.pause = function pause(event) {
            if (!event) {
                this._isPaused = true;
            }
            if ($(this._element).find(Selector.NEXT_PREV)[0] && Util.supportsTransitionEnd()) {
                Util.triggerTransitionEnd(this._element);
                this.cycle(true);
            }
            clearInterval(this._interval);
            this._interval = null;
        };
        Carousel.prototype.cycle = function cycle(event) {
            if (!event) {
                this._isPaused = false;
            }
            if (this._interval) {
                clearInterval(this._interval);
                this._interval = null;
            }
            if (this._config.interval && !this._isPaused) {
                this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);
            }
        };
        Carousel.prototype.to = function to(index) {
            var _this = this;
            this._activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];
            var activeIndex = this._getItemIndex(this._activeElement);
            if (index > this._items.length - 1 || index < 0) {
                return;
            }
            if (this._isSliding) {
                $(this._element).one(Event.SLID, function () {
                    return _this.to(index);
                });
                return;
            }
            if (activeIndex === index) {
                this.pause();
                this.cycle();
                return;
            }
            var direction = index > activeIndex ? Direction.NEXT : Direction.PREVIOUS;
            this._slide(direction, this._items[index]);
        };
        Carousel.prototype.dispose = function dispose() {
            $(this._element).off(EVENT_KEY);
            $.removeData(this._element, DATA_KEY);
            this._items = null;
            this._config = null;
            this._element = null;
            this._interval = null;
            this._isPaused = null;
            this._isSliding = null;
            this._activeElement = null;
            this._indicatorsElement = null;
        };
        // private
        Carousel.prototype._getConfig = function _getConfig(config) {
            config = $.extend({}, Default, config);
            Util.typeCheckConfig(NAME, config, DefaultType);
            return config;
        };
        Carousel.prototype._addEventListeners = function _addEventListeners() {
            var _this2 = this;
            if (this._config.keyboard) {
                $(this._element).on(Event.KEYDOWN, function (event) {
                    return _this2._keydown(event);
                });
            }
            if (this._config.pause === 'hover' && !('ontouchstart' in document.documentElement)) {
                $(this._element).on(Event.MOUSEENTER, function (event) {
                    return _this2.pause(event);
                }).on(Event.MOUSELEAVE, function (event) {
                    return _this2.cycle(event);
                });
            }
        };
        Carousel.prototype._keydown = function _keydown(event) {
            if (/input|textarea/i.test(event.target.tagName)) {
                return;
            }
            switch (event.which) {
                case ARROW_LEFT_KEYCODE:
                    event.preventDefault();
                    this.prev();
                    break;
                case ARROW_RIGHT_KEYCODE:
                    event.preventDefault();
                    this.next();
                    break;
                default:
                    return;
            }
        };
        Carousel.prototype._getItemIndex = function _getItemIndex(element) {
            this._items = $.makeArray($(element).parent().find(Selector.ITEM));
            return this._items.indexOf(element);
        };
        Carousel.prototype._getItemByDirection = function _getItemByDirection(direction, activeElement) {
            var isNextDirection = direction === Direction.NEXT;
            var isPrevDirection = direction === Direction.PREVIOUS;
            var activeIndex = this._getItemIndex(activeElement);
            var lastItemIndex = this._items.length - 1;
            var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;
            if (isGoingToWrap && !this._config.wrap) {
                return activeElement;
            }
            var delta = direction === Direction.PREVIOUS ? -1 : 1;
            var itemIndex = (activeIndex + delta) % this._items.length;
            return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];
        };
        Carousel.prototype._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {
            var slideEvent = $.Event(Event.SLIDE, {
                relatedTarget: relatedTarget,
                direction: eventDirectionName
            });
            $(this._element).trigger(slideEvent);
            return slideEvent;
        };
        Carousel.prototype._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {
            if (this._indicatorsElement) {
                $(this._indicatorsElement).find(Selector.ACTIVE).removeClass(ClassName.ACTIVE);
                var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];
                if (nextIndicator) {
                    $(nextIndicator).addClass(ClassName.ACTIVE);
                }
            }
        };
        Carousel.prototype._slide = function _slide(direction, element) {
            var _this3 = this;
            var activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];
            var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);
            var isCycling = Boolean(this._interval);
            var directionalClassName = void 0;
            var orderClassName = void 0;
            var eventDirectionName = void 0;
            if (direction === Direction.NEXT) {
                directionalClassName = ClassName.LEFT;
                orderClassName = ClassName.NEXT;
                eventDirectionName = Direction.LEFT;
            }
            else {
                directionalClassName = ClassName.RIGHT;
                orderClassName = ClassName.PREV;
                eventDirectionName = Direction.RIGHT;
            }
            if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {
                this._isSliding = false;
                return;
            }
            var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);
            if (slideEvent.isDefaultPrevented()) {
                return;
            }
            if (!activeElement || !nextElement) {
                // some weirdness is happening, so we bail
                return;
            }
            this._isSliding = true;
            if (isCycling) {
                this.pause();
            }
            this._setActiveIndicatorElement(nextElement);
            var slidEvent = $.Event(Event.SLID, {
                relatedTarget: nextElement,
                direction: eventDirectionName
            });
            if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.SLIDE)) {
                $(nextElement).addClass(orderClassName);
                Util.reflow(nextElement);
                $(activeElement).addClass(directionalClassName);
                $(nextElement).addClass(directionalClassName);
                $(activeElement).one(Util.TRANSITION_END, function () {
                    $(nextElement).removeClass(directionalClassName + ' ' + orderClassName).addClass(ClassName.ACTIVE);
                    $(activeElement).removeClass(ClassName.ACTIVE + ' ' + orderClassName + ' ' + directionalClassName);
                    _this3._isSliding = false;
                    setTimeout(function () {
                        return $(_this3._element).trigger(slidEvent);
                    }, 0);
                }).emulateTransitionEnd(TRANSITION_DURATION);
            }
            else {
                $(activeElement).removeClass(ClassName.ACTIVE);
                $(nextElement).addClass(ClassName.ACTIVE);
                this._isSliding = false;
                $(this._element).trigger(slidEvent);
            }
            if (isCycling) {
                this.cycle();
            }
        };
        // static
        Carousel._jQueryInterface = function _jQueryInterface(config) {
            return this.each(function () {
                var data = $(this).data(DATA_KEY);
                var _config = $.extend({}, Default, $(this).data());
                if ((typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object') {
                    $.extend(_config, config);
                }
                var action = typeof config === 'string' ? config : _config.slide;
                if (!data) {
                    data = new Carousel(this, _config);
                    $(this).data(DATA_KEY, data);
                }
                if (typeof config === 'number') {
                    data.to(config);
                }
                else if (typeof action === 'string') {
                    if (data[action] === undefined) {
                        throw new Error('No method named "' + action + '"');
                    }
                    data[action]();
                }
                else if (_config.interval) {
                    data.pause();
                    data.cycle();
                }
            });
        };
        Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {
            var selector = Util.getSelectorFromElement(this);
            if (!selector) {
                return;
            }
            var target = $(selector)[0];
            if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {
                return;
            }
            var config = $.extend({}, $(target).data(), $(this).data());
            var slideIndex = this.getAttribute('data-slide-to');
            if (slideIndex) {
                config.interval = false;
            }
            Carousel._jQueryInterface.call($(target), config);
            if (slideIndex) {
                $(target).data(DATA_KEY).to(slideIndex);
            }
            event.preventDefault();
        };
        _createClass(Carousel, null, [{
                key: 'VERSION',
                get: function get() {
                    return VERSION;
                }
            }, {
                key: 'Default',
                get: function get() {
                    return Default;
                }
            }]);
        return Carousel;
    }();
    /**
     * ------------------------------------------------------------------------
     * Data Api implementation
     * ------------------------------------------------------------------------
     */
    $(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);
    $(window).on(Event.LOAD_DATA_API, function () {
        $(Selector.DATA_RIDE).each(function () {
            var $carousel = $(this);
            Carousel._jQueryInterface.call($carousel, $carousel.data());
        });
    });
    /**
     * ------------------------------------------------------------------------
     * jQuery
     * ------------------------------------------------------------------------
     */
    $.fn[NAME] = Carousel._jQueryInterface;
    $.fn[NAME].Constructor = Carousel;
    $.fn[NAME].noConflict = function () {
        $.fn[NAME] = JQUERY_NO_CONFLICT;
        return Carousel._jQueryInterface;
    };
    return Carousel;
}(jQuery);
//# sourceMappingURL=carousel.js.map
//# sourceMappingURL=data:application/json;charset=utf8;base64,
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9ib290c3RyYXAvanMvZGlzdC9jYXJvdXNlbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFJLE9BQU8sR0FBRyxPQUFPLE1BQU0sS0FBSyxVQUFVLElBQUksT0FBTyxNQUFNLENBQUMsUUFBUSxLQUFLLFFBQVEsR0FBRyxVQUFVLEdBQUcsSUFBSSxNQUFNLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsVUFBVSxHQUFHLElBQUksTUFBTSxDQUFDLEdBQUcsSUFBSSxPQUFPLE1BQU0sS0FBSyxVQUFVLElBQUksR0FBRyxDQUFDLFdBQVcsS0FBSyxNQUFNLElBQUksR0FBRyxLQUFLLE1BQU0sQ0FBQyxTQUFTLEdBQUcsUUFBUSxHQUFHLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzdRLElBQUksWUFBWSxHQUFHO0lBQ2YsMEJBQTBCLE1BQU0sRUFBRSxLQUFLO1FBQ25DLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQ3BDLElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMxQixVQUFVLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQyxVQUFVLElBQUksS0FBSyxDQUFDO1lBQ3ZELFVBQVUsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1lBQy9CLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxVQUFVLENBQUM7Z0JBQ3RCLFVBQVUsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1lBQy9CLE1BQU0sQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDOUQsQ0FBQztJQUNMLENBQUM7SUFDRCxNQUFNLENBQUMsVUFBVSxXQUFXLEVBQUUsVUFBVSxFQUFFLFdBQVc7UUFDakQsRUFBRSxDQUFDLENB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QUFDLENBQUM7QUFDVixvQ0FBb0M7QUFDcEMsK2x2Q0FBK2x2QztBQUUvbHZDLG1vK0ZBQW1vK0YiLCJmaWxlIjoid3d3L3BhY2tzL2Jvb3RzdHJhcC9qcy9kaXN0L2Nhcm91c2VsLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgICAgICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcilcbiAgICAgICAgICAgICAgICBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgICAgICBpZiAocHJvdG9Qcm9wcylcbiAgICAgICAgICAgIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICAgICAgaWYgKHN0YXRpY1Byb3BzKVxuICAgICAgICAgICAgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgICAgICByZXR1cm4gQ29uc3RydWN0b3I7XG4gICAgfTtcbn0oKTtcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbn1cbi8qKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEJvb3RzdHJhcCAodjQuMC4wLWFscGhhLjYpOiBjYXJvdXNlbC5qc1xuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cbnZhciBDYXJvdXNlbCA9IGZ1bmN0aW9uICgkKSB7XG4gICAgLyoqXG4gICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICogQ29uc3RhbnRzXG4gICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICovXG4gICAgdmFyIE5BTUUgPSAnY2Fyb3VzZWwnO1xuICAgIHZhciBWRVJTSU9OID0gJzQuMC4wLWFscGhhLjYnO1xuICAgIHZhciBEQVRBX0tFWSA9ICdicy5jYXJvdXNlbCc7XG4gICAgdmFyIEVWRU5UX0tFWSA9ICcuJyArIERBVEFfS0VZO1xuICAgIHZhciBEQVRBX0FQSV9LRVkgPSAnLmRhdGEtYXBpJztcbiAgICB2YXIgSlFVRVJZX05PX0NPTkZMSUNUID0gJC5mbltOQU1FXTtcbiAgICB2YXIgVFJBTlNJVElPTl9EVVJBVElPTiA9IDYwMDtcbiAgICB2YXIgQVJST1dfTEVGVF9LRVlDT0RFID0gMzc7IC8vIEtleWJvYXJkRXZlbnQud2hpY2ggdmFsdWUgZm9yIGxlZnQgYXJyb3cga2V5XG4gICAgdmFyIEFSUk9XX1JJR0hUX0tFWUNPREUgPSAzOTsgLy8gS2V5Ym9hcmRFdmVudC53aGljaCB2YWx1ZSBmb3IgcmlnaHQgYXJyb3cga2V5XG4gICAgdmFyIERlZmF1bHQgPSB7XG4gICAgICAgIGludGVydmFsOiA1MDAwLFxuICAgICAgICBrZXlib2FyZDogdHJ1ZSxcbiAgICAgICAgc2xpZGU6IGZhbHNlLFxuICAgICAgICBwYXVzZTogJ2hvdmVyJyxcbiAgICAgICAgd3JhcDogdHJ1ZVxuICAgIH07XG4gICAgdmFyIERlZmF1bHRUeXBlID0ge1xuICAgICAgICBpbnRlcnZhbDogJyhudW1iZXJ8Ym9vbGVhbiknLFxuICAgICAgICBrZXlib2FyZDogJ2Jvb2xlYW4nLFxuICAgICAgICBzbGlkZTogJyhib29sZWFufHN0cmluZyknLFxuICAgICAgICBwYXVzZTogJyhzdHJpbmd8Ym9vbGVhbiknLFxuICAgICAgICB3cmFwOiAnYm9vbGVhbidcbiAgICB9O1xuICAgIHZhciBEaXJlY3Rpb24gPSB7XG4gICAgICAgIE5FWFQ6ICduZXh0JyxcbiAgICAgICAgUFJFVjogJ3ByZXYnLFxuICAgICAgICBMRUZUOiAnbGVmdCcsXG4gICAgICAgIFJJR0hUOiAncmlnaHQnXG4gICAgfTtcbiAgICB2YXIgRXZlbnQgPSB7XG4gICAgICAgIFNMSURFOiAnc2xpZGUnICsgRVZFTlRfS0VZLFxuICAgICAgICBTTElEOiAnc2xpZCcgKyBFVkVOVF9LRVksXG4gICAgICAgIEtFWURPV046ICdrZXlkb3duJyArIEVWRU5UX0tFWSxcbiAgICAgICAgTU9VU0VFTlRFUjogJ21vdXNlZW50ZXInICsgRVZFTlRfS0VZLFxuICAgICAgICBNT1VTRUxFQVZFOiAnbW91c2VsZWF2ZScgKyBFVkVOVF9LRVksXG4gICAgICAgIExPQURfREFUQV9BUEk6ICdsb2FkJyArIEVWRU5UX0tFWSArIERBVEFfQVBJX0tFWSxcbiAgICAgICAgQ0xJQ0tfREFUQV9BUEk6ICdjbGljaycgKyBFVkVOVF9LRVkgKyBEQVRBX0FQSV9LRVlcbiAgICB9O1xuICAgIHZhciBDbGFzc05hbWUgPSB7XG4gICAgICAgIENBUk9VU0VMOiAnY2Fyb3VzZWwnLFxuICAgICAgICBBQ1RJVkU6ICdhY3RpdmUnLFxuICAgICAgICBTTElERTogJ3NsaWRlJyxcbiAgICAgICAgUklHSFQ6ICdjYXJvdXNlbC1pdGVtLXJpZ2h0JyxcbiAgICAgICAgTEVGVDogJ2Nhcm91c2VsLWl0ZW0tbGVmdCcsXG4gICAgICAgIE5FWFQ6ICdjYXJvdXNlbC1pdGVtLW5leHQnLFxuICAgICAgICBQUkVWOiAnY2Fyb3VzZWwtaXRlbS1wcmV2JyxcbiAgICAgICAgSVRFTTogJ2Nhcm91c2VsLWl0ZW0nXG4gICAgfTtcbiAgICB2YXIgU2VsZWN0b3IgPSB7XG4gICAgICAgIEFDVElWRTogJy5hY3RpdmUnLFxuICAgICAgICBBQ1RJVkVfSVRFTTogJy5hY3RpdmUuY2Fyb3VzZWwtaXRlbScsXG4gICAgICAgIElURU06ICcuY2Fyb3VzZWwtaXRlbScsXG4gICAgICAgIE5FWFRfUFJFVjogJy5jYXJvdXNlbC1pdGVtLW5leHQsIC5jYXJvdXNlbC1pdGVtLXByZXYnLFxuICAgICAgICBJTkRJQ0FUT1JTOiAnLmNhcm91c2VsLWluZGljYXRvcnMnLFxuICAgICAgICBEQVRBX1NMSURFOiAnW2RhdGEtc2xpZGVdLCBbZGF0YS1zbGlkZS10b10nLFxuICAgICAgICBEQVRBX1JJREU6ICdbZGF0YS1yaWRlPVwiY2Fyb3VzZWxcIl0nXG4gICAgfTtcbiAgICAvKipcbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgKiBDbGFzcyBEZWZpbml0aW9uXG4gICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICovXG4gICAgdmFyIENhcm91c2VsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBmdW5jdGlvbiBDYXJvdXNlbChlbGVtZW50LCBjb25maWcpIHtcbiAgICAgICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDYXJvdXNlbCk7XG4gICAgICAgICAgICB0aGlzLl9pdGVtcyA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLl9pbnRlcnZhbCA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLl9hY3RpdmVFbGVtZW50ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuX2lzUGF1c2VkID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLl9pc1NsaWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZyA9IHRoaXMuX2dldENvbmZpZyhjb25maWcpO1xuICAgICAgICAgICAgdGhpcy5fZWxlbWVudCA9ICQoZWxlbWVudClbMF07XG4gICAgICAgICAgICB0aGlzLl9pbmRpY2F0b3JzRWxlbWVudCA9ICQodGhpcy5fZWxlbWVudCkuZmluZChTZWxlY3Rvci5JTkRJQ0FUT1JTKVswXTtcbiAgICAgICAgICAgIHRoaXMuX2FkZEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZ2V0dGVyc1xuICAgICAgICAvLyBwdWJsaWNcbiAgICAgICAgQ2Fyb3VzZWwucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2lzU2xpZGluZykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fyb3VzZWwgaXMgc2xpZGluZycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fc2xpZGUoRGlyZWN0aW9uLk5FWFQpO1xuICAgICAgICB9O1xuICAgICAgICBDYXJvdXNlbC5wcm90b3R5cGUubmV4dFdoZW5WaXNpYmxlID0gZnVuY3Rpb24gbmV4dFdoZW5WaXNpYmxlKCkge1xuICAgICAgICAgICAgLy8gRG9uJ3QgY2FsbCBuZXh0IHdoZW4gdGhlIHBhZ2UgaXNuJ3QgdmlzaWJsZVxuICAgICAgICAgICAgaWYgKCFkb2N1bWVudC5oaWRkZW4pIHtcbiAgICAgICAgICAgICAgICB0aGlzLm5leHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgQ2Fyb3VzZWwucHJvdG90eXBlLnByZXYgPSBmdW5jdGlvbiBwcmV2KCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2lzU2xpZGluZykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fyb3VzZWwgaXMgc2xpZGluZycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fc2xpZGUoRGlyZWN0aW9uLlBSRVZJT1VTKTtcbiAgICAgICAgfTtcbiAgICAgICAgQ2Fyb3VzZWwucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24gcGF1c2UoZXZlbnQpIHtcbiAgICAgICAgICAgIGlmICghZXZlbnQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9pc1BhdXNlZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoJCh0aGlzLl9lbGVtZW50KS5maW5kKFNlbGVjdG9yLk5FWFRfUFJFVilbMF0gJiYgVXRpbC5zdXBwb3J0c1RyYW5zaXRpb25FbmQoKSkge1xuICAgICAgICAgICAgICAgIFV0aWwudHJpZ2dlclRyYW5zaXRpb25FbmQodGhpcy5fZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jeWNsZSh0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5faW50ZXJ2YWwpO1xuICAgICAgICAgICAgdGhpcy5faW50ZXJ2YWwgPSBudWxsO1xuICAgICAgICB9O1xuICAgICAgICBDYXJvdXNlbC5wcm90b3R5cGUuY3ljbGUgPSBmdW5jdGlvbiBjeWNsZShldmVudCkge1xuICAgICAgICAgICAgaWYgKCFldmVudCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2lzUGF1c2VkID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5faW50ZXJ2YWwpIHtcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuX2ludGVydmFsKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9pbnRlcnZhbCA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5fY29uZmlnLmludGVydmFsICYmICF0aGlzLl9pc1BhdXNlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2ludGVydmFsID0gc2V0SW50ZXJ2YWwoKGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSA/IHRoaXMubmV4dFdoZW5WaXNpYmxlIDogdGhpcy5uZXh0KS5iaW5kKHRoaXMpLCB0aGlzLl9jb25maWcuaW50ZXJ2YWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBDYXJvdXNlbC5wcm90b3R5cGUudG8gPSBmdW5jdGlvbiB0byhpbmRleCkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnQgPSAkKHRoaXMuX2VsZW1lbnQpLmZpbmQoU2VsZWN0b3IuQUNUSVZFX0lURU0pWzBdO1xuICAgICAgICAgICAgdmFyIGFjdGl2ZUluZGV4ID0gdGhpcy5fZ2V0SXRlbUluZGV4KHRoaXMuX2FjdGl2ZUVsZW1lbnQpO1xuICAgICAgICAgICAgaWYgKGluZGV4ID4gdGhpcy5faXRlbXMubGVuZ3RoIC0gMSB8fCBpbmRleCA8IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5faXNTbGlkaW5nKSB7XG4gICAgICAgICAgICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbmUoRXZlbnQuU0xJRCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMudG8oaW5kZXgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhY3RpdmVJbmRleCA9PT0gaW5kZXgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhdXNlKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jeWNsZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBkaXJlY3Rpb24gPSBpbmRleCA+IGFjdGl2ZUluZGV4ID8gRGlyZWN0aW9uLk5FWFQgOiBEaXJlY3Rpb24uUFJFVklPVVM7XG4gICAgICAgICAgICB0aGlzLl9zbGlkZShkaXJlY3Rpb24sIHRoaXMuX2l0ZW1zW2luZGV4XSk7XG4gICAgICAgIH07XG4gICAgICAgIENhcm91c2VsLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgICAgICAgICQodGhpcy5fZWxlbWVudCkub2ZmKEVWRU5UX0tFWSk7XG4gICAgICAgICAgICAkLnJlbW92ZURhdGEodGhpcy5fZWxlbWVudCwgREFUQV9LRVkpO1xuICAgICAgICAgICAgdGhpcy5faXRlbXMgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5faW50ZXJ2YWwgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5faXNQYXVzZWQgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5faXNTbGlkaW5nID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnQgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5faW5kaWNhdG9yc0VsZW1lbnQgPSBudWxsO1xuICAgICAgICB9O1xuICAgICAgICAvLyBwcml2YXRlXG4gICAgICAgIENhcm91c2VsLnByb3RvdHlwZS5fZ2V0Q29uZmlnID0gZnVuY3Rpb24gX2dldENvbmZpZyhjb25maWcpIHtcbiAgICAgICAgICAgIGNvbmZpZyA9ICQuZXh0ZW5kKHt9LCBEZWZhdWx0LCBjb25maWcpO1xuICAgICAgICAgICAgVXRpbC50eXBlQ2hlY2tDb25maWcoTkFNRSwgY29uZmlnLCBEZWZhdWx0VHlwZSk7XG4gICAgICAgICAgICByZXR1cm4gY29uZmlnO1xuICAgICAgICB9O1xuICAgICAgICBDYXJvdXNlbC5wcm90b3R5cGUuX2FkZEV2ZW50TGlzdGVuZXJzID0gZnVuY3Rpb24gX2FkZEV2ZW50TGlzdGVuZXJzKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG4gICAgICAgICAgICBpZiAodGhpcy5fY29uZmlnLmtleWJvYXJkKSB7XG4gICAgICAgICAgICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbihFdmVudC5LRVlET1dOLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5fa2V5ZG93bihldmVudCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5fY29uZmlnLnBhdXNlID09PSAnaG92ZXInICYmICEoJ29udG91Y2hzdGFydCcgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSkge1xuICAgICAgICAgICAgICAgICQodGhpcy5fZWxlbWVudCkub24oRXZlbnQuTU9VU0VFTlRFUiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIucGF1c2UoZXZlbnQpO1xuICAgICAgICAgICAgICAgIH0pLm9uKEV2ZW50Lk1PVVNFTEVBVkUsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLmN5Y2xlKGV2ZW50KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgQ2Fyb3VzZWwucHJvdG90eXBlLl9rZXlkb3duID0gZnVuY3Rpb24gX2tleWRvd24oZXZlbnQpIHtcbiAgICAgICAgICAgIGlmICgvaW5wdXR8dGV4dGFyZWEvaS50ZXN0KGV2ZW50LnRhcmdldC50YWdOYW1lKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHN3aXRjaCAoZXZlbnQud2hpY2gpIHtcbiAgICAgICAgICAgICAgICBjYXNlIEFSUk9XX0xFRlRfS0VZQ09ERTpcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmV2KCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgQVJST1dfUklHSFRfS0VZQ09ERTpcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgQ2Fyb3VzZWwucHJvdG90eXBlLl9nZXRJdGVtSW5kZXggPSBmdW5jdGlvbiBfZ2V0SXRlbUluZGV4KGVsZW1lbnQpIHtcbiAgICAgICAgICAgIHRoaXMuX2l0ZW1zID0gJC5tYWtlQXJyYXkoJChlbGVtZW50KS5wYXJlbnQoKS5maW5kKFNlbGVjdG9yLklURU0pKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9pdGVtcy5pbmRleE9mKGVsZW1lbnQpO1xuICAgICAgICB9O1xuICAgICAgICBDYXJvdXNlbC5wcm90b3R5cGUuX2dldEl0ZW1CeURpcmVjdGlvbiA9IGZ1bmN0aW9uIF9nZXRJdGVtQnlEaXJlY3Rpb24oZGlyZWN0aW9uLCBhY3RpdmVFbGVtZW50KSB7XG4gICAgICAgICAgICB2YXIgaXNOZXh0RGlyZWN0aW9uID0gZGlyZWN0aW9uID09PSBEaXJlY3Rpb24uTkVYVDtcbiAgICAgICAgICAgIHZhciBpc1ByZXZEaXJlY3Rpb24gPSBkaXJlY3Rpb24gPT09IERpcmVjdGlvbi5QUkVWSU9VUztcbiAgICAgICAgICAgIHZhciBhY3RpdmVJbmRleCA9IHRoaXMuX2dldEl0ZW1JbmRleChhY3RpdmVFbGVtZW50KTtcbiAgICAgICAgICAgIHZhciBsYXN0SXRlbUluZGV4ID0gdGhpcy5faXRlbXMubGVuZ3RoIC0gMTtcbiAgICAgICAgICAgIHZhciBpc0dvaW5nVG9XcmFwID0gaXNQcmV2RGlyZWN0aW9uICYmIGFjdGl2ZUluZGV4ID09PSAwIHx8IGlzTmV4dERpcmVjdGlvbiAmJiBhY3RpdmVJbmRleCA9PT0gbGFzdEl0ZW1JbmRleDtcbiAgICAgICAgICAgIGlmIChpc0dvaW5nVG9XcmFwICYmICF0aGlzLl9jb25maWcud3JhcCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhY3RpdmVFbGVtZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGRlbHRhID0gZGlyZWN0aW9uID09PSBEaXJlY3Rpb24uUFJFVklPVVMgPyAtMSA6IDE7XG4gICAgICAgICAgICB2YXIgaXRlbUluZGV4ID0gKGFjdGl2ZUluZGV4ICsgZGVsdGEpICUgdGhpcy5faXRlbXMubGVuZ3RoO1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW1JbmRleCA9PT0gLTEgPyB0aGlzLl9pdGVtc1t0aGlzLl9pdGVtcy5sZW5ndGggLSAxXSA6IHRoaXMuX2l0ZW1zW2l0ZW1JbmRleF07XG4gICAgICAgIH07XG4gICAgICAgIENhcm91c2VsLnByb3RvdHlwZS5fdHJpZ2dlclNsaWRlRXZlbnQgPSBmdW5jdGlvbiBfdHJpZ2dlclNsaWRlRXZlbnQocmVsYXRlZFRhcmdldCwgZXZlbnREaXJlY3Rpb25OYW1lKSB7XG4gICAgICAgICAgICB2YXIgc2xpZGVFdmVudCA9ICQuRXZlbnQoRXZlbnQuU0xJREUsIHtcbiAgICAgICAgICAgICAgICByZWxhdGVkVGFyZ2V0OiByZWxhdGVkVGFyZ2V0LFxuICAgICAgICAgICAgICAgIGRpcmVjdGlvbjogZXZlbnREaXJlY3Rpb25OYW1lXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICQodGhpcy5fZWxlbWVudCkudHJpZ2dlcihzbGlkZUV2ZW50KTtcbiAgICAgICAgICAgIHJldHVybiBzbGlkZUV2ZW50O1xuICAgICAgICB9O1xuICAgICAgICBDYXJvdXNlbC5wcm90b3R5cGUuX3NldEFjdGl2ZUluZGljYXRvckVsZW1lbnQgPSBmdW5jdGlvbiBfc2V0QWN0aXZlSW5kaWNhdG9yRWxlbWVudChlbGVtZW50KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5faW5kaWNhdG9yc0VsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAkKHRoaXMuX2luZGljYXRvcnNFbGVtZW50KS5maW5kKFNlbGVjdG9yLkFDVElWRSkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lLkFDVElWRSk7XG4gICAgICAgICAgICAgICAgdmFyIG5leHRJbmRpY2F0b3IgPSB0aGlzLl9pbmRpY2F0b3JzRWxlbWVudC5jaGlsZHJlblt0aGlzLl9nZXRJdGVtSW5kZXgoZWxlbWVudCldO1xuICAgICAgICAgICAgICAgIGlmIChuZXh0SW5kaWNhdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgICQobmV4dEluZGljYXRvcikuYWRkQ2xhc3MoQ2xhc3NOYW1lLkFDVElWRSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBDYXJvdXNlbC5wcm90b3R5cGUuX3NsaWRlID0gZnVuY3Rpb24gX3NsaWRlKGRpcmVjdGlvbiwgZWxlbWVudCkge1xuICAgICAgICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG4gICAgICAgICAgICB2YXIgYWN0aXZlRWxlbWVudCA9ICQodGhpcy5fZWxlbWVudCkuZmluZChTZWxlY3Rvci5BQ1RJVkVfSVRFTSlbMF07XG4gICAgICAgICAgICB2YXIgbmV4dEVsZW1lbnQgPSBlbGVtZW50IHx8IGFjdGl2ZUVsZW1lbnQgJiYgdGhpcy5fZ2V0SXRlbUJ5RGlyZWN0aW9uKGRpcmVjdGlvbiwgYWN0aXZlRWxlbWVudCk7XG4gICAgICAgICAgICB2YXIgaXNDeWNsaW5nID0gQm9vbGVhbih0aGlzLl9pbnRlcnZhbCk7XG4gICAgICAgICAgICB2YXIgZGlyZWN0aW9uYWxDbGFzc05hbWUgPSB2b2lkIDA7XG4gICAgICAgICAgICB2YXIgb3JkZXJDbGFzc05hbWUgPSB2b2lkIDA7XG4gICAgICAgICAgICB2YXIgZXZlbnREaXJlY3Rpb25OYW1lID0gdm9pZCAwO1xuICAgICAgICAgICAgaWYgKGRpcmVjdGlvbiA9PT0gRGlyZWN0aW9uLk5FWFQpIHtcbiAgICAgICAgICAgICAgICBkaXJlY3Rpb25hbENsYXNzTmFtZSA9IENsYXNzTmFtZS5MRUZUO1xuICAgICAgICAgICAgICAgIG9yZGVyQ2xhc3NOYW1lID0gQ2xhc3NOYW1lLk5FWFQ7XG4gICAgICAgICAgICAgICAgZXZlbnREaXJlY3Rpb25OYW1lID0gRGlyZWN0aW9uLkxFRlQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBkaXJlY3Rpb25hbENsYXNzTmFtZSA9IENsYXNzTmFtZS5SSUdIVDtcbiAgICAgICAgICAgICAgICBvcmRlckNsYXNzTmFtZSA9IENsYXNzTmFtZS5QUkVWO1xuICAgICAgICAgICAgICAgIGV2ZW50RGlyZWN0aW9uTmFtZSA9IERpcmVjdGlvbi5SSUdIVDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChuZXh0RWxlbWVudCAmJiAkKG5leHRFbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUuQUNUSVZFKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2lzU2xpZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBzbGlkZUV2ZW50ID0gdGhpcy5fdHJpZ2dlclNsaWRlRXZlbnQobmV4dEVsZW1lbnQsIGV2ZW50RGlyZWN0aW9uTmFtZSk7XG4gICAgICAgICAgICBpZiAoc2xpZGVFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghYWN0aXZlRWxlbWVudCB8fCAhbmV4dEVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAvLyBzb21lIHdlaXJkbmVzcyBpcyBoYXBwZW5pbmcsIHNvIHdlIGJhaWxcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9pc1NsaWRpbmcgPSB0cnVlO1xuICAgICAgICAgICAgaWYgKGlzQ3ljbGluZykge1xuICAgICAgICAgICAgICAgIHRoaXMucGF1c2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX3NldEFjdGl2ZUluZGljYXRvckVsZW1lbnQobmV4dEVsZW1lbnQpO1xuICAgICAgICAgICAgdmFyIHNsaWRFdmVudCA9ICQuRXZlbnQoRXZlbnQuU0xJRCwge1xuICAgICAgICAgICAgICAgIHJlbGF0ZWRUYXJnZXQ6IG5leHRFbGVtZW50LFxuICAgICAgICAgICAgICAgIGRpcmVjdGlvbjogZXZlbnREaXJlY3Rpb25OYW1lXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChVdGlsLnN1cHBvcnRzVHJhbnNpdGlvbkVuZCgpICYmICQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLlNMSURFKSkge1xuICAgICAgICAgICAgICAgICQobmV4dEVsZW1lbnQpLmFkZENsYXNzKG9yZGVyQ2xhc3NOYW1lKTtcbiAgICAgICAgICAgICAgICBVdGlsLnJlZmxvdyhuZXh0RWxlbWVudCk7XG4gICAgICAgICAgICAgICAgJChhY3RpdmVFbGVtZW50KS5hZGRDbGFzcyhkaXJlY3Rpb25hbENsYXNzTmFtZSk7XG4gICAgICAgICAgICAgICAgJChuZXh0RWxlbWVudCkuYWRkQ2xhc3MoZGlyZWN0aW9uYWxDbGFzc05hbWUpO1xuICAgICAgICAgICAgICAgICQoYWN0aXZlRWxlbWVudCkub25lKFV0aWwuVFJBTlNJVElPTl9FTkQsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgJChuZXh0RWxlbWVudCkucmVtb3ZlQ2xhc3MoZGlyZWN0aW9uYWxDbGFzc05hbWUgKyAnICcgKyBvcmRlckNsYXNzTmFtZSkuYWRkQ2xhc3MoQ2xhc3NOYW1lLkFDVElWRSk7XG4gICAgICAgICAgICAgICAgICAgICQoYWN0aXZlRWxlbWVudCkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lLkFDVElWRSArICcgJyArIG9yZGVyQ2xhc3NOYW1lICsgJyAnICsgZGlyZWN0aW9uYWxDbGFzc05hbWUpO1xuICAgICAgICAgICAgICAgICAgICBfdGhpczMuX2lzU2xpZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkKF90aGlzMy5fZWxlbWVudCkudHJpZ2dlcihzbGlkRXZlbnQpO1xuICAgICAgICAgICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgICAgICAgICB9KS5lbXVsYXRlVHJhbnNpdGlvbkVuZChUUkFOU0lUSU9OX0RVUkFUSU9OKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICQoYWN0aXZlRWxlbWVudCkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lLkFDVElWRSk7XG4gICAgICAgICAgICAgICAgJChuZXh0RWxlbWVudCkuYWRkQ2xhc3MoQ2xhc3NOYW1lLkFDVElWRSk7XG4gICAgICAgICAgICAgICAgdGhpcy5faXNTbGlkaW5nID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgJCh0aGlzLl9lbGVtZW50KS50cmlnZ2VyKHNsaWRFdmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaXNDeWNsaW5nKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jeWNsZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICAvLyBzdGF0aWNcbiAgICAgICAgQ2Fyb3VzZWwuX2pRdWVyeUludGVyZmFjZSA9IGZ1bmN0aW9uIF9qUXVlcnlJbnRlcmZhY2UoY29uZmlnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9ICQodGhpcykuZGF0YShEQVRBX0tFWSk7XG4gICAgICAgICAgICAgICAgdmFyIF9jb25maWcgPSAkLmV4dGVuZCh7fSwgRGVmYXVsdCwgJCh0aGlzKS5kYXRhKCkpO1xuICAgICAgICAgICAgICAgIGlmICgodHlwZW9mIGNvbmZpZyA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoY29uZmlnKSkgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICAgICQuZXh0ZW5kKF9jb25maWcsIGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBhY3Rpb24gPSB0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJyA/IGNvbmZpZyA6IF9jb25maWcuc2xpZGU7XG4gICAgICAgICAgICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSBuZXcgQ2Fyb3VzZWwodGhpcywgX2NvbmZpZyk7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuZGF0YShEQVRBX0tFWSwgZGF0YSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgY29uZmlnID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgICAgICBkYXRhLnRvKGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBhY3Rpb24gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhW2FjdGlvbl0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBtZXRob2QgbmFtZWQgXCInICsgYWN0aW9uICsgJ1wiJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZGF0YVthY3Rpb25dKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKF9jb25maWcuaW50ZXJ2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5wYXVzZSgpO1xuICAgICAgICAgICAgICAgICAgICBkYXRhLmN5Y2xlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIENhcm91c2VsLl9kYXRhQXBpQ2xpY2tIYW5kbGVyID0gZnVuY3Rpb24gX2RhdGFBcGlDbGlja0hhbmRsZXIoZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBzZWxlY3RvciA9IFV0aWwuZ2V0U2VsZWN0b3JGcm9tRWxlbWVudCh0aGlzKTtcbiAgICAgICAgICAgIGlmICghc2VsZWN0b3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gJChzZWxlY3RvcilbMF07XG4gICAgICAgICAgICBpZiAoIXRhcmdldCB8fCAhJCh0YXJnZXQpLmhhc0NsYXNzKENsYXNzTmFtZS5DQVJPVVNFTCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgY29uZmlnID0gJC5leHRlbmQoe30sICQodGFyZ2V0KS5kYXRhKCksICQodGhpcykuZGF0YSgpKTtcbiAgICAgICAgICAgIHZhciBzbGlkZUluZGV4ID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2RhdGEtc2xpZGUtdG8nKTtcbiAgICAgICAgICAgIGlmIChzbGlkZUluZGV4KSB7XG4gICAgICAgICAgICAgICAgY29uZmlnLmludGVydmFsID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBDYXJvdXNlbC5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoJCh0YXJnZXQpLCBjb25maWcpO1xuICAgICAgICAgICAgaWYgKHNsaWRlSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAkKHRhcmdldCkuZGF0YShEQVRBX0tFWSkudG8oc2xpZGVJbmRleCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9O1xuICAgICAgICBfY3JlYXRlQ2xhc3MoQ2Fyb3VzZWwsIG51bGwsIFt7XG4gICAgICAgICAgICAgICAga2V5OiAnVkVSU0lPTicsXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBWRVJTSU9OO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBrZXk6ICdEZWZhdWx0JyxcbiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIERlZmF1bHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfV0pO1xuICAgICAgICByZXR1cm4gQ2Fyb3VzZWw7XG4gICAgfSgpO1xuICAgIC8qKlxuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqIERhdGEgQXBpIGltcGxlbWVudGF0aW9uXG4gICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICovXG4gICAgJChkb2N1bWVudCkub24oRXZlbnQuQ0xJQ0tfREFUQV9BUEksIFNlbGVjdG9yLkRBVEFfU0xJREUsIENhcm91c2VsLl9kYXRhQXBpQ2xpY2tIYW5kbGVyKTtcbiAgICAkKHdpbmRvdykub24oRXZlbnQuTE9BRF9EQVRBX0FQSSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAkKFNlbGVjdG9yLkRBVEFfUklERSkuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgJGNhcm91c2VsID0gJCh0aGlzKTtcbiAgICAgICAgICAgIENhcm91c2VsLl9qUXVlcnlJbnRlcmZhY2UuY2FsbCgkY2Fyb3VzZWwsICRjYXJvdXNlbC5kYXRhKCkpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgKiBqUXVlcnlcbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgKi9cbiAgICAkLmZuW05BTUVdID0gQ2Fyb3VzZWwuX2pRdWVyeUludGVyZmFjZTtcbiAgICAkLmZuW05BTUVdLkNvbnN0cnVjdG9yID0gQ2Fyb3VzZWw7XG4gICAgJC5mbltOQU1FXS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAkLmZuW05BTUVdID0gSlFVRVJZX05PX0NPTkZMSUNUO1xuICAgICAgICByZXR1cm4gQ2Fyb3VzZWwuX2pRdWVyeUludGVyZmFjZTtcbiAgICB9O1xuICAgIHJldHVybiBDYXJvdXNlbDtcbn0oalF1ZXJ5KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNhcm91c2VsLmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbmQzZHk5d1lXTnJjeTlpYjI5MGMzUnlZWEF2YW5NdlpHbHpkQzlqWVhKdmRYTmxiQzVxY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeEpRVUZKTEU5QlFVOHNSMEZCUnl4UFFVRlBMRTFCUVUwc1MwRkJTeXhWUVVGVkxFbEJRVWtzVDBGQlR5eE5RVUZOTEVOQlFVTXNVVUZCVVN4TFFVRkxMRkZCUVZFc1IwRkJSeXhWUVVGVkxFZEJRVWNzU1VGQlNTeE5RVUZOTEVOQlFVTXNUMEZCVHl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFZEJRVWNzVlVGQlZTeEhRVUZITEVsQlFVa3NUVUZCVFN4RFFVRkRMRWRCUVVjc1NVRkJTU3hQUVVGUExFMUJRVTBzUzBGQlN5eFZRVUZWTEVsQlFVa3NSMEZCUnl4RFFVRkRMRmRCUVZjc1MwRkJTeXhOUVVGTkxFbEJRVWtzUjBGQlJ5eExRVUZMTEUxQlFVMHNRMEZCUXl4VFFVRlRMRWRCUVVjc1VVRkJVU3hIUVVGSExFOUJRVThzUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUlRkUkxFbEJRVWtzV1VGQldTeEhRVUZITEdOQlFXTXNNRUpCUVRCQ0xFMUJRVTBzUlVGQlJTeExRVUZMTEVsQlFVa3NSMEZCUnl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNc1RVRkJUU3hGUVVGRkxFTkJRVU1zUlVGQlJTeEZRVUZGTEVOQlFVTTdTVUZCUXl4SlFVRkpMRlZCUVZVc1IwRkJSeXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdTVUZCUXl4VlFVRlZMRU5CUVVNc1ZVRkJWU3hIUVVGSExGVkJRVlVzUTBGQlF5eFZRVUZWTEVsQlFVa3NTMEZCU3l4RFFVRkRPMGxCUVVNc1ZVRkJWU3hEUVVGRExGbEJRVmtzUjBGQlJ5eEpRVUZKTEVOQlFVTTdTVUZCUXl4RlFVRkZMRU5CUVVNc1EwRkJReXhQUVVGUExFbEJRVWtzVlVGQlZTeERRVUZETzFGQlFVTXNWVUZCVlN4RFFVRkRMRkZCUVZFc1IwRkJSeXhKUVVGSkxFTkJRVU03U1VGQlF5eE5RVUZOTEVOQlFVTXNZMEZCWXl4RFFVRkRMRTFCUVUwc1JVRkJSU3hWUVVGVkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEZWQlFWVXNRMEZCUXl4RFFVRkRPMEZCUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNWVUZCVlN4WFFVRlhMRVZCUVVVc1ZVRkJWU3hGUVVGRkxGZEJRVmNzU1VGQlNTeEZRVUZGTEVOQlFVTXNRMEZCUXl4VlFVRlZMRU5CUVVNN1NVRkJReXhuUWtGQlowSXNRMEZCUXl4WFFVRlhMRU5CUVVNc1UwRkJVeXhGUVVGRkxGVkJRVlVzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRE8wbEJRVU1zWjBKQlFXZENMRU5CUVVNc1YwRkJWeXhGUVVGRkxGZEJRVmNzUTBGQlF5eERRVUZETEVOQlFVTXNUVUZCVFN4RFFVRkRMRmRCUVZjc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRPMEZCUlhCcVFpeDVRa0ZCZVVJc1VVRkJVU3hGUVVGRkxGZEJRVmNzU1VGQlNTeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1VVRkJVU3haUVVGWkxGZEJRVmNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVRkRMRTFCUVUwc1NVRkJTU3hUUVVGVExFTkJRVU1zYlVOQlFXMURMRU5CUVVNc1EwRkJRenRCUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBGQlJYcEtPenM3T3p0SFFVdEhPMEZCUlVnc1NVRkJTU3hSUVVGUkxFZEJRVWNzVlVGQlZTeERRVUZETzBsQlJYaENPenM3TzA5QlNVYzdTVUZGU0N4SlFVRkpMRWxCUVVrc1IwRkJSeXhWUVVGVkxFTkJRVU03U1VGRGRFSXNTVUZCU1N4UFFVRlBMRWRCUVVjc1pVRkJaU3hEUVVGRE8wbEJRemxDTEVsQlFVa3NVVUZCVVN4SFFVRkhMR0ZCUVdFc1EwRkJRenRKUVVNM1FpeEpRVUZKTEZOQlFWTXNSMEZCUnl4SFFVRkhMRWRCUVVjc1VVRkJVU3hEUVVGRE8wbEJReTlDTEVsQlFVa3NXVUZCV1N4SFFVRkhMRmRCUVZjc1EwRkJRenRKUVVNdlFpeEpRVUZKTEd0Q1FVRnJRaXhIUVVGSExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1NVRkRjRU1zU1VGQlNTeHRRa0ZCYlVJc1IwRkJSeXhIUVVGSExFTkJRVU03U1VGRE9VSXNTVUZCU1N4clFrRkJhMElzUjBGQlJ5eEZRVUZGTEVOQlFVTXNRMEZCUXl3clEwRkJLME03U1VGRE5VVXNTVUZCU1N4dFFrRkJiVUlzUjBGQlJ5eEZRVUZGTEVOQlFVTXNRMEZCUXl4blJFRkJaMFE3U1VGRk9VVXNTVUZCU1N4UFFVRlBMRWRCUVVjN1VVRkRXaXhSUVVGUkxFVkJRVVVzU1VGQlNUdFJRVU5rTEZGQlFWRXNSVUZCUlN4SlFVRkpPMUZCUTJRc1MwRkJTeXhGUVVGRkxFdEJRVXM3VVVGRFdpeExRVUZMTEVWQlFVVXNUMEZCVHp0UlFVTmtMRWxCUVVrc1JVRkJSU3hKUVVGSk8wdEJRMWdzUTBGQlF6dEpRVVZHTEVsQlFVa3NWMEZCVnl4SFFVRkhPMUZCUTJoQ0xGRkJRVkVzUlVGQlJTeHJRa0ZCYTBJN1VVRkROVUlzVVVGQlVTeEZRVUZGTEZOQlFWTTdVVUZEYmtJc1MwRkJTeXhGUVVGRkxHdENRVUZyUWp0UlFVTjZRaXhMUVVGTExFVkJRVVVzYTBKQlFXdENPMUZCUTNwQ0xFbEJRVWtzUlVGQlJTeFRRVUZUTzB0QlEyaENMRU5CUVVNN1NVRkZSaXhKUVVGSkxGTkJRVk1zUjBGQlJ6dFJRVU5rTEVsQlFVa3NSVUZCUlN4TlFVRk5PMUZCUTFvc1NVRkJTU3hGUVVGRkxFMUJRVTA3VVVGRFdpeEpRVUZKTEVWQlFVVXNUVUZCVFR0UlFVTmFMRXRCUVVzc1JVRkJSU3hQUVVGUE8wdEJRMllzUTBGQlF6dEpRVVZHTEVsQlFVa3NTMEZCU3l4SFFVRkhPMUZCUTFZc1MwRkJTeXhGUVVGRkxFOUJRVThzUjBGQlJ5eFRRVUZUTzFGQlF6RkNMRWxCUVVrc1JVRkJSU3hOUVVGTkxFZEJRVWNzVTBGQlV6dFJRVU40UWl4UFFVRlBMRVZCUVVVc1UwRkJVeXhIUVVGSExGTkJRVk03VVVGRE9VSXNWVUZCVlN4RlFVRkZMRmxCUVZrc1IwRkJSeXhUUVVGVE8xRkJRM0JETEZWQlFWVXNSVUZCUlN4WlFVRlpMRWRCUVVjc1UwRkJVenRSUVVOd1F5eGhRVUZoTEVWQlFVVXNUVUZCVFN4SFFVRkhMRk5CUVZNc1IwRkJSeXhaUVVGWk8xRkJRMmhFTEdOQlFXTXNSVUZCUlN4UFFVRlBMRWRCUVVjc1UwRkJVeXhIUVVGSExGbEJRVms3UzBGRGJrUXNRMEZCUXp0SlFVVkdMRWxCUVVrc1UwRkJVeXhIUVVGSE8xRkJRMlFzVVVGQlVTeEZRVUZGTEZWQlFWVTdVVUZEY0VJc1RVRkJUU3hGUVVGRkxGRkJRVkU3VVVGRGFFSXNTMEZCU3l4RlFVRkZMRTlCUVU4N1VVRkRaQ3hMUVVGTExFVkJRVVVzY1VKQlFYRkNPMUZCUXpWQ0xFbEJRVWtzUlVGQlJTeHZRa0ZCYjBJN1VVRkRNVUlzU1VGQlNTeEZRVUZGTEc5Q1FVRnZRanRSUVVNeFFpeEpRVUZKTEVWQlFVVXNiMEpCUVc5Q08xRkJRekZDTEVsQlFVa3NSVUZCUlN4bFFVRmxPMHRCUTNSQ0xFTkJRVU03U1VGRlJpeEpRVUZKTEZGQlFWRXNSMEZCUnp0UlFVTmlMRTFCUVUwc1JVRkJSU3hUUVVGVE8xRkJRMnBDTEZkQlFWY3NSVUZCUlN4MVFrRkJkVUk3VVVGRGNFTXNTVUZCU1N4RlFVRkZMR2RDUVVGblFqdFJRVU4wUWl4VFFVRlRMRVZCUVVVc01FTkJRVEJETzFGQlEzSkVMRlZCUVZVc1JVRkJSU3h6UWtGQmMwSTdVVUZEYkVNc1ZVRkJWU3hGUVVGRkxDdENRVUVyUWp0UlFVTXpReXhUUVVGVExFVkJRVVVzZDBKQlFYZENPMHRCUTNCRExFTkJRVU03U1VGRlJqczdPenRQUVVsSE8wbEJSVWdzU1VGQlNTeFJRVUZSTEVkQlFVYzdVVUZEWWl4clFrRkJhMElzVDBGQlR5eEZRVUZGTEUxQlFVMDdXVUZETDBJc1pVRkJaU3hEUVVGRExFbEJRVWtzUlVGQlJTeFJRVUZSTEVOQlFVTXNRMEZCUXp0WlFVVm9ReXhKUVVGSkxFTkJRVU1zVFVGQlRTeEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVTnVRaXhKUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVTjBRaXhKUVVGSkxFTkJRVU1zWTBGQll5eEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVVXpRaXhKUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEV0QlFVc3NRMEZCUXp0WlFVTjJRaXhKUVVGSkxFTkJRVU1zVlVGQlZTeEhRVUZITEV0QlFVc3NRMEZCUXp0WlFVVjRRaXhKUVVGSkxFTkJRVU1zVDBGQlR5eEhRVUZITEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU03V1VGRGRrTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1IwRkJSeXhEUVVGRExFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRPVUlzU1VGQlNTeERRVUZETEd0Q1FVRnJRaXhIUVVGSExFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eFZRVUZWTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVWNFJTeEpRVUZKTEVOQlFVTXNhMEpCUVd0Q0xFVkJRVVVzUTBGQlF6dFJRVU0xUWl4RFFVRkRPMUZCUlVRc1ZVRkJWVHRSUVVWV0xGTkJRVk03VVVGRlZDeFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1IwRkJSenRaUVVONFFpeEZRVUZGTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU1zUTBGQlF6dG5Ra0ZEY0VJc1RVRkJUU3hKUVVGSkxFdEJRVXNzUTBGQlF5eHhRa0ZCY1VJc1EwRkJReXhEUVVGRE8xbEJRM3BETEVOQlFVTTdXVUZEUkN4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0UlFVTTVRaXhEUVVGRExFTkJRVU03VVVGRlJpeFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRMR1ZCUVdVc1IwRkJSenRaUVVOdVF5dzRRMEZCT0VNN1dVRkRPVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF6dG5Ra0ZEY2tJc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzFsQlEyUXNRMEZCUXp0UlFVTklMRU5CUVVNc1EwRkJRenRSUVVWR0xGRkJRVkVzUTBGQlF5eFRRVUZUTEVOQlFVTXNTVUZCU1N4SFFVRkhPMWxCUTNoQ0xFVkJRVVVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU53UWl4TlFVRk5MRWxCUVVrc1MwRkJTeXhEUVVGRExIRkNRVUZ4UWl4RFFVRkRMRU5CUVVNN1dVRkRla01zUTBGQlF6dFpRVU5FTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1UwRkJVeXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETzFGQlEyeERMRU5CUVVNc1EwRkJRenRSUVVWR0xGRkJRVkVzUTBGQlF5eFRRVUZUTEVOQlFVTXNTMEZCU3l4SFFVRkhMR1ZCUVdVc1MwRkJTenRaUVVNM1F5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlExZ3NTVUZCU1N4RFFVRkRMRk5CUVZNc1IwRkJSeXhKUVVGSkxFTkJRVU03V1VGRGVFSXNRMEZCUXp0WlFVVkVMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1NVRkJTU3hKUVVGSkxFTkJRVU1zY1VKQlFYRkNMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlEycEdMRWxCUVVrc1EwRkJReXh2UWtGQmIwSXNRMEZCUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU03WjBKQlEzcERMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdXVUZEYmtJc1EwRkJRenRaUVVWRUxHRkJRV0VzUTBGQlF5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN1dVRkRPVUlzU1VGQlNTeERRVUZETEZOQlFWTXNSMEZCUnl4SlFVRkpMRU5CUVVNN1VVRkRlRUlzUTBGQlF5eERRVUZETzFGQlJVWXNVVUZCVVN4RFFVRkRMRk5CUVZNc1EwRkJReXhMUVVGTExFZEJRVWNzWlVGQlpTeExRVUZMTzFsQlF6ZERMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRXQ3hKUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEV0QlFVc3NRMEZCUXp0WlFVTjZRaXhEUVVGRE8xbEJSVVFzUlVGQlJTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlEyNUNMR0ZCUVdFc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTTdaMEpCUXpsQ0xFbEJRVWtzUTBGQlF5eFRRVUZUTEVkQlFVY3NTVUZCU1N4RFFVRkRPMWxCUTNoQ0xFTkJRVU03V1VGRlJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExGRkJRVkVzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU0zUXl4SlFVRkpMRU5CUVVNc1UwRkJVeXhIUVVGSExGZEJRVmNzUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4bFFVRmxMRWRCUVVjc1NVRkJTU3hEUVVGRExHVkJRV1VzUjBGQlJ5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU03V1VGRGFFa3NRMEZCUXp0UlFVTklMRU5CUVVNc1EwRkJRenRSUVVWR0xGRkJRVkVzUTBGQlF5eFRRVUZUTEVOQlFVTXNSVUZCUlN4SFFVRkhMRmxCUVZrc1MwRkJTenRaUVVOMlF5eEpRVUZKTEV0QlFVc3NSMEZCUnl4SlFVRkpMRU5CUVVNN1dVRkZha0lzU1VGQlNTeERRVUZETEdOQlFXTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1YwRkJWeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZGY2tVc1NVRkJTU3hYUVVGWExFZEJRVWNzU1VGQlNTeERRVUZETEdGQlFXRXNRMEZCUXl4SlFVRkpMRU5CUVVNc1kwRkJZeXhEUVVGRExFTkJRVU03V1VGRk1VUXNSVUZCUlN4RFFVRkRMRU5CUVVNc1MwRkJTeXhIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1NVRkJTU3hMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRhRVFzVFVGQlRTeERRVUZETzFsQlExUXNRMEZCUXp0WlFVVkVMRVZCUVVVc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVOd1FpeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RlFVRkZPMjlDUVVNdlFpeE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUVVVc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dG5Ra0ZEZWtJc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlEwZ3NUVUZCVFN4RFFVRkRPMWxCUTFRc1EwRkJRenRaUVVWRUxFVkJRVVVzUTBGQlF5eERRVUZETEZkQlFWY3NTMEZCU3l4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU14UWl4SlFVRkpMRU5CUVVNc1MwRkJTeXhGUVVGRkxFTkJRVU03WjBKQlEySXNTVUZCU1N4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRE8yZENRVU5pTEUxQlFVMHNRMEZCUXp0WlFVTlVMRU5CUVVNN1dVRkZSQ3hKUVVGSkxGTkJRVk1zUjBGQlJ5eExRVUZMTEVkQlFVY3NWMEZCVnl4SFFVRkhMRk5CUVZNc1EwRkJReXhKUVVGSkxFZEJRVWNzVTBGQlV5eERRVUZETEZGQlFWRXNRMEZCUXp0WlFVVXhSU3hKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZOQlFWTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTTdVVUZETjBNc1EwRkJReXhEUVVGRE8xRkJSVVlzVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXl4UFFVRlBMRWRCUVVjN1dVRkRNMElzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTTdXVUZEYUVNc1EwRkJReXhEUVVGRExGVkJRVlVzUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZMRkZCUVZFc1EwRkJReXhEUVVGRE8xbEJSWFJETEVsQlFVa3NRMEZCUXl4TlFVRk5MRWRCUVVjc1NVRkJTU3hEUVVGRE8xbEJRMjVDTEVsQlFVa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1NVRkJTU3hEUVVGRE8xbEJRM0JDTEVsQlFVa3NRMEZCUXl4UlFVRlJMRWRCUVVjc1NVRkJTU3hEUVVGRE8xbEJRM0pDTEVsQlFVa3NRMEZCUXl4VFFVRlRMRWRCUVVjc1NVRkJTU3hEUVVGRE8xbEJRM1JDTEVsQlFVa3NRMEZCUXl4VFFVRlRMRWRCUVVjc1NVRkJTU3hEUVVGRE8xbEJRM1JDTEVsQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1NVRkJTU3hEUVVGRE8xbEJRM1pDTEVsQlFVa3NRMEZCUXl4alFVRmpMRWRCUVVjc1NVRkJTU3hEUVVGRE8xbEJRek5DTEVsQlFVa3NRMEZCUXl4clFrRkJhMElzUjBGQlJ5eEpRVUZKTEVOQlFVTTdVVUZEYWtNc1EwRkJReXhEUVVGRE8xRkJSVVlzVlVGQlZUdFJRVVZXTEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1ZVRkJWU3hIUVVGSExHOUNRVUZ2UWl4TlFVRk5PMWxCUTNoRUxFMUJRVTBzUjBGQlJ5eERRVUZETEVOQlFVTXNUVUZCVFN4RFFVRkRMRVZCUVVVc1JVRkJSU3hQUVVGUExFVkJRVVVzVFVGQlRTeERRVUZETEVOQlFVTTdXVUZEZGtNc1NVRkJTU3hEUVVGRExHVkJRV1VzUTBGQlF5eEpRVUZKTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1EwRkJReXhEUVVGRE8xbEJRMmhFTEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNN1VVRkRhRUlzUTBGQlF5eERRVUZETzFGQlJVWXNVVUZCVVN4RFFVRkRMRk5CUVZNc1EwRkJReXhyUWtGQmEwSXNSMEZCUnp0WlFVTjBReXhKUVVGSkxFMUJRVTBzUjBGQlJ5eEpRVUZKTEVOQlFVTTdXVUZGYkVJc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU14UWl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhGUVVGRkxGVkJRVlVzUzBGQlN6dHZRa0ZEYUVRc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1owSkJRMmhETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTB3c1EwRkJRenRaUVVWRUxFVkJRVVVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1MwRkJTeXhMUVVGTExFOUJRVThzU1VGQlNTeERRVUZETEVOQlFVTXNZMEZCWXl4SlFVRkpMRkZCUVZFc1EwRkJReXhsUVVGbExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdaMEpCUTNCR0xFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFdEJRVXNzUTBGQlF5eFZRVUZWTEVWQlFVVXNWVUZCVlN4TFFVRkxPMjlDUVVOdVJDeE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dG5Ra0ZETjBJc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEV0QlFVc3NRMEZCUXl4VlFVRlZMRVZCUVVVc1ZVRkJWU3hMUVVGTE8yOUNRVU55UXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXp0blFrRkROMElzUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEVEN4RFFVRkRPMUZCUTBnc1EwRkJReXhEUVVGRE8xRkJSVVlzVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXl4UlFVRlJMRWRCUVVjc2EwSkJRV3RDTEV0QlFVczdXVUZEYmtRc1JVRkJSU3hEUVVGRExFTkJRVU1zYVVKQlFXbENMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU5xUkN4TlFVRk5MRU5CUVVNN1dVRkRWQ3hEUVVGRE8xbEJSVVFzVFVGQlRTeERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlEzQkNMRXRCUVVzc2EwSkJRV3RDTzI5Q1FVTnlRaXhMUVVGTExFTkJRVU1zWTBGQll5eEZRVUZGTEVOQlFVTTdiMEpCUTNaQ0xFbEJRVWtzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0dlFrRkRXaXhMUVVGTExFTkJRVU03WjBKQlExSXNTMEZCU3l4dFFrRkJiVUk3YjBKQlEzUkNMRXRCUVVzc1EwRkJReXhqUVVGakxFVkJRVVVzUTBGQlF6dHZRa0ZEZGtJc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzI5Q1FVTmFMRXRCUVVzc1EwRkJRenRuUWtGRFVqdHZRa0ZEUlN4TlFVRk5MRU5CUVVNN1dVRkRXQ3hEUVVGRE8xRkJRMGdzUTBGQlF5eERRVUZETzFGQlJVWXNVVUZCVVN4RFFVRkRMRk5CUVZNc1EwRkJReXhoUVVGaExFZEJRVWNzZFVKQlFYVkNMRTlCUVU4N1dVRkRMMFFzU1VGQlNTeERRVUZETEUxQlFVMHNSMEZCUnl4RFFVRkRMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJReXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRia1VzVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETzFGQlEzUkRMRU5CUVVNc1EwRkJRenRSUVVWR0xGRkJRVkVzUTBGQlF5eFRRVUZUTEVOQlFVTXNiVUpCUVcxQ0xFZEJRVWNzTmtKQlFUWkNMRk5CUVZNc1JVRkJSU3hoUVVGaE8xbEJRelZHTEVsQlFVa3NaVUZCWlN4SFFVRkhMRk5CUVZNc1MwRkJTeXhUUVVGVExFTkJRVU1zU1VGQlNTeERRVUZETzFsQlEyNUVMRWxCUVVrc1pVRkJaU3hIUVVGSExGTkJRVk1zUzBGQlN5eFRRVUZUTEVOQlFVTXNVVUZCVVN4RFFVRkRPMWxCUTNaRUxFbEJRVWtzVjBGQlZ5eEhRVUZITEVsQlFVa3NRMEZCUXl4aFFVRmhMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU03V1VGRGNFUXNTVUZCU1N4aFFVRmhMRWRCUVVjc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVkQlFVY3NRMEZCUXl4RFFVRkRPMWxCUXpORExFbEJRVWtzWVVGQllTeEhRVUZITEdWQlFXVXNTVUZCU1N4WFFVRlhMRXRCUVVzc1EwRkJReXhKUVVGSkxHVkJRV1VzU1VGQlNTeFhRVUZYTEV0QlFVc3NZVUZCWVN4RFFVRkRPMWxCUlRkSExFVkJRVVVzUTBGQlF5eERRVUZETEdGQlFXRXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRlRU1zVFVGQlRTeERRVUZETEdGQlFXRXNRMEZCUXp0WlFVTjJRaXhEUVVGRE8xbEJSVVFzU1VGQlNTeExRVUZMTEVkQlFVY3NVMEZCVXl4TFFVRkxMRk5CUVZNc1EwRkJReXhSUVVGUkxFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRPMWxCUTNSRUxFbEJRVWtzVTBGQlV5eEhRVUZITEVOQlFVTXNWMEZCVnl4SFFVRkhMRXRCUVVzc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRPMWxCUlRORUxFMUJRVTBzUTBGQlF5eFRRVUZUTEV0QlFVc3NRMEZCUXl4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1IwRkJSeXhEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRE8xRkJRM3BHTEVOQlFVTXNRMEZCUXp0UlFVVkdMRkZCUVZFc1EwRkJReXhUUVVGVExFTkJRVU1zYTBKQlFXdENMRWRCUVVjc05FSkJRVFJDTEdGQlFXRXNSVUZCUlN4clFrRkJhMEk3V1VGRGJrY3NTVUZCU1N4VlFVRlZMRWRCUVVjc1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNTMEZCU3l4RlFVRkZPMmRDUVVOd1F5eGhRVUZoTEVWQlFVVXNZVUZCWVR0blFrRkROVUlzVTBGQlV5eEZRVUZGTEd0Q1FVRnJRanRoUVVNNVFpeERRVUZETEVOQlFVTTdXVUZGU0N4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJRenRaUVVWeVF5eE5RVUZOTEVOQlFVTXNWVUZCVlN4RFFVRkRPMUZCUTNCQ0xFTkJRVU1zUTBGQlF6dFJRVVZHTEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNc01FSkJRVEJDTEVkQlFVY3NiME5CUVc5RExFOUJRVTg3V1VGRGVrWXNSVUZCUlN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExHdENRVUZyUWl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRE5VSXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhyUWtGQmEwSXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNWMEZCVnl4RFFVRkRMRk5CUVZNc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF6dG5Ra0ZGTDBVc1NVRkJTU3hoUVVGaExFZEJRVWNzU1VGQlNTeERRVUZETEd0Q1FVRnJRaXhEUVVGRExGRkJRVkVzUTBGQlF5eEpRVUZKTEVOQlFVTXNZVUZCWVN4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlJXeEdMRVZCUVVVc1EwRkJReXhEUVVGRExHRkJRV0VzUTBGQlF5eERRVUZETEVOQlFVTTdiMEpCUTJ4Q0xFTkJRVU1zUTBGQlF5eGhRVUZoTEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzJkQ1FVTTVReXhEUVVGRE8xbEJRMGdzUTBGQlF6dFJRVU5JTEVOQlFVTXNRMEZCUXp0UlFVVkdMRkZCUVZFc1EwRkJReXhUUVVGVExFTkJRVU1zVFVGQlRTeEhRVUZITEdkQ1FVRm5RaXhUUVVGVExFVkJRVVVzVDBGQlR6dFpRVU0xUkN4SlFVRkpMRTFCUVUwc1IwRkJSeXhKUVVGSkxFTkJRVU03V1VGRmJFSXNTVUZCU1N4aFFVRmhMRWRCUVVjc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTI1RkxFbEJRVWtzVjBGQlZ5eEhRVUZITEU5QlFVOHNTVUZCU1N4aFFVRmhMRWxCUVVrc1NVRkJTU3hEUVVGRExHMUNRVUZ0UWl4RFFVRkRMRk5CUVZNc1JVRkJSU3hoUVVGaExFTkJRVU1zUTBGQlF6dFpRVVZxUnl4SlFVRkpMRk5CUVZNc1IwRkJSeXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRPMWxCUlhoRExFbEJRVWtzYjBKQlFXOUNMRWRCUVVjc1MwRkJTeXhEUVVGRExFTkJRVU03V1VGRGJFTXNTVUZCU1N4alFVRmpMRWRCUVVjc1MwRkJTeXhEUVVGRExFTkJRVU03V1VGRE5VSXNTVUZCU1N4clFrRkJhMElzUjBGQlJ5eExRVUZMTEVOQlFVTXNRMEZCUXp0WlFVVm9ReXhGUVVGRkxFTkJRVU1zUTBGQlF5eFRRVUZUTEV0QlFVc3NVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlEycERMRzlDUVVGdlFpeEhRVUZITEZOQlFWTXNRMEZCUXl4SlFVRkpMRU5CUVVNN1owSkJRM1JETEdOQlFXTXNSMEZCUnl4VFFVRlRMRU5CUVVNc1NVRkJTU3hEUVVGRE8yZENRVU5vUXl4clFrRkJhMElzUjBGQlJ5eFRRVUZUTEVOQlFVTXNTVUZCU1N4RFFVRkRPMWxCUTNSRExFTkJRVU03V1VGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0blFrRkRUaXh2UWtGQmIwSXNSMEZCUnl4VFFVRlRMRU5CUVVNc1MwRkJTeXhEUVVGRE8yZENRVU4yUXl4alFVRmpMRWRCUVVjc1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF6dG5Ra0ZEYUVNc2EwSkJRV3RDTEVkQlFVY3NVMEZCVXl4RFFVRkRMRXRCUVVzc1EwRkJRenRaUVVOMlF5eERRVUZETzFsQlJVUXNSVUZCUlN4RFFVRkRMRU5CUVVNc1YwRkJWeXhKUVVGSkxFTkJRVU1zUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkROMFFzU1VGQlNTeERRVUZETEZWQlFWVXNSMEZCUnl4TFFVRkxMRU5CUVVNN1owSkJRM2hDTEUxQlFVMHNRMEZCUXp0WlFVTlVMRU5CUVVNN1dVRkZSQ3hKUVVGSkxGVkJRVlVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNhMEpCUVd0Q0xFTkJRVU1zVjBGQlZ5eEZRVUZGTEd0Q1FVRnJRaXhEUVVGRExFTkJRVU03V1VGRE1VVXNSVUZCUlN4RFFVRkRMRU5CUVVNc1ZVRkJWU3hEUVVGRExHdENRVUZyUWl4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU53UXl4TlFVRk5MRU5CUVVNN1dVRkRWQ3hEUVVGRE8xbEJSVVFzUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXl4aFFVRmhMRWxCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTnVReXd3UTBGQk1FTTdaMEpCUXpGRExFMUJRVTBzUTBGQlF6dFpRVU5VTEVOQlFVTTdXVUZGUkN4SlFVRkpMRU5CUVVNc1ZVRkJWU3hIUVVGSExFbEJRVWtzUTBGQlF6dFpRVVYyUWl4RlFVRkZMRU5CUVVNc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTmtMRWxCUVVrc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF6dFpRVU5tTEVOQlFVTTdXVUZGUkN4SlFVRkpMRU5CUVVNc01FSkJRVEJDTEVOQlFVTXNWMEZCVnl4RFFVRkRMRU5CUVVNN1dVRkZOME1zU1VGQlNTeFRRVUZUTEVkQlFVY3NRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeEZRVUZGTzJkQ1FVTnNReXhoUVVGaExFVkJRVVVzVjBGQlZ6dG5Ra0ZETVVJc1UwRkJVeXhGUVVGRkxHdENRVUZyUWp0aFFVTTVRaXhEUVVGRExFTkJRVU03V1VGRlNDeEZRVUZGTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc2NVSkJRWEZDTEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVVXZSU3hEUVVGRExFTkJRVU1zVjBGQlZ5eERRVUZETEVOQlFVTXNVVUZCVVN4RFFVRkRMR05CUVdNc1EwRkJReXhEUVVGRE8yZENRVVY0UXl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETzJkQ1FVVjZRaXhEUVVGRExFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTXNVVUZCVVN4RFFVRkRMRzlDUVVGdlFpeERRVUZETEVOQlFVTTdaMEpCUTJoRUxFTkJRVU1zUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc2IwSkJRVzlDTEVOQlFVTXNRMEZCUXp0blFrRkZPVU1zUTBGQlF5eERRVUZETEdGQlFXRXNRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zWTBGQll5eEZRVUZGTzI5Q1FVTjRReXhEUVVGRExFTkJRVU1zVjBGQlZ5eERRVUZETEVOQlFVTXNWMEZCVnl4RFFVRkRMRzlDUVVGdlFpeEhRVUZITEVkQlFVY3NSMEZCUnl4alFVRmpMRU5CUVVNc1EwRkJReXhSUVVGUkxFTkJRVU1zVTBGQlV5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRPMjlDUVVWdVJ5eERRVUZETEVOQlFVTXNZVUZCWVN4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRExGTkJRVk1zUTBGQlF5eE5RVUZOTEVkQlFVY3NSMEZCUnl4SFFVRkhMR05CUVdNc1IwRkJSeXhIUVVGSExFZEJRVWNzYjBKQlFXOUNMRU5CUVVNc1EwRkJRenR2UWtGRmJrY3NUVUZCVFN4RFFVRkRMRlZCUVZVc1IwRkJSeXhMUVVGTExFTkJRVU03YjBKQlJURkNMRlZCUVZVc1EwRkJRenQzUWtGRFZDeE5RVUZOTEVOQlFVTXNRMEZCUXl4RFFVRkRMRTFCUVUwc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN2IwSkJReTlETEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRFVpeERRVUZETEVOQlFVTXNRMEZCUXl4dlFrRkJiMElzUTBGQlF5eHRRa0ZCYlVJc1EwRkJReXhEUVVGRE8xbEJReTlETEVOQlFVTTdXVUZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRuUWtGRFRpeERRVUZETEVOQlFVTXNZVUZCWVN4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRExGTkJRVk1zUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXp0blFrRkRMME1zUTBGQlF5eERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRMRkZCUVZFc1EwRkJReXhUUVVGVExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTTdaMEpCUlRGRExFbEJRVWtzUTBGQlF5eFZRVUZWTEVkQlFVY3NTMEZCU3l4RFFVRkRPMmRDUVVONFFpeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXp0WlFVTjBReXhEUVVGRE8xbEJSVVFzUlVGQlJTeERRVUZETEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRFpDeEpRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkZMRU5CUVVNN1dVRkRaaXhEUVVGRE8xRkJRMGdzUTBGQlF5eERRVUZETzFGQlJVWXNVMEZCVXp0UlFVVlVMRkZCUVZFc1EwRkJReXhuUWtGQlowSXNSMEZCUnl3d1FrRkJNRUlzVFVGQlRUdFpRVU14UkN4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF6dG5Ra0ZEWml4SlFVRkpMRWxCUVVrc1IwRkJSeXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRE8yZENRVU5zUXl4SlFVRkpMRTlCUVU4c1IwRkJSeXhEUVVGRExFTkJRVU1zVFVGQlRTeERRVUZETEVWQlFVVXNSVUZCUlN4UFFVRlBMRVZCUVVVc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRMRU5CUVVNN1owSkJSWEJFTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1QwRkJUeXhOUVVGTkxFdEJRVXNzVjBGQlZ5eEhRVUZITEZkQlFWY3NSMEZCUnl4UFFVRlBMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUzBGQlN5eFJRVUZSTEVOQlFVTXNRMEZCUXl4RFFVRkRPMjlDUVVOcVJpeERRVUZETEVOQlFVTXNUVUZCVFN4RFFVRkRMRTlCUVU4c1JVRkJSU3hOUVVGTkxFTkJRVU1zUTBGQlF6dG5Ra0ZETlVJc1EwRkJRenRuUWtGRlJDeEpRVUZKTEUxQlFVMHNSMEZCUnl4UFFVRlBMRTFCUVUwc1MwRkJTeXhSUVVGUkxFZEJRVWNzVFVGQlRTeEhRVUZITEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNN1owSkJSV3BGTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZEVml4SlFVRkpMRWRCUVVjc1NVRkJTU3hSUVVGUkxFTkJRVU1zU1VGQlNTeEZRVUZGTEU5QlFVOHNRMEZCUXl4RFFVRkRPMjlDUVVOdVF5eERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJTeEpRVUZKTEVOQlFVTXNRMEZCUXp0blFrRkRMMElzUTBGQlF6dG5Ra0ZGUkN4RlFVRkZMRU5CUVVNc1EwRkJReXhQUVVGUExFMUJRVTBzUzBGQlN5eFJRVUZSTEVOQlFVTXNRMEZCUXl4RFFVRkRPMjlDUVVNdlFpeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRE8yZENRVU5zUWl4RFFVRkRPMmRDUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4UFFVRlBMRTFCUVUwc1MwRkJTeXhSUVVGUkxFTkJRVU1zUTBGQlF5eERRVUZETzI5Q1FVTjBReXhGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRXRCUVVzc1UwRkJVeXhEUVVGRExFTkJRVU1zUTBGQlF6dDNRa0ZETDBJc1RVRkJUU3hKUVVGSkxFdEJRVXNzUTBGQlF5eHRRa0ZCYlVJc1IwRkJSeXhOUVVGTkxFZEJRVWNzUjBGQlJ5eERRVUZETEVOQlFVTTdiMEpCUTNSRUxFTkJRVU03YjBKQlEwUXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhGUVVGRkxFTkJRVU03WjBKQlEycENMRU5CUVVNN1owSkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF5eERRVUZETzI5Q1FVTTFRaXhKUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTTdiMEpCUTJJc1NVRkJTU3hEUVVGRExFdEJRVXNzUlVGQlJTeERRVUZETzJkQ1FVTm1MRU5CUVVNN1dVRkRTQ3hEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU5NTEVOQlFVTXNRMEZCUXp0UlFVVkdMRkZCUVZFc1EwRkJReXh2UWtGQmIwSXNSMEZCUnl3NFFrRkJPRUlzUzBGQlN6dFpRVU5xUlN4SlFVRkpMRkZCUVZFc1IwRkJSeXhKUVVGSkxFTkJRVU1zYzBKQlFYTkNMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03V1VGRmFrUXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTmtMRTFCUVUwc1EwRkJRenRaUVVOVUxFTkJRVU03V1VGRlJDeEpRVUZKTEUxQlFVMHNSMEZCUnl4RFFVRkRMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZGTlVJc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eE5RVUZOTEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlEzWkVMRTFCUVUwc1EwRkJRenRaUVVOVUxFTkJRVU03V1VGRlJDeEpRVUZKTEUxQlFVMHNSMEZCUnl4RFFVRkRMRU5CUVVNc1RVRkJUU3hEUVVGRExFVkJRVVVzUlVGQlJTeERRVUZETEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1NVRkJTU3hGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRWxCUVVrc1JVRkJSU3hEUVVGRExFTkJRVU03V1VGRE5VUXNTVUZCU1N4VlFVRlZMRWRCUVVjc1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eGxRVUZsTEVOQlFVTXNRMEZCUXp0WlFVVndSQ3hGUVVGRkxFTkJRVU1zUTBGQlF5eFZRVUZWTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVObUxFMUJRVTBzUTBGQlF5eFJRVUZSTEVkQlFVY3NTMEZCU3l4RFFVRkRPMWxCUXpGQ0xFTkJRVU03V1VGRlJDeFJRVUZSTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXl4TlFVRk5MRU5CUVVNc1JVRkJSU3hOUVVGTkxFTkJRVU1zUTBGQlF6dFpRVVZzUkN4RlFVRkZMRU5CUVVNc1EwRkJReXhWUVVGVkxFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTm1MRU5CUVVNc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETzFsQlF6RkRMRU5CUVVNN1dVRkZSQ3hMUVVGTExFTkJRVU1zWTBGQll5eEZRVUZGTEVOQlFVTTdVVUZEZWtJc1EwRkJReXhEUVVGRE8xRkJSVVlzV1VGQldTeERRVUZETEZGQlFWRXNSVUZCUlN4SlFVRkpMRVZCUVVVc1EwRkJRenRuUWtGRE5VSXNSMEZCUnl4RlFVRkZMRk5CUVZNN1owSkJRMlFzUjBGQlJ5eEZRVUZGTzI5Q1FVTklMRTFCUVUwc1EwRkJReXhQUVVGUExFTkJRVU03WjBKQlEycENMRU5CUVVNN1lVRkRSaXhGUVVGRk8yZENRVU5FTEVkQlFVY3NSVUZCUlN4VFFVRlRPMmRDUVVOa0xFZEJRVWNzUlVGQlJUdHZRa0ZEU0N4TlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRE8yZENRVU5xUWl4RFFVRkRPMkZCUTBZc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRlNpeE5RVUZOTEVOQlFVTXNVVUZCVVN4RFFVRkRPMGxCUTJ4Q0xFTkJRVU1zUlVGQlJTeERRVUZETzBsQlJVbzdPenM3VDBGSlJ6dEpRVVZJTEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUzBGQlN5eERRVUZETEdOQlFXTXNSVUZCUlN4UlFVRlJMRU5CUVVNc1ZVRkJWU3hGUVVGRkxGRkJRVkVzUTBGQlF5eHZRa0ZCYjBJc1EwRkJReXhEUVVGRE8wbEJSWHBHTEVOQlFVTXNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUzBGQlN5eERRVUZETEdGQlFXRXNSVUZCUlR0UlFVTm9ReXhEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJRenRaUVVONlFpeEpRVUZKTEZOQlFWTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03V1VGRGVFSXNVVUZCVVN4RFFVRkRMR2RDUVVGblFpeERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRVZCUVVVc1UwRkJVeXhEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETEVOQlFVTTdVVUZET1VRc1EwRkJReXhEUVVGRExFTkJRVU03U1VGRFRDeERRVUZETEVOQlFVTXNRMEZCUXp0SlFVVklPenM3TzA5QlNVYzdTVUZGU0N4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEZGQlFWRXNRMEZCUXl4blFrRkJaMElzUTBGQlF6dEpRVU4yUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEZkQlFWY3NSMEZCUnl4UlFVRlJMRU5CUVVNN1NVRkRiRU1zUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhWUVVGVkxFZEJRVWM3VVVGRGRFSXNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eHJRa0ZCYTBJc1EwRkJRenRSUVVOb1F5eE5RVUZOTEVOQlFVTXNVVUZCVVN4RFFVRkRMR2RDUVVGblFpeERRVUZETzBsQlEyNURMRU5CUVVNc1EwRkJRenRKUVVWR0xFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTTdRVUZEYkVJc1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzBGQlExWXNiME5CUVc5RElpd2labWxzWlNJNkluZDNkeTl3WVdOcmN5OWliMjkwYzNSeVlYQXZhbk12WkdsemRDOWpZWEp2ZFhObGJDNXFjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW5aaGNpQmZkSGx3Wlc5bUlEMGdkSGx3Wlc5bUlGTjViV0p2YkNBOVBUMGdYQ0ptZFc1amRHbHZibHdpSUNZbUlIUjVjR1Z2WmlCVGVXMWliMnd1YVhSbGNtRjBiM0lnUFQwOUlGd2ljM2x0WW05c1hDSWdQeUJtZFc1amRHbHZiaUFvYjJKcUtTQjdJSEpsZEhWeWJpQjBlWEJsYjJZZ2IySnFPeUI5SURvZ1puVnVZM1JwYjI0Z0tHOWlhaWtnZXlCeVpYUjFjbTRnYjJKcUlDWW1JSFI1Y0dWdlppQlRlVzFpYjJ3Z1BUMDlJRndpWm5WdVkzUnBiMjVjSWlBbUppQnZZbW91WTI5dWMzUnlkV04wYjNJZ1BUMDlJRk41YldKdmJDQW1KaUJ2WW1vZ0lUMDlJRk41YldKdmJDNXdjbTkwYjNSNWNHVWdQeUJjSW5ONWJXSnZiRndpSURvZ2RIbHdaVzltSUc5aWFqc2dmVHRjYmx4dWRtRnlJRjlqY21WaGRHVkRiR0Z6Y3lBOUlHWjFibU4wYVc5dUlDZ3BJSHNnWm5WdVkzUnBiMjRnWkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWgwWVhKblpYUXNJSEJ5YjNCektTQjdJR1p2Y2lBb2RtRnlJR2tnUFNBd095QnBJRHdnY0hKdmNITXViR1Z1WjNSb095QnBLeXNwSUhzZ2RtRnlJR1JsYzJOeWFYQjBiM0lnUFNCd2NtOXdjMXRwWFRzZ1pHVnpZM0pwY0hSdmNpNWxiblZ0WlhKaFlteGxJRDBnWkdWelkzSnBjSFJ2Y2k1bGJuVnRaWEpoWW14bElIeDhJR1poYkhObE95QmtaWE5qY21sd2RHOXlMbU52Ym1acFozVnlZV0pzWlNBOUlIUnlkV1U3SUdsbUlDaGNJblpoYkhWbFhDSWdhVzRnWkdWelkzSnBjSFJ2Y2lrZ1pHVnpZM0pwY0hSdmNpNTNjbWwwWVdKc1pTQTlJSFJ5ZFdVN0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2gwWVhKblpYUXNJR1JsYzJOeWFYQjBiM0l1YTJWNUxDQmtaWE5qY21sd2RHOXlLVHNnZlNCOUlISmxkSFZ5YmlCbWRXNWpkR2x2YmlBb1EyOXVjM1J5ZFdOMGIzSXNJSEJ5YjNSdlVISnZjSE1zSUhOMFlYUnBZMUJ5YjNCektTQjdJR2xtSUNod2NtOTBiMUJ5YjNCektTQmtaV1pwYm1WUWNtOXdaWEowYVdWektFTnZibk4wY25WamRHOXlMbkJ5YjNSdmRIbHdaU3dnY0hKdmRHOVFjbTl3Y3lrN0lHbG1JQ2h6ZEdGMGFXTlFjbTl3Y3lrZ1pHVm1hVzVsVUhKdmNHVnlkR2xsY3loRGIyNXpkSEoxWTNSdmNpd2djM1JoZEdsalVISnZjSE1wT3lCeVpYUjFjbTRnUTI5dWMzUnlkV04wYjNJN0lIMDdJSDBvS1R0Y2JseHVablZ1WTNScGIyNGdYMk5zWVhOelEyRnNiRU5vWldOcktHbHVjM1JoYm1ObExDQkRiMjV6ZEhKMVkzUnZjaWtnZXlCcFppQW9JU2hwYm5OMFlXNWpaU0JwYm5OMFlXNWpaVzltSUVOdmJuTjBjblZqZEc5eUtTa2dleUIwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0Z3aVEyRnVibTkwSUdOaGJHd2dZU0JqYkdGemN5QmhjeUJoSUdaMWJtTjBhVzl1WENJcE95QjlJSDFjYmx4dUx5b3FYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ29nUW05dmRITjBjbUZ3SUNoMk5DNHdMakF0WVd4d2FHRXVOaWs2SUdOaGNtOTFjMlZzTG1welhHNGdLaUJNYVdObGJuTmxaQ0IxYm1SbGNpQk5TVlFnS0doMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5MGQySnpMMkp2YjNSemRISmhjQzlpYkc5aUwyMWhjM1JsY2k5TVNVTkZUbE5GS1Z4dUlDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBcUwxeHVYRzUyWVhJZ1EyRnliM1Z6Wld3Z1BTQm1kVzVqZEdsdmJpQW9KQ2tnZTF4dVhHNGdJQzhxS2x4dUlDQWdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBZ0lDb2dRMjl1YzNSaGJuUnpYRzRnSUNBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0FnS2k5Y2JseHVJQ0IyWVhJZ1RrRk5SU0E5SUNkallYSnZkWE5sYkNjN1hHNGdJSFpoY2lCV1JWSlRTVTlPSUQwZ0p6UXVNQzR3TFdGc2NHaGhMalluTzF4dUlDQjJZWElnUkVGVVFWOUxSVmtnUFNBblluTXVZMkZ5YjNWelpXd25PMXh1SUNCMllYSWdSVlpGVGxSZlMwVlpJRDBnSnk0bklDc2dSRUZVUVY5TFJWazdYRzRnSUhaaGNpQkVRVlJCWDBGUVNWOUxSVmtnUFNBbkxtUmhkR0V0WVhCcEp6dGNiaUFnZG1GeUlFcFJWVVZTV1Y5T1QxOURUMDVHVEVsRFZDQTlJQ1F1Wm01YlRrRk5SVjA3WEc0Z0lIWmhjaUJVVWtGT1UwbFVTVTlPWDBSVlVrRlVTVTlPSUQwZ05qQXdPMXh1SUNCMllYSWdRVkpTVDFkZlRFVkdWRjlMUlZsRFQwUkZJRDBnTXpjN0lDOHZJRXRsZVdKdllYSmtSWFpsYm5RdWQyaHBZMmdnZG1Gc2RXVWdabTl5SUd4bFpuUWdZWEp5YjNjZ2EyVjVYRzRnSUhaaGNpQkJVbEpQVjE5U1NVZElWRjlMUlZsRFQwUkZJRDBnTXprN0lDOHZJRXRsZVdKdllYSmtSWFpsYm5RdWQyaHBZMmdnZG1Gc2RXVWdabTl5SUhKcFoyaDBJR0Z5Y205M0lHdGxlVnh1WEc0Z0lIWmhjaUJFWldaaGRXeDBJRDBnZTF4dUlDQWdJR2x1ZEdWeWRtRnNPaUExTURBd0xGeHVJQ0FnSUd0bGVXSnZZWEprT2lCMGNuVmxMRnh1SUNBZ0lITnNhV1JsT2lCbVlXeHpaU3hjYmlBZ0lDQndZWFZ6WlRvZ0oyaHZkbVZ5Snl4Y2JpQWdJQ0IzY21Gd09pQjBjblZsWEc0Z0lIMDdYRzVjYmlBZ2RtRnlJRVJsWm1GMWJIUlVlWEJsSUQwZ2UxeHVJQ0FnSUdsdWRHVnlkbUZzT2lBbktHNTFiV0psY254aWIyOXNaV0Z1S1Njc1hHNGdJQ0FnYTJWNVltOWhjbVE2SUNkaWIyOXNaV0Z1Snl4Y2JpQWdJQ0J6Ykdsa1pUb2dKeWhpYjI5c1pXRnVmSE4wY21sdVp5a25MRnh1SUNBZ0lIQmhkWE5sT2lBbktITjBjbWx1WjN4aWIyOXNaV0Z1S1Njc1hHNGdJQ0FnZDNKaGNEb2dKMkp2YjJ4bFlXNG5YRzRnSUgwN1hHNWNiaUFnZG1GeUlFUnBjbVZqZEdsdmJpQTlJSHRjYmlBZ0lDQk9SVmhVT2lBbmJtVjRkQ2NzWEc0Z0lDQWdVRkpGVmpvZ0ozQnlaWFluTEZ4dUlDQWdJRXhGUmxRNklDZHNaV1owSnl4Y2JpQWdJQ0JTU1VkSVZEb2dKM0pwWjJoMEoxeHVJQ0I5TzF4dVhHNGdJSFpoY2lCRmRtVnVkQ0E5SUh0Y2JpQWdJQ0JUVEVsRVJUb2dKM05zYVdSbEp5QXJJRVZXUlU1VVgwdEZXU3hjYmlBZ0lDQlRURWxFT2lBbmMyeHBaQ2NnS3lCRlZrVk9WRjlMUlZrc1hHNGdJQ0FnUzBWWlJFOVhUam9nSjJ0bGVXUnZkMjRuSUNzZ1JWWkZUbFJmUzBWWkxGeHVJQ0FnSUUxUFZWTkZSVTVVUlZJNklDZHRiM1Z6WldWdWRHVnlKeUFySUVWV1JVNVVYMHRGV1N4Y2JpQWdJQ0JOVDFWVFJVeEZRVlpGT2lBbmJXOTFjMlZzWldGMlpTY2dLeUJGVmtWT1ZGOUxSVmtzWEc0Z0lDQWdURTlCUkY5RVFWUkJYMEZRU1RvZ0oyeHZZV1FuSUNzZ1JWWkZUbFJmUzBWWklDc2dSRUZVUVY5QlVFbGZTMFZaTEZ4dUlDQWdJRU5NU1VOTFgwUkJWRUZmUVZCSk9pQW5ZMnhwWTJzbklDc2dSVlpGVGxSZlMwVlpJQ3NnUkVGVVFWOUJVRWxmUzBWWlhHNGdJSDA3WEc1Y2JpQWdkbUZ5SUVOc1lYTnpUbUZ0WlNBOUlIdGNiaUFnSUNCRFFWSlBWVk5GVERvZ0oyTmhjbTkxYzJWc0p5eGNiaUFnSUNCQlExUkpWa1U2SUNkaFkzUnBkbVVuTEZ4dUlDQWdJRk5NU1VSRk9pQW5jMnhwWkdVbkxGeHVJQ0FnSUZKSlIwaFVPaUFuWTJGeWIzVnpaV3d0YVhSbGJTMXlhV2RvZENjc1hHNGdJQ0FnVEVWR1ZEb2dKMk5oY205MWMyVnNMV2wwWlcwdGJHVm1kQ2NzWEc0Z0lDQWdUa1ZZVkRvZ0oyTmhjbTkxYzJWc0xXbDBaVzB0Ym1WNGRDY3NYRzRnSUNBZ1VGSkZWam9nSjJOaGNtOTFjMlZzTFdsMFpXMHRjSEpsZGljc1hHNGdJQ0FnU1ZSRlRUb2dKMk5oY205MWMyVnNMV2wwWlcwblhHNGdJSDA3WEc1Y2JpQWdkbUZ5SUZObGJHVmpkRzl5SUQwZ2UxeHVJQ0FnSUVGRFZFbFdSVG9nSnk1aFkzUnBkbVVuTEZ4dUlDQWdJRUZEVkVsV1JWOUpWRVZOT2lBbkxtRmpkR2wyWlM1allYSnZkWE5sYkMxcGRHVnRKeXhjYmlBZ0lDQkpWRVZOT2lBbkxtTmhjbTkxYzJWc0xXbDBaVzBuTEZ4dUlDQWdJRTVGV0ZSZlVGSkZWam9nSnk1allYSnZkWE5sYkMxcGRHVnRMVzVsZUhRc0lDNWpZWEp2ZFhObGJDMXBkR1Z0TFhCeVpYWW5MRnh1SUNBZ0lFbE9SRWxEUVZSUFVsTTZJQ2N1WTJGeWIzVnpaV3d0YVc1a2FXTmhkRzl5Y3ljc1hHNGdJQ0FnUkVGVVFWOVRURWxFUlRvZ0oxdGtZWFJoTFhOc2FXUmxYU3dnVzJSaGRHRXRjMnhwWkdVdGRHOWRKeXhjYmlBZ0lDQkVRVlJCWDFKSlJFVTZJQ2RiWkdGMFlTMXlhV1JsUFZ3aVkyRnliM1Z6Wld4Y0lsMG5YRzRnSUgwN1hHNWNiaUFnTHlvcVhHNGdJQ0FxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDQWdLaUJEYkdGemN5QkVaV1pwYm1sMGFXOXVYRzRnSUNBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0FnS2k5Y2JseHVJQ0IyWVhJZ1EyRnliM1Z6Wld3Z1BTQm1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdablZ1WTNScGIyNGdRMkZ5YjNWelpXd29aV3hsYldWdWRDd2dZMjl1Wm1sbktTQjdYRzRnSUNBZ0lDQmZZMnhoYzNORFlXeHNRMmhsWTJzb2RHaHBjeXdnUTJGeWIzVnpaV3dwTzF4dVhHNGdJQ0FnSUNCMGFHbHpMbDlwZEdWdGN5QTlJRzUxYkd3N1hHNGdJQ0FnSUNCMGFHbHpMbDlwYm5SbGNuWmhiQ0E5SUc1MWJHdzdYRzRnSUNBZ0lDQjBhR2x6TGw5aFkzUnBkbVZGYkdWdFpXNTBJRDBnYm5Wc2JEdGNibHh1SUNBZ0lDQWdkR2hwY3k1ZmFYTlFZWFZ6WldRZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0FnSUhSb2FYTXVYMmx6VTJ4cFpHbHVaeUE5SUdaaGJITmxPMXh1WEc0Z0lDQWdJQ0IwYUdsekxsOWpiMjVtYVdjZ1BTQjBhR2x6TGw5blpYUkRiMjVtYVdjb1kyOXVabWxuS1R0Y2JpQWdJQ0FnSUhSb2FYTXVYMlZzWlcxbGJuUWdQU0FrS0dWc1pXMWxiblFwV3pCZE8xeHVJQ0FnSUNBZ2RHaHBjeTVmYVc1a2FXTmhkRzl5YzBWc1pXMWxiblFnUFNBa0tIUm9hWE11WDJWc1pXMWxiblFwTG1acGJtUW9VMlZzWldOMGIzSXVTVTVFU1VOQlZFOVNVeWxiTUYwN1hHNWNiaUFnSUNBZ0lIUm9hWE11WDJGa1pFVjJaVzUwVEdsemRHVnVaWEp6S0NrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1oyVjBkR1Z5YzF4dVhHNGdJQ0FnTHk4Z2NIVmliR2xqWEc1Y2JpQWdJQ0JEWVhKdmRYTmxiQzV3Y205MGIzUjVjR1V1Ym1WNGRDQTlJR1oxYm1OMGFXOXVJRzVsZUhRb0tTQjdYRzRnSUNBZ0lDQnBaaUFvZEdocGN5NWZhWE5UYkdsa2FXNW5LU0I3WEc0Z0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWduUTJGeWIzVnpaV3dnYVhNZ2MyeHBaR2x1WnljcE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2RHaHBjeTVmYzJ4cFpHVW9SR2x5WldOMGFXOXVMazVGV0ZRcE8xeHVJQ0FnSUgwN1hHNWNiaUFnSUNCRFlYSnZkWE5sYkM1d2NtOTBiM1I1Y0dVdWJtVjRkRmRvWlc1V2FYTnBZbXhsSUQwZ1puVnVZM1JwYjI0Z2JtVjRkRmRvWlc1V2FYTnBZbXhsS0NrZ2UxeHVJQ0FnSUNBZ0x5OGdSRzl1SjNRZ1kyRnNiQ0J1WlhoMElIZG9aVzRnZEdobElIQmhaMlVnYVhOdUozUWdkbWx6YVdKc1pWeHVJQ0FnSUNBZ2FXWWdLQ0ZrYjJOMWJXVnVkQzVvYVdSa1pXNHBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXVaWGgwS0NrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlR0Y2JseHVJQ0FnSUVOaGNtOTFjMlZzTG5CeWIzUnZkSGx3WlM1d2NtVjJJRDBnWm5WdVkzUnBiMjRnY0hKbGRpZ3BJSHRjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbDlwYzFOc2FXUnBibWNwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NkRFlYSnZkWE5sYkNCcGN5QnpiR2xrYVc1bkp5azdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQjBhR2x6TGw5emJHbGtaU2hFYVhKbFkzUnBiMjR1VUZKRlZrbFBWVk1wTzF4dUlDQWdJSDA3WEc1Y2JpQWdJQ0JEWVhKdmRYTmxiQzV3Y205MGIzUjVjR1V1Y0dGMWMyVWdQU0JtZFc1amRHbHZiaUJ3WVhWelpTaGxkbVZ1ZENrZ2UxeHVJQ0FnSUNBZ2FXWWdLQ0ZsZG1WdWRDa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxsOXBjMUJoZFhObFpDQTlJSFJ5ZFdVN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHbG1JQ2drS0hSb2FYTXVYMlZzWlcxbGJuUXBMbVpwYm1Rb1UyVnNaV04wYjNJdVRrVllWRjlRVWtWV0tWc3dYU0FtSmlCVmRHbHNMbk4xY0hCdmNuUnpWSEpoYm5OcGRHbHZia1Z1WkNncEtTQjdYRzRnSUNBZ0lDQWdJRlYwYVd3dWRISnBaMmRsY2xSeVlXNXphWFJwYjI1RmJtUW9kR2hwY3k1ZlpXeGxiV1Z1ZENrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WTNsamJHVW9kSEoxWlNrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHTnNaV0Z5U1c1MFpYSjJZV3dvZEdocGN5NWZhVzUwWlhKMllXd3BPMXh1SUNBZ0lDQWdkR2hwY3k1ZmFXNTBaWEoyWVd3Z1BTQnVkV3hzTzF4dUlDQWdJSDA3WEc1Y2JpQWdJQ0JEWVhKdmRYTmxiQzV3Y205MGIzUjVjR1V1WTNsamJHVWdQU0JtZFc1amRHbHZiaUJqZVdOc1pTaGxkbVZ1ZENrZ2UxeHVJQ0FnSUNBZ2FXWWdLQ0ZsZG1WdWRDa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxsOXBjMUJoZFhObFpDQTlJR1poYkhObE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnBaaUFvZEdocGN5NWZhVzUwWlhKMllXd3BJSHRjYmlBZ0lDQWdJQ0FnWTJ4bFlYSkpiblJsY25aaGJDaDBhR2x6TGw5cGJuUmxjblpoYkNrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WDJsdWRHVnlkbUZzSUQwZ2JuVnNiRHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYVdZZ0tIUm9hWE11WDJOdmJtWnBaeTVwYm5SbGNuWmhiQ0FtSmlBaGRHaHBjeTVmYVhOUVlYVnpaV1FwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVmYVc1MFpYSjJZV3dnUFNCelpYUkpiblJsY25aaGJDZ29aRzlqZFcxbGJuUXVkbWx6YVdKcGJHbDBlVk4wWVhSbElEOGdkR2hwY3k1dVpYaDBWMmhsYmxacGMybGliR1VnT2lCMGFHbHpMbTVsZUhRcExtSnBibVFvZEdocGN5a3NJSFJvYVhNdVgyTnZibVpwWnk1cGJuUmxjblpoYkNrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlR0Y2JseHVJQ0FnSUVOaGNtOTFjMlZzTG5CeWIzUnZkSGx3WlM1MGJ5QTlJR1oxYm1OMGFXOXVJSFJ2S0dsdVpHVjRLU0I3WEc0Z0lDQWdJQ0IyWVhJZ1gzUm9hWE1nUFNCMGFHbHpPMXh1WEc0Z0lDQWdJQ0IwYUdsekxsOWhZM1JwZG1WRmJHVnRaVzUwSUQwZ0pDaDBhR2x6TGw5bGJHVnRaVzUwS1M1bWFXNWtLRk5sYkdWamRHOXlMa0ZEVkVsV1JWOUpWRVZOS1Zzd1hUdGNibHh1SUNBZ0lDQWdkbUZ5SUdGamRHbDJaVWx1WkdWNElEMGdkR2hwY3k1ZloyVjBTWFJsYlVsdVpHVjRLSFJvYVhNdVgyRmpkR2wyWlVWc1pXMWxiblFwTzF4dVhHNGdJQ0FnSUNCcFppQW9hVzVrWlhnZ1BpQjBhR2x6TGw5cGRHVnRjeTVzWlc1bmRHZ2dMU0F4SUh4OElHbHVaR1Y0SUR3Z01Da2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbDlwYzFOc2FXUnBibWNwSUh0Y2JpQWdJQ0FnSUNBZ0pDaDBhR2x6TGw5bGJHVnRaVzUwS1M1dmJtVW9SWFpsYm5RdVUweEpSQ3dnWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmZkR2hwY3k1MGJ5aHBibVJsZUNrN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR2xtSUNoaFkzUnBkbVZKYm1SbGVDQTlQVDBnYVc1a1pYZ3BJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXdZWFZ6WlNncE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG1ONVkyeGxLQ2s3WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnZG1GeUlHUnBjbVZqZEdsdmJpQTlJR2x1WkdWNElENGdZV04wYVhabFNXNWtaWGdnUHlCRWFYSmxZM1JwYjI0dVRrVllWQ0E2SUVScGNtVmpkR2x2Ymk1UVVrVldTVTlWVXp0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVmYzJ4cFpHVW9aR2x5WldOMGFXOXVMQ0IwYUdsekxsOXBkR1Z0YzF0cGJtUmxlRjBwTzF4dUlDQWdJSDA3WEc1Y2JpQWdJQ0JEWVhKdmRYTmxiQzV3Y205MGIzUjVjR1V1WkdsemNHOXpaU0E5SUdaMWJtTjBhVzl1SUdScGMzQnZjMlVvS1NCN1hHNGdJQ0FnSUNBa0tIUm9hWE11WDJWc1pXMWxiblFwTG05bVppaEZWa1ZPVkY5TFJWa3BPMXh1SUNBZ0lDQWdKQzV5WlcxdmRtVkVZWFJoS0hSb2FYTXVYMlZzWlcxbGJuUXNJRVJCVkVGZlMwVlpLVHRjYmx4dUlDQWdJQ0FnZEdocGN5NWZhWFJsYlhNZ1BTQnVkV3hzTzF4dUlDQWdJQ0FnZEdocGN5NWZZMjl1Wm1sbklEMGdiblZzYkR0Y2JpQWdJQ0FnSUhSb2FYTXVYMlZzWlcxbGJuUWdQU0J1ZFd4c08xeHVJQ0FnSUNBZ2RHaHBjeTVmYVc1MFpYSjJZV3dnUFNCdWRXeHNPMXh1SUNBZ0lDQWdkR2hwY3k1ZmFYTlFZWFZ6WldRZ1BTQnVkV3hzTzF4dUlDQWdJQ0FnZEdocGN5NWZhWE5UYkdsa2FXNW5JRDBnYm5Wc2JEdGNiaUFnSUNBZ0lIUm9hWE11WDJGamRHbDJaVVZzWlcxbGJuUWdQU0J1ZFd4c08xeHVJQ0FnSUNBZ2RHaHBjeTVmYVc1a2FXTmhkRzl5YzBWc1pXMWxiblFnUFNCdWRXeHNPMXh1SUNBZ0lIMDdYRzVjYmlBZ0lDQXZMeUJ3Y21sMllYUmxYRzVjYmlBZ0lDQkRZWEp2ZFhObGJDNXdjbTkwYjNSNWNHVXVYMmRsZEVOdmJtWnBaeUE5SUdaMWJtTjBhVzl1SUY5blpYUkRiMjVtYVdjb1kyOXVabWxuS1NCN1hHNGdJQ0FnSUNCamIyNW1hV2NnUFNBa0xtVjRkR1Z1WkNoN2ZTd2dSR1ZtWVhWc2RDd2dZMjl1Wm1sbktUdGNiaUFnSUNBZ0lGVjBhV3d1ZEhsd1pVTm9aV05yUTI5dVptbG5LRTVCVFVVc0lHTnZibVpwWnl3Z1JHVm1ZWFZzZEZSNWNHVXBPMXh1SUNBZ0lDQWdjbVYwZFhKdUlHTnZibVpwWnp0Y2JpQWdJQ0I5TzF4dVhHNGdJQ0FnUTJGeWIzVnpaV3d1Y0hKdmRHOTBlWEJsTGw5aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5Y3lBOUlHWjFibU4wYVc5dUlGOWhaR1JGZG1WdWRFeHBjM1JsYm1WeWN5Z3BJSHRjYmlBZ0lDQWdJSFpoY2lCZmRHaHBjeklnUFNCMGFHbHpPMXh1WEc0Z0lDQWdJQ0JwWmlBb2RHaHBjeTVmWTI5dVptbG5MbXRsZVdKdllYSmtLU0I3WEc0Z0lDQWdJQ0FnSUNRb2RHaHBjeTVmWld4bGJXVnVkQ2t1YjI0b1JYWmxiblF1UzBWWlJFOVhUaXdnWm5WdVkzUnBiMjRnS0dWMlpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUY5MGFHbHpNaTVmYTJWNVpHOTNiaWhsZG1WdWRDazdYRzRnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCcFppQW9kR2hwY3k1ZlkyOXVabWxuTG5CaGRYTmxJRDA5UFNBbmFHOTJaWEluSUNZbUlDRW9KMjl1ZEc5MVkyaHpkR0Z5ZENjZ2FXNGdaRzlqZFcxbGJuUXVaRzlqZFcxbGJuUkZiR1Z0Wlc1MEtTa2dlMXh1SUNBZ0lDQWdJQ0FrS0hSb2FYTXVYMlZzWlcxbGJuUXBMbTl1S0VWMlpXNTBMazFQVlZORlJVNVVSVklzSUdaMWJtTjBhVzl1SUNobGRtVnVkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCZmRHaHBjekl1Y0dGMWMyVW9aWFpsYm5RcE8xeHVJQ0FnSUNBZ0lDQjlLUzV2YmloRmRtVnVkQzVOVDFWVFJVeEZRVlpGTENCbWRXNWpkR2x2YmlBb1pYWmxiblFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1gzUm9hWE15TG1ONVkyeGxLR1YyWlc1MEtUdGNiaUFnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVHRjYmx4dUlDQWdJRU5oY205MWMyVnNMbkJ5YjNSdmRIbHdaUzVmYTJWNVpHOTNiaUE5SUdaMWJtTjBhVzl1SUY5clpYbGtiM2R1S0dWMlpXNTBLU0I3WEc0Z0lDQWdJQ0JwWmlBb0wybHVjSFYwZkhSbGVIUmhjbVZoTDJrdWRHVnpkQ2hsZG1WdWRDNTBZWEpuWlhRdWRHRm5UbUZ0WlNrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnpkMmwwWTJnZ0tHVjJaVzUwTG5kb2FXTm9LU0I3WEc0Z0lDQWdJQ0FnSUdOaGMyVWdRVkpTVDFkZlRFVkdWRjlMUlZsRFQwUkZPbHh1SUNBZ0lDQWdJQ0FnSUdWMlpXNTBMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdYRzRnSUNBZ0lDQWdJQ0FnZEdocGN5NXdjbVYyS0NrN1hHNGdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hHNGdJQ0FnSUNBZ0lHTmhjMlVnUVZKU1QxZGZVa2xIU0ZSZlMwVlpRMDlFUlRwY2JpQWdJQ0FnSUNBZ0lDQmxkbVZ1ZEM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwTzF4dUlDQWdJQ0FnSUNBZ0lIUm9hWE11Ym1WNGRDZ3BPMXh1SUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh1SUNBZ0lDQWdJQ0JrWldaaGRXeDBPbHh1SUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlPMXh1WEc0Z0lDQWdRMkZ5YjNWelpXd3VjSEp2ZEc5MGVYQmxMbDluWlhSSmRHVnRTVzVrWlhnZ1BTQm1kVzVqZEdsdmJpQmZaMlYwU1hSbGJVbHVaR1Y0S0dWc1pXMWxiblFwSUh0Y2JpQWdJQ0FnSUhSb2FYTXVYMmwwWlcxeklEMGdKQzV0WVd0bFFYSnlZWGtvSkNobGJHVnRaVzUwS1M1d1lYSmxiblFvS1M1bWFXNWtLRk5sYkdWamRHOXlMa2xVUlUwcEtUdGNiaUFnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlwZEdWdGN5NXBibVJsZUU5bUtHVnNaVzFsYm5RcE8xeHVJQ0FnSUgwN1hHNWNiaUFnSUNCRFlYSnZkWE5sYkM1d2NtOTBiM1I1Y0dVdVgyZGxkRWwwWlcxQ2VVUnBjbVZqZEdsdmJpQTlJR1oxYm1OMGFXOXVJRjluWlhSSmRHVnRRbmxFYVhKbFkzUnBiMjRvWkdseVpXTjBhVzl1TENCaFkzUnBkbVZGYkdWdFpXNTBLU0I3WEc0Z0lDQWdJQ0IyWVhJZ2FYTk9aWGgwUkdseVpXTjBhVzl1SUQwZ1pHbHlaV04wYVc5dUlEMDlQU0JFYVhKbFkzUnBiMjR1VGtWWVZEdGNiaUFnSUNBZ0lIWmhjaUJwYzFCeVpYWkVhWEpsWTNScGIyNGdQU0JrYVhKbFkzUnBiMjRnUFQwOUlFUnBjbVZqZEdsdmJpNVFVa1ZXU1U5VlV6dGNiaUFnSUNBZ0lIWmhjaUJoWTNScGRtVkpibVJsZUNBOUlIUm9hWE11WDJkbGRFbDBaVzFKYm1SbGVDaGhZM1JwZG1WRmJHVnRaVzUwS1R0Y2JpQWdJQ0FnSUhaaGNpQnNZWE4wU1hSbGJVbHVaR1Y0SUQwZ2RHaHBjeTVmYVhSbGJYTXViR1Z1WjNSb0lDMGdNVHRjYmlBZ0lDQWdJSFpoY2lCcGMwZHZhVzVuVkc5WGNtRndJRDBnYVhOUWNtVjJSR2x5WldOMGFXOXVJQ1ltSUdGamRHbDJaVWx1WkdWNElEMDlQU0F3SUh4OElHbHpUbVY0ZEVScGNtVmpkR2x2YmlBbUppQmhZM1JwZG1WSmJtUmxlQ0E5UFQwZ2JHRnpkRWwwWlcxSmJtUmxlRHRjYmx4dUlDQWdJQ0FnYVdZZ0tHbHpSMjlwYm1kVWIxZHlZWEFnSmlZZ0lYUm9hWE11WDJOdmJtWnBaeTUzY21Gd0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmhZM1JwZG1WRmJHVnRaVzUwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCMllYSWdaR1ZzZEdFZ1BTQmthWEpsWTNScGIyNGdQVDA5SUVScGNtVmpkR2x2Ymk1UVVrVldTVTlWVXlBL0lDMHhJRG9nTVR0Y2JpQWdJQ0FnSUhaaGNpQnBkR1Z0U1c1a1pYZ2dQU0FvWVdOMGFYWmxTVzVrWlhnZ0t5QmtaV3gwWVNrZ0pTQjBhR2x6TGw5cGRHVnRjeTVzWlc1bmRHZzdYRzVjYmlBZ0lDQWdJSEpsZEhWeWJpQnBkR1Z0U1c1a1pYZ2dQVDA5SUMweElEOGdkR2hwY3k1ZmFYUmxiWE5iZEdocGN5NWZhWFJsYlhNdWJHVnVaM1JvSUMwZ01WMGdPaUIwYUdsekxsOXBkR1Z0YzF0cGRHVnRTVzVrWlhoZE8xeHVJQ0FnSUgwN1hHNWNiaUFnSUNCRFlYSnZkWE5sYkM1d2NtOTBiM1I1Y0dVdVgzUnlhV2RuWlhKVGJHbGtaVVYyWlc1MElEMGdablZ1WTNScGIyNGdYM1J5YVdkblpYSlRiR2xrWlVWMlpXNTBLSEpsYkdGMFpXUlVZWEpuWlhRc0lHVjJaVzUwUkdseVpXTjBhVzl1VG1GdFpTa2dlMXh1SUNBZ0lDQWdkbUZ5SUhOc2FXUmxSWFpsYm5RZ1BTQWtMa1YyWlc1MEtFVjJaVzUwTGxOTVNVUkZMQ0I3WEc0Z0lDQWdJQ0FnSUhKbGJHRjBaV1JVWVhKblpYUTZJSEpsYkdGMFpXUlVZWEpuWlhRc1hHNGdJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJqb2daWFpsYm5SRWFYSmxZM1JwYjI1T1lXMWxYRzRnSUNBZ0lDQjlLVHRjYmx4dUlDQWdJQ0FnSkNoMGFHbHpMbDlsYkdWdFpXNTBLUzUwY21sbloyVnlLSE5zYVdSbFJYWmxiblFwTzF4dVhHNGdJQ0FnSUNCeVpYUjFjbTRnYzJ4cFpHVkZkbVZ1ZER0Y2JpQWdJQ0I5TzF4dVhHNGdJQ0FnUTJGeWIzVnpaV3d1Y0hKdmRHOTBlWEJsTGw5elpYUkJZM1JwZG1WSmJtUnBZMkYwYjNKRmJHVnRaVzUwSUQwZ1puVnVZM1JwYjI0Z1gzTmxkRUZqZEdsMlpVbHVaR2xqWVhSdmNrVnNaVzFsYm5Rb1pXeGxiV1Z1ZENrZ2UxeHVJQ0FnSUNBZ2FXWWdLSFJvYVhNdVgybHVaR2xqWVhSdmNuTkZiR1Z0Wlc1MEtTQjdYRzRnSUNBZ0lDQWdJQ1FvZEdocGN5NWZhVzVrYVdOaGRHOXljMFZzWlcxbGJuUXBMbVpwYm1Rb1UyVnNaV04wYjNJdVFVTlVTVlpGS1M1eVpXMXZkbVZEYkdGemN5aERiR0Z6YzA1aGJXVXVRVU5VU1ZaRktUdGNibHh1SUNBZ0lDQWdJQ0IyWVhJZ2JtVjRkRWx1WkdsallYUnZjaUE5SUhSb2FYTXVYMmx1WkdsallYUnZjbk5GYkdWdFpXNTBMbU5vYVd4a2NtVnVXM1JvYVhNdVgyZGxkRWwwWlcxSmJtUmxlQ2hsYkdWdFpXNTBLVjA3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLRzVsZUhSSmJtUnBZMkYwYjNJcElIdGNiaUFnSUNBZ0lDQWdJQ0FrS0c1bGVIUkpibVJwWTJGMGIzSXBMbUZrWkVOc1lYTnpLRU5zWVhOelRtRnRaUzVCUTFSSlZrVXBPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVHRjYmx4dUlDQWdJRU5oY205MWMyVnNMbkJ5YjNSdmRIbHdaUzVmYzJ4cFpHVWdQU0JtZFc1amRHbHZiaUJmYzJ4cFpHVW9aR2x5WldOMGFXOXVMQ0JsYkdWdFpXNTBLU0I3WEc0Z0lDQWdJQ0IyWVhJZ1gzUm9hWE16SUQwZ2RHaHBjenRjYmx4dUlDQWdJQ0FnZG1GeUlHRmpkR2wyWlVWc1pXMWxiblFnUFNBa0tIUm9hWE11WDJWc1pXMWxiblFwTG1acGJtUW9VMlZzWldOMGIzSXVRVU5VU1ZaRlgwbFVSVTBwV3pCZE8xeHVJQ0FnSUNBZ2RtRnlJRzVsZUhSRmJHVnRaVzUwSUQwZ1pXeGxiV1Z1ZENCOGZDQmhZM1JwZG1WRmJHVnRaVzUwSUNZbUlIUm9hWE11WDJkbGRFbDBaVzFDZVVScGNtVmpkR2x2Ymloa2FYSmxZM1JwYjI0c0lHRmpkR2wyWlVWc1pXMWxiblFwTzF4dVhHNGdJQ0FnSUNCMllYSWdhWE5EZVdOc2FXNW5JRDBnUW05dmJHVmhiaWgwYUdsekxsOXBiblJsY25aaGJDazdYRzVjYmlBZ0lDQWdJSFpoY2lCa2FYSmxZM1JwYjI1aGJFTnNZWE56VG1GdFpTQTlJSFp2YVdRZ01EdGNiaUFnSUNBZ0lIWmhjaUJ2Y21SbGNrTnNZWE56VG1GdFpTQTlJSFp2YVdRZ01EdGNiaUFnSUNBZ0lIWmhjaUJsZG1WdWRFUnBjbVZqZEdsdmJrNWhiV1VnUFNCMmIybGtJREE3WEc1Y2JpQWdJQ0FnSUdsbUlDaGthWEpsWTNScGIyNGdQVDA5SUVScGNtVmpkR2x2Ymk1T1JWaFVLU0I3WEc0Z0lDQWdJQ0FnSUdScGNtVmpkR2x2Ym1Gc1EyeGhjM05PWVcxbElEMGdRMnhoYzNOT1lXMWxMa3hGUmxRN1hHNGdJQ0FnSUNBZ0lHOXlaR1Z5UTJ4aGMzTk9ZVzFsSUQwZ1EyeGhjM05PWVcxbExrNUZXRlE3WEc0Z0lDQWdJQ0FnSUdWMlpXNTBSR2x5WldOMGFXOXVUbUZ0WlNBOUlFUnBjbVZqZEdsdmJpNU1SVVpVTzF4dUlDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1WVd4RGJHRnpjMDVoYldVZ1BTQkRiR0Z6YzA1aGJXVXVVa2xIU0ZRN1hHNGdJQ0FnSUNBZ0lHOXlaR1Z5UTJ4aGMzTk9ZVzFsSUQwZ1EyeGhjM05PWVcxbExsQlNSVlk3WEc0Z0lDQWdJQ0FnSUdWMlpXNTBSR2x5WldOMGFXOXVUbUZ0WlNBOUlFUnBjbVZqZEdsdmJpNVNTVWRJVkR0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2FXWWdLRzVsZUhSRmJHVnRaVzUwSUNZbUlDUW9ibVY0ZEVWc1pXMWxiblFwTG1oaGMwTnNZWE56S0VOc1lYTnpUbUZ0WlM1QlExUkpWa1VwS1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WDJselUyeHBaR2x1WnlBOUlHWmhiSE5sTzF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUhaaGNpQnpiR2xrWlVWMlpXNTBJRDBnZEdocGN5NWZkSEpwWjJkbGNsTnNhV1JsUlhabGJuUW9ibVY0ZEVWc1pXMWxiblFzSUdWMlpXNTBSR2x5WldOMGFXOXVUbUZ0WlNrN1hHNGdJQ0FnSUNCcFppQW9jMnhwWkdWRmRtVnVkQzVwYzBSbFptRjFiSFJRY21WMlpXNTBaV1FvS1NrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHbG1JQ2doWVdOMGFYWmxSV3hsYldWdWRDQjhmQ0FoYm1WNGRFVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lDQWdMeThnYzI5dFpTQjNaV2x5Wkc1bGMzTWdhWE1nYUdGd2NHVnVhVzVuTENCemJ5QjNaU0JpWVdsc1hHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2RHaHBjeTVmYVhOVGJHbGthVzVuSUQwZ2RISjFaVHRjYmx4dUlDQWdJQ0FnYVdZZ0tHbHpRM2xqYkdsdVp5a2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxuQmhkWE5sS0NrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lIUm9hWE11WDNObGRFRmpkR2wyWlVsdVpHbGpZWFJ2Y2tWc1pXMWxiblFvYm1WNGRFVnNaVzFsYm5RcE8xeHVYRzRnSUNBZ0lDQjJZWElnYzJ4cFpFVjJaVzUwSUQwZ0pDNUZkbVZ1ZENoRmRtVnVkQzVUVEVsRUxDQjdYRzRnSUNBZ0lDQWdJSEpsYkdGMFpXUlVZWEpuWlhRNklHNWxlSFJGYkdWdFpXNTBMRnh1SUNBZ0lDQWdJQ0JrYVhKbFkzUnBiMjQ2SUdWMlpXNTBSR2x5WldOMGFXOXVUbUZ0WlZ4dUlDQWdJQ0FnZlNrN1hHNWNiaUFnSUNBZ0lHbG1JQ2hWZEdsc0xuTjFjSEJ2Y25SelZISmhibk5wZEdsdmJrVnVaQ2dwSUNZbUlDUW9kR2hwY3k1ZlpXeGxiV1Z1ZENrdWFHRnpRMnhoYzNNb1EyeGhjM05PWVcxbExsTk1TVVJGS1NrZ2UxeHVYRzRnSUNBZ0lDQWdJQ1FvYm1WNGRFVnNaVzFsYm5RcExtRmtaRU5zWVhOektHOXlaR1Z5UTJ4aGMzTk9ZVzFsS1R0Y2JseHVJQ0FnSUNBZ0lDQlZkR2xzTG5KbFpteHZkeWh1WlhoMFJXeGxiV1Z1ZENrN1hHNWNiaUFnSUNBZ0lDQWdKQ2hoWTNScGRtVkZiR1Z0Wlc1MEtTNWhaR1JEYkdGemN5aGthWEpsWTNScGIyNWhiRU5zWVhOelRtRnRaU2s3WEc0Z0lDQWdJQ0FnSUNRb2JtVjRkRVZzWlcxbGJuUXBMbUZrWkVOc1lYTnpLR1JwY21WamRHbHZibUZzUTJ4aGMzTk9ZVzFsS1R0Y2JseHVJQ0FnSUNBZ0lDQWtLR0ZqZEdsMlpVVnNaVzFsYm5RcExtOXVaU2hWZEdsc0xsUlNRVTVUU1ZSSlQwNWZSVTVFTENCbWRXNWpkR2x2YmlBb0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSkNodVpYaDBSV3hsYldWdWRDa3VjbVZ0YjNabFEyeGhjM01vWkdseVpXTjBhVzl1WVd4RGJHRnpjMDVoYldVZ0t5QW5JQ2NnS3lCdmNtUmxja05zWVhOelRtRnRaU2t1WVdSa1EyeGhjM01vUTJ4aGMzTk9ZVzFsTGtGRFZFbFdSU2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWtLR0ZqZEdsMlpVVnNaVzFsYm5RcExuSmxiVzkyWlVOc1lYTnpLRU5zWVhOelRtRnRaUzVCUTFSSlZrVWdLeUFuSUNjZ0t5QnZjbVJsY2tOc1lYTnpUbUZ0WlNBcklDY2dKeUFySUdScGNtVmpkR2x2Ym1Gc1EyeGhjM05PWVcxbEtUdGNibHh1SUNBZ0lDQWdJQ0FnSUY5MGFHbHpNeTVmYVhOVGJHbGthVzVuSUQwZ1ptRnNjMlU3WEc1Y2JpQWdJQ0FnSUNBZ0lDQnpaWFJVYVcxbGIzVjBLR1oxYm1OMGFXOXVJQ2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQWtLRjkwYUdsek15NWZaV3hsYldWdWRDa3VkSEpwWjJkbGNpaHpiR2xrUlhabGJuUXBPMXh1SUNBZ0lDQWdJQ0FnSUgwc0lEQXBPMXh1SUNBZ0lDQWdJQ0I5S1M1bGJYVnNZWFJsVkhKaGJuTnBkR2x2YmtWdVpDaFVVa0ZPVTBsVVNVOU9YMFJWVWtGVVNVOU9LVHRjYmlBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ1FvWVdOMGFYWmxSV3hsYldWdWRDa3VjbVZ0YjNabFEyeGhjM01vUTJ4aGMzTk9ZVzFsTGtGRFZFbFdSU2s3WEc0Z0lDQWdJQ0FnSUNRb2JtVjRkRVZzWlcxbGJuUXBMbUZrWkVOc1lYTnpLRU5zWVhOelRtRnRaUzVCUTFSSlZrVXBPMXh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMmx6VTJ4cFpHbHVaeUE5SUdaaGJITmxPMXh1SUNBZ0lDQWdJQ0FrS0hSb2FYTXVYMlZzWlcxbGJuUXBMblJ5YVdkblpYSW9jMnhwWkVWMlpXNTBLVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYVdZZ0tHbHpRM2xqYkdsdVp5a2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxtTjVZMnhsS0NrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlR0Y2JseHVJQ0FnSUM4dklITjBZWFJwWTF4dVhHNGdJQ0FnUTJGeWIzVnpaV3d1WDJwUmRXVnllVWx1ZEdWeVptRmpaU0E5SUdaMWJtTjBhVzl1SUY5cVVYVmxjbmxKYm5SbGNtWmhZMlVvWTI5dVptbG5LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bFlXTm9LR1oxYm1OMGFXOXVJQ2dwSUh0Y2JpQWdJQ0FnSUNBZ2RtRnlJR1JoZEdFZ1BTQWtLSFJvYVhNcExtUmhkR0VvUkVGVVFWOUxSVmtwTzF4dUlDQWdJQ0FnSUNCMllYSWdYMk52Ym1acFp5QTlJQ1F1WlhoMFpXNWtLSHQ5TENCRVpXWmhkV3gwTENBa0tIUm9hWE1wTG1SaGRHRW9LU2s3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLQ2gwZVhCbGIyWWdZMjl1Wm1sbklEMDlQU0FuZFc1a1pXWnBibVZrSnlBL0lDZDFibVJsWm1sdVpXUW5JRG9nWDNSNWNHVnZaaWhqYjI1bWFXY3BLU0E5UFQwZ0oyOWlhbVZqZENjcElIdGNiaUFnSUNBZ0lDQWdJQ0FrTG1WNGRHVnVaQ2hmWTI5dVptbG5MQ0JqYjI1bWFXY3BPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2RtRnlJR0ZqZEdsdmJpQTlJSFI1Y0dWdlppQmpiMjVtYVdjZ1BUMDlJQ2R6ZEhKcGJtY25JRDhnWTI5dVptbG5JRG9nWDJOdmJtWnBaeTV6Ykdsa1pUdGNibHh1SUNBZ0lDQWdJQ0JwWmlBb0lXUmhkR0VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQmtZWFJoSUQwZ2JtVjNJRU5oY205MWMyVnNLSFJvYVhNc0lGOWpiMjVtYVdjcE8xeHVJQ0FnSUNBZ0lDQWdJQ1FvZEdocGN5a3VaR0YwWVNoRVFWUkJYMHRGV1N3Z1pHRjBZU2s3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JR052Ym1acFp5QTlQVDBnSjI1MWJXSmxjaWNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQmtZWFJoTG5SdktHTnZibVpwWnlrN1hHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9kSGx3Wlc5bUlHRmpkR2x2YmlBOVBUMGdKM04wY21sdVp5Y3BJSHRjYmlBZ0lDQWdJQ0FnSUNCcFppQW9aR0YwWVZ0aFkzUnBiMjVkSUQwOVBTQjFibVJsWm1sdVpXUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnblRtOGdiV1YwYUc5a0lHNWhiV1ZrSUZ3aUp5QXJJR0ZqZEdsdmJpQXJJQ2RjSWljcE8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCa1lYUmhXMkZqZEdsdmJsMG9LVHRjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoZlkyOXVabWxuTG1sdWRHVnlkbUZzS1NCN1hHNGdJQ0FnSUNBZ0lDQWdaR0YwWVM1d1lYVnpaU2dwTzF4dUlDQWdJQ0FnSUNBZ0lHUmhkR0V1WTNsamJHVW9LVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlNrN1hHNGdJQ0FnZlR0Y2JseHVJQ0FnSUVOaGNtOTFjMlZzTGw5a1lYUmhRWEJwUTJ4cFkydElZVzVrYkdWeUlEMGdablZ1WTNScGIyNGdYMlJoZEdGQmNHbERiR2xqYTBoaGJtUnNaWElvWlhabGJuUXBJSHRjYmlBZ0lDQWdJSFpoY2lCelpXeGxZM1J2Y2lBOUlGVjBhV3d1WjJWMFUyVnNaV04wYjNKR2NtOXRSV3hsYldWdWRDaDBhR2x6S1R0Y2JseHVJQ0FnSUNBZ2FXWWdLQ0Z6Wld4bFkzUnZjaWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUhaaGNpQjBZWEpuWlhRZ1BTQWtLSE5sYkdWamRHOXlLVnN3WFR0Y2JseHVJQ0FnSUNBZ2FXWWdLQ0YwWVhKblpYUWdmSHdnSVNRb2RHRnlaMlYwS1M1b1lYTkRiR0Z6Y3loRGJHRnpjMDVoYldVdVEwRlNUMVZUUlV3cEtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdkbUZ5SUdOdmJtWnBaeUE5SUNRdVpYaDBaVzVrS0h0OUxDQWtLSFJoY21kbGRDa3VaR0YwWVNncExDQWtLSFJvYVhNcExtUmhkR0VvS1NrN1hHNGdJQ0FnSUNCMllYSWdjMnhwWkdWSmJtUmxlQ0E5SUhSb2FYTXVaMlYwUVhSMGNtbGlkWFJsS0Nka1lYUmhMWE5zYVdSbExYUnZKeWs3WEc1Y2JpQWdJQ0FnSUdsbUlDaHpiR2xrWlVsdVpHVjRLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJtWnBaeTVwYm5SbGNuWmhiQ0E5SUdaaGJITmxPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JEWVhKdmRYTmxiQzVmYWxGMVpYSjVTVzUwWlhKbVlXTmxMbU5oYkd3b0pDaDBZWEpuWlhRcExDQmpiMjVtYVdjcE8xeHVYRzRnSUNBZ0lDQnBaaUFvYzJ4cFpHVkpibVJsZUNrZ2UxeHVJQ0FnSUNBZ0lDQWtLSFJoY21kbGRDa3VaR0YwWVNoRVFWUkJYMHRGV1NrdWRHOG9jMnhwWkdWSmJtUmxlQ2s3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdWMlpXNTBMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lGOWpjbVZoZEdWRGJHRnpjeWhEWVhKdmRYTmxiQ3dnYm5Wc2JDd2dXM3RjYmlBZ0lDQWdJR3RsZVRvZ0oxWkZVbE5KVDA0bkxGeHVJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaUJuWlhRb0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQldSVkpUU1U5T08xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwc0lIdGNiaUFnSUNBZ0lHdGxlVG9nSjBSbFptRjFiSFFuTEZ4dUlDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpQm5aWFFvS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCRVpXWmhkV3gwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFkS1R0Y2JseHVJQ0FnSUhKbGRIVnliaUJEWVhKdmRYTmxiRHRjYmlBZ2ZTZ3BPMXh1WEc0Z0lDOHFLbHh1SUNBZ0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFnSUNvZ1JHRjBZU0JCY0drZ2FXMXdiR1Z0Wlc1MFlYUnBiMjVjYmlBZ0lDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnSUNBcUwxeHVYRzRnSUNRb1pHOWpkVzFsYm5RcExtOXVLRVYyWlc1MExrTk1TVU5MWDBSQlZFRmZRVkJKTENCVFpXeGxZM1J2Y2k1RVFWUkJYMU5NU1VSRkxDQkRZWEp2ZFhObGJDNWZaR0YwWVVGd2FVTnNhV05yU0dGdVpHeGxjaWs3WEc1Y2JpQWdKQ2gzYVc1a2IzY3BMbTl1S0VWMlpXNTBMa3hQUVVSZlJFRlVRVjlCVUVrc0lHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQWtLRk5sYkdWamRHOXlMa1JCVkVGZlVrbEVSU2t1WldGamFDaG1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdJQ0IyWVhJZ0pHTmhjbTkxYzJWc0lEMGdKQ2gwYUdsektUdGNiaUFnSUNBZ0lFTmhjbTkxYzJWc0xsOXFVWFZsY25sSmJuUmxjbVpoWTJVdVkyRnNiQ2drWTJGeWIzVnpaV3dzSUNSallYSnZkWE5sYkM1a1lYUmhLQ2twTzF4dUlDQWdJSDBwTzF4dUlDQjlLVHRjYmx4dUlDQXZLaXBjYmlBZ0lDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnSUNBcUlHcFJkV1Z5ZVZ4dUlDQWdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBZ0lDb3ZYRzVjYmlBZ0pDNW1ibHRPUVUxRlhTQTlJRU5oY205MWMyVnNMbDlxVVhWbGNubEpiblJsY21aaFkyVTdYRzRnSUNRdVptNWJUa0ZOUlYwdVEyOXVjM1J5ZFdOMGIzSWdQU0JEWVhKdmRYTmxiRHRjYmlBZ0pDNW1ibHRPUVUxRlhTNXViME52Ym1ac2FXTjBJRDBnWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUNRdVptNWJUa0ZOUlYwZ1BTQktVVlZGVWxsZlRrOWZRMDlPUmt4SlExUTdYRzRnSUNBZ2NtVjBkWEp1SUVOaGNtOTFjMlZzTGw5cVVYVmxjbmxKYm5SbGNtWmhZMlU3WEc0Z0lIMDdYRzVjYmlBZ2NtVjBkWEp1SUVOaGNtOTFjMlZzTzF4dWZTaHFVWFZsY25rcE8xeHVMeThqSUhOdmRYSmpaVTFoY0hCcGJtZFZVa3c5WTJGeWIzVnpaV3d1YW5NdWJXRndYRzRpWFgwPVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluZDNkeTl3WVdOcmN5OWliMjkwYzNSeVlYQXZhbk12WkdsemRDOWpZWEp2ZFhObGJDNXFjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4SlFVRkpMRTlCUVU4c1IwRkJSeXhQUVVGUExFMUJRVTBzUzBGQlN5eFZRVUZWTEVsQlFVa3NUMEZCVHl4TlFVRk5MRU5CUVVNc1VVRkJVU3hMUVVGTExGRkJRVkVzUjBGQlJ5eFZRVUZWTEVkQlFVY3NTVUZCU1N4TlFVRk5MRU5CUVVNc1QwRkJUeXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETEVkQlFVY3NWVUZCVlN4SFFVRkhMRWxCUVVrc1RVRkJUU3hEUVVGRExFZEJRVWNzU1VGQlNTeFBRVUZQTEUxQlFVMHNTMEZCU3l4VlFVRlZMRWxCUVVrc1IwRkJSeXhEUVVGRExGZEJRVmNzUzBGQlN5eE5RVUZOTEVsQlFVa3NSMEZCUnl4TFFVRkxMRTFCUVUwc1EwRkJReXhUUVVGVExFZEJRVWNzVVVGQlVTeEhRVUZITEU5QlFVOHNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRemRSTEVsQlFVa3NXVUZCV1N4SFFVRkhPMGxCUVdNc01FSkJRVEJDTEUxQlFVMHNSVUZCUlN4TFFVRkxPMUZCUVVrc1IwRkJSeXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RlFVRkZMRU5CUVVNc1IwRkJSeXhMUVVGTExFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZMRU5CUVVNN1dVRkRhRWdzU1VGQlNTeFZRVUZWTEVkQlFVY3NTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRekZDTEZWQlFWVXNRMEZCUXl4VlFVRlZMRWRCUVVjc1ZVRkJWU3hEUVVGRExGVkJRVlVzU1VGQlNTeExRVUZMTEVOQlFVTTdXVUZEZGtRc1ZVRkJWU3hEUVVGRExGbEJRVmtzUjBGQlJ5eEpRVUZKTEVOQlFVTTdXVUZETDBJc1JVRkJSU3hEUVVGRExFTkJRVU1zVDBGQlR5eEpRVUZKTEZWQlFWVXNRMEZCUXp0blFrRkRkRUlzVlVGQlZTeERRVUZETEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVNN1dVRkRMMElzVFVGQlRTeERRVUZETEdOQlFXTXNRMEZCUXl4TlFVRk5MRVZCUVVVc1ZVRkJWU3hEUVVGRExFZEJRVWNzUlVGQlJTeFZRVUZWTEVOQlFVTXNRMEZCUXp0UlFVTTVSQ3hEUVVGRE8wbEJRVU1zUTBGQlF6dEpRVUZETEUxQlFVMHNRMEZCUXl4VlFVRlZMRmRCUVZjc1JVRkJSU3hWUVVGVkxFVkJRVVVzVjBGQlZ6dFJRVUZKTEVWQlFVVXNRMEZCUXl4RFFVRkRMRlZCUVZVc1EwRkJRenRaUVVONFJTeG5Ra0ZCWjBJc1EwRkJReXhYUVVGWExFTkJRVU1zVTBGQlV5eEZRVUZGTEZWQlFWVXNRMEZCUXl4RFFVRkRPMUZCUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zVjBGQlZ5eERRVUZETzFsQlEzSkZMR2RDUVVGblFpeERRVUZETEZkQlFWY3NSVUZCUlN4WFFVRlhMRU5CUVVNc1EwRkJRenRSUVVGRExFMUJRVTBzUTBGQlF5eFhRVUZYTEVOQlFVTTdTVUZCUXl4RFFVRkRMRU5CUVVNN1FVRkJReXhEUVVGRExFVkJRVVVzUTBGQlF6dEJRVU16UlN4NVFrRkJlVUlzVVVGQlVTeEZRVUZGTEZkQlFWYzdTVUZCU1N4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zVVVGQlVTeFpRVUZaTEZkQlFWY3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRSUVVOMlJpeE5RVUZOTEVsQlFVa3NVMEZCVXl4RFFVRkRMRzFEUVVGdFF5eERRVUZETEVOQlFVTTdTVUZETjBRc1EwRkJRenRCUVVGRExFTkJRVU03UVVGRFNEczdPenM3UjBGTFJ6dEJRVU5JTEVsQlFVa3NVVUZCVVN4SFFVRkhMRlZCUVZVc1EwRkJRenRKUVVOMFFqczdPenRQUVVsSE8wbEJRMGdzU1VGQlNTeEpRVUZKTEVkQlFVY3NWVUZCVlN4RFFVRkRPMGxCUTNSQ0xFbEJRVWtzVDBGQlR5eEhRVUZITEdWQlFXVXNRMEZCUXp0SlFVTTVRaXhKUVVGSkxGRkJRVkVzUjBGQlJ5eGhRVUZoTEVOQlFVTTdTVUZETjBJc1NVRkJTU3hUUVVGVExFZEJRVWNzUjBGQlJ5eEhRVUZITEZGQlFWRXNRMEZCUXp0SlFVTXZRaXhKUVVGSkxGbEJRVmtzUjBGQlJ5eFhRVUZYTEVOQlFVTTdTVUZETDBJc1NVRkJTU3hyUWtGQmEwSXNSMEZCUnl4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzBsQlEzQkRMRWxCUVVrc2JVSkJRVzFDTEVkQlFVY3NSMEZCUnl4RFFVRkRPMGxCUXpsQ0xFbEJRVWtzYTBKQlFXdENMRWRCUVVjc1JVRkJSU3hEUVVGRExFTkJRVU1zSzBOQlFTdERPMGxCUXpWRkxFbEJRVWtzYlVKQlFXMUNMRWRCUVVjc1JVRkJSU3hEUVVGRExFTkJRVU1zWjBSQlFXZEVPMGxCUXpsRkxFbEJRVWtzVDBGQlR5eEhRVUZITzFGQlExWXNVVUZCVVN4RlFVRkZMRWxCUVVrN1VVRkRaQ3hSUVVGUkxFVkJRVVVzU1VGQlNUdFJRVU5rTEV0QlFVc3NSVUZCUlN4TFFVRkxPMUZCUTFvc1MwRkJTeXhGUVVGRkxFOUJRVTg3VVVGRFpDeEpRVUZKTEVWQlFVVXNTVUZCU1R0TFFVTmlMRU5CUVVNN1NVRkRSaXhKUVVGSkxGZEJRVmNzUjBGQlJ6dFJRVU5rTEZGQlFWRXNSVUZCUlN4clFrRkJhMEk3VVVGRE5VSXNVVUZCVVN4RlFVRkZMRk5CUVZNN1VVRkRia0lzUzBGQlN5eEZRVUZGTEd0Q1FVRnJRanRSUVVONlFpeExRVUZMTEVWQlFVVXNhMEpCUVd0Q08xRkJRM3BDTEVsQlFVa3NSVUZCUlN4VFFVRlRPMHRCUTJ4Q0xFTkJRVU03U1VGRFJpeEpRVUZKTEZOQlFWTXNSMEZCUnp0UlFVTmFMRWxCUVVrc1JVRkJSU3hOUVVGTk8xRkJRMW9zU1VGQlNTeEZRVUZGTEUxQlFVMDdVVUZEV2l4SlFVRkpMRVZCUVVVc1RVRkJUVHRSUVVOYUxFdEJRVXNzUlVGQlJTeFBRVUZQTzB0QlEycENMRU5CUVVNN1NVRkRSaXhKUVVGSkxFdEJRVXNzUjBGQlJ6dFJRVU5TTEV0QlFVc3NSVUZCUlN4UFFVRlBMRWRCUVVjc1UwRkJVenRSUVVNeFFpeEpRVUZKTEVWQlFVVXNUVUZCVFN4SFFVRkhMRk5CUVZNN1VVRkRlRUlzVDBGQlR5eEZRVUZGTEZOQlFWTXNSMEZCUnl4VFFVRlRPMUZCUXpsQ0xGVkJRVlVzUlVGQlJTeFpRVUZaTEVkQlFVY3NVMEZCVXp0UlFVTndReXhWUVVGVkxFVkJRVVVzV1VGQldTeEhRVUZITEZOQlFWTTdVVUZEY0VNc1lVRkJZU3hGUVVGRkxFMUJRVTBzUjBGQlJ5eFRRVUZUTEVkQlFVY3NXVUZCV1R0UlFVTm9SQ3hqUVVGakxFVkJRVVVzVDBGQlR5eEhRVUZITEZOQlFWTXNSMEZCUnl4WlFVRlpPMHRCUTNKRUxFTkJRVU03U1VGRFJpeEpRVUZKTEZOQlFWTXNSMEZCUnp0UlFVTmFMRkZCUVZFc1JVRkJSU3hWUVVGVk8xRkJRM0JDTEUxQlFVMHNSVUZCUlN4UlFVRlJPMUZCUTJoQ0xFdEJRVXNzUlVGQlJTeFBRVUZQTzFGQlEyUXNTMEZCU3l4RlFVRkZMSEZDUVVGeFFqdFJRVU0xUWl4SlFVRkpMRVZCUVVVc2IwSkJRVzlDTzFGQlF6RkNMRWxCUVVrc1JVRkJSU3h2UWtGQmIwSTdVVUZETVVJc1NVRkJTU3hGUVVGRkxHOUNRVUZ2UWp0UlFVTXhRaXhKUVVGSkxFVkJRVVVzWlVGQlpUdExRVU40UWl4RFFVRkRPMGxCUTBZc1NVRkJTU3hSUVVGUkxFZEJRVWM3VVVGRFdDeE5RVUZOTEVWQlFVVXNVMEZCVXp0UlFVTnFRaXhYUVVGWExFVkJRVVVzZFVKQlFYVkNPMUZCUTNCRExFbEJRVWtzUlVGQlJTeG5Ra0ZCWjBJN1VVRkRkRUlzVTBGQlV5eEZRVUZGTERCRFFVRXdRenRSUVVOeVJDeFZRVUZWTEVWQlFVVXNjMEpCUVhOQ08xRkJRMnhETEZWQlFWVXNSVUZCUlN3clFrRkJLMEk3VVVGRE0wTXNVMEZCVXl4RlFVRkZMSGRDUVVGM1FqdExRVU4wUXl4RFFVRkRPMGxCUTBZN096czdUMEZKUnp0SlFVTklMRWxCUVVrc1VVRkJVU3hIUVVGSE8xRkJRMWdzYTBKQlFXdENMRTlCUVU4c1JVRkJSU3hOUVVGTk8xbEJRemRDTEdWQlFXVXNRMEZCUXl4SlFVRkpMRVZCUVVVc1VVRkJVU3hEUVVGRExFTkJRVU03V1VGRGFFTXNTVUZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhKUVVGSkxFTkJRVU03V1VGRGJrSXNTVUZCU1N4RFFVRkRMRk5CUVZNc1IwRkJSeXhKUVVGSkxFTkJRVU03V1VGRGRFSXNTVUZCU1N4RFFVRkRMR05CUVdNc1IwRkJSeXhKUVVGSkxFTkJRVU03V1VGRE0wSXNTVUZCU1N4RFFVRkRMRk5CUVZNc1IwRkJSeXhMUVVGTExFTkJRVU03V1VGRGRrSXNTVUZCU1N4RFFVRkRMRlZCUVZVc1IwRkJSeXhMUVVGTExFTkJRVU03V1VGRGVFSXNTVUZCU1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRPMWxCUTNaRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVkQlFVY3NRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzFsQlF6bENMRWxCUVVrc1EwRkJReXhyUWtGQmEwSXNSMEZCUnl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEZUVVc1NVRkJTU3hEUVVGRExHdENRVUZyUWl4RlFVRkZMRU5CUVVNN1VVRkRPVUlzUTBGQlF6dFJRVU5FTEZWQlFWVTdVVUZEVml4VFFVRlRPMUZCUTFRc1VVRkJVU3hEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVkQlFVYzdXVUZEZEVJc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRMnhDTEUxQlFVMHNTVUZCU1N4TFFVRkxMRU5CUVVNc2NVSkJRWEZDTEVOQlFVTXNRMEZCUXp0WlFVTXpReXhEUVVGRE8xbEJRMFFzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4VFFVRlRMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03VVVGRGFFTXNRMEZCUXl4RFFVRkRPMUZCUTBZc1VVRkJVU3hEUVVGRExGTkJRVk1zUTBGQlF5eGxRVUZsTEVkQlFVYzdXVUZEYWtNc09FTkJRVGhETzFsQlF6bERMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRMjVDTEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRaUVVOb1FpeERRVUZETzFGQlEwd3NRMEZCUXl4RFFVRkRPMUZCUTBZc1VVRkJVU3hEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVkQlFVYzdXVUZEZEVJc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRMnhDTEUxQlFVMHNTVUZCU1N4TFFVRkxMRU5CUVVNc2NVSkJRWEZDTEVOQlFVTXNRMEZCUXp0WlFVTXpReXhEUVVGRE8xbEJRMFFzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4VFFVRlRMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU03VVVGRGNFTXNRMEZCUXl4RFFVRkRPMUZCUTBZc1VVRkJVU3hEUVVGRExGTkJRVk1zUTBGQlF5eExRVUZMTEVkQlFVY3NaVUZCWlN4TFFVRkxPMWxCUXpORExFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRFZDeEpRVUZKTEVOQlFVTXNVMEZCVXl4SFFVRkhMRWxCUVVrc1EwRkJRenRaUVVNeFFpeERRVUZETzFsQlEwUXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4SlFVRkpMRWxCUVVrc1EwRkJReXh4UWtGQmNVSXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGREwwVXNTVUZCU1N4RFFVRkRMRzlDUVVGdlFpeERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJRenRuUWtGRGVrTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dFpRVU55UWl4RFFVRkRPMWxCUTBRc1lVRkJZU3hEUVVGRExFbEJRVWtzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXp0WlFVTTVRaXhKUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEVsQlFVa3NRMEZCUXp0UlFVTXhRaXhEUVVGRExFTkJRVU03VVVGRFJpeFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRMRXRCUVVzc1IwRkJSeXhsUVVGbExFdEJRVXM3V1VGRE0wTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTlVMRWxCUVVrc1EwRkJReXhUUVVGVExFZEJRVWNzUzBGQlN5eERRVUZETzFsQlF6TkNMRU5CUVVNN1dVRkRSQ3hGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRGFrSXNZVUZCWVN4RFFVRkRMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF6dG5Ra0ZET1VJc1NVRkJTU3hEUVVGRExGTkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTTdXVUZETVVJc1EwRkJRenRaUVVORUxFVkJRVVVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1VVRkJVU3hKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRek5ETEVsQlFVa3NRMEZCUXl4VFFVRlRMRWRCUVVjc1YwRkJWeXhEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETEdWQlFXVXNSMEZCUnl4SlFVRkpMRU5CUVVNc1pVRkJaU3hIUVVGSExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVVzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJRenRaUVVOc1NTeERRVUZETzFGQlEwd3NRMEZCUXl4RFFVRkRPMUZCUTBZc1VVRkJVU3hEUVVGRExGTkJRVk1zUTBGQlF5eEZRVUZGTEVkQlFVY3NXVUZCV1N4TFFVRkxPMWxCUTNKRExFbEJRVWtzUzBGQlN5eEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVTnFRaXhKUVVGSkxFTkJRVU1zWTBGQll5eEhRVUZITEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU55UlN4SlFVRkpMRmRCUVZjc1IwRkJSeXhKUVVGSkxFTkJRVU1zWVVGQllTeERRVUZETEVsQlFVa3NRMEZCUXl4alFVRmpMRU5CUVVNc1EwRkJRenRaUVVNeFJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4TFFVRkxMRWRCUVVjc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVkQlFVY3NRMEZCUXl4SlFVRkpMRXRCUVVzc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTTVReXhOUVVGTkxFTkJRVU03V1VGRFdDeERRVUZETzFsQlEwUXNSVUZCUlN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETEVOQlFVTTdaMEpCUTJ4Q0xFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVWQlFVVTdiMEpCUXpkQ0xFMUJRVTBzUTBGQlF5eExRVUZMTEVOQlFVTXNSVUZCUlN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8yZENRVU16UWl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRFNDeE5RVUZOTEVOQlFVTTdXVUZEV0N4RFFVRkRPMWxCUTBRc1JVRkJSU3hEUVVGRExFTkJRVU1zVjBGQlZ5eExRVUZMTEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRM2hDTEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVVc1EwRkJRenRuUWtGRFlpeEpRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkZMRU5CUVVNN1owSkJRMklzVFVGQlRTeERRVUZETzFsQlExZ3NRMEZCUXp0WlFVTkVMRWxCUVVrc1UwRkJVeXhIUVVGSExFdEJRVXNzUjBGQlJ5eFhRVUZYTEVkQlFVY3NVMEZCVXl4RFFVRkRMRWxCUVVrc1IwRkJSeXhUUVVGVExFTkJRVU1zVVVGQlVTeERRVUZETzFsQlF6RkZMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVTBGQlV5eEZRVUZGTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU12UXl4RFFVRkRMRU5CUVVNN1VVRkRSaXhSUVVGUkxFTkJRVU1zVTBGQlV5eERRVUZETEU5QlFVOHNSMEZCUnp0WlFVTjZRaXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF6dFpRVU5vUXl4RFFVRkRMRU5CUVVNc1ZVRkJWU3hEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVWQlFVVXNVVUZCVVN4RFFVRkRMRU5CUVVNN1dVRkRkRU1zU1VGQlNTeERRVUZETEUxQlFVMHNSMEZCUnl4SlFVRkpMRU5CUVVNN1dVRkRia0lzU1VGQlNTeERRVUZETEU5QlFVOHNSMEZCUnl4SlFVRkpMRU5CUVVNN1dVRkRjRUlzU1VGQlNTeERRVUZETEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVNN1dVRkRja0lzU1VGQlNTeERRVUZETEZOQlFWTXNSMEZCUnl4SlFVRkpMRU5CUVVNN1dVRkRkRUlzU1VGQlNTeERRVUZETEZOQlFWTXNSMEZCUnl4SlFVRkpMRU5CUVVNN1dVRkRkRUlzU1VGQlNTeERRVUZETEZWQlFWVXNSMEZCUnl4SlFVRkpMRU5CUVVNN1dVRkRka0lzU1VGQlNTeERRVUZETEdOQlFXTXNSMEZCUnl4SlFVRkpMRU5CUVVNN1dVRkRNMElzU1VGQlNTeERRVUZETEd0Q1FVRnJRaXhIUVVGSExFbEJRVWtzUTBGQlF6dFJRVU51UXl4RFFVRkRMRU5CUVVNN1VVRkRSaXhWUVVGVk8xRkJRMVlzVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXl4VlFVRlZMRWRCUVVjc2IwSkJRVzlDTEUxQlFVMDdXVUZEZEVRc1RVRkJUU3hIUVVGSExFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlN4RlFVRkZMRTlCUVU4c1JVRkJSU3hOUVVGTkxFTkJRVU1zUTBGQlF6dFpRVU4yUXl4SlFVRkpMRU5CUVVNc1pVRkJaU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RFFVRkRMRU5CUVVNN1dVRkRhRVFzVFVGQlRTeERRVUZETEUxQlFVMHNRMEZCUXp0UlFVTnNRaXhEUVVGRExFTkJRVU03VVVGRFJpeFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRMR3RDUVVGclFpeEhRVUZITzFsQlEzQkRMRWxCUVVrc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF6dFpRVU5zUWl4RlFVRkZMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRM2hDTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEV0QlFVc3NRMEZCUXl4UFFVRlBMRVZCUVVVc1ZVRkJWU3hMUVVGTE8yOUNRVU01UXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hEUVVGRExGRkJRVkVzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXp0blFrRkRiRU1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEVUN4RFFVRkRPMWxCUTBRc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRkxMRXRCUVVzc1QwRkJUeXhKUVVGSkxFTkJRVU1zUTBGQlF5eGpRVUZqTEVsQlFVa3NVVUZCVVN4RFFVRkRMR1ZCUVdVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dG5Ra0ZEYkVZc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1MwRkJTeXhEUVVGRExGVkJRVlVzUlVGQlJTeFZRVUZWTEV0QlFVczdiMEpCUTJwRUxFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8yZENRVU12UWl4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUzBGQlN5eERRVUZETEZWQlFWVXNSVUZCUlN4VlFVRlZMRXRCUVVzN2IwSkJRMjVETEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETzJkQ1FVTXZRaXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU5RTEVOQlFVTTdVVUZEVEN4RFFVRkRMRU5CUVVNN1VVRkRSaXhSUVVGUkxFTkJRVU1zVTBGQlV5eERRVUZETEZGQlFWRXNSMEZCUnl4clFrRkJhMElzUzBGQlN6dFpRVU5xUkN4RlFVRkZMRU5CUVVNc1EwRkJReXhwUWtGQmFVSXNRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJReTlETEUxQlFVMHNRMEZCUXp0WlFVTllMRU5CUVVNN1dVRkRSQ3hOUVVGTkxFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRGJFSXNTMEZCU3l4clFrRkJhMEk3YjBKQlEyNUNMRXRCUVVzc1EwRkJReXhqUVVGakxFVkJRVVVzUTBGQlF6dHZRa0ZEZGtJc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzI5Q1FVTmFMRXRCUVVzc1EwRkJRenRuUWtGRFZpeExRVUZMTEcxQ1FVRnRRanR2UWtGRGNFSXNTMEZCU3l4RFFVRkRMR05CUVdNc1JVRkJSU3hEUVVGRE8yOUNRVU4yUWl4SlFVRkpMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU03YjBKQlExb3NTMEZCU3l4RFFVRkRPMmRDUVVOV08yOUNRVU5KTEUxQlFVMHNRMEZCUXp0WlFVTm1MRU5CUVVNN1VVRkRUQ3hEUVVGRExFTkJRVU03VVVGRFJpeFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRMR0ZCUVdFc1IwRkJSeXgxUWtGQmRVSXNUMEZCVHp0WlFVTTNSQ3hKUVVGSkxFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEUxQlFVMHNSVUZCUlN4RFFVRkRMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTnVSU3hOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU03VVVGRGVFTXNRMEZCUXl4RFFVRkRPMUZCUTBZc1VVRkJVU3hEUVVGRExGTkJRVk1zUTBGQlF5eHRRa0ZCYlVJc1IwRkJSeXcyUWtGQk5rSXNVMEZCVXl4RlFVRkZMR0ZCUVdFN1dVRkRNVVlzU1VGQlNTeGxRVUZsTEVkQlFVY3NVMEZCVXl4TFFVRkxMRk5CUVZNc1EwRkJReXhKUVVGSkxFTkJRVU03V1VGRGJrUXNTVUZCU1N4bFFVRmxMRWRCUVVjc1UwRkJVeXhMUVVGTExGTkJRVk1zUTBGQlF5eFJRVUZSTEVOQlFVTTdXVUZEZGtRc1NVRkJTU3hYUVVGWExFZEJRVWNzU1VGQlNTeERRVUZETEdGQlFXRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenRaUVVOd1JDeEpRVUZKTEdGQlFXRXNSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFMUJRVTBzUjBGQlJ5eERRVUZETEVOQlFVTTdXVUZETTBNc1NVRkJTU3hoUVVGaExFZEJRVWNzWlVGQlpTeEpRVUZKTEZkQlFWY3NTMEZCU3l4RFFVRkRMRWxCUVVrc1pVRkJaU3hKUVVGSkxGZEJRVmNzUzBGQlN5eGhRVUZoTEVOQlFVTTdXVUZETjBjc1JVRkJSU3hEUVVGRExFTkJRVU1zWVVGQllTeEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTjBReXhOUVVGTkxFTkJRVU1zWVVGQllTeERRVUZETzFsQlEzcENMRU5CUVVNN1dVRkRSQ3hKUVVGSkxFdEJRVXNzUjBGQlJ5eFRRVUZUTEV0QlFVc3NVMEZCVXl4RFFVRkRMRkZCUVZFc1IwRkJSeXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdXVUZEZEVRc1NVRkJTU3hUUVVGVExFZEJRVWNzUTBGQlF5eFhRVUZYTEVkQlFVY3NTMEZCU3l4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTTdXVUZETTBRc1RVRkJUU3hEUVVGRExGTkJRVk1zUzBGQlN5eERRVUZETEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN1VVRkRNMFlzUTBGQlF5eERRVUZETzFGQlEwWXNVVUZCVVN4RFFVRkRMRk5CUVZNc1EwRkJReXhyUWtGQmEwSXNSMEZCUnl3MFFrRkJORUlzWVVGQllTeEZRVUZGTEd0Q1FVRnJRanRaUVVOcVJ5eEpRVUZKTEZWQlFWVXNSMEZCUnl4RFFVRkRMRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVWQlFVVTdaMEpCUTJ4RExHRkJRV0VzUlVGQlJTeGhRVUZoTzJkQ1FVTTFRaXhUUVVGVExFVkJRVVVzYTBKQlFXdENPMkZCUTJoRExFTkJRVU1zUTBGQlF6dFpRVU5JTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU1zVDBGQlR5eERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRPMWxCUTNKRExFMUJRVTBzUTBGQlF5eFZRVUZWTEVOQlFVTTdVVUZEZEVJc1EwRkJReXhEUVVGRE8xRkJRMFlzVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXl3d1FrRkJNRUlzUjBGQlJ5eHZRMEZCYjBNc1QwRkJUenRaUVVOMlJpeEZRVUZGTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc2EwSkJRV3RDTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVNeFFpeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMR3RDUVVGclFpeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eFhRVUZYTEVOQlFVTXNVMEZCVXl4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRE8yZENRVU12UlN4SlFVRkpMR0ZCUVdFc1IwRkJSeXhKUVVGSkxFTkJRVU1zYTBKQlFXdENMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eGhRVUZoTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRGJFWXNSVUZCUlN4RFFVRkRMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZEYUVJc1EwRkJReXhEUVVGRExHRkJRV0VzUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU03WjBKQlEyaEVMRU5CUVVNN1dVRkRUQ3hEUVVGRE8xRkJRMHdzUTBGQlF5eERRVUZETzFGQlEwWXNVVUZCVVN4RFFVRkRMRk5CUVZNc1EwRkJReXhOUVVGTkxFZEJRVWNzWjBKQlFXZENMRk5CUVZNc1JVRkJSU3hQUVVGUE8xbEJRekZFTEVsQlFVa3NUVUZCVFN4SFFVRkhMRWxCUVVrc1EwRkJRenRaUVVOc1FpeEpRVUZKTEdGQlFXRXNSMEZCUnl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1YwRkJWeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEYmtVc1NVRkJTU3hYUVVGWExFZEJRVWNzVDBGQlR5eEpRVUZKTEdGQlFXRXNTVUZCU1N4SlFVRkpMRU5CUVVNc2JVSkJRVzFDTEVOQlFVTXNVMEZCVXl4RlFVRkZMR0ZCUVdFc1EwRkJReXhEUVVGRE8xbEJRMnBITEVsQlFVa3NVMEZCVXl4SFFVRkhMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTTdXVUZEZUVNc1NVRkJTU3h2UWtGQmIwSXNSMEZCUnl4TFFVRkxMRU5CUVVNc1EwRkJRenRaUVVOc1F5eEpRVUZKTEdOQlFXTXNSMEZCUnl4TFFVRkxMRU5CUVVNc1EwRkJRenRaUVVNMVFpeEpRVUZKTEd0Q1FVRnJRaXhIUVVGSExFdEJRVXNzUTBGQlF5eERRVUZETzFsQlEyaERMRVZCUVVVc1EwRkJReXhEUVVGRExGTkJRVk1zUzBGQlN5eFRRVUZUTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGREwwSXNiMEpCUVc5Q0xFZEJRVWNzVTBGQlV5eERRVUZETEVsQlFVa3NRMEZCUXp0blFrRkRkRU1zWTBGQll5eEhRVUZITEZOQlFWTXNRMEZCUXl4SlFVRkpMRU5CUVVNN1owSkJRMmhETEd0Q1FVRnJRaXhIUVVGSExGTkJRVk1zUTBGQlF5eEpRVUZKTEVOQlFVTTdXVUZEZUVNc1EwRkJRenRaUVVORUxFbEJRVWtzUTBGQlF5eERRVUZETzJkQ1FVTkdMRzlDUVVGdlFpeEhRVUZITEZOQlFWTXNRMEZCUXl4TFFVRkxMRU5CUVVNN1owSkJRM1pETEdOQlFXTXNSMEZCUnl4VFFVRlRMRU5CUVVNc1NVRkJTU3hEUVVGRE8yZENRVU5vUXl4clFrRkJhMElzUjBGQlJ5eFRRVUZUTEVOQlFVTXNTMEZCU3l4RFFVRkRPMWxCUTNwRExFTkJRVU03V1VGRFJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4WFFVRlhMRWxCUVVrc1EwRkJReXhEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTXpSQ3hKUVVGSkxFTkJRVU1zVlVGQlZTeEhRVUZITEV0QlFVc3NRMEZCUXp0blFrRkRlRUlzVFVGQlRTeERRVUZETzFsQlExZ3NRMEZCUXp0WlFVTkVMRWxCUVVrc1ZVRkJWU3hIUVVGSExFbEJRVWtzUTBGQlF5eHJRa0ZCYTBJc1EwRkJReXhYUVVGWExFVkJRVVVzYTBKQlFXdENMRU5CUVVNc1EwRkJRenRaUVVNeFJTeEZRVUZGTEVOQlFVTXNRMEZCUXl4VlFVRlZMRU5CUVVNc2EwSkJRV3RDTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRMnhETEUxQlFVMHNRMEZCUXp0WlFVTllMRU5CUVVNN1dVRkRSQ3hGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEdGQlFXRXNTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlEycERMREJEUVVFd1F6dG5Ra0ZETVVNc1RVRkJUU3hEUVVGRE8xbEJRMWdzUTBGQlF6dFpRVU5FTEVsQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1NVRkJTU3hEUVVGRE8xbEJRM1pDTEVWQlFVVXNRMEZCUXl4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlExb3NTVUZCU1N4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRE8xbEJRMnBDTEVOQlFVTTdXVUZEUkN4SlFVRkpMRU5CUVVNc01FSkJRVEJDTEVOQlFVTXNWMEZCVnl4RFFVRkRMRU5CUVVNN1dVRkROME1zU1VGQlNTeFRRVUZUTEVkQlFVY3NRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeEZRVUZGTzJkQ1FVTm9ReXhoUVVGaExFVkJRVVVzVjBGQlZ6dG5Ra0ZETVVJc1UwRkJVeXhGUVVGRkxHdENRVUZyUWp0aFFVTm9ReXhEUVVGRExFTkJRVU03V1VGRFNDeEZRVUZGTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc2NVSkJRWEZDTEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTTNSU3hEUVVGRExFTkJRVU1zVjBGQlZ5eERRVUZETEVOQlFVTXNVVUZCVVN4RFFVRkRMR05CUVdNc1EwRkJReXhEUVVGRE8yZENRVU40UXl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETzJkQ1FVTjZRaXhEUVVGRExFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTXNVVUZCVVN4RFFVRkRMRzlDUVVGdlFpeERRVUZETEVOQlFVTTdaMEpCUTJoRUxFTkJRVU1zUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc2IwSkJRVzlDTEVOQlFVTXNRMEZCUXp0blFrRkRPVU1zUTBGQlF5eERRVUZETEdGQlFXRXNRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zWTBGQll5eEZRVUZGTzI5Q1FVTjBReXhEUVVGRExFTkJRVU1zVjBGQlZ5eERRVUZETEVOQlFVTXNWMEZCVnl4RFFVRkRMRzlDUVVGdlFpeEhRVUZITEVkQlFVY3NSMEZCUnl4alFVRmpMRU5CUVVNc1EwRkJReXhSUVVGUkxFTkJRVU1zVTBGQlV5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRPMjlDUVVOdVJ5eERRVUZETEVOQlFVTXNZVUZCWVN4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRExGTkJRVk1zUTBGQlF5eE5RVUZOTEVkQlFVY3NSMEZCUnl4SFFVRkhMR05CUVdNc1IwRkJSeXhIUVVGSExFZEJRVWNzYjBKQlFXOUNMRU5CUVVNc1EwRkJRenR2UWtGRGJrY3NUVUZCVFN4RFFVRkRMRlZCUVZVc1IwRkJSeXhMUVVGTExFTkJRVU03YjBKQlF6RkNMRlZCUVZVc1EwRkJRenQzUWtGRFVDeE5RVUZOTEVOQlFVTXNRMEZCUXl4RFFVRkRMRTFCUVUwc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN2IwSkJRMnBFTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRFZpeERRVUZETEVOQlFVTXNRMEZCUXl4dlFrRkJiMElzUTBGQlF5eHRRa0ZCYlVJc1EwRkJReXhEUVVGRE8xbEJRMnBFTEVOQlFVTTdXVUZEUkN4SlFVRkpMRU5CUVVNc1EwRkJRenRuUWtGRFJpeERRVUZETEVOQlFVTXNZVUZCWVN4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRExGTkJRVk1zUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXp0blFrRkRMME1zUTBGQlF5eERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRMRkZCUVZFc1EwRkJReXhUUVVGVExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTTdaMEpCUXpGRExFbEJRVWtzUTBGQlF5eFZRVUZWTEVkQlFVY3NTMEZCU3l4RFFVRkRPMmRDUVVONFFpeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXp0WlFVTjRReXhEUVVGRE8xbEJRMFFzUlVGQlJTeERRVUZETEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRFdpeEpRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkZMRU5CUVVNN1dVRkRha0lzUTBGQlF6dFJRVU5NTEVOQlFVTXNRMEZCUXp0UlFVTkdMRk5CUVZNN1VVRkRWQ3hSUVVGUkxFTkJRVU1zWjBKQlFXZENMRWRCUVVjc01FSkJRVEJDTEUxQlFVMDdXVUZEZUVRc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTTdaMEpCUTJJc1NVRkJTU3hKUVVGSkxFZEJRVWNzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF6dG5Ra0ZEYkVNc1NVRkJTU3hQUVVGUExFZEJRVWNzUTBGQlF5eERRVUZETEUxQlFVMHNRMEZCUXl4RlFVRkZMRVZCUVVVc1QwRkJUeXhGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJReXhEUVVGRE8yZENRVU53UkN4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFOUJRVThzVFVGQlRTeExRVUZMTEZkQlFWY3NSMEZCUnl4WFFVRlhMRWRCUVVjc1QwRkJUeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEV0QlFVc3NVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJRenR2UWtGREwwVXNRMEZCUXl4RFFVRkRMRTFCUVUwc1EwRkJReXhQUVVGUExFVkJRVVVzVFVGQlRTeERRVUZETEVOQlFVTTdaMEpCUXpsQ0xFTkJRVU03WjBKQlEwUXNTVUZCU1N4TlFVRk5MRWRCUVVjc1QwRkJUeXhOUVVGTkxFdEJRVXNzVVVGQlVTeEhRVUZITEUxQlFVMHNSMEZCUnl4UFFVRlBMRU5CUVVNc1MwRkJTeXhEUVVGRE8yZENRVU5xUlN4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTTdiMEpCUTFJc1NVRkJTU3hIUVVGSExFbEJRVWtzVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4UFFVRlBMRU5CUVVNc1EwRkJRenR2UWtGRGJrTXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNN1owSkJRMnBETEVOQlFVTTdaMEpCUTBRc1JVRkJSU3hEUVVGRExFTkJRVU1zVDBGQlR5eE5RVUZOTEV0QlFVc3NVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJRenR2UWtGRE4wSXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF6dG5Ra0ZEY0VJc1EwRkJRenRuUWtGRFJDeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1QwRkJUeXhOUVVGTkxFdEJRVXNzVVVGQlVTeERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkRiRU1zUlVGQlJTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhMUVVGTExGTkJRVk1zUTBGQlF5eERRVUZETEVOQlFVTTdkMEpCUXpkQ0xFMUJRVTBzU1VGQlNTeExRVUZMTEVOQlFVTXNiVUpCUVcxQ0xFZEJRVWNzVFVGQlRTeEhRVUZITEVkQlFVY3NRMEZCUXl4RFFVRkRPMjlDUVVONFJDeERRVUZETzI5Q1FVTkVMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zUlVGQlJTeERRVUZETzJkQ1FVTnVRaXhEUVVGRE8yZENRVU5FTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJReXhQUVVGUExFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkRlRUlzU1VGQlNTeERRVUZETEV0QlFVc3NSVUZCUlN4RFFVRkRPMjlDUVVOaUxFbEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXp0blFrRkRha0lzUTBGQlF6dFpRVU5NTEVOQlFVTXNRMEZCUXl4RFFVRkRPMUZCUTFBc1EwRkJReXhEUVVGRE8xRkJRMFlzVVVGQlVTeERRVUZETEc5Q1FVRnZRaXhIUVVGSExEaENRVUU0UWl4TFFVRkxPMWxCUXk5RUxFbEJRVWtzVVVGQlVTeEhRVUZITEVsQlFVa3NRMEZCUXl4elFrRkJjMElzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0WlFVTnFSQ3hGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRMW9zVFVGQlRTeERRVUZETzFsQlExZ3NRMEZCUXp0WlFVTkVMRWxCUVVrc1RVRkJUU3hIUVVGSExFTkJRVU1zUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVNMVFpeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRTFCUVUwc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRja1FzVFVGQlRTeERRVUZETzFsQlExZ3NRMEZCUXp0WlFVTkVMRWxCUVVrc1RVRkJUU3hIUVVGSExFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVWQlFVVXNSVUZCUlN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTXNRMEZCUXp0WlFVTTFSQ3hKUVVGSkxGVkJRVlVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNXVUZCV1N4RFFVRkRMR1ZCUVdVc1EwRkJReXhEUVVGRE8xbEJRM0JFTEVWQlFVVXNRMEZCUXl4RFFVRkRMRlZCUVZVc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlEySXNUVUZCVFN4RFFVRkRMRkZCUVZFc1IwRkJSeXhMUVVGTExFTkJRVU03V1VGRE5VSXNRMEZCUXp0WlFVTkVMRkZCUVZFc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF5eEZRVUZGTEUxQlFVMHNRMEZCUXl4RFFVRkRPMWxCUTJ4RUxFVkJRVVVzUTBGQlF5eERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRMklzUTBGQlF5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVRkRMRU5CUVVNN1dVRkROVU1zUTBGQlF6dFpRVU5FTEV0QlFVc3NRMEZCUXl4alFVRmpMRVZCUVVVc1EwRkJRenRSUVVNelFpeERRVUZETEVOQlFVTTdVVUZEUml4WlFVRlpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFbEJRVWtzUlVGQlJTeERRVUZETzJkQ1FVTjBRaXhIUVVGSExFVkJRVVVzVTBGQlV6dG5Ra0ZEWkN4SFFVRkhMRVZCUVVVN2IwSkJRMFFzVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXp0blFrRkRia0lzUTBGQlF6dGhRVU5LTEVWQlFVVTdaMEpCUTBNc1IwRkJSeXhGUVVGRkxGTkJRVk03WjBKQlEyUXNSMEZCUnl4RlFVRkZPMjlDUVVORUxFMUJRVTBzUTBGQlF5eFBRVUZQTEVOQlFVTTdaMEpCUTI1Q0xFTkJRVU03WVVGRFNpeERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTlNMRTFCUVUwc1EwRkJReXhSUVVGUkxFTkJRVU03U1VGRGNFSXNRMEZCUXl4RlFVRkZMRU5CUVVNN1NVRkRTanM3T3p0UFFVbEhPMGxCUTBnc1EwRkJReXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4TFFVRkxMRU5CUVVNc1kwRkJZeXhGUVVGRkxGRkJRVkVzUTBGQlF5eFZRVUZWTEVWQlFVVXNVVUZCVVN4RFFVRkRMRzlDUVVGdlFpeERRVUZETEVOQlFVTTdTVUZEZWtZc1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4TFFVRkxMRU5CUVVNc1lVRkJZU3hGUVVGRk8xRkJRemxDTEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETzFsQlEzWkNMRWxCUVVrc1UwRkJVeXhIUVVGSExFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0WlFVTjRRaXhSUVVGUkxFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVk1zUlVGQlJTeFRRVUZUTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNc1EwRkJRenRSUVVOb1JTeERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTlFMRU5CUVVNc1EwRkJReXhEUVVGRE8wbEJRMGc3T3pzN1QwRkpSenRKUVVOSUxFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1VVRkJVU3hEUVVGRExHZENRVUZuUWl4RFFVRkRPMGxCUTNaRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1YwRkJWeXhIUVVGSExGRkJRVkVzUTBGQlF6dEpRVU5zUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEZWQlFWVXNSMEZCUnp0UlFVTndRaXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMR3RDUVVGclFpeERRVUZETzFGQlEyaERMRTFCUVUwc1EwRkJReXhSUVVGUkxFTkJRVU1zWjBKQlFXZENMRU5CUVVNN1NVRkRja01zUTBGQlF5eERRVUZETzBsQlEwWXNUVUZCVFN4RFFVRkRMRkZCUVZFc1EwRkJRenRCUVVOd1FpeERRVUZETEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNN1FVRkRWaXh2UTBGQmIwTTdRVUZGY0VNc0syeDJRMEZCSzJ4MlF5SXNJbVpwYkdVaU9pSjNkM2N2Y0dGamEzTXZZbTl2ZEhOMGNtRndMMnB6TDJScGMzUXZZMkZ5YjNWelpXd3Vhbk1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKMllYSWdYM1I1Y0dWdlppQTlJSFI1Y0dWdlppQlRlVzFpYjJ3Z1BUMDlJRndpWm5WdVkzUnBiMjVjSWlBbUppQjBlWEJsYjJZZ1UzbHRZbTlzTG1sMFpYSmhkRzl5SUQwOVBTQmNJbk41YldKdmJGd2lJRDhnWm5WdVkzUnBiMjRnS0c5aWFpa2dleUJ5WlhSMWNtNGdkSGx3Wlc5bUlHOWlhanNnZlNBNklHWjFibU4wYVc5dUlDaHZZbW9wSUhzZ2NtVjBkWEp1SUc5aWFpQW1KaUIwZVhCbGIyWWdVM2x0WW05c0lEMDlQU0JjSW1aMWJtTjBhVzl1WENJZ0ppWWdiMkpxTG1OdmJuTjBjblZqZEc5eUlEMDlQU0JUZVcxaWIyd2dKaVlnYjJKcUlDRTlQU0JUZVcxaWIyd3VjSEp2ZEc5MGVYQmxJRDhnWENKemVXMWliMnhjSWlBNklIUjVjR1Z2WmlCdlltbzdJSDA3WEc1MllYSWdYMk55WldGMFpVTnNZWE56SUQwZ1puVnVZM1JwYjI0Z0tDa2dleUJtZFc1amRHbHZiaUJrWldacGJtVlFjbTl3WlhKMGFXVnpLSFJoY21kbGRDd2djSEp2Y0hNcElIc2dabTl5SUNoMllYSWdhU0E5SURBN0lHa2dQQ0J3Y205d2N5NXNaVzVuZEdnN0lHa3JLeWtnZTF4dUlDQWdJSFpoY2lCa1pYTmpjbWx3ZEc5eUlEMGdjSEp2Y0hOYmFWMDdYRzRnSUNBZ1pHVnpZM0pwY0hSdmNpNWxiblZ0WlhKaFlteGxJRDBnWkdWelkzSnBjSFJ2Y2k1bGJuVnRaWEpoWW14bElIeDhJR1poYkhObE8xeHVJQ0FnSUdSbGMyTnlhWEIwYjNJdVkyOXVabWxuZFhKaFlteGxJRDBnZEhKMVpUdGNiaUFnSUNCcFppQW9YQ0oyWVd4MVpWd2lJR2x1SUdSbGMyTnlhWEIwYjNJcFhHNGdJQ0FnSUNBZ0lHUmxjMk55YVhCMGIzSXVkM0pwZEdGaWJHVWdQU0IwY25WbE8xeHVJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaDBZWEpuWlhRc0lHUmxjMk55YVhCMGIzSXVhMlY1TENCa1pYTmpjbWx3ZEc5eUtUdGNibjBnZlNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnS0VOdmJuTjBjblZqZEc5eUxDQndjbTkwYjFCeWIzQnpMQ0J6ZEdGMGFXTlFjbTl3Y3lrZ2V5QnBaaUFvY0hKdmRHOVFjbTl3Y3lsY2JpQWdJQ0JrWldacGJtVlFjbTl3WlhKMGFXVnpLRU52Ym5OMGNuVmpkRzl5TG5CeWIzUnZkSGx3WlN3Z2NISnZkRzlRY205d2N5azdJR2xtSUNoemRHRjBhV05RY205d2N5bGNiaUFnSUNCa1pXWnBibVZRY205d1pYSjBhV1Z6S0VOdmJuTjBjblZqZEc5eUxDQnpkR0YwYVdOUWNtOXdjeWs3SUhKbGRIVnliaUJEYjI1emRISjFZM1J2Y2pzZ2ZUc2dmU2dwTzF4dVpuVnVZM1JwYjI0Z1gyTnNZWE56UTJGc2JFTm9aV05yS0dsdWMzUmhibU5sTENCRGIyNXpkSEoxWTNSdmNpa2dleUJwWmlBb0lTaHBibk4wWVc1alpTQnBibk4wWVc1alpXOW1JRU52Ym5OMGNuVmpkRzl5S1NrZ2UxeHVJQ0FnSUhSb2NtOTNJRzVsZHlCVWVYQmxSWEp5YjNJb1hDSkRZVzV1YjNRZ1kyRnNiQ0JoSUdOc1lYTnpJR0Z6SUdFZ1puVnVZM1JwYjI1Y0lpazdYRzU5SUgxY2JpOHFLbHh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFxSUVKdmIzUnpkSEpoY0NBb2RqUXVNQzR3TFdGc2NHaGhMallwT2lCallYSnZkWE5sYkM1cWMxeHVJQ29nVEdsalpXNXpaV1FnZFc1a1pYSWdUVWxVSUNob2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmRIZGljeTlpYjI5MGMzUnlZWEF2WW14dllpOXRZWE4wWlhJdlRFbERSVTVUUlNsY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpOWNiblpoY2lCRFlYSnZkWE5sYkNBOUlHWjFibU4wYVc5dUlDZ2tLU0I3WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0lDQWdJQ29nUTI5dWMzUmhiblJ6WEc0Z0lDQWdJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0lDQWdJQ292WEc0Z0lDQWdkbUZ5SUU1QlRVVWdQU0FuWTJGeWIzVnpaV3duTzF4dUlDQWdJSFpoY2lCV1JWSlRTVTlPSUQwZ0p6UXVNQzR3TFdGc2NHaGhMalluTzF4dUlDQWdJSFpoY2lCRVFWUkJYMHRGV1NBOUlDZGljeTVqWVhKdmRYTmxiQ2M3WEc0Z0lDQWdkbUZ5SUVWV1JVNVVYMHRGV1NBOUlDY3VKeUFySUVSQlZFRmZTMFZaTzF4dUlDQWdJSFpoY2lCRVFWUkJYMEZRU1Y5TFJWa2dQU0FuTG1SaGRHRXRZWEJwSnp0Y2JpQWdJQ0IyWVhJZ1NsRlZSVkpaWDA1UFgwTlBUa1pNU1VOVUlEMGdKQzVtYmx0T1FVMUZYVHRjYmlBZ0lDQjJZWElnVkZKQlRsTkpWRWxQVGw5RVZWSkJWRWxQVGlBOUlEWXdNRHRjYmlBZ0lDQjJZWElnUVZKU1QxZGZURVZHVkY5TFJWbERUMFJGSUQwZ016YzdJQzh2SUV0bGVXSnZZWEprUlhabGJuUXVkMmhwWTJnZ2RtRnNkV1VnWm05eUlHeGxablFnWVhKeWIzY2dhMlY1WEc0Z0lDQWdkbUZ5SUVGU1VrOVhYMUpKUjBoVVgwdEZXVU5QUkVVZ1BTQXpPVHNnTHk4Z1MyVjVZbTloY21SRmRtVnVkQzUzYUdsamFDQjJZV3gxWlNCbWIzSWdjbWxuYUhRZ1lYSnliM2NnYTJWNVhHNGdJQ0FnZG1GeUlFUmxabUYxYkhRZ1BTQjdYRzRnSUNBZ0lDQWdJR2x1ZEdWeWRtRnNPaUExTURBd0xGeHVJQ0FnSUNBZ0lDQnJaWGxpYjJGeVpEb2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ2MyeHBaR1U2SUdaaGJITmxMRnh1SUNBZ0lDQWdJQ0J3WVhWelpUb2dKMmh2ZG1WeUp5eGNiaUFnSUNBZ0lDQWdkM0poY0RvZ2RISjFaVnh1SUNBZ0lIMDdYRzRnSUNBZ2RtRnlJRVJsWm1GMWJIUlVlWEJsSUQwZ2UxeHVJQ0FnSUNBZ0lDQnBiblJsY25aaGJEb2dKeWh1ZFcxaVpYSjhZbTl2YkdWaGJpa25MRnh1SUNBZ0lDQWdJQ0JyWlhsaWIyRnlaRG9nSjJKdmIyeGxZVzRuTEZ4dUlDQWdJQ0FnSUNCemJHbGtaVG9nSnloaWIyOXNaV0Z1ZkhOMGNtbHVaeWtuTEZ4dUlDQWdJQ0FnSUNCd1lYVnpaVG9nSnloemRISnBibWQ4WW05dmJHVmhiaWtuTEZ4dUlDQWdJQ0FnSUNCM2NtRndPaUFuWW05dmJHVmhiaWRjYmlBZ0lDQjlPMXh1SUNBZ0lIWmhjaUJFYVhKbFkzUnBiMjRnUFNCN1hHNGdJQ0FnSUNBZ0lFNUZXRlE2SUNkdVpYaDBKeXhjYmlBZ0lDQWdJQ0FnVUZKRlZqb2dKM0J5WlhZbkxGeHVJQ0FnSUNBZ0lDQk1SVVpVT2lBbmJHVm1kQ2NzWEc0Z0lDQWdJQ0FnSUZKSlIwaFVPaUFuY21sbmFIUW5YRzRnSUNBZ2ZUdGNiaUFnSUNCMllYSWdSWFpsYm5RZ1BTQjdYRzRnSUNBZ0lDQWdJRk5NU1VSRk9pQW5jMnhwWkdVbklDc2dSVlpGVGxSZlMwVlpMRnh1SUNBZ0lDQWdJQ0JUVEVsRU9pQW5jMnhwWkNjZ0t5QkZWa1ZPVkY5TFJWa3NYRzRnSUNBZ0lDQWdJRXRGV1VSUFYwNDZJQ2RyWlhsa2IzZHVKeUFySUVWV1JVNVVYMHRGV1N4Y2JpQWdJQ0FnSUNBZ1RVOVZVMFZGVGxSRlVqb2dKMjF2ZFhObFpXNTBaWEluSUNzZ1JWWkZUbFJmUzBWWkxGeHVJQ0FnSUNBZ0lDQk5UMVZUUlV4RlFWWkZPaUFuYlc5MWMyVnNaV0YyWlNjZ0t5QkZWa1ZPVkY5TFJWa3NYRzRnSUNBZ0lDQWdJRXhQUVVSZlJFRlVRVjlCVUVrNklDZHNiMkZrSnlBcklFVldSVTVVWDB0RldTQXJJRVJCVkVGZlFWQkpYMHRGV1N4Y2JpQWdJQ0FnSUNBZ1EweEpRMHRmUkVGVVFWOUJVRWs2SUNkamJHbGpheWNnS3lCRlZrVk9WRjlMUlZrZ0t5QkVRVlJCWDBGUVNWOUxSVmxjYmlBZ0lDQjlPMXh1SUNBZ0lIWmhjaUJEYkdGemMwNWhiV1VnUFNCN1hHNGdJQ0FnSUNBZ0lFTkJVazlWVTBWTU9pQW5ZMkZ5YjNWelpXd25MRnh1SUNBZ0lDQWdJQ0JCUTFSSlZrVTZJQ2RoWTNScGRtVW5MRnh1SUNBZ0lDQWdJQ0JUVEVsRVJUb2dKM05zYVdSbEp5eGNiaUFnSUNBZ0lDQWdVa2xIU0ZRNklDZGpZWEp2ZFhObGJDMXBkR1Z0TFhKcFoyaDBKeXhjYmlBZ0lDQWdJQ0FnVEVWR1ZEb2dKMk5oY205MWMyVnNMV2wwWlcwdGJHVm1kQ2NzWEc0Z0lDQWdJQ0FnSUU1RldGUTZJQ2RqWVhKdmRYTmxiQzFwZEdWdExXNWxlSFFuTEZ4dUlDQWdJQ0FnSUNCUVVrVldPaUFuWTJGeWIzVnpaV3d0YVhSbGJTMXdjbVYySnl4Y2JpQWdJQ0FnSUNBZ1NWUkZUVG9nSjJOaGNtOTFjMlZzTFdsMFpXMG5YRzRnSUNBZ2ZUdGNiaUFnSUNCMllYSWdVMlZzWldOMGIzSWdQU0I3WEc0Z0lDQWdJQ0FnSUVGRFZFbFdSVG9nSnk1aFkzUnBkbVVuTEZ4dUlDQWdJQ0FnSUNCQlExUkpWa1ZmU1ZSRlRUb2dKeTVoWTNScGRtVXVZMkZ5YjNWelpXd3RhWFJsYlNjc1hHNGdJQ0FnSUNBZ0lFbFVSVTA2SUNjdVkyRnliM1Z6Wld3dGFYUmxiU2NzWEc0Z0lDQWdJQ0FnSUU1RldGUmZVRkpGVmpvZ0p5NWpZWEp2ZFhObGJDMXBkR1Z0TFc1bGVIUXNJQzVqWVhKdmRYTmxiQzFwZEdWdExYQnlaWFluTEZ4dUlDQWdJQ0FnSUNCSlRrUkpRMEZVVDFKVE9pQW5MbU5oY205MWMyVnNMV2x1WkdsallYUnZjbk1uTEZ4dUlDQWdJQ0FnSUNCRVFWUkJYMU5NU1VSRk9pQW5XMlJoZEdFdGMyeHBaR1ZkTENCYlpHRjBZUzF6Ykdsa1pTMTBiMTBuTEZ4dUlDQWdJQ0FnSUNCRVFWUkJYMUpKUkVVNklDZGJaR0YwWVMxeWFXUmxQVndpWTJGeWIzVnpaV3hjSWwwblhHNGdJQ0FnZlR0Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQWdJQ0FnS2lCRGJHRnpjeUJFWldacGJtbDBhVzl1WEc0Z0lDQWdJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0lDQWdJQ292WEc0Z0lDQWdkbUZ5SUVOaGNtOTFjMlZzSUQwZ1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJEWVhKdmRYTmxiQ2hsYkdWdFpXNTBMQ0JqYjI1bWFXY3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lGOWpiR0Z6YzBOaGJHeERhR1ZqYXloMGFHbHpMQ0JEWVhKdmRYTmxiQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5cGRHVnRjeUE5SUc1MWJHdzdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlwYm5SbGNuWmhiQ0E5SUc1MWJHdzdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDloWTNScGRtVkZiR1Z0Wlc1MElEMGdiblZzYkR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgybHpVR0YxYzJWa0lEMGdabUZzYzJVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXBjMU5zYVdScGJtY2dQU0JtWVd4elpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMk52Ym1acFp5QTlJSFJvYVhNdVgyZGxkRU52Ym1acFp5aGpiMjVtYVdjcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZaV3hsYldWdWRDQTlJQ1FvWld4bGJXVnVkQ2xiTUYwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXBibVJwWTJGMGIzSnpSV3hsYldWdWRDQTlJQ1FvZEdocGN5NWZaV3hsYldWdWRDa3VabWx1WkNoVFpXeGxZM1J2Y2k1SlRrUkpRMEZVVDFKVEtWc3dYVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJGa1pFVjJaVzUwVEdsemRHVnVaWEp6S0NrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdMeThnWjJWMGRHVnljMXh1SUNBZ0lDQWdJQ0F2THlCd2RXSnNhV05jYmlBZ0lDQWdJQ0FnUTJGeWIzVnpaV3d1Y0hKdmRHOTBlWEJsTG01bGVIUWdQU0JtZFc1amRHbHZiaUJ1WlhoMEtDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVgybHpVMnhwWkdsdVp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpZ25RMkZ5YjNWelpXd2dhWE1nYzJ4cFpHbHVaeWNwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmYzJ4cFpHVW9SR2x5WldOMGFXOXVMazVGV0ZRcE8xeHVJQ0FnSUNBZ0lDQjlPMXh1SUNBZ0lDQWdJQ0JEWVhKdmRYTmxiQzV3Y205MGIzUjVjR1V1Ym1WNGRGZG9aVzVXYVhOcFlteGxJRDBnWm5WdVkzUnBiMjRnYm1WNGRGZG9aVzVXYVhOcFlteGxLQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdMeThnUkc5dUozUWdZMkZzYkNCdVpYaDBJSGRvWlc0Z2RHaGxJSEJoWjJVZ2FYTnVKM1FnZG1semFXSnNaVnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZrYjJOMWJXVnVkQzVvYVdSa1pXNHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtNWxlSFFvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlR0Y2JpQWdJQ0FnSUNBZ1EyRnliM1Z6Wld3dWNISnZkRzkwZVhCbExuQnlaWFlnUFNCbWRXNWpkR2x2YmlCd2NtVjJLQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSb2FYTXVYMmx6VTJ4cFpHbHVaeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWduUTJGeWIzVnpaV3dnYVhNZ2MyeHBaR2x1WnljcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmMyeHBaR1VvUkdseVpXTjBhVzl1TGxCU1JWWkpUMVZUS1R0Y2JpQWdJQ0FnSUNBZ2ZUdGNiaUFnSUNBZ0lDQWdRMkZ5YjNWelpXd3VjSEp2ZEc5MGVYQmxMbkJoZFhObElEMGdablZ1WTNScGIyNGdjR0YxYzJVb1pYWmxiblFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaFpYWmxiblFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlwYzFCaGRYTmxaQ0E5SUhSeWRXVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0pDaDBhR2x6TGw5bGJHVnRaVzUwS1M1bWFXNWtLRk5sYkdWamRHOXlMazVGV0ZSZlVGSkZWaWxiTUYwZ0ppWWdWWFJwYkM1emRYQndiM0owYzFSeVlXNXphWFJwYjI1RmJtUW9LU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZWMGFXd3VkSEpwWjJkbGNsUnlZVzV6YVhScGIyNUZibVFvZEdocGN5NWZaV3hsYldWdWRDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amVXTnNaU2gwY25WbEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJR05zWldGeVNXNTBaWEoyWVd3b2RHaHBjeTVmYVc1MFpYSjJZV3dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmFXNTBaWEoyWVd3Z1BTQnVkV3hzTzF4dUlDQWdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ0lDQkRZWEp2ZFhObGJDNXdjbTkwYjNSNWNHVXVZM2xqYkdVZ1BTQm1kVzVqZEdsdmJpQmplV05zWlNobGRtVnVkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGbGRtVnVkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMmx6VUdGMWMyVmtJRDBnWm1Gc2MyVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVmYVc1MFpYSjJZV3dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamJHVmhja2x1ZEdWeWRtRnNLSFJvYVhNdVgybHVkR1Z5ZG1Gc0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5cGJuUmxjblpoYkNBOUlHNTFiR3c3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZlkyOXVabWxuTG1sdWRHVnlkbUZzSUNZbUlDRjBhR2x6TGw5cGMxQmhkWE5sWkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJsdWRHVnlkbUZzSUQwZ2MyVjBTVzUwWlhKMllXd29LR1J2WTNWdFpXNTBMblpwYzJsaWFXeHBkSGxUZEdGMFpTQS9JSFJvYVhNdWJtVjRkRmRvWlc1V2FYTnBZbXhsSURvZ2RHaHBjeTV1WlhoMEtTNWlhVzVrS0hSb2FYTXBMQ0IwYUdsekxsOWpiMjVtYVdjdWFXNTBaWEoyWVd3cE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ0lDQkRZWEp2ZFhObGJDNXdjbTkwYjNSNWNHVXVkRzhnUFNCbWRXNWpkR2x2YmlCMGJ5aHBibVJsZUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlGOTBhR2x6SUQwZ2RHaHBjenRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJGamRHbDJaVVZzWlcxbGJuUWdQU0FrS0hSb2FYTXVYMlZzWlcxbGJuUXBMbVpwYm1Rb1UyVnNaV04wYjNJdVFVTlVTVlpGWDBsVVJVMHBXekJkTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdGamRHbDJaVWx1WkdWNElEMGdkR2hwY3k1ZloyVjBTWFJsYlVsdVpHVjRLSFJvYVhNdVgyRmpkR2wyWlVWc1pXMWxiblFwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dsdVpHVjRJRDRnZEdocGN5NWZhWFJsYlhNdWJHVnVaM1JvSUMwZ01TQjhmQ0JwYm1SbGVDQThJREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZmFYTlRiR2xrYVc1bktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKQ2gwYUdsekxsOWxiR1Z0Wlc1MEtTNXZibVVvUlhabGJuUXVVMHhKUkN3Z1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWDNSb2FYTXVkRzhvYVc1a1pYZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGhZM1JwZG1WSmJtUmxlQ0E5UFQwZ2FXNWtaWGdwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkJoZFhObEtDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amVXTnNaU2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmthWEpsWTNScGIyNGdQU0JwYm1SbGVDQStJR0ZqZEdsMlpVbHVaR1Y0SUQ4Z1JHbHlaV04wYVc5dUxrNUZXRlFnT2lCRWFYSmxZM1JwYjI0dVVGSkZWa2xQVlZNN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXpiR2xrWlNoa2FYSmxZM1JwYjI0c0lIUm9hWE11WDJsMFpXMXpXMmx1WkdWNFhTazdYRzRnSUNBZ0lDQWdJSDA3WEc0Z0lDQWdJQ0FnSUVOaGNtOTFjMlZzTG5CeWIzUnZkSGx3WlM1a2FYTndiM05sSUQwZ1puVnVZM1JwYjI0Z1pHbHpjRzl6WlNncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNRb2RHaHBjeTVmWld4bGJXVnVkQ2t1YjJabUtFVldSVTVVWDB0RldTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBa0xuSmxiVzkyWlVSaGRHRW9kR2hwY3k1ZlpXeGxiV1Z1ZEN3Z1JFRlVRVjlMUlZrcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZhWFJsYlhNZ1BTQnVkV3hzTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZlkyOXVabWxuSUQwZ2JuVnNiRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJWc1pXMWxiblFnUFNCdWRXeHNPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmYVc1MFpYSjJZV3dnUFNCdWRXeHNPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmYVhOUVlYVnpaV1FnUFNCdWRXeHNPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmYVhOVGJHbGthVzVuSUQwZ2JuVnNiRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJGamRHbDJaVVZzWlcxbGJuUWdQU0J1ZFd4c08xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZhVzVrYVdOaGRHOXljMFZzWlcxbGJuUWdQU0J1ZFd4c08xeHVJQ0FnSUNBZ0lDQjlPMXh1SUNBZ0lDQWdJQ0F2THlCd2NtbDJZWFJsWEc0Z0lDQWdJQ0FnSUVOaGNtOTFjMlZzTG5CeWIzUnZkSGx3WlM1ZloyVjBRMjl1Wm1sbklEMGdablZ1WTNScGIyNGdYMmRsZEVOdmJtWnBaeWhqYjI1bWFXY3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibVpwWnlBOUlDUXVaWGgwWlc1a0tIdDlMQ0JFWldaaGRXeDBMQ0JqYjI1bWFXY3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ZYUnBiQzUwZVhCbFEyaGxZMnREYjI1bWFXY29Ua0ZOUlN3Z1kyOXVabWxuTENCRVpXWmhkV3gwVkhsd1pTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dVptbG5PMXh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNCRFlYSnZkWE5sYkM1d2NtOTBiM1I1Y0dVdVgyRmtaRVYyWlc1MFRHbHpkR1Z1WlhKeklEMGdablZ1WTNScGIyNGdYMkZrWkVWMlpXNTBUR2x6ZEdWdVpYSnpLQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUY5MGFHbHpNaUE5SUhSb2FYTTdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZlkyOXVabWxuTG10bGVXSnZZWEprS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pDaDBhR2x6TGw5bGJHVnRaVzUwS1M1dmJpaEZkbVZ1ZEM1TFJWbEVUMWRPTENCbWRXNWpkR2x2YmlBb1pYWmxiblFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGOTBhR2x6TWk1ZmEyVjVaRzkzYmlobGRtVnVkQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWZZMjl1Wm1sbkxuQmhkWE5sSUQwOVBTQW5hRzkyWlhJbklDWW1JQ0VvSjI5dWRHOTFZMmh6ZEdGeWRDY2dhVzRnWkc5amRXMWxiblF1Wkc5amRXMWxiblJGYkdWdFpXNTBLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNRb2RHaHBjeTVmWld4bGJXVnVkQ2t1YjI0b1JYWmxiblF1VFU5VlUwVkZUbFJGVWl3Z1puVnVZM1JwYjI0Z0tHVjJaVzUwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmZkR2hwY3pJdWNHRjFjMlVvWlhabGJuUXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwTG05dUtFVjJaVzUwTGsxUFZWTkZURVZCVmtVc0lHWjFibU4wYVc5dUlDaGxkbVZ1ZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdYM1JvYVhNeUxtTjVZMnhsS0dWMlpXNTBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlR0Y2JpQWdJQ0FnSUNBZ1EyRnliM1Z6Wld3dWNISnZkRzkwZVhCbExsOXJaWGxrYjNkdUlEMGdablZ1WTNScGIyNGdYMnRsZVdSdmQyNG9aWFpsYm5RcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ3ZhVzV3ZFhSOGRHVjRkR0Z5WldFdmFTNTBaWE4wS0dWMlpXNTBMblJoY21kbGRDNTBZV2RPWVcxbEtTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSE4zYVhSamFDQW9aWFpsYm5RdWQyaHBZMmdwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRUZTVWs5WFgweEZSbFJmUzBWWlEwOUVSVHBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pYWmxiblF1Y0hKbGRtVnVkRVJsWm1GMWJIUW9LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3Y21WMktDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1FWSlNUMWRmVWtsSFNGUmZTMFZaUTA5RVJUcGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlhabGJuUXVjSEpsZG1WdWRFUmxabUYxYkhRb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXVaWGgwS0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZUdGNiaUFnSUNBZ0lDQWdRMkZ5YjNWelpXd3VjSEp2ZEc5MGVYQmxMbDluWlhSSmRHVnRTVzVrWlhnZ1BTQm1kVzVqZEdsdmJpQmZaMlYwU1hSbGJVbHVaR1Y0S0dWc1pXMWxiblFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgybDBaVzF6SUQwZ0pDNXRZV3RsUVhKeVlYa29KQ2hsYkdWdFpXNTBLUzV3WVhKbGJuUW9LUzVtYVc1a0tGTmxiR1ZqZEc5eUxrbFVSVTBwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5cGRHVnRjeTVwYm1SbGVFOW1LR1ZzWlcxbGJuUXBPMXh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNCRFlYSnZkWE5sYkM1d2NtOTBiM1I1Y0dVdVgyZGxkRWwwWlcxQ2VVUnBjbVZqZEdsdmJpQTlJR1oxYm1OMGFXOXVJRjluWlhSSmRHVnRRbmxFYVhKbFkzUnBiMjRvWkdseVpXTjBhVzl1TENCaFkzUnBkbVZGYkdWdFpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVhOT1pYaDBSR2x5WldOMGFXOXVJRDBnWkdseVpXTjBhVzl1SUQwOVBTQkVhWEpsWTNScGIyNHVUa1ZZVkR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcGMxQnlaWFpFYVhKbFkzUnBiMjRnUFNCa2FYSmxZM1JwYjI0Z1BUMDlJRVJwY21WamRHbHZiaTVRVWtWV1NVOVZVenRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJoWTNScGRtVkpibVJsZUNBOUlIUm9hWE11WDJkbGRFbDBaVzFKYm1SbGVDaGhZM1JwZG1WRmJHVnRaVzUwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCc1lYTjBTWFJsYlVsdVpHVjRJRDBnZEdocGN5NWZhWFJsYlhNdWJHVnVaM1JvSUMwZ01UdGNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBjMGR2YVc1blZHOVhjbUZ3SUQwZ2FYTlFjbVYyUkdseVpXTjBhVzl1SUNZbUlHRmpkR2wyWlVsdVpHVjRJRDA5UFNBd0lIeDhJR2x6VG1WNGRFUnBjbVZqZEdsdmJpQW1KaUJoWTNScGRtVkpibVJsZUNBOVBUMGdiR0Z6ZEVsMFpXMUpibVJsZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocGMwZHZhVzVuVkc5WGNtRndJQ1ltSUNGMGFHbHpMbDlqYjI1bWFXY3VkM0poY0NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCaFkzUnBkbVZGYkdWdFpXNTBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHUmxiSFJoSUQwZ1pHbHlaV04wYVc5dUlEMDlQU0JFYVhKbFkzUnBiMjR1VUZKRlZrbFBWVk1nUHlBdE1TQTZJREU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVhSbGJVbHVaR1Y0SUQwZ0tHRmpkR2wyWlVsdVpHVjRJQ3NnWkdWc2RHRXBJQ1VnZEdocGN5NWZhWFJsYlhNdWJHVnVaM1JvTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbDBaVzFKYm1SbGVDQTlQVDBnTFRFZ1B5QjBhR2x6TGw5cGRHVnRjMXQwYUdsekxsOXBkR1Z0Y3k1c1pXNW5kR2dnTFNBeFhTQTZJSFJvYVhNdVgybDBaVzF6VzJsMFpXMUpibVJsZUYwN1hHNGdJQ0FnSUNBZ0lIMDdYRzRnSUNBZ0lDQWdJRU5oY205MWMyVnNMbkJ5YjNSdmRIbHdaUzVmZEhKcFoyZGxjbE5zYVdSbFJYWmxiblFnUFNCbWRXNWpkR2x2YmlCZmRISnBaMmRsY2xOc2FXUmxSWFpsYm5Rb2NtVnNZWFJsWkZSaGNtZGxkQ3dnWlhabGJuUkVhWEpsWTNScGIyNU9ZVzFsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2MyeHBaR1ZGZG1WdWRDQTlJQ1F1UlhabGJuUW9SWFpsYm5RdVUweEpSRVVzSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpXeGhkR1ZrVkdGeVoyVjBPaUJ5Wld4aGRHVmtWR0Z5WjJWMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJqb2daWFpsYm5SRWFYSmxZM1JwYjI1T1lXMWxYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNRb2RHaHBjeTVmWld4bGJXVnVkQ2t1ZEhKcFoyZGxjaWh6Ykdsa1pVVjJaVzUwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnpiR2xrWlVWMlpXNTBPMXh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNCRFlYSnZkWE5sYkM1d2NtOTBiM1I1Y0dVdVgzTmxkRUZqZEdsMlpVbHVaR2xqWVhSdmNrVnNaVzFsYm5RZ1BTQm1kVzVqZEdsdmJpQmZjMlYwUVdOMGFYWmxTVzVrYVdOaGRHOXlSV3hsYldWdWRDaGxiR1Z0Wlc1MEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZmFXNWthV05oZEc5eWMwVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtLSFJvYVhNdVgybHVaR2xqWVhSdmNuTkZiR1Z0Wlc1MEtTNW1hVzVrS0ZObGJHVmpkRzl5TGtGRFZFbFdSU2t1Y21WdGIzWmxRMnhoYzNNb1EyeGhjM05PWVcxbExrRkRWRWxXUlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJRzVsZUhSSmJtUnBZMkYwYjNJZ1BTQjBhR2x6TGw5cGJtUnBZMkYwYjNKelJXeGxiV1Z1ZEM1amFHbHNaSEpsYmx0MGFHbHpMbDluWlhSSmRHVnRTVzVrWlhnb1pXeGxiV1Z1ZENsZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h1WlhoMFNXNWthV05oZEc5eUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNRb2JtVjRkRWx1WkdsallYUnZjaWt1WVdSa1EyeGhjM01vUTJ4aGMzTk9ZVzFsTGtGRFZFbFdSU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNCRFlYSnZkWE5sYkM1d2NtOTBiM1I1Y0dVdVgzTnNhV1JsSUQwZ1puVnVZM1JwYjI0Z1gzTnNhV1JsS0dScGNtVmpkR2x2Yml3Z1pXeGxiV1Z1ZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlGOTBhR2x6TXlBOUlIUm9hWE03WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWVdOMGFYWmxSV3hsYldWdWRDQTlJQ1FvZEdocGN5NWZaV3hsYldWdWRDa3VabWx1WkNoVFpXeGxZM1J2Y2k1QlExUkpWa1ZmU1ZSRlRTbGJNRjA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYm1WNGRFVnNaVzFsYm5RZ1BTQmxiR1Z0Wlc1MElIeDhJR0ZqZEdsMlpVVnNaVzFsYm5RZ0ppWWdkR2hwY3k1ZloyVjBTWFJsYlVKNVJHbHlaV04wYVc5dUtHUnBjbVZqZEdsdmJpd2dZV04wYVhabFJXeGxiV1Z1ZENrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FYTkRlV05zYVc1bklEMGdRbTl2YkdWaGJpaDBhR2x6TGw5cGJuUmxjblpoYkNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1pHbHlaV04wYVc5dVlXeERiR0Z6YzA1aGJXVWdQU0IyYjJsa0lEQTdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdiM0prWlhKRGJHRnpjMDVoYldVZ1BTQjJiMmxrSURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1pYWmxiblJFYVhKbFkzUnBiMjVPWVcxbElEMGdkbTlwWkNBd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHUnBjbVZqZEdsdmJpQTlQVDBnUkdseVpXTjBhVzl1TGs1RldGUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhKbFkzUnBiMjVoYkVOc1lYTnpUbUZ0WlNBOUlFTnNZWE56VG1GdFpTNU1SVVpVTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5eVpHVnlRMnhoYzNOT1lXMWxJRDBnUTJ4aGMzTk9ZVzFsTGs1RldGUTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaWFpsYm5SRWFYSmxZM1JwYjI1T1lXMWxJRDBnUkdseVpXTjBhVzl1TGt4RlJsUTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWEpsWTNScGIyNWhiRU5zWVhOelRtRnRaU0E5SUVOc1lYTnpUbUZ0WlM1U1NVZElWRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2Y21SbGNrTnNZWE56VG1GdFpTQTlJRU5zWVhOelRtRnRaUzVRVWtWV08xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVjJaVzUwUkdseVpXTjBhVzl1VG1GdFpTQTlJRVJwY21WamRHbHZiaTVTU1VkSVZEdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodVpYaDBSV3hsYldWdWRDQW1KaUFrS0c1bGVIUkZiR1Z0Wlc1MEtTNW9ZWE5EYkdGemN5aERiR0Z6YzA1aGJXVXVRVU5VU1ZaRktTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgybHpVMnhwWkdsdVp5QTlJR1poYkhObE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ6Ykdsa1pVVjJaVzUwSUQwZ2RHaHBjeTVmZEhKcFoyZGxjbE5zYVdSbFJYWmxiblFvYm1WNGRFVnNaVzFsYm5Rc0lHVjJaVzUwUkdseVpXTjBhVzl1VG1GdFpTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jMnhwWkdWRmRtVnVkQzVwYzBSbFptRjFiSFJRY21WMlpXNTBaV1FvS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doWVdOMGFYWmxSV3hsYldWdWRDQjhmQ0FoYm1WNGRFVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJ6YjIxbElIZGxhWEprYm1WemN5QnBjeUJvWVhCd1pXNXBibWNzSUhOdklIZGxJR0poYVd4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlwYzFOc2FXUnBibWNnUFNCMGNuVmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2x6UTNsamJHbHVaeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjR0YxYzJVb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzTmxkRUZqZEdsMlpVbHVaR2xqWVhSdmNrVnNaVzFsYm5Rb2JtVjRkRVZzWlcxbGJuUXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSE5zYVdSRmRtVnVkQ0E5SUNRdVJYWmxiblFvUlhabGJuUXVVMHhKUkN3Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxiR0YwWldSVVlYSm5aWFE2SUc1bGVIUkZiR1Z0Wlc1MExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJqb2daWFpsYm5SRWFYSmxZM1JwYjI1T1lXMWxYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaFZkR2xzTG5OMWNIQnZjblJ6VkhKaGJuTnBkR2x2YmtWdVpDZ3BJQ1ltSUNRb2RHaHBjeTVmWld4bGJXVnVkQ2t1YUdGelEyeGhjM01vUTJ4aGMzTk9ZVzFsTGxOTVNVUkZLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNRb2JtVjRkRVZzWlcxbGJuUXBMbUZrWkVOc1lYTnpLRzl5WkdWeVEyeGhjM05PWVcxbEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlZkR2xzTG5KbFpteHZkeWh1WlhoMFJXeGxiV1Z1ZENrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pDaGhZM1JwZG1WRmJHVnRaVzUwS1M1aFpHUkRiR0Z6Y3loa2FYSmxZM1JwYjI1aGJFTnNZWE56VG1GdFpTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKQ2h1WlhoMFJXeGxiV1Z1ZENrdVlXUmtRMnhoYzNNb1pHbHlaV04wYVc5dVlXeERiR0Z6YzA1aGJXVXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1FvWVdOMGFYWmxSV3hsYldWdWRDa3ViMjVsS0ZWMGFXd3VWRkpCVGxOSlZFbFBUbDlGVGtRc0lHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pDaHVaWGgwUld4bGJXVnVkQ2t1Y21WdGIzWmxRMnhoYzNNb1pHbHlaV04wYVc5dVlXeERiR0Z6YzA1aGJXVWdLeUFuSUNjZ0t5QnZjbVJsY2tOc1lYTnpUbUZ0WlNrdVlXUmtRMnhoYzNNb1EyeGhjM05PWVcxbExrRkRWRWxXUlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1FvWVdOMGFYWmxSV3hsYldWdWRDa3VjbVZ0YjNabFEyeGhjM01vUTJ4aGMzTk9ZVzFsTGtGRFZFbFdSU0FySUNjZ0p5QXJJRzl5WkdWeVEyeGhjM05PWVcxbElDc2dKeUFuSUNzZ1pHbHlaV04wYVc5dVlXeERiR0Z6YzA1aGJXVXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCZmRHaHBjek11WDJselUyeHBaR2x1WnlBOUlHWmhiSE5sTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJVYVcxbGIzVjBLR1oxYm1OMGFXOXVJQ2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUFrS0Y5MGFHbHpNeTVmWld4bGJXVnVkQ2t1ZEhKcFoyZGxjaWh6Ykdsa1JYWmxiblFwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMQ0F3S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtTNWxiWFZzWVhSbFZISmhibk5wZEdsdmJrVnVaQ2hVVWtGT1UwbFVTVTlPWDBSVlVrRlVTVTlPS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNRb1lXTjBhWFpsUld4bGJXVnVkQ2t1Y21WdGIzWmxRMnhoYzNNb1EyeGhjM05PWVcxbExrRkRWRWxXUlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pDaHVaWGgwUld4bGJXVnVkQ2t1WVdSa1EyeGhjM01vUTJ4aGMzTk9ZVzFsTGtGRFZFbFdSU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZhWE5UYkdsa2FXNW5JRDBnWm1Gc2MyVTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKQ2gwYUdsekxsOWxiR1Z0Wlc1MEtTNTBjbWxuWjJWeUtITnNhV1JGZG1WdWRDazdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FYTkRlV05zYVc1bktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amVXTnNaU2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNBdkx5QnpkR0YwYVdOY2JpQWdJQ0FnSUNBZ1EyRnliM1Z6Wld3dVgycFJkV1Z5ZVVsdWRHVnlabUZqWlNBOUlHWjFibU4wYVc5dUlGOXFVWFZsY25sSmJuUmxjbVpoWTJVb1kyOXVabWxuS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bFlXTm9LR1oxYm1OMGFXOXVJQ2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaR0YwWVNBOUlDUW9kR2hwY3lrdVpHRjBZU2hFUVZSQlgwdEZXU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlGOWpiMjVtYVdjZ1BTQWtMbVY0ZEdWdVpDaDdmU3dnUkdWbVlYVnNkQ3dnSkNoMGFHbHpLUzVrWVhSaEtDa3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnb2RIbHdaVzltSUdOdmJtWnBaeUE5UFQwZ0ozVnVaR1ZtYVc1bFpDY2dQeUFuZFc1a1pXWnBibVZrSnlBNklGOTBlWEJsYjJZb1kyOXVabWxuS1NrZ1BUMDlJQ2R2WW1wbFkzUW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUXVaWGgwWlc1a0tGOWpiMjVtYVdjc0lHTnZibVpwWnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJoWTNScGIyNGdQU0IwZVhCbGIyWWdZMjl1Wm1sbklEMDlQU0FuYzNSeWFXNW5KeUEvSUdOdmJtWnBaeUE2SUY5amIyNW1hV2N1YzJ4cFpHVTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGa1lYUmhLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmhkR0VnUFNCdVpYY2dRMkZ5YjNWelpXd29kR2hwY3l3Z1gyTnZibVpwWnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1FvZEdocGN5a3VaR0YwWVNoRVFWUkJYMHRGV1N3Z1pHRjBZU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBlWEJsYjJZZ1kyOXVabWxuSUQwOVBTQW5iblZ0WW1WeUp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1lYUmhMblJ2S0dOdmJtWnBaeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0hSNWNHVnZaaUJoWTNScGIyNGdQVDA5SUNkemRISnBibWNuS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoa1lYUmhXMkZqZEdsdmJsMGdQVDA5SUhWdVpHVm1hVzVsWkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NkT2J5QnRaWFJvYjJRZ2JtRnRaV1FnWENJbklDc2dZV04wYVc5dUlDc2dKMXdpSnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZVnRoWTNScGIyNWRLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0Y5amIyNW1hV2N1YVc1MFpYSjJZV3dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR0YwWVM1d1lYVnpaU2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtZWFJoTG1ONVkyeGxLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0FnSUgwN1hHNGdJQ0FnSUNBZ0lFTmhjbTkxYzJWc0xsOWtZWFJoUVhCcFEyeHBZMnRJWVc1a2JHVnlJRDBnWm5WdVkzUnBiMjRnWDJSaGRHRkJjR2xEYkdsamEwaGhibVJzWlhJb1pYWmxiblFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCelpXeGxZM1J2Y2lBOUlGVjBhV3d1WjJWMFUyVnNaV04wYjNKR2NtOXRSV3hsYldWdWRDaDBhR2x6S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaGMyVnNaV04wYjNJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnZEdGeVoyVjBJRDBnSkNoelpXeGxZM1J2Y2lsYk1GMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JWFJoY21kbGRDQjhmQ0FoSkNoMFlYSm5aWFFwTG1oaGMwTnNZWE56S0VOc1lYTnpUbUZ0WlM1RFFWSlBWVk5GVENrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWTI5dVptbG5JRDBnSkM1bGVIUmxibVFvZTMwc0lDUW9kR0Z5WjJWMEtTNWtZWFJoS0Nrc0lDUW9kR2hwY3lrdVpHRjBZU2dwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCemJHbGtaVWx1WkdWNElEMGdkR2hwY3k1blpYUkJkSFJ5YVdKMWRHVW9KMlJoZEdFdGMyeHBaR1V0ZEc4bktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpiR2xrWlVsdVpHVjRLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dVptbG5MbWx1ZEdWeWRtRnNJRDBnWm1Gc2MyVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JEWVhKdmRYTmxiQzVmYWxGMVpYSjVTVzUwWlhKbVlXTmxMbU5oYkd3b0pDaDBZWEpuWlhRcExDQmpiMjVtYVdjcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITnNhV1JsU1c1a1pYZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrS0hSaGNtZGxkQ2t1WkdGMFlTaEVRVlJCWDB0RldTa3VkRzhvYzJ4cFpHVkpibVJsZUNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxkbVZ1ZEM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwTzF4dUlDQWdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ0lDQmZZM0psWVhSbFEyeGhjM01vUTJGeWIzVnpaV3dzSUc1MWJHd3NJRnQ3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYTJWNU9pQW5Wa1ZTVTBsUFRpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlCblpYUW9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCV1JWSlRTVTlPTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDBzSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCclpYazZJQ2RFWldaaGRXeDBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUlHZGxkQ2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFUmxabUYxYkhRN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlYwcE8xeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1EyRnliM1Z6Wld3N1hHNGdJQ0FnZlNncE8xeHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0FnSUNBcUlFUmhkR0VnUVhCcElHbHRjR3hsYldWdWRHRjBhVzl1WEc0Z0lDQWdJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0lDQWdJQ292WEc0Z0lDQWdKQ2hrYjJOMWJXVnVkQ2t1YjI0b1JYWmxiblF1UTB4SlEwdGZSRUZVUVY5QlVFa3NJRk5sYkdWamRHOXlMa1JCVkVGZlUweEpSRVVzSUVOaGNtOTFjMlZzTGw5a1lYUmhRWEJwUTJ4cFkydElZVzVrYkdWeUtUdGNiaUFnSUNBa0tIZHBibVJ2ZHlrdWIyNG9SWFpsYm5RdVRFOUJSRjlFUVZSQlgwRlFTU3dnWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUNBZ0lDQWtLRk5sYkdWamRHOXlMa1JCVkVGZlVrbEVSU2t1WldGamFDaG1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnSkdOaGNtOTFjMlZzSUQwZ0pDaDBhR2x6S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJRU5oY205MWMyVnNMbDlxVVhWbGNubEpiblJsY21aaFkyVXVZMkZzYkNna1kyRnliM1Z6Wld3c0lDUmpZWEp2ZFhObGJDNWtZWFJoS0NrcE8xeHVJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlLVHRjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBZ0lDQWdLaUJxVVhWbGNubGNiaUFnSUNBZ0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFnSUNBZ0tpOWNiaUFnSUNBa0xtWnVXMDVCVFVWZElEMGdRMkZ5YjNWelpXd3VYMnBSZFdWeWVVbHVkR1Z5Wm1GalpUdGNiaUFnSUNBa0xtWnVXMDVCVFVWZExrTnZibk4wY25WamRHOXlJRDBnUTJGeWIzVnpaV3c3WEc0Z0lDQWdKQzVtYmx0T1FVMUZYUzV1YjBOdmJtWnNhV04wSUQwZ1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lDQWdJQ0FrTG1adVcwNUJUVVZkSUQwZ1NsRlZSVkpaWDA1UFgwTlBUa1pNU1VOVU8xeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1EyRnliM1Z6Wld3dVgycFJkV1Z5ZVVsdWRHVnlabUZqWlR0Y2JpQWdJQ0I5TzF4dUlDQWdJSEpsZEhWeWJpQkRZWEp2ZFhObGJEdGNibjBvYWxGMVpYSjVLVHRjYmk4dkl5QnpiM1Z5WTJWTllYQndhVzVuVlZKTVBXTmhjbTkxYzJWc0xtcHpMbTFoY0Z4dVhHNHZMeU1nYzI5MWNtTmxUV0Z3Y0dsdVoxVlNURDFrWVhSaE9tRndjR3hwWTJGMGFXOXVMMnB6YjI0N1kyaGhjbk5sZEQxMWRHWTRPMkpoYzJVMk5DeGxlVW95V2xoS2VtRlhPWFZKYW05NlRFTktlbUl6Vm5sWk1sWjZTV3B3WWtsdVpETmtlVGwzV1ZkT2NtTjVPV2xpTWprd1l6TlNlVmxZUVhaaGJrMTJXa2RzZW1SRE9XcFpXRXAyWkZoT2JHSkROWEZqZVVwa1RFTktkVmxYTVd4amVVazJWekV3YzBsdE1XaGpTRUp3WW0xa2VrbHFiMmxSVlVaQ1VWTjRTbEZWUmtwTVJUbENVVlU0YzFJd1JrSlNlWGhRVVZWR1VFeEZNVUpSVlRCelV6QkdRbE41ZUZaUlZVWldURVZzUWxGVmEzTlVNRVpDVkhsNFRsRlZSazVNUlU1Q1VWVk5jMVZWUmtKVlUzaE1VVlZHVEV4R1JrSlJWa1Z6VWpCR1FsSjVlRlpSVlVaV1RFVmtRbEZWWTNOVFZVWkNVMU40VGxGVlJrNU1SVTVDVVZWTmMxUXdSa0pVZVhoSVVWVkdTRXhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVEVWa1FsRlZZM05XVlVaQ1ZsTjRTRkZWUmtoTVJXeENVVlZyYzFSVlJrSlVVM2hFVVZWR1JFeEZaRUpSVldOelUxVkdRbE5UZUZCUlZVWlFURVV4UWxGVk1ITlRNRVpDVTNsNFZsRlZSbFpNUld4Q1VWVnJjMUl3UmtKU2VYaEVVVlZHUkV4R1pFSlJWbU56VXpCR1FsTjVlRTVSVlVaT1RFVnNRbEZWYTNOU01FWkNVbmw0VEZGVlJreE1SVEZDVVZVd2MxRXdSa0pSZVhoVVVWVkdWRXhGWkVKUlZXTnpWVlZHUWxWVGVFaFJWVVpJVEVVNVFsRlZPSE5TTUVaQ1VubDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFOHdSa0pTVkdSU1RFVnNRbEZWYTNOWFZVWkNWMU40U0ZGVlJraE1SMDVDVVZkTmMwMUZTa0pSVkVKRFRFVXhRbEZWTUhOU1ZVWkNVbE40VEZGVlJreE1SV3hDVVZWcmMxSXdSa0pTZVhoRVVWVkdSRXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVWa1FsRlZZM05STUVaQ1VYbDRSbEZWUmtaTVJVNUNVVlZOYzFJd1JrSlNlWGhNVVZWR1RFeEZUa0pSVlUxelZGVkdRbFJUZUVaUlZVWkdURVZPUWxGVlRYTlNWVVpDVWxONFJsRlZSa1pNUlU1Q1VWVk5OMU5WUmtKUmVYaEtVVlZHU2t4R1ZrSlJWbFZ6VWpCR1FsSjVlRXhSVlVaTVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4xTlZSa0pSZVhoV1VWVkdWa3hGVGtKUlZVMXpWbFZHUWxaVGVFaFJWVVpJVEVaV1FsRldWWE5STUVaQ1VYbDRWbEZWUmxaTVJXeENVVlZyYzFNd1JrSlRlWGhFVVZWR1JFOHdiRUpSVlUxelZsVkdRbFpUZUVSUlZVWkVURVpzUWxGV2EzTlNNRVpDVW5sNFNsRlZSa3BNUlU1Q1VWVk5OMU5WUmtKUmVYaEdVVlZHUmt4RlRrSlJWVTF6VVRCR1FsRjVlRkJSVlVaUVRFVnNRbEZWYTNOV1ZVWkNWbE40UkZGVlJrUlBNVVpDVVZWTmMxWlZSa0pXVTNoRVVWVkdSRXhHUmtKUlZrVnpVakJHUWxKNWVFcFJWVVpLVEVWT1FsRlZUVGRUVlVaQ1VYbDRUbEZWUms1TVJVNUNVVlZOYzFrd1JrSlplWGhFVVZWR1JFeEZNVUpSVlRCelVsVkdRbEpUZUZaUlZVWldURVZPUWxGVlRYTlNNRVpDVW5sNFJsRlZSa1pNUmxaQ1VWWlZjMUV3UmtKUmVYaEVVVlZHUkU4d1JrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWTmMxWlZSa0pXVTNoWVVWVkdXRXhGVmtKUlZWVnpWbFZHUWxaVGVFWlJWVVpHVEVaa1FsRldZM05UVlVaQ1UxTjRSbEZWUmtaTVJVNUNVVlZOYzFFd1JrSlJlWGhXVVZWR1ZreEZUa0pSVlUwM1UxVkdRbEY1ZUc1UmEwWkNXakJKYzFFd1JrSlJlWGhZVVZWR1dFeEZUa0pSVlUxelZUQkdRbFY1ZUVaUlZVWkdURVpXUWxGV1ZYTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5jMUpWUmtKU1UzaEVVVlZHUkV4RlRrSlJWVTF6VmpCR1FsWjVlRVJSVlVaRVR6QnNRbEZWVFhOYU1FcENVVmRrUTB4RlRrSlJWVTF6VmpCR1FsWjVlRVpSVlVaR1RFWmtRbEZXWTNOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTmMxUlZSa0pVVTNoRVVWVkdSRXhHWkVKUlZtTnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFKVlJrSlNVM2hFVVZWR1JFOHdSa0pTV0VKeFVXbDROVkZyUmtKbFZVbHpWVlZHUWxWVGVFWlJWVVpHVEVaa1FsRldZM05UVlVaQ1UxTjRSbEZWUmtaTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUxelZWVkdRbFZUZUZwUlZVWmFURVprUWxGV1kzTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVuUktVVlZHUkV4Rk1VSlJWVEJ6VTFWR1FsTlRlRlJSVlVaVVRFVk9RbEZWVFhOaVZVNUNVVmN4UkV4RlRrSlJWVTF6VVRCR1FsRjZkRUpSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNRVpDVWxod1MwOTZjemRQZW5SSVVWVjBTRTh3UmtKU1ZXZHpVMVZHUWxOVGVGSlJWVVpTVEVWa1FsRlZZM05XVlVaQ1ZsTjRSRkZWUmtSUE1HeENVbGhvUTA5NmN6ZFBNRGxDVTFWak4xTlZSa1pUUTNoS1VWVkdTa3hGYkVKUlZXdHpVakJHUWxKNWVGWlJWVVpXVEVWT1FsRlZUVGRUVlVaRVpFVkpjMU5WUmtKVFUzaFFVVlZHVUV4RlpFSlJWV056V2xWR1FscFRlRVJSVlVaRVR6QnNRbEY2YkVOTVJXeENVVlZyYzFWVlJrSlZVM2hJVVZWR1NFeEhSa0pSVjBWelVUQkdRbEY2ZEVwUlZVMHpVV2w0U2xGVlJrcE1SazVDVVZaTmMxSXdSa0pTZVhoSVVWVkdTRXhGWkVKUlZXTnpWVlZHUWxWVGVFUlJWVVpFVHpCc1FsRjVPVU5NUld4Q1VWVnJjMWRWUmtKWFUzaElVVlZHU0V4R1pFSlJWbU56VVRCR1FsRjZkRXBSVlUxMlVXbDRTbEZWUmtwTVIzUkRVVlZHY2xGcGVFaFJWVVpJVEVWT1FsRlZUWE5STUVaQ1VYbDRSbEZWUmtaTVJVNUNVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEZUa0pSVlUwM1UxVkdSR05GVFhOVFZVWkNVMU40ZEZGclJrSmlWVWx6VWpCR1FsSjVlRWhSVlVaSVRFVk9RbEZWVFRkVFZVWkVUMVZKYzFOVlJrSlRVM2h5VVd0R1FtRXdTWE5TTUVaQ1VubDRSbEZWUmtaTVJVNUNVVlZOYzFFd1JrSlJlWGR5VVRCR1Frc3dUVGRUVlVaRVRsVlZjMU5WUmtKVFUzaDBVV3RHUW1KVlNYTlNNRVpDVW5sNFJsRlZSa1pNUlU1Q1VWVk5jMUV3UmtKUmVYaHVVa1ZHUWxvd1VUZFRWVVpHVDFWVmMxTlZSa0pUVTNoUVVWVkdVRXhGWkVKUlZXTTNWVlZHUkZkcGVGSlJWVVpTVEVWV1FsRlZWWE5UVlVaQ1UxUjBVbEZWVG10TVJrWkNVVlpGYzFKVlJrSlNVM2hLVVZWR1NrOHhSa0pSTWxGelV6QkdRbE41ZUVaUlZVWkdURVYwUWxGVmN6ZFZWVVpFVjJsNFRGRlZSa3hNUlZaQ1VWVlZjMVF3UmtKVWVuUlNVVlZPYTB4RmJFSlJWV3R6VWxWR1FsSlRlRXBSVlVaS1R6QjBRbEV4WjNOUk1FWkNVWHAwU2xGVlZrZE1SV3hDVVZWcmMxWXdSa0pXZVhoSVVWVkdTRTh4UmtKUk1taERURVpHUWxGV1JYTlNWVVpDVWxONGNsRnJSa0poTUVrM1ZWVkdSRTVWU1hOVlZVWkNWVk40UmxGVlJrWk1SazVDVVZaTk4xVlZSa1JpYTBselV6QkdRbE41ZUVaUlZVWkdURWQwUTFGVlJuSlJhblJTVVZWT05sRnBlRXhSVlVaTVRFVldRbEZWVlhOaE1FcENVVmQwUTA4eFJrSlJNM0JEVEVWc1FsRlZhM05TVlVaQ1VsTjRWRkZWUmxSUE1IUkNVVEpvUTB4RlRrSlJWVTAzVTFWR1JsSnBlRXBSVlVaS1RFWk9RbEZXVFhOU01FWkNVbnAwVWxGVlRtdE1SV3hDVVZWcmMxSlZSa0pTVTNoT1VWVkdUazh4UmtKUk1XOXpVMVZHUWxOVGVFWlJWVVpHVEVVeFFsRlZNRGRWVlVaRVYybDRTbEZWUmtwTVJWWkNVVlZWYzFSVlJrSlVWSFJTVVZWT1lVeEZkRUpSVlhOelVsVkdRbEpUZUZCUlZVWlFUekIwUWxFeVdYTlJNRVpDVVhwMFNsRlZWa2RNUld4Q1VWVnJjMU13UmtKVGVYaElVVlZHU0U4eFJrSlJNVmx6VXpCR1FsTjVlRVpSVlVaR1RFVTVRbEZWT0hOU01FWkNVbmw0VkZGVlJsUlBNVVpDVVhwR1EweEZiRUpSVld0elVsVkdRbEpUZUU1UlZVWk9URVZrUWxGVlkzTlZNRVpDVlhwMFVsRlZUalJSYVhoUVVWVkdVRXhGVmtKUlZWVnpWVEJHUWxWNWVFaFJWVVpJVEVaT1FsRldUVGRWVlVaRVQxVkpjMVpWUmtKV1UzaEdVVlZHUmt4R2JFSlJWbXR6VWpCR1FsSjVlRlJSVlVaVVR6RkdRbEV6UWtSTVJsWkNVVlpWYzFKVlJrSlNVM2hhVVZWR1dreEZaRUpSVldOelZUQkdRbFY2ZEZKUlZVNTNVWGw0YUZGVlJtaE1SVlpDVVZWVmMxUlZSa0pVVTNoSVVWVkdTRXhHVGtKUlZrMXpVakJHUWxKNWVGcFJWVVphVHpGR1FsRXlhRVZNUjA1Q1VWZE5jMUpWUmtKU1UzaFFVVlZHVUV4RlpFSlJWV056VlRCR1FsVjVlRWhSVlVaSVRFWnNRbEZXYXpkVE1FWkVZbXRSYzFFd1JrSlJlblJLVVZWV1IweEZiRUpSVld0elZUQkdRbFY1ZUVoUlZVWklUekZHUWxFeVVYTlZWVVpDVlZONFJsRlZSa1pNUmxaQ1VWWlZOMVZWUmtSalJVbHpWRlZHUWxSVGVFWlJWVVpHVEVaR1FsRldSVGRWVlVaRVlVVkpjMU13UmtKVGVYaEdVVlZHUmt4Rk9VSlJWVGczVlZWR1JGcERlRXhSVlVaTVRFVldRbEZWVlhOalZVcENVVmhHUTA4eFJrSlJlbFpEVEVWc1FsRlZhM05TVlVaQ1VsTjRkbEZyUmtKaU1FazNWVlZHUkUxVlNYTlRWVVpDVTFONFJsRlZSa1pNUnpsRFVWVkdkbEZxZEZKUlZVMTRVV2w0U2xGVlJrcE1SVlpDVVZWVmMySXdTa0pSVnpsRFR6RkdRbEY2UmtOTVJXeENVVlZyYzFKVlJrSlNVM2hzVVZWR2JFOHdkRUpSTTFKRFRFVk9RbEZWVFRkVFZVWkdVbWw0U2xGVlJrcE1Sa1pDVVZaRmMxSXdSa0pTZW5SU1VWVk9hVXhGTVVKUlZUQnpVbFZHUWxKVGVGUlJWVVpVVHpGR1FsRXljRU5NUm1SQ1VWWmpjMUpWUmtKU1UzZ3hVV3RHUW1SVlNUZFZWVVpFWTBWTmMxTlZSa0pUVTNoR1VWVkdSa3hIWkVOUlZVWnVVV3AwVWxGVlRqQlJhWGhVVVZWR1ZFeEZWa0pSVlZWelRVVk9RbEZVUWtSUE1VWkNVVE5LUlV4R1ZrSlJWbFZ6VWxWR1FsSlRlSHBSYTBaQ1l6QkpOMVZWUmtSaVJVMXpWbFZHUWxaVGVFWlJWVVpHVEVOMFExRlZSWEpSYW5SU1VWVk5lbEY1ZUZSUlZVWlVURVZXUWxGVlZYTmtNRXBDVVZoa1EwOHdkRUpSTTBKRVRFVk9RbEZWVFRkVFZVWkdVbXB6TjA5NmRGQlJWV3hJVHpCc1FsSlZaM05UVlVaQ1UxTjRVbEZWUmxKTVJXUkNVVlZqTjFWVlJrUlphWGh5VVd0R1FtRXdTWE5VTUVaQ1ZIbDRSbEZWUmtaTVJURkNVVlV3TjFkVlJrUk1NRWx6V2xWR1FscFRlRVJSVlVaRVRFVnNRbEZWYTNOU1ZVWkNVbE40VWxGVlJsSk1SVTVDVVZWTmMxRXdSa0pSZW5SYVVWVldiMUY1ZUVwUlZVWktURVZPUWxGVlRYTlVWVVpDVkZONFNGRlZSa2hNUld4Q1VWVnJjMUV3UmtKUmVuUmFVVlZPZFZGcGVFcFJWVVpLVEVWT1FsRlZUWE5WTUVaQ1ZYbDRTRkZWUmtoTVJXeENVVlZyYzFFd1JrSlJlblJhVVZWT01GRnBlRXBSVlVaS1RFVk9RbEZWVFhOWk1FWkNXWGw0U0ZGVlJraE1SV3hDVVZWcmMxRXdSa0pSZW5SYVVWVlZlbEZwZUVwUlZVWktURVZPUWxGVlRYTlZNRVpDVlhsNFNGRlZSa2hNUlhSQ1VWVnpjMUV3UmtKUmVuUmFVVlZPTWxGcGVFcFJWVVpLVEVWT1FsRlZUWE5XVlVaQ1ZsTjRTRkZWUmtoTVJYUkNVVlZ6YzFFd1JrSlJlblJhVVZWV05GRnBlRXBSVlVaS1RFVk9RbEZWVFhOVU1FWkNWSGw0U0ZGVlJraE1SV3hDVVZWcmMxRXdSa0pSZVhoV1VWVkdWa3hGVGtKUlZVMXpWRlZHUWxSVGVFUlJWVVpFVEVWT1FsRlZUVGRYVlVaRVpHdE5jMU5WUmtKVFUzaEVVVlZHUkV4R1JrSlJWa1Z6VWpCR1FsSjVlRVJSVlVaRVRFVk9RbEZWVFhOVU1FWkNWSGw0UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMDNWMVZHUkU5VlNYTlRWVVpDVTFONFJGRlZSa1JNUjNSRFVWVkdjbEZwZUVoUlZVWklURVZPUWxGVlRYTlJNRVpDVVhsNFNsRlZSa3BNUlU1Q1VWVk5jMVZWUmtKVlUzaEVVVlZHUkV4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFWkdRbEZXUlhOUk1FWkNVWGw0VmxGVlJsWk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNmRGcFJWVlkwVWxONFNsRlZSa3BNUlU1Q1VWVk5jMkV3U2tKUlYzUkRURVZXUWxGVlZYTlJNRVpDVVhwMFVsRlZUVEZSYVhoRVVWVkdSRTh4UmtKU1ZWRnpWbFZHUWxaVWRGSlJWVlpYVEVaT1FsRldUVGRWVlVaR1ZrTjRVbEZWUmxKTVJVNUNVVlZOYzFVd1JrSlZlWGhFVVZWR1JFeEZiRUpSVld0elVqQkdRbEo2ZEZwUlZVNDBVV2w0UmxGVlJrWk1SVTVDVVZWTmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpWbFZHUWxaVGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBibEZyUmtSalJVbHpWRlZHUWxSVGVFcFJWVVpLVEVWMFFsRlZjM05STUVaQ1VYbDRlRkZyUmtKalZVbHpVVEJHUWxGNWVFUlJWVVpFVHpGc1FsRXpjRVJNUlU1Q1VWVk5OMWRWUmtSU1EzaEtVVlZHU2t4RlRrSlJWVTF6VkZWR1FsUlRlRVJSVlVaRVRFWk9RbEZXVFhOUk1FWkNVWGw0U2xGVlJrcE1SVTVDVVZWTmMxRXdSa0pSZW5SU1VWVk5OVkZwZUVSUlZVWkVURVZPUWxGVlRUZFZWVVpHVW1sNFVsRlZSbEpNUlU1Q1VWVk5jMVV3UmtKVmVYaEVVVlZHUkV4SFZrSlJWMVZ6VWpCR1FsSjZkRnBSVlU1MVVYbDNORkV3UmtKUFJVMDNWMVZHUkU5VlRYTlNWVVpDVWxONFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVYaFNVVlZHVWt4RlRrSlJWVTF6VkZWR1FsUlRlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwYmxGclJrUmphMGx6VTFWR1FsTlRlRVJSVlVaRVRFVnNRbEZWYTNOU1ZVWkNVbE40UkZGVlJrUlBNV3hDVVRKUmMxRXdSa0pSZW5SU1VWVk9TVXhGVGtKUlZVMXpVVEJHUWxGNmRGSlJWVlpIVEVaR1FsRldSWE5STUVaQ1VYbDRWRkZWUmxSTVJVNUNVVlZOYzFOVlJrSlRVM2hJVVZWR1NFOHhiRUpSTTJoRFRFVldRbEZWVlhOUk1FWkNVWGw0UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoV1VWVkdWa3hGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVHpKa1ExRlZUbmRSYVhoT1VWVkdUa3hGYkVKUlZXdHpVekJHUWxONWVFUlJWVVpFVEVoR1ExRlZSbmhSYVhoRVVWVkdSRXhGVGtKUlZVMDNWMVZHUkdWclRYTlJNRVpDVVhwMFdsRlZUa1ZNUld4Q1VWVnJjMUV3UmtKUmVYaE9VVlZHVGt4RlRrSlJWVTF6VlRCR1FsVjVlRVJSVlVaRVRFWkdRbEZXUlhOUk1FWkNVWGw0UkZGVlJrUlBNVVpDVVRKNFJFeEZUa0pSVlUxelVUQkdRbEY2ZEZKUlZWWkhURVpHUWxGV1JYTlJNRVpDVVhsNFZGRlZSbFJNUlU1Q1VWVk5jMU13UmtKVGVYaElVVlZHU0V4SFZrSlJWMVZ6VXpCR1FsTjZkRnBSVlUwelVYbDRSbEZWUmtaTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFeEZkRUpSVlhOelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRUZGFNRXBDVVRGbmMxTlZSa0pUVTNoRVVWVkdSRXhHVGtKUlZrMXpVakJHUWxKNWVFcFJWVVpLVEVWT1FsRlZUVGRYVlVaRVpVVkpjMUV3UmtKUmVuUmFVVlZXUlV4RlZrSlJWVlZ6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0U2xGVlJrcE1SVTVDVVZWTmMxVlZSa0pWVTNoRVVWVkdSRXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVaR1FsRldSWE5STUVaQ1VYbDRWRkZWUmxSTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUxelUxVkdRbE5UZUVwUlZVWktURVZPUWxGVlRYTmpWVXBDVVZoR1EweEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRUZGFNRXBDVVRKd1IweEZiRUpSVld0elVUQkdRbEY1ZUhaUmEwWkNZakJKYzFFd1JrSlJlWGhLVVZWR1NreEZUa0pSVlUxelZWVkdRbFZUZUVSUlZVWkVURVZPUWxGVlRUZGFNRXBDVVROd1JFeEZiRUpSVld0elVUQkdRbEY1ZUV4UlZVWk1URVZPUWxGVlRYTlRWVVpDVTFONFJGRlZSa1JNUlU1Q1VWVk5OMWRWUmtSaWEwbHpVVEJHUWxGNmRGcFJWVlpGVEVkR1FsRlhSWE5STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFVd1JrSlZlWGhFVVZWR1JFeEZUa0pSVlUwM1YxVkdSRTlWU1hOVFZVWkNVMU40UkZGVlJrUk1SazVDVVZaTmMxSXdSa0pTZVhoS1VWVkdTa3hGVGtKUlZVMDNWVlZHUkdWRlNYTlJNRVpDVVhsNFJGRlZSa1JQTVVaQ1VsVlpjMVZWUmtKVlUzaEVVVlZHUkV4R1RrSlJWazF6VVRCR1FsRjVlRXhSVlVaTVRFVmtRbEZWWTNOYVZVWkNXbE40VEZGVlJreFBNV3hDVVhwa1JFeEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRYTlRNRVpDVTNsNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVuUnVVV3RHUkZkRGVFcFJWVVpLVEVWT1FsRlZUWE5WTUVaQ1ZYbDRTRkZWUmtoTVJYUkNVVlZ6YzFFd1JrSlJlblJhVVZWT05sRnBlRVJSVlVaRVR6RnNRbEpWVVhOU1ZVWkNVbE40UkZGVlJrUk1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhHVGtKUlZrMXpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUVGRhTUVwQ1VUSTFRMHhIUmtKUlYwVnpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5WTUVaQ1ZYbDRSRkZWUmtSTVJVNUNVVlZOTjFvd1NrSlJlbXhEVEVWc1FsRlZhM05STUVaQ1VYbDRWRkZWUmxSTVJXUkNVVlZqYzFOVlJrSlRVM2hFVVZWR1JFOHhiRUpSTTJoRFRFVk9RbEZWVFRkWFZVWkdVa040UmxGVlJrWk1SVTVDVVZWTmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpWREJHUWxSNWVFUlJWVVpFVEVaR1FsRldSWE5UVlVaQ1UxTjRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlWGhVVVZWR1ZFeEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVUekprUTFGVlRUTlJlWGhLVVZWR1NreEZUa0pSVlUxelZUQkdRbFY1ZUVoUlZVWklURVprUWxGV1kzTlJNRVpDVVhsNFJGRlZSa1JNUmtaQ1VWWkZjMUV3UmtKUmVYaHNVVlZHYkV4RlpFSlJWV056VTFWR1FsTlRlRVJSVlVaRVRFZFdRbEZYVlhOU01FWkNVbmw0U2xGVlJrcE1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRSbEZWUmtaTVJXeENVVlZyYzFFd1JrSlJlWGhRVVZWR1VFeEZUa0pSVlUxelZWVkdRbFZUZUVSUlZVWkVURVZPUWxGVlRUZFhWVVpFWVVWcmMxRXdSa0pSZW5SU1VWVk9TVXhGVGtKUlZVMXpVVEJHUWxGNmRGSlJWVlpIVEVaR1FsRldSWE5STUVaQ1VYbDRWRkZWUmxSTVJVNUNVVlZOYzFKVlJrSlNVM2hJVVZWR1NFeEdiRUpSVm10elV6QkdRbE42ZEZwUlZVNHlVWGw0U2xGVlJrcE1SWFJDVVZWemMxSXdSa0pTZVhoS1VWVkdTa3hGVGtKUlZVMDNWMVZHUm1GclNYTlRWVVpDVTFONFJGRlZSa1JNUjA1Q1VWZE5jMUl3UmtKU2VYaEVVVlZHUkV4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFWkdRbEZXUlhOUk1FWkNVWGw0UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoU1VWVkdVa3hGVGtKUlZVMXpWakJHUWxaNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFkVlJrWmphMVZ6VTFWR1FsTlRlRmhSVlVaWVRFVmtRbEZWWTNOVFZVWkNVMU40UkZGVlJrUk1SMFpDVVZkRmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpXVEJHUWxsNWVFUlJWVVpFVEVWT1FsRlZUVGRYVlVaR1RWVlJjMUpWUmtKU1UzaEVVVlZHUkV4RlRrSlJWVTF6VXpCR1FsTjVlRWhSVlVaSVRFVnNRbEZWYTNOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWTmMxUlZSa0pVVTNoSVVWVkdTRXhGVGtKUlZVMXpVMVZHUWxOVGVFeFJWVVpNVEVWa1FsRlZZM05STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlblJ1VVd0R1JHRkZVWE5VVlVaQ1ZGTjRSRkZWUmtSUE1XeENVVEZSYzFFd1JrSlJlblJhVVZWV1JVeEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFZsRlZSbFpNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkU4eVpFTlJWVTUzVVdsNFJGRlZSa1JNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4R1JrSlJWa1Z6VVRCR1FsRjVlRVJSVlVaRVRFVmtRbEZWWTNOUk1FWkNVWGw0VEZGVlJreE1SVTVDVVZWTmMxTlZSa0pUVTNoR1VWVkdSazh5T1VOUlZVMTJVV2w0VGxGVlJrNU1SVTVDVVZWTmMxTXdSa0pUZVhoRVVWVkdSRXhGVmtKUlZWVnpVVEJHUWxGNWVFeFJWVVpNVEVWT1FsRlZUWE5STUVaQ1VYcDBibEZyUmtSbGEwbHpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUVGRhTUVwQ1VUQm5jMVJWUmtKVVUzaEVVVlZHUkU4eGJFSlJNVkZ6VVRCR1FsRjZkRnBSVlZaRlRFVldRbEZWVlhOUk1FWkNVWGw0UkZGVlJrUk1SbVJDVVZaamMxTXdSa0pUZVhoTVVWVkdURXhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVHpKa1ExRlZUWGhSYVhoS1VWVkdTa3hGVGtKUlZVMXpVekJHUWxONWVFWlJWVVpHVEVWT1FsRlZUVGRhTUVwQ1VUSkpjMU5WUmtKVFUzaEVVVlZHUkV4RmRFSlJWWE56VWxWR1FsSlRlRVJSVlVaRVR6SmtRMUZWVG1sTVJURkNVVlV3YzFFd1JrSlJlblJhVVZWT1ZVeEZUa0pSVlUwM1YxVkdSbEpEZUVwUlZVWktURVpPUWxGV1RYTlNNRVpDVW5sNFRGRlZSa3hNUldSQ1VWVmpjMVl3UmtKV2VYaElVVlZHU0V4R1RrSlJWazF6VVRCR1FsRjVlRXBSVlVaS1RFVmtRbEZWWTNOVk1FWkNWWGw0UkZGVlJrUk1Sa1pDVVZaRmMxRXdSa0pSZW5SYVVWVlZlRkpUZUVwUlZVWktURVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JNUms1Q1VWWk5jMUpWUmtKU1UzaEtVVlZHU2t4RlRrSlJWVTF6VkZWR1FsUlRlRVJSVlVaRVRFVjBRbEZWYzNOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4xVlZSa1JPTUUxelVUQkdRbEY1ZUVSUlZVWkVUekZHUWxKVldYTlZWVVpDVlZONFJGRlZSa1JNUms1Q1VWWk5jMUV3UmtKUmVYaFFVVlZHVUV4RlpFSlJWV00zVjFWR1JFMHdTWE5STUVaQ1VYbDRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlWGhTVVZWR1VreEZUa0pSVlUxelVUQkdRbEY1ZUVoUlZVWklURVZPUWxGVlRYTlZNRVpDVlhsNFJGRlZSa1JNUlU1Q1VWVk5OMWRWUmtSaFJVMXpVVEJHUWxGNWVFUlJWVVpFVEVaV1FsRldWWE5STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFWVlJrSlZVM2hHVVZWR1JreEdSa0pSVmtWelVUQkdRbEY1ZUVSUlZVWkVUekZzUWxKWVVrUk1SV3hDVVZWcmMxRXdSa0pSZVhoT1VWVkdUa3hGWkVKUlZXTnpVMVZHUWxOVGVFUlJWVVpFVHpGc1FsRXlOVU5NUld4Q1VWVnJjMUV3UmtKUmVYaFFVVlZHVUV4RlpFSlJWV056VTFWR1FsTlRlRVJSVlVaRVR6RnNRbEV6UWtOTVJXeENVVlZyYzFFd1JrSlJlWGhTVVZWR1VreEZaRUpSVldOelUxVkdRbE5UZUVSUlZVWkVUekZzUWxFelNrTk1SV3hDVVZWcmMxRXdSa0pSZVhoVVVWVkdWRXhGWkVKUlZXTnpVMVZHUWxOVGVFUlJWVVpFVHpGc1FsRXpVa05NUld4Q1VWVnJjMUV3UmtKUmVYaFVVVlZHVkV4RlpFSlJWV056VTFWR1FsTlRlRVJSVlVaRVR6RnNRbEV6VWtOTVJXeENVVlZyYzFFd1JrSlJlWGhXVVZWR1ZreEZaRUpSVldOelUxVkdRbE5UZUVSUlZVWkVUekZzUWxFeldrTk1SV3hDVVZWcmMxRXdSa0pSZVhocVVWVkdha3hGWkVKUlZXTnpVMVZHUWxOVGVFUlJWVVpFVHpGc1FsRjZUa05NUld4Q1VWVnJjMUV3UmtKUmVYaHlVV3RHUW1Fd1NYTlNNRVpDVW5sNFNsRlZSa3BNUlU1Q1VWVk5OMVZWUmtSaGEwMXpVVEJHUWxGNWVFUlJWVVpFVHpGR1FsSlZXWE5XVlVaQ1ZsUjBVbEZWVmxkTVJrWkNVVlpGYzFFd1JrSlJlWGhVVVZWR1ZFeEZUa0pSVlUxelZsVkdRbFpUZUVoUlZVWklURWM1UTFGVlJuWlJhWGhPVVZWR1RrOHhiRUpSTTJoRlRFVXhRbEZWTUhOU01FWkNVbmw0UkZGVlJrUk1SVTVDVVZWTmMxUlZSa0pVVTNoRVVWVkdSRXhGVmtKUlZWVnpVbFZHUWxKVGVGQlJWVVpRVEVWV1FsRlZWWE5VVlVaQ1ZGTjRSRkZWUmtSTVJVNUNVVlZOTjFkVlJrUmthMDF6VTFWR1FsTlRlRVJSVlVaRVRFZFdRbEZYVlhOUk1FWkNVWGw0U2xGVlJrcE1SVlpDVVZWVmMxUlZSa0pVVTNoR1VWVkdSa3hHWkVKUlZtTnpVVEJHUWxGNWVFUlJWVVpFVHpGc1FsRXlhRVZNUlRGQ1VWVXdjMUV3UmtKUmVYaE9VVlZHVGt4RlRrSlJWVTAzVlZWR1JHRkZTWE5STUVaQ1VYbDRSRkZWUmtSUE1VWkNVbFZaYzFWVlJrSlZVM2hFVVZWR1JFeEdUa0pSVmsxelVUQkdRbEY1ZUhKUmEwWkNZVEJKYzFJd1JrSlNlblJhVVZWT01GRjVlRXBSVlVaS1RFVXhRbEZWTUhOU01FWkNVbmw0U2xGVlJrcE1SVTVDVVZWTk4xZFZSa1ppUlVselVsVkdRbEpUZUVSUlZVWkVURVZPUWxGVlRYTlRWVVpDVTFONFJGRlZSa1JNUlRsQ1VWVTRjMUV3UmtKUmVYaFNVVlZHVWt4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVR6SmtRMUZWVFhoUmFYaEVVVlZHUkV4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFWkdRbEZXUlhOUk1FWkNVWGw0UkZGVlJrUk1SVlpDVVZWVmMxRXdSa0pSZVhoTVVWVkdURXhGVGtKUlZVMXpWREJHUWxSNWVFWlJWVVpHVEVaV1FsRldWWE5UTUVaQ1UzcDBkbEZyUmtSaFJWRnpWRlZHUWxSVGVFUlJWVVpFVEVVeFFsRlZNSE5STUVaQ1VYbDRVbEZWUmxKTVJVNUNVVlZOYzFNd1JrSlRlWGhFVVZWR1JFeEZUa0pSVlUwM1dqQktRbEV5YUVSTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpSTUhkelVUQkdRbEY2ZEZwUlZWWkZURVZXUWxGVlZYTlJNRVpDVVhsNFJGRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaFFVVlZHVUV4RlRrSlJWVTF6VXpCR1FsTjVlRXhSVlVaTVRFVTVRbEZWT0hOVFZVWkNVMU40UkZGVlJrUk1SVTVDVVZWTmMxa3dSa0paZVhoS1VWVkdTa3hHUmtKUlZrVnpVVEJHUWxGNWVHeFJWVVpzVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFvd1NrSlJNMEpIVEVWT1FsRlZUWE5STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFWVlJrSlZVM2hFVVZWR1JFeEZUa0pSVlUxelVsVkdRbEpUZUVSUlZVWkVURVYwUWxGVmMzTlJNRVpDVVhsNFZsRlZSbFpNUlZaQ1VWVlZjMVpWUmtKV1UzaE1VVlZHVEU4eU9VTlJWVTUxVWtONFRsRlZSazVNUlU1Q1VWVk5jMVJWUmtKVVUzaEVVVlZHUkV4RmRFSlJWWE56VVRCR1FsRjVlRXhSVlVaTVRFVk9RbEZWVFhOUk1FWkNVWHAwYmxGclJrUk9NRWx6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOU1ZVWkNVbE40UkZGVlJrUk1SWFJDVVZWemMxRXdSa0pSZVhoV1VWVkdWa3hGVmtKUlZWVnpWbFZHUWxaVGVFeFJWVVpNVHpJNVExRlZUbmxSZVhoT1VWVkdUa3hGVGtKUlZVMXpWRlZHUWxSVGVFUlJWVVpFVEVWMFFsRlZjM05STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFFd1JrSlJlblJ1VVd0R1JFNHdTWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFkVlJrUlVRM2hFVVZWR1JFOHhSa0pSTUdkelVUQkdRbEY1ZUVSUlZVWkVUekZHUWxKVldYTlZWVVpDVlZONFJGRlZSa1JNUms1Q1VWWk5jMUV3UmtKUmVYaFNVVlZHVWt4RlpFSlJWV056WVRCS1FsRlhkRU5NUlhSQ1VWVnpOMWRWUmtSaWExRnpVbFZHUWxKVGVFUlJWVVpFVEVWT1FsRlZUWE5oVlVwQ1VWZHNRMHhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVWMFFsRlZjM05STUVaQ1VYbDRUbEZWUms1TVJVNUNVVlZOYzFRd1JrSlVlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVUekprUTFGVlRuRlNRM2hPVVZWR1RreEZUa0pSVlUwM1YxVkdSRlpEZUVSUlZVWkVUekZzUWxKVlVYTlVWVVpDVkZONFJGRlZSa1JNUlU1Q1VWVk5jMU13UmtKVGVYaEVVVlZHUkV4RmRFSlJWWE56VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkYU1FcENVVE5DUTB4RmRFSlJWWE56WVRCS1FsRlhkRU5QTWpsRFVWVk9lVkZwZUV4UlZVWk1URVZPUWxGVlRYTlpNRVpDV1hsNFJsRlZSa1pNUlU1Q1VWVk5OMkl3U2tKUk0xcERURVZzUWxGVmEzTlJNRVpDVVhsNFNsRlZSa3BNUlZaQ1VWVlZjMUV3UmtKUmVuUjJVV3RHUkZkcGVFeFJWVVpNVEVWT1FsRlZUVGRhTUVwQ1VURkpjMU13UmtKVGVYaDBVV3RHUW1KVlNUZGlNRXBDVVROU1EweEZkRUpSVlhOelVUQkdRbEY1ZUdwUlZVWnFURVZXUWxGVlZYTlJNRVpDVVhwMGRsRnJSa1JrYTBselUxVkdRbE5UZUVSUlZVWkVURVZzUWxGVmEzTlNWVVpDVWxONFJGRlZSa1JQTWpsRFVWVk9ZVXhGZEVKUlZYTnpVVEJHUWxGNmRHNVJhMFpFVldwMGRsRnJSa1JTVTNoT1VWVkdUa3hGVGtKUlZVMDNWMVZHUkZkRGVFUlJWVVpFVHpGR1FsRXdaM05STUVaQ1VYbDRSRkZWUmtSUE1VWkNVbFZaYzFWVlJrSlZVM2hFVVZWR1JFeEdUa0pSVmsxelVUQkdRbEY1ZUdoUlZVWm9URVZrUWxGVlkzTmtWVXBDVVZoV1EweEZPVUpSVlRnM1YxVkdSRXd3VVhOVFZVWkNVMU40UkZGVlJrUk1SVEZDVVZVd2MxSXdSa0pTZVhoRVVWVkdSRXhGVGtKUlZVMXpWVEJHUWxWNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRVRkZWUmxCTVJVNUNVVlZOYzFFd1JrSlJlWGhPVVZWR1RreEZWa0pSVlZWelVUQkdRbEY1ZUVwUlZVWktURVZPUWxGVlRYTlZWVVpDVlZONFJGRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTAzVjFWR1JHSnJWWE5VVlVaQ1ZGTjRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlWGhPVVZWR1RreEZUa0pSVlUxelZEQkdRbFI1ZUVSUlZVWkVURVU1UWxGVk9ITlJNRVpDVVhsNFJGRlZSa1JQTVVaQ1VUTlNSRXhGVGtKUlZVMXpVVEJHUWxGNmRGSlJWVlpIVEVaR1FsRldSWE5STUVaQ1VYbDRWRkZWUmxSTVJVNUNVVlZOYzJKVlNrSlJWekZEVEVWa1FsRlZZM05PYTBwQ1VWUmFRMHhHVGtKUlZrMXpVbFZHUWxKVGVHaFJWVVpvVHpGc1FsRjZWa2RNUld4Q1VWVnJjMXBWUmtKYVUzaElVVlZHU0V4R1RrSlJWazF6VXpCR1FsTjVlRlJSVlVaVVRFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUlBNV3hDVVRJMVJVeEZiRUpSVld0eldsVkdRbHBUZUVoUlZVWklURVpPUWxGV1RYTlRNRVpDVTNsNFZGRlZSbFJNUlU1Q1VWVk5jMVZWUmtKVlUzaEVVVlZHUkU4eGJFSlJNMXBGVEVWc1FsRlZhM05XTUVaQ1ZubDRTRkZWUmtoTVJXeENVVlZyYzFFd1JrSlJlWGhvVVZWR2FFeEZUa0pSVlUxeldWVkdRbGxUZUVSUlZVWkVURVZPUWxGVlRUZFhWVVpFWTBWUmMxTlZSa0pUVTNob1VWVkdhRXhGWkVKUlZXTnpVMVZHUWxOVGVFUlJWVVpFVEVVeFFsRlZNSE5STUVaQ1VYbDRUbEZWUms1TVJXUkNVVlZqYzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpSZWs1RVRFVnNRbEZWYTNOWlZVWkNXVk40U0ZGVlJraE1SMVpDVVZkVmMxTlZSa0pUVTNoWVVWVkdXRXhGZEVKUlZYTnpVVEJHUWxGNWVFcFJWVVpLVEVkV1FsRlhWWE5UVlVaQ1UxTjRXRkZWUmxoTVJYUkNVVlZ6YzFsVlJrSlpVM2hFVVZWR1JFOHhiRUpTVkdSSVRFVldRbEZWVlhOUk1FWkNVWGw0UkZGVlJrUk1SMFpDVVZkRmMxTlZSa0pUVTNoRVVWVkdSRXhGYkVKUlZXdHpVVEJHUWxGNWVGQlJWVVpRVEVWT1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlblJ1VVd0R1JHVkZUWE5VVlVaQ1ZGTjRSRkZWUmtSTVIwWkNVVmRGYzFFd1JrSlJlblJhVVZWT01sRnBlRVJSVlVaRVR6RnNRbEpWVVhOVFZVWkNVMU40VEZGVlJreE1SV1JDVVZWamMxVXdSa0pWZVhoTVVWVkdURXhHVGtKUlZrMXpVVEJHUWxGNWVGSlJWVVpTVEVWa1FsRlZZM05STUVaQ1VYbDRSRkZWUmtSTVJXUkNVVlZqYzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpSTTFKRlRFVnNRbEZWYTNOVk1FWkNWWGw0U0ZGVlJraE1SVTVDVVZWTmMxWXdSa0pXZVhoSVVWVkdTRXhGZEVKUlZYTnpVVEJHUWxGNWVFaFJWVVpJVEVWc1FsRlZhM05STUVaQ1VYbDRUbEZWUms1TVJVNUNVVlZOYzFSVlJrSlVVM2hFVVZWR1JFOHhiRUpTVkU1RlRFVXhRbEZWTUhOUk1FWkNVWGw0VkZGVlJsUk1SWFJDVVZWemMxRXdSa0pSZVhoRVVWVkdSRXhGWkVKUlZXTnpVMVZHUWxOVGVFUlJWVVpFVEVVeFFsRlZNSE5STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFSVlJrSlVVM2hFVVZWR1JFeEZNVUpSVlRCelVqQkdRbEo1ZUVSUlZVWkVURVZPUWxGVlRYTlNNRVpDVW5sNFNsRlZSa3BNUlU1Q1VWVk5jMVJWUmtKVVUzaEVVVlZHUkV4R1RrSlJWazF6VVRCR1FsRjVlRVJSVlVaRVR6RkdRbEV6Y0VkTVJVNUNVVlZOYzFFd1JrSlJlblJTVVZWV1IweEdSa0pSVmtWelVUQkdRbEY1ZUZSUlZVWlVURVZPUWxGVlRYTmhNRXBDVVZkMFEweEZaRUpSVldOelRrVktRbEZVVWtOTVIwWkNVVmRGYzFKVlJrSlNVM2h5VVd0R1FtRXdTVGRYVlVaRVltdGpjMU5WUmtKVFUzaFdVVlZHVmt4RlpFSlJWV056VVRCR1FsRjVlRVJSVlVaRVRFVjBRbEZWYzNOUk1FWkNVWGw0VEZGVlJreE1SVTVDVVZWTmMxTXdSa0pUZVhoR1VWVkdSazh5WkVOUlZVNTNVWGw0YUZGVlJtaE1SVlpDVVZWVmMxbFZSa0paVkhSdVVXdEdSRTVWU1hOVk1FWkNWWGw0UmxGVlJrWk1SM1JEVVZWR2NsRnFkR2hSVlUwMVVXbDRSRkZWUmtSTVJVNUNVVlZOTjFkVlJrWlRRM2hFVVZWR1JFeEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVpHUWxGV1JYTlJNRVpDVVhsNFJGRlZSa1JNUlRsQ1VWVTRjMUV3UmtKUmVYaFdVVlZHVmt4RlRrSlJWVTF6VVRCR1FsRjZkRnBSVlZaNVVYbDRUbEZWUms1TVJVNUNVVlZOYzFaVlJrSldVM2hFVVZWR1JFOHhSa0pSTTBKRFRFVk9RbEZWVFhOUk1FWkNVWHAwVWxGVlZrZE1Sa1pDVVZaRmMxRXdSa0pSZVhoVVVWVkdWRXhGVGtKUlZVMXpUVVZLUWxGVVFrTk1SV1JDVVZWamMySXdUa0pSVnpsRVRFVTVRbEZWT0RkWFZVWkVaV3RaYzFKVlJrSlNVM2hFVVZWR1JFeEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURWQwUTFGVlJuSlJhWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEc1UmEwWkVUbFZKYzFFd1JrSlJlWGhFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY1ZUhKUmEwWkNZVEJKYzFFd1JrSlJlWGhFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY1ZUZKUlZVWlNURVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JNUlU1Q1VWVk5jMVl3UmtKV2VYaEVVVlZHUkV4R1RrSlJWazF6VVRCR1FsRjVlRTVSVlVaT1RFVk9RbEZWVFhOUk1FWkNVWHAwYmxGclJrWk1NRlZ6VTFWR1FsTlRlR2hSVlVab1RFVmtRbEZWWTNOVFZVWkNVMU40UkZGVlJrUk1SM1JEVVZWR2NsRnBlRVJSVlVaRVRFWkdRbEZXUlhOUk1FWkNVWGw0U2xGVlJrcE1SVTVDVVZWTmMxbFZSa0paVTNoRVVWVkdSRXhGT1VKUlZUaHpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUVGRhTUVwQ1VsZDRSMHhGVmtKUlZWVnpVVEJHUWxGNWVFUlJWVVpFVEVkR1FsRlhSWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjJJd1NrSlJNbmhEVEVWT1FsRlZUWE5STUVaQ1VYbDRhRkZWUm1oTVJVNUNVVlZOYzFFd1JrSlJlWGhTVVZWR1VreEZUa0pSVlUxelZUQkdRbFY1ZUVSUlZVWkVURVV4UWxGVk1ITlJNRVpDVVhsNFJGRlZSa1JQTW1SRFVWVk5OVkY1ZUVSUlZVWkVUekZzUWxFd1ozTlJNRVpDVVhwMFVsRlZUa2xNUlU1Q1VWVk5jMUV3UmtKUmVuUlNVVlZXUjB4R1JrSlJWa1Z6VVRCR1FsRjVlRlJSVlVaVVRFVk9RbEZWVFhOVVZVWkNWRk40U0ZGVlJraE1SMlJEVVZWR2JsRnBlRlJSVlVaVVRFVldRbEZWVlhOVU1FWkNWSHAwV2xGVlRURlNRM2hLVVZWR1NreEZNVUpSVlRCelVqQkdRbEo1ZUVwUlZVWktURVZPUWxGVlRUZFhWVVpHWWtWSmMxTlZSa0pUVTNob1VWVkdhRXhGWkVKUlZXTnpVVEJHUWxGNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRVbEZWUmxKTVJVNUNVVlZOYzFFd1JrSlJlWGhLVVZWR1NreEZUa0pSVlUxelZWVkdRbFZUZUVSUlZVWkVURVprUWxGV1kzTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkU4eGJFSlJNalZHVEVWc1FsRlZhM05XTUVaQ1ZubDRTRkZWUmtoTVJUbENVVlU0YzFOVlJrSlRVM2hvVVZWR2FFeEZiRUpSVld0elUxVkdRbE5UZUVSUlZVWkVURWN4UTFGVlJuUlJhWGhFVVZWR1JFeEdUa0pSVmsxelVsVkdRbEpUZUdoUlZVWm9URVZPUWxGVlRYTlJNRVpDVVhwMFdsRlZWbkZTZVhoS1VWVkdTa3hHVGtKUlZrMXpVakJHUWxKNWVGQlJWVVpRVEVWT1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSTVJrNUNVVlpOYzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpTV0doRVRFVnNRbEZWYTNOaU1FcENVVmM1UTB4RlpFSlJWV056VXpCR1FsTjVlRVJSVlVaRVRFVk9RbEZWVFRkWFZVWkVZa1ZOYzFOVlJrSlRVM2hxVVZWR2FreEZaRUpSVldOelV6QkdRbE41ZUVSUlZVWkVURVZPUWxGVlRUZFhWVVpFVGxWSmMxTlZSa0pUVTNoeVVXdEdRbUV3U1hOU01FWkNVbmw0VEZGVlJreE1SVTVDVVZWTmMxRXdSa0pSZW5SYVVWVldiMUY1ZUVaUlZVWkdURVZPUWxGVlRYTlJNRVpDVVhsNFZGRlZSbFJNUlhSQ1VWVnpjMVV3UmtKVmVYaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkYU1FcENVVEp3UkV4SE9VTlJWVVoyVVdsNFNGRlZSa2hNUms1Q1VWWk5jMUV3UmtKUmVYaEtVVlZHU2t4RlRrSlJWVTAzV2pCS1FsRXpVa1JNUjA1Q1VWZE5jMUl3UmtKU2VYaFVVVlZHVkV4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVR6SmtRMUZWVG05UmVYaHlVV3RHUW1Fd1NYTlNNRVpDVW5sNFZGRlZSbFJNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkU4eGJFSlJNMUpFVEVWT1FsRlZUVGRYVlVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFFd1JrSlJlblJ1VVd0R1JGUnBlSFpSYTBaQ1lqQkpjMUl3UmtKU2VYaFVVVlZHVkV4RlRrSlJWVTF6VXpCR1FsTjVlRVJSVlVaRVR6SmtRMUZWVGpKUmVYaHFVVlZHYWt4RlpFSlJWV056VlRCR1FsVjVlRVJSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWHAwYmxGclJrUmhSVTF6WVRCS1FsRlhkRU5NUldSQ1VWVmpjMVV3UmtKVmVYaEVVVlZHUkV4RmRFSlJWWE56VVRCR1FsRjZkRnBSVlU0eVVYbDRSRkZWUmtSUE1XeENVbFZSYzFKVlJrSlNVM2hFVVZWR1JFeEZUa0pSVlUxelZqQkdRbFo1ZUVwUlZVWktURVZPUWxGVlRYTlJNRVpDVVhsNFdGRlZSbGhNUlU1Q1VWVk5jMUV3UmtKUmVYaFNVVlZHVWt4RlRrSlJWVTF6VlRCR1FsVjVlRVJSVlVaRVRFVXhRbEZWTUhOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZW5SdVVXdEdSRTR3VVhOVFZVWkNVMU40UkZGVlJrUk1SbFpDVVZaVmMxSXdSa0pTZVhoTVVWVkdURXhGVGtKUlZVMDNXakJLUWxFemFFTk1SVEZDVVZVd2MxRXdSa0pSZW5SYVVWVk9WVXhGVGtKUlZVMDNWMVZHUmxKRGVFcFJWVVpLVEVaV1FsRldWWE5TTUVaQ1VubDRTbEZWUmtwTVJVNUNVVlZOYzJFd1NrSlJWM1JEVEVWT1FsRlZUWE5XTUVaQ1ZubDRSbEZWUmtaTVIzUkRVVlZHY2xGcGVFUlJWVVpFVEVWT1FsRlZUVGRYVlVaRVRWVlZjMUpWUmtKU1UzaEVVVlZHUkV4RlRrSlJWVTF6VmxWR1FsWlRlRVJSVlVaRVRFZDBRMUZWUm5KUmFYaEdVVlZHUmt4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVR6SmtRMUZWVG5kUmVYaE9VVlZHVGt4RlRrSlJWVTAzVjFWR1JGWkRlRVJSVlVaRVR6RnNRbEpWVVhOU1ZVWkNVbE40UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZVhob1VWVkdhRXhGYkVKUlZXdHpVVEJHUWxGNWVGaFJWVVpZVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1tUkRVVlZPZFZGNWQzZFJNRVpDVFVWTk4xb3dTa0pSZWtaRVRFVXhRbEZWTUhOUk1FWkNVWHAwV2xGVlRsVk1SVTVDVVZWTk4xZFZSa1pTUTNoS1VWVkdTa3hGVGtKUlZVMXpWbFZHUWxaVGVFaFJWVVpJVEVWc1FsRlZhM05STUVaQ1VYcDBXbEZWVmpKUmFYaEdVVlZHUmt4RlRrSlJWVTF6VVRCR1FsRjVlRlJSVlVaVVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNbVJEVVZWT2EweEZiRUpSVld0elVUQkdRbEY1ZUV4UlZVWk1URVZXUWxGVlZYTlJNRVpDVVhwMFdsRlZUbTFNUlU1Q1VWVk5OMWRWUmtaU1EzaEtVVlZHU2t4RlRrSlJWVTF6VFVWS1FsRlVRa05NUlU1Q1VWVk5jMVl3UmtKV2VYaEVVVlZHUkV4RlRrSlJWVTAzVjFWR1JrNHdUWE5UVlVaQ1UxTjRWRkZWUmxSTVJXUkNVVlZqYzFFd1JrSlJlWGhFVVZWR1JFeEZkRUpSVlhOelVUQkdRbEY1ZUV4UlZVWk1URVZPUWxGVlRYTlRWVVpDVTFONFJsRlZSa1pQTW1SRFVWVk9jMUY1ZUdoUlZVWm9URVZXUWxGVlZYTldNRVpDVm5wMGJsRnJSa1JOVlVselZUQkdRbFY1ZUVaUlZVWkdURWQwUTFGVlJuSlJhblJvVVZWTk5WRnBlRVJSVlVaRVRFVk9RbEZWVFRkWFZVWkdVME40UmxGVlJrWk1SVTVDVVZWTmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpZMVZLUWxGWVJrTk1SVlpDVVZWVmMxTlZSa0pUVTNoRVVWVkdSRXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVaR1FsRldSWE5STUVaQ1VYbDRSRkZWUmtSTVJrWkNVVlpGYzFFd1JrSlJlWGhVVVZWR1ZFeEZUa0pSVlUxelV6QkdRbE41ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTW1SRFVWVlZkbEpUZUVSUlZVWkVURVZPUWxGVlRYTldNRVpDVm5sNFJGRlZSa1JNUlU1Q1VWVk5jMVZWUmtKVlUzaEVVVlZHUkV4SFRrSlJWMDF6VVRCR1FsRjVlRVJSVlVaRVR6SmtRMUZWVmpSUmVYaEtVVlZHU2t4RlRrSlJWVTF6VkZWR1FsUlRlRVJSVlVaRVRFWmtRbEZXWTNOUk1FWkNVWGw0UkZGVlJrUlBNbVJEVVZWV05sRnBlRVJSVlVaRVRFVk9RbEZWVFhOWlZVWkNXVk40UkZGVlJrUk1SVTVDVVZWTmMxVlZSa0pWVTNoRVVWVkdSRXhIT1VOUlZVWjJVV2w0UkZGVlJrUk1SVTVDVVZWTk4xb3dTa0pSTW1oRlRFVk9RbEZWVFhOUk1FWkNVWGw0V0ZGVlJsaE1SVTVDVVZWTmMxRXdSa0pSZVhoU1VWVkdVa3hGVGtKUlZVMXpZakJLUWxGWE9VTk1SVTVDVVZWTmMxRXdSa0pSZW5SdVVXdEdSazlWVFhOUk1FWkNVWGw0UkZGVlJrUk1SMFpDVVZkRmMxRXdSa0pSZVhoRVVWVkdSRXhGWkVKUlZXTnpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5aTUVaQ1dYbDRSbEZWUmtaUE1qbERVVlZPTkZGNWVFUlJWVVpFVEVWT1FsRlZUWE5XTUVaQ1ZubDRSRkZWUmtSTVJVNUNVVlZOYzFZd1JrSldlWGhFVVZWR1JFeEhPVU5SVlVaMlVXbDRTRkZWUmtoTVJXUkNVVlZqYzFJd1JrSlNlWGhxVVZWR2FreEZUa0pSVlUxelVUQkdRbEY1ZUZKUlZVWlNURVZPUWxGVlRYTlZNRVpDVlhsNFJGRlZSa1JNUlRGQ1VWVXdjMUV3UmtKUmVYaEVVVlZHUkU4eU9VTlJWVloxVW5sNFJGRlZSa1JNUlU1Q1VWVk5jMWxWUmtKWlUzaEVVVlZHUkV4RlRrSlJWVTF6VmpCR1FsWjVlRVJSVlVaRVRFWk9RbEZXVFhOUk1FWkNVWGw0VGxGVlJrNU1SV1JDVVZWamMxSXdSa0pTZVhoSVVWVkdTRXhIVGtKUlYwMXpVakJHUWxKNWVFaFJWVVpJVEVWa1FsRlZZM05pTUVwQ1VWYzVRMHhGVGtKUlZVMXpVVEJHUWxGNmRIWlJhMFpHWW10amMxUlZSa0pVVTNoRVVWVkdSRXhHVmtKUlZsVnpVakJHUWxKNWVFeFJWVVpNVEVWT1FsRlZUVGRpTUVwQ1VsUkdRMHhHVmtKUlZsVnpVVEJHUWxGNmRETlJhMFpFVmtONFRsRlZSazVNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkV4Rk1VSlJWVEJ6VVRCR1FsRjVlRkpSVlVaU1RFVk9RbEZWVFhOUk1FWkNVWGw0VUZGVlJsQk1SVTVDVVZWTmMxVXdSa0pWZVhoRVVWVkdSRXhGVGtKUlZVMDNZakJLUWxGNU9VUk1SVTVDVVZWTmMxSlZSa0pTVTNoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNmRHNVJhMFpFVldsNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVYaDJVV3RHUW1Jd1NYTlJNRVpDVVhsNGRGRnJSa0ppVlVselVUQkdRbEY1ZUVSUlZVWkVUekZzUWxGNU9VUk1SVTVDVVZWTk4xZFZSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVVEJHUWxGNmRHNVJhMFpFVkdsNFJGRlZSa1JNUlU1Q1VWVk5jMWxWUmtKWlUzaEVVVlZHUkV4RlRrSlJWVTF6VmpCR1FsWjVlRVJSVlVaRVRFWk9RbEZXVFhOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWTmMxRXdSa0pSZW5SdVVXdEdSRXd3VFhOUk1FWkNVWGw0UkZGVlJrUk1SbVJDVVZaamMxRXdSa0pSZVhoRVVWVkdSRXhHUmtKUlZrVnpVVEJHUWxGNWVGUlJWVVpVVEVWT1FsRlZUWE5VVlVaQ1ZGTjRSRkZWUmtSTVJVNUNVVlZOTjFvd1NrSlNWRVpFVEVWc1FsRlZhM05STUVaQ1VYbDRWbEZWUmxaTVJXUkNVVlZqYzFNd1JrSlRlWGhFVVZWR1JFOHlaRU5SVlU0MFVXbDRSRkZWUmtSTVJVNUNVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEdSa0pSVmtWelVUQkdRbEY1ZUVSUlZVWkVURVU1UWxGVk9ITlJNRVpDVVhsNFZGRlZSbFJNUlU1Q1VWVk5jMUV3UmtKUmVuUmFVVlZPTUZGNWVFUlJWVVpFVHpGc1FsSlZVWE5TVlVaQ1VsTjRSRkZWUmtSTVJVNUNVVlZOYzFVd1JrSlZlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEc1UmEwWkVXa040U2xGVlJrcE1SVTVDVVZWTmMxTXdSa0pUZVhoR1VWVkdSa3hGVGtKUlZVMDNWMVZHUkZwcGVFUlJWVVpFVHpGR1FsRXdaM05STUVaQ1VYbDRSRkZWUmtSUE1VWkNVbFZaYzFVd1JrSlZlblJTVVZWV1ZVeEdSa0pSVmtWelVUQkdRbEY1ZUc1UmEwWkNXakJKYzFJd1JrSlNlWGQzVVd0R1FrMUZTWE5VVlVaQ1ZGUjBXbEZWVFhoU1EzaE9VVlZHVGt4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWHAwYmxGclJrUmFhWGhLVVZWR1NreEZiRUpSVld0elVqQkdRbEo1ZUVSUlZVWkVURVZPUWxGVlRYTlRWVVpDVTFONFJGRlZSa1JNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4R1JrSlJWa1Z6VVRCR1FsRjVlRVJSVlVaRVR6SmtRMUZWVG5OUmVYaEtVVlZHU2t4Rk9VSlJWVGh6VWpCR1FsSjVlRVJSVlVaRVRFVk9RbEZWVFhOVVZVWkNWRk40UkZGVlJrUk1SVlpDVVZWVmMxSlZSa0pTVTNoUVVWVkdVRXhGVmtKUlZWVnpVVEJHUWxGNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRSRkZWUmtSTVJXeENVVlZyYzFKVlJrSlNVM2hFVVZWR1JFeEZUa0pSVlUwM1dqQktRbEpZUWtWTVJWWkNVVlZWYzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUxelZEQkdRbFI1ZUU1UlZVWk9URVYwUWxGVmMzTldNRVpDVm5sNFNGRlZSa2hNUm1SQ1VWWmpjMUl3UmtKU2VYaFFVVlZHVUV4RlRrSlJWVTF6VkZWR1FsUlRlRVJSVlVaRVRFVk9RbEZWVFhOVE1FWkNVM2w0VWxGVlJsSk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRTh5T1VOUlZVNXhVbWw0UkZGVlJrUk1SVTVDVVZWTmMxUlZSa0pVVTNoRVVWVkdSRXhGT1VKUlZUaHpVbFZHUWxKVGVFNVJWVVpPVEVWT1FsRlZUWE5STUVaQ1VYcDBibEZyUmtST1ZVbHpVVEJHUWxGNmRHNVJhMFpHVWtONFNsRlZSa3BNUlRGQ1VWVXdjMUl3UmtKU2VYaFFVVlZHVUV4Rk1VSlJWVEJ6VXpCR1FsTjVlRkpSVlVaU1RFVmtRbEZWWTNOVVZVWkNWRk40U0ZGVlJraE1SVGxDVVZVNGMxRXdSa0pSZVhoTVVWVkdURXhGVGtKUlZVMDNXakJLUWxKWGNFWk1SVlpDVVZWVmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBkbEZyUmtSV2FYaEtVVlZHU2t4RlpFSlJWV056VTFWR1FsTlRlRkpSVlVaU1RFVk9RbEZWVFhOVFZVWkNVMU40UmxGVlJrWk1SVGxDVVZVNGMxRXdSa0pSZVhoRVVWVkdSRTh5T1VOUlZVNTFVWGw0UkZGVlJrUk1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVaR1FsRldSWE5TVlVaQ1VsTjRTbEZWUmtwTVJVNUNVVlZOYzFFd1JrSlJlblJ1VVd0R1JFd3dTWE5STUVaQ1VYcDBibEZyUmtaU1EzaEdVVlZHUmt4RlRrSlJWVTF6VVRCR1FsRjVlRkJSVlVaUVRFVXhRbEZWTUhOVE1FWkNVM2w0VWxGVlJsSk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRTh5T1VOUlZVMTJVV2w0U2xGVlJrcE1SVTVDVVZWTmMxSlZSa0pTVTNoRVVWVkdSRXhGTVVKUlZUQnpVVEJHUWxGNWVFUlJWVVpFVHpKa1ExRlZUbk5SYVhoRVVWVkdSRTh5WkVOUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFJsRlZSa1pNUlU1Q1VWVk5jMUV3UmtKUmVYaFFVVlZHVUV4Rk1VSlJWVEJ6VXpCR1FsTjVlRkpSVlVaU1RFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNamxEVVZWT01GRjVlRVpSVlVaR1RFVk9RbEZWVFhOUk1FWkNVWGw0U2xGVlJrcE1SVTVDVVZWTmMxUlZSa0pVVTNoRVVWVkdSRXhGZEVKUlZYTnpWVEJHUWxWNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBNMUZyUmtSTU1FbHpWRlZHUWxSVGVFcFJWVVpLVEVWMFFsRlZjM05STUVaQ1VYbDRkRkZyUmtKaVZVbHpVakJHUWxKNWVFNVJWVVpPVEVWa1FsRlZZM05TTUVaQ1VubDRSRkZWUmtSTVJVNUNVVlZOTjJJd1NrSlJNMUpGVEVWT1FsRlZUVGRpTUVwQ1VUQlJjMU5WUmtKVFUzaEVVVlZHUkV4Rk1VSlJWVEJ6VVRCR1FsRjVlRVpSVlVaR1RFVk9RbEZWVFRkYU1FcENVVEp3UTB4RlRrSlJWVTAzV2pCS1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSTVJWWkNVVlZWYzFFd1JrSlJlWGhFVVZWR1JFeEZPVUpSVlRoelVUQkdRbEY1ZUZKUlZVWlNURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTWpsRFVWVk5NVkZwZUVwUlZVWktURVZPUWxGVlRYTlRNRVpDVTNsNFJsRlZSa1pNUlU1Q1VWVk5OMkl3U2tKUk1rbHpVMVZHUWxOVGVFUlJWVVpFVEVWMFFsRlZjM05TVlVaQ1VsTjRSRkZWUmtSUE1tUkRVVlZPYlV4RlRrSlJWVTAzVjFWR1JGTkRlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwVWxGVlRrMU1SVTVDVVZWTmMxRXdSa0pSZW5SU1VWVldSMHhHUmtKUlZrVnpVVEJHUWxGNWVIWlJhMFpDWWpCSmMxSXdSa0pTZVhjMFVXdEdRazlGU1hOVE1FWkNVM3AwV2xGVlRuRlNVM2hLVVZWR1NreEdSa0pSVmtWelVqQkdRbEo1ZUVwUlZVWktURVZPUWxGVlRYTmpNRXBDVVZoT1EweEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVZPUWxGVlRUZFhWVVpHWVd0UmMxSlZSa0pTVTNoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNWVGSlJWVVpTVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1tUkRVVlZPYTB4Rk1VSlJWVEJ6VVRCR1FsRjZkRnBSVlU1VlRFVk9RbEZWVFRkWFZVWkdVa040U2xGVlJrcE1SVEZDVVZVd2MxSXdSa0pTZVhoRVVWVkdSRXhGVGtKUlZVMXpWVlZHUWxWVGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFkVlJrWk9WVWx6VWxWR1FsSlRlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0VGxGVlJrNU1SV3hDVVZWcmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMXpWRlZHUWxSVGVFUlJWVVpFVEVWT1FsRlZUWE5WVlVaQ1ZWTjRSRkZWUmtSTVJrNUNVVlpOYzFFd1JrSlJlWGhTVVZWR1VreEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRUZGFNRXBDVVROYVJVeEZNVUpSVlRCelVUQkdRbEY2ZEZwUlZVNVZURVZPUWxGVlRUZFhWVVpHVWtONFNsRlZSa3BNUlRGQ1VWVXdjMUl3UmtKU2VYaEVVVlZHUkV4RlRrSlJWVTF6VkZWR1FsUlRlRVJSVlVaRVRFVldRbEZWVlhOU1ZVWkNVbE40UkZGVlJrUk1SVTVDVVZWTmMxUlZSa0pVVTNoRVVWVkdSRXhGVGtKUlZVMXpVMVZHUWxOVGVFWlJWVVpHVEVWV1FsRlZWWE5STUVaQ1VYbDRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlWGhFVVZWR1JFeEZiRUpSVld0elVsVkdRbEpUZUVSUlZVWkVURVZPUWxGVlRUZFhWVVpFVGxWUmMxTlZSa0pUVTNoV1VWVkdWa3hGWkVKUlZXTnpVMVZHUWxOVGVFUlJWVVpFVEVac1FsRldhM05STUVaQ1VYbDRiRkZWUm14TVJVNUNVVlZOYzFFd1JrSlJlblJhVVZWV2QxSkRlRVpSVlVaR1RFVk9RbEZWVFhOUk1FWkNVWGw0VmxGVlJsWk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRTh5WkVOUlZVNXRURVV4UWxGVk1ITlJNRVpDVVhsNFVsRlZSbEpNUldSQ1VWVmpjMU13UmtKVGVYaEVVVlZHUkU4eGJFSlJla1pEVEVWT1FsRlZUVGRYVlVaR1VrTjRVbEZWUmxKTVJVNUNVVlZOYzFvd1NrSlJWMlJEVEVWT1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlWGhPVVZWR1RreEZUa0pSVlUxelVsVkdRbEpUZUU1UlZVWk9URVZPUWxGVlRYTlJNRVpDVVhwMFdsRlZWbk5TUTNoR1VWVkdSa3hGVGtKUlZVMXpVVEJHUWxGNWVGWlJWVVpXVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1tUkRVVlZPYlV4RlRrSlJWVTF6VVRCR1FsRjVlRTVSVlVaT1RFVk9RbEZWVFhOUk1FWkNVWGw0U2xGVlJrcE1SVTVDVVZWTmMxVlZSa0pWVTNoRVVWVkdSRXhGVGtKUlZVMXpVbFZHUWxKVGVFUlJWVVpFVEVaV1FsRldWWE5STUVaQ1VYbDRSRkZWUmtSUE1XeENVWHBHUkV4RlRrSlJWVTAzVjFWR1JsSkRlRXhSVlVaTVRFVk9RbEZWVFhOWk1FWkNXWGw0UmxGVlJrWk1SVTVDVVZWTk4xVlZSa1JsYTBselVUQkdRbEY1ZUVSUlZVWkVUekZHUWxKVldYTlhWVVpDVjFONFJGRlZSa1JNUmtaQ1VWWkZjMUpWUmtKU1UzaEtVVlZHU2t4RlZrSlJWVlZ6VVRCR1FsRjZkRzVSYTBaRVRsVkpjMUl3UmtKU2VYaEdVVlZHUmt4R1RrSlJWazAzV2pCS1FsRXlVWE5TTUVaQ1VubDRSbEZWUmtaUE1qbERVVlZPU1V4Rk1VSlJWVEJ6VVRCR1FsRjVlRkJSVlVaUVRFVk9RbEZWVFRkYU1FcENVVEp3UTB4RlRrSlJWVTAzV1ZWR1JGSnBlRVpSVlVaR1R6SmtRMUZWVGtWTVJXUkNVVlZqYzFKVlJrSlNVM2hVVVZWR1ZFOHlaRU5SVlU1clRFVmtRbEZWWTNOU1ZVWkNVbFIwZGxGclJrUlRRM2hPVVZWR1RreEZUa0pSVlUxelZEQkdRbFI1ZUVSUlZVWkVUekprUTFGVlRuRlJhWGhFVVZWR1JFOHlSa0pSTUZselVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRUZFZWVVpHVTJsNFRsRlZSazVNUlU1Q1VWVk5jMVZWUmtKVlUzaEVVVlZHUkU4d2JFSlJNbmhEVEVWT1FsRlZUWE5TVlVaQ1VsTjRSRkZWUmtSUE1HeENVbFZ2TjA5NmN6ZFVNRVpLVW5wMFNsRlZWa2xNUlU1Q1VWVk5jMUV3UmtKUmVYaFNVVlZHVWt4RlRrSlJWVTF6VVRCR1FsRjVlRVpSVlVaR1RFVk9RbEZWVFhOVE1FWkNVM2w0UkZGVlJrUk1SMDVDVVZkTmMxSlZSa0pTVTNoU1VWVkdVa3hGVGtKUlZVMXpWbFZHUWxaVGVFWlJWVVpHVEVaR1FsRldSWE5STUVaQ1VYbDRkbEZyUmtKaU1FbHpVVEJHUWxGNWVFUlJWVVpFVHpCc1FsSlljRWRNUlU1Q1VWVk5jMUV3UmtKUmVYaE9VVlZHVGt4RlRrSlJWVTF6VVRCR1FsRjVlRVpSVlVaR1RFVk9RbEZWVFhOVE1FWkNVM2w0UkZGVlJrUk1SMFpDVVZkRmMxSlZSa0pTVkhSU1VWVk9iMUY1ZUVSUlZVWkVURVZPUWxGVlRYTlZWVVpDVlZONFJGRlZSa1JNUms1Q1VWWk5jMUV3UmtKUmVYaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjZkRnBSVlU0MlVXbDRTbEZWUmtwTVJrNUNVVlpOYzFJd1JrSlNlWGhFVVZWR1JFeEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVZPUWxGVlRUZFhWVVpFWlVWSmMxVlZSa0pWVTNoRVVWVkdSRXhIWkVOUlZVWnVVV2w0UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoVVVWVkdWRXhGVmtKUlZWVnpWVEJHUWxWNWVFUlJWVVpFVEVWc1FsRlZhM05TVlVaQ1VsTjRSRkZWUmtSTVJVNUNVVlZOTjFWVlJrUlBWVkZ6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkVFZVWkVWRU40UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZW5SS1VWVldTVTk2Y3pkUE1EbENVMVZqTjFOVlJrWlRRM2hFVVZWR1JFeEZUa0pSVlUxelVsVkdRbEpUZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFNGRlZSa2hNUmtaQ1VWWkZjMUV3UmtKUmVYaHVVV3RHUWxvd1NYTlJNRVpDVVhwMFNsRlZUakpSZVhoRVVWVkdSRXhGVGtKUlZVMXpVbFZHUWxKVGVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRSRkZWUmtSTVJtUkNVVlpqYzFJd1JrSlNlWGhTVVZWR1VreEZUa0pSVlUwM1UxVkdSR0pGVFhOUk1FWkNVWGw0UkZGVlJrUk1SVlpDVVZWVmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVVEJHUWxGNWVGWlJWVVpXVEVWa1FsRlZZemRWVlVaRVpFVkpjMUV3UmtKUmVYaEVVVlZHUkV4RlZrSlJWVlZ6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOU01FWkNVbmw0Y2xGclJrSmhNRWx6VVRCR1FsRjZkRkpSVlU1dlVYbDRUbEZWUms1TVJVNUNVVlZOYzFWVlJrSlZVM2hFVVZWR1JFeEhaRU5SVlVadVVXbDRSRkZWUmtSUE1HeENVVEkxUkV4RlRrSlJWVTF6VVRCR1FsRjZkRXBSVlZaSFRFVXhRbEZWTUhOUk1FWkNVWGw0VWxGVlJsSk1SVTVDVVZWTk4xRlZSa1JpUlVselVUQkdRbEY1ZUVSUlZVWkVURVV4UWxGVk1ITlJNRVpDVVhsNFJGRlZSa1JQTUVaQ1VURlpjMkl3VGtKUlZ6bEVTV2wzYVZwdGJITmFVMGsyU1c1a00yUjVPWGRaVjA1eVkzazVhV0l5T1RCak0xSjVXVmhCZG1GdVRYWmFSMng2WkVNNWFsbFlTblprV0U1c1lrTTFjV041U1hOSmJrNTJaRmhLYWxwWVRrUmlNalV3V2xjMU1FbHFjR0pKYmxwb1kybENabVJJYkhkYVZ6bHRTVVF3WjJSSWJIZGFWemx0U1VaT05XSlhTblppUTBFNVVGUXdaMWhEU20xa1Z6VnFaRWRzZG1Kc2QybEpRMWx0U1VoU05XTkhWblphYVVKVVpWY3hhV0l5ZDNWaFdGSnNZMjFHTUdJelNXZFFWREE1U1VaM2FXTXpiSFJaYlRseldFTkpaMUI1UW0xa1Z6VnFaRWRzZG1KcFFXOWlNa3B4UzFOQ04wbElTbXhrU0ZaNVltbENNR1ZZUW14aU1sbG5ZakpLY1U5NVFqbEpSRzluV201V2RWa3pVbkJpTWpSblMwYzVhV0ZwYTJkbGVVSjVXbGhTTVdOdE5HZGlNa3B4U1VOWmJVbElValZqUjFaMldtbENWR1ZYTVdsaU1uZG5VRlF3T1VsR2QybGFibFoxV1ROU2NHSXlOV05KYVVGdFNtbENkbGx0YjNWWk1qbDFZek5TZVdSWFRqQmlNMGxuVUZRd09VbEdUalZpVjBwMllrTkJiVXBwUW5aWmJXOW5TVlF3T1VsR1RqVmlWMHAyWWtNMWQyTnRPVEJpTTFJMVkwZFZaMUI1UW1OSmJrNDFZbGRLZG1KR2QybEpSRzluWkVoc2QxcFhPVzFKUnpscFlXcHpaMlpVZEdOaWJIaDFaRzFHZVVsR09XcGpiVlpvWkVkV1JHSkhSbnBqZVVFNVNVZGFNV0p0VGpCaFZ6bDFTVU5uY0VsSWMyZGFibFoxV1ROU2NHSXlOR2RhUjFadFlWYzFiRlZJU25aalIxWjVaRWRzYkdONWFEQlpXRXB1V2xoUmMwbElRbmxpTTBKNlMxTkNOMGxIV25aamFVRnZaRzFHZVVsSGEyZFFVMEYzVDNsQ2NFbEVkMmRqU0VwMlkwaE5kV0pIVm5WYU0xSnZUM2xDY0V0NWMzQkpTSE5uWkcxR2VVbEhVbXhqTWs1NVlWaENNR0l6U1dkUVUwSjNZMjA1ZDJNeGRIQllWSE5uV2tkV2Vsa3pTbkJqU0ZKMlkyazFiR0p1Vm5SYVdFcG9XVzE0YkVsRU1HZGFSMVo2V1ROS2NHTklVblpqYVRWc1ltNVdkRnBZU21oWmJYaHNTVWg0T0VsSFdtaGlTRTVzVDNsQ2ExcFlUbXBqYld4M1pFYzVlVXh0VG5aaWJWcHdXak5XZVZsWFNuTmFVMEU1U1VoU2VXUlhWVGRKUjJ4dFNVTm9ZMGx1V21oaVNGWnNXRU5KWjJGWE5HZGFSMVo2V1ROS2NHTklVblpqYVd0bldrZFdlbGt6U25CalNGSjJZMmsxTTJOdGJEQlpWMHB6V2xOQk9VbElVbmxrVjFVM1NVVTVhV0Z0Vm1wa1F6VnJXbGRhY0dKdFZsRmpiVGwzV2xoS01HVlRhREJaV0VwdVdsaFJjMGxIVW14ak1rNTVZVmhDTUdJelNYVmhNbFkxVEVOQ2ExcFlUbXBqYld4M1pFYzVlVXRVYzJkbVUwSTVTVWhLYkdSSVZubGlhVUp0WkZjMWFtUkhiSFppYVVGdlVUSTVkV016VW5sa1YwNHdZak5KYzBsSVFubGlNMUoyVlVoS2RtTklUWE5KU0U0d1dWaFNjRmt4UW5saU0wSjZTMU5DTjBsSGJHMUpRMmgzWTIwNU1HSXhRbmxpTTBKNlMxTkNhMXBYV25CaWJWWlJZMjA1ZDFwWVNqQmhWMVo2UzBWT2RtSnVUakJqYmxacVpFYzVlVXh1UW5saU0xSjJaRWhzZDFwVGQyZGpTRXAyWkVjNVVXTnRPWGRqZVdzM1NVZHNiVWxEYUhwa1IwWXdZVmRPVVdOdE9YZGplV3RuV2tkV2JXRlhOV3hWU0VwMlkwZFdlV1JIYkd4amVXaEVZakkxZW1SSVNqRlpNMUoyWTJsM1oyTXpVbWhrUjJ4cVZVaEtkbU5JVFhCUGVVSjVXbGhTTVdOdE5HZFJNamwxWXpOU2VXUlhUakJpTTBrM1NVZ3dOMGxJTUc5TFZIUmpZbXg0ZFZwdVZuVlpNMUp3WWpJMFoxZ3lUbk5aV0U1NlVUSkdjMkpGVG05YVYwNXlTMGRzZFdNelVtaGliVTVzVEVOQ1JHSXlOWHBrU0VveFdUTlNkbU5wYTJkbGVVSndXbWxCYjBsVGFIQmliazR3V1ZjMWFscFRRbkJpYms0d1dWYzFhbHBYT1cxSlJVNTJZbTVPTUdOdVZtcGtSemw1UzFOcloyVjVRakJoU0VwMlpIbENkVnBZWTJkV1NHeDNXbFZXZVdOdE9YbExSbmRwVVRKR2RXSnRPVEJKUjA1b1lrZDNaMWxUUW1waVIwWjZZM2xDYUdONVFtaEpSMW94WW0xT01HRlhPWFZZUTBsd1QzbENPVWxJTVdOaWJIaDFUSGx2Y1ZoSE5HZExhVUYwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURlo0ZFVsRGIyZFJiVGwyWkVoT01HTnRSbmRKUTJneVRrTTBkMHhxUVhSWlYzaDNZVWRGZFU1cGF6WkpSMDVvWTIwNU1XTXlWbk5NYlhCNldFYzBaMHRwUWsxaFYwNXNZbTVPYkZwRFFqRmliVkpzWTJsQ1RsTldVV2RMUjJnd1pFaENlazlwT0haYU1td3dZVWhXYVV4dFRuWmlVemt3WkRKS2Vrd3lTblppTTFKNlpFaEthR05ET1dsaVJ6bHBUREl4YUdNelVteGphVGxOVTFWT1JsUnNUa1pMVm5oMVNVTnZaMHhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNV05pYVVGeFRERjRkVmhITlRKWldFbG5VVEpHZVdJelZucGFWM2RuVUZOQ2JXUlhOV3BrUjJ4MlltbEJiMHBEYTJkbE1YaDFXRWMwWjBsRE9IRkxiSGgxU1VOQlowdHBRWFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1XTmlhVUZuU1VOdloxRXlPWFZqTTFKb1ltNVNlbGhITkdkSlEwRnhTVU13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGWjRkVWxEUVdkTGFUbGpZbXg0ZFVsRFFqSlpXRWxuVkd0R1RsSlRRVGxKUTJScVdWaEtkbVJZVG14aVEyTTNXRWMwWjBsSVdtaGphVUpYVWxaS1ZGTlZPVTlKUkRCblNucFJkVTFETkhkTVYwWnpZMGRvYUV4cVdXNVBNWGgxU1VOQ01sbFlTV2RTUlVaVlVWWTVURkpXYTJkUVUwRnVXVzVOZFZreVJubGlNMVo2V2xkM2JrOHhlSFZKUTBJeVdWaEpaMUpXV2taVWJGSm1VekJXV2tsRU1HZEtlVFJ1U1VOeloxSkZSbFZSVmpsTVVsWnJOMWhITkdkSlNGcG9ZMmxDUlZGV1VrSllNRVpSVTFZNVRGSldhMmRRVTBGdVRHMVNhR1JIUlhSWldFSndTbnAwWTJKcFFXZGtiVVo1U1VWd1VsWlZWbE5YVmpsUFZERTVSRlF3TlVkVVJXeEVWa05CT1VsRFVYVmFiVFZpVkd0R1RsSldNRGRZUnpSblNVaGFhR05wUWxWVmEwWlBWVEJzVlZOVk9VOVlNRkpXVld0R1ZWTlZPVTlKUkRCblRtcEJkMDh4ZUhWSlEwSXlXVmhKWjFGV1NsTlVNV1JtVkVWV1IxWkdPVXhTVm14RVZEQlNSa2xFTUdkTmVtTTNTVU00ZGtsRmRHeGxWMHAyV1ZoS2ExSllXbXhpYmxGMVpESm9jRmt5WjJka2JVWnpaRmRWWjFwdE9YbEpSM2hzV201UloxbFlTbmxpTTJObllUSldOVmhITkdkSlNGcG9ZMmxDUWxWc1NsQldNVGxUVTFWa1NWWkdPVXhTVm14RVZEQlNSa2xFTUdkTmVtczNTVU00ZGtsRmRHeGxWMHAyV1ZoS2ExSllXbXhpYmxGMVpESm9jRmt5WjJka2JVWnpaRmRWWjFwdE9YbEpTRXB3V2pKb01FbEhSbmxqYlRrelNVZDBiR1ZXZUhWWVJ6Um5TVWhhYUdOcFFrVmFWMXBvWkZkNE1FbEVNR2RsTVhoMVNVTkJaMGxIYkhWa1IxWjVaRzFHYzA5cFFURk5SRUYzVEVaNGRVbERRV2RKUjNSc1pWZEtkbGxZU210UGFVSXdZMjVXYkV4R2VIVkpRMEZuU1VoT2MyRlhVbXhQYVVKdFdWZDRlbHBUZUdOaWFVRm5TVU5DZDFsWVZucGFWRzluU2pKb2RtUnRWbmxLZVhoalltbEJaMGxEUWpOamJVWjNUMmxDTUdOdVZteFlSelJuU1Vnd04xaEhOV05pYVVGblpHMUdlVWxGVW14YWJVWXhZa2hTVldWWVFteEpSREJuWlRGNGRVbERRV2RKUjJ4MVpFZFdlV1J0Um5OUGFVRnVTMGMxTVdKWFNteGpibmhwWWpJNWMxcFhSblZMVTJOeldFYzBaMGxEUVdkaE1sWTFXVzA1YUdOdFVUWkpRMlJwWWpJNWMxcFhSblZLZVhoalltbEJaMGxEUW5waVIyeHJXbFJ2WjBwNWFHbGlNamx6V2xkR2RXWklUakJqYld4MVdubHJia3hHZUhWSlEwRm5TVWhDYUdSWVRteFBhVUZ1UzBoT01HTnRiSFZhTTNocFlqSTVjMXBYUm5WTFUyTnpXRWMwWjBsRFFXZGtNMHBvWTBSdlowb3lTblppTW5oc1dWYzBibGhITkdkSlNEQTNXRWMxWTJKcFFXZGtiVVo1U1VWU2NHTnRWbXBrUjJ4MlltbEJPVWxJZEdOaWFVRm5TVU5DVDFKV2FGVlBhVUZ1WW0xV05HUkRZM05ZUnpSblNVTkJaMVZHU2taV2FtOW5Tak5DZVZwWVdXNU1SbmgxU1VOQlowbEZlRVpTYkZFMlNVTmtjMXBYV2pCS2VYaGpZbWxCWjBsRFFsTlRWV1JKVmtSdlowb3pTbkJhTW1nd1NqRjRkVWxEUWpsUE1YaDFXRWMwWjBsSVdtaGphVUpHWkcxV2RXUkRRVGxKU0hSalltbEJaMGxEUWxSVVJXeEZVbFJ2WjBvelRuTmhWMUpzU25sQmNrbEZWbGRTVlRWVldEQjBSbGRUZUdOaWFVRm5TVU5DVkZSRmJFVlBhVUZ1WXpKNGNGcERZMmRMZVVKR1ZtdFdUMVpHT1V4U1ZtdHpXRWMwWjBsRFFXZFRNRlphVWtVNVdGUnFiMmRLTW5Sc1pWZFNkbVF5Tkc1SlEzTm5VbFphUmxSc1VtWlRNRlphVEVaNGRVbERRV2RKUlRGUVZsWk9SbEpWTlZWU1ZrazJTVU5rZEdJelZucGFWMVoxWkVkV2VVcDVRWEpKUlZaWFVsVTFWVmd3ZEVaWFUzaGpZbWxCWjBsRFFrNVVNVlpVVWxWNFJsRldXa1pQYVVGdVlsYzVNV015Vm5OYVYwWXlXbE5qWjB0NVFrWldhMVpQVmtZNVRGSldhM05ZUnpSblNVTkJaMVJGT1VKU1JqbEZVVlpTUWxnd1JsRlRWRzluU2pKNGRsbFhVVzVKUTNOblVsWmFSbFJzVW1aVE1GWmFTVU56WjFKRlJsVlJWamxDVlVWc1psTXdWbHBNUm5oMVNVTkJaMGxGVGsxVFZVNU1XREJTUWxaRlJtWlJWa0pLVDJsQmJsa3llSEJaTW5OdVNVTnpaMUpXV2taVWJGSm1VekJXV2tsRGMyZFNSVVpWVVZZNVFsVkZiR1pUTUZaYVdFYzBaMGxJTURkWVJ6VmpZbWxCWjJSdFJubEpSVTV6V1ZoT2VsUnRSblJhVTBFNVNVaDBZMkpwUVdkSlEwSkVVVlpLVUZaV1RrWlVSRzluU2pKT2FHTnRPVEZqTWxaelNubDRZMkpwUVdkSlEwSkNVVEZTU2xaclZUWkpRMlJvV1ROU2NHUnRWVzVNUm5oMVNVTkJaMGxHVGsxVFZWSkdUMmxCYm1NeWVIQmFSMVZ1VEVaNGRVbERRV2RKUmtwS1VqQm9WVTlwUVc1Wk1rWjVZak5XZWxwWGQzUmhXRkpzWWxNeGVXRlhaRzlrUTJOeldFYzBaMGxEUVdkVVJWWkhWa1J2WjBveVRtaGpiVGt4WXpKV2MweFhiREJhVnpCMFlrZFdiV1JEWTNOWVJ6Um5TVU5CWjFSclZsbFdSRzluU2pKT2FHTnRPVEZqTWxaelRGZHNNRnBYTUhSaWJWWTBaRU5qYzFoSE5HZEpRMEZuVlVaS1JsWnFiMmRLTWs1b1kyMDVNV015Vm5OTVYyd3dXbGN3ZEdOSVNteGthV056V0VjMFowbERRV2RUVmxKR1ZGUnZaMG95VG1oamJUa3hZekpXYzB4WGJEQmFWekJ1V0VjMFowbElNRGRZUnpWalltbEJaMlJ0Um5sSlJrNXNZa2RXYW1SSE9YbEpSREJuWlRGNGRVbERRV2RKUlVaRVZrVnNWMUpVYjJkS2VUVm9XVE5TY0dSdFZXNU1SbmgxU1VOQlowbEZSa1JXUld4WFVsWTVTbFpGVms1UGFVRnVURzFHYW1SSGJESmFVelZxV1ZoS2RtUllUbXhpUXpGd1pFZFdkRXA1ZUdOaWFVRm5TVU5DU2xaRlZrNVBhVUZ1VEcxT2FHTnRPVEZqTWxaelRGZHNNRnBYTUc1TVJuaDFTVU5CWjBsRk5VWlhSbEptVlVaS1JsWnFiMmRLZVRWcVdWaEtkbVJZVG14aVF6RndaRWRXZEV4WE5XeGxTRkZ6U1VNMWFsbFlTblprV0U1c1lrTXhjR1JIVm5STVdFSjVXbGhaYmt4R2VIVkpRMEZuU1VWc1QxSkZiRVJSVmxKUVZXeE5Oa2xEWTNWWk1rWjVZak5XZWxwWGQzUmhWelZyWVZkT2FHUkhPWGxqZVdOeldFYzBaMGxEUVdkU1JVWlZVVlk1VkZSRmJFVlNWRzluU2pGMGExbFlVbWhNV0U1ellWZFNiRmhUZDJkWE1sSm9aRWRGZEdNeWVIQmFSMVYwWkVjNVpFcDVlR05pYVVGblNVTkNSVkZXVWtKWU1VcEtVa1ZWTmtsRFpHSmFSMFl3V1ZNeGVXRlhVbXhRVm5kcFdUSkdlV0l6Vm5wYVYzaGpTV3d3YmxoSE5HZEpTREEzV0VjMVkySnBRV2RNZVc5eFdFYzBaMGxEUVhGSlF6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVm5oMVNVTkJaMHRwUWtSaVIwWjZZM2xDUlZwWFduQmliV3d3WVZjNWRWaEhOR2RKUTBGeFNVTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZaNGRVbERRV2RMYVRsallteDRkVWxEUWpKWldFbG5VVEpHZVdJelZucGFWM2RuVUZOQ2JXUlhOV3BrUjJ4MlltbEJiMHRUUWpkWVJ6Um5TVU5CWjFwdVZuVlpNMUp3WWpJMFoxRXlSbmxpTTFaNldsZDNiMXBYZUd4aVYxWjFaRU4zWjFreU9YVmFiV3h1UzFOQ04xaEhOR2RKUTBGblNVTkNabGt5ZUdoak0wNUVXVmQ0YzFFeWFHeFpNbk52WkVkb2NHTjVkMmRSTWtaNVlqTldlbHBYZDNCUE1YaDFXRWMwWjBsRFFXZEpRMEl3WVVkc2VreHNPWEJrUjFaMFkzbEJPVWxITlRGaVIzYzNXRWMwWjBsRFFXZEpRMEl3WVVkc2VreHNPWEJpYmxKc1kyNWFhR0pEUVRsSlJ6VXhZa2QzTjFoSE5HZEpRMEZuU1VOQ01HRkhiSHBNYkRsb1dUTlNjR1J0VmtaaVIxWjBXbGMxTUVsRU1HZGlibFp6WWtSMFkySnNlSFZKUTBGblNVTkJaMlJIYUhCamVUVm1ZVmhPVVZsWVZucGFWMUZuVUZOQ2JWbFhlSHBhVkhSalltbEJaMGxEUVdkSlNGSnZZVmhOZFZneWJIcFZNbmh3V2tkc2RWcDVRVGxKUjFwb1lraE9iRTh4ZUhWWVJ6Um5TVU5CWjBsRFFqQmhSMng2VEd3NWFtSXlOVzFoVjJOblVGTkNNR0ZIYkhwTWJEbHVXbGhTUkdJeU5XMWhWMk52V1RJNWRWcHRiRzVMVkhSalltbEJaMGxEUVdkSlNGSnZZVmhOZFZneVZuTmFWekZzWW01UloxQlRRV3RMUjFaeldsY3hiR0p1VVhCWGVrSmtUekY0ZFVsRFFXZEpRMEZuWkVkb2NHTjVOV1poVnpWcllWZE9hR1JIT1hsak1GWnpXbGN4YkdKdVVXZFFVMEZyUzBoU2IyRllUWFZZTWxaeldsY3hiR0p1VVhCTWJWcHdZbTFSYjFVeVZuTmFWMDR3WWpOSmRWTlZOVVZUVlU1Q1ZrVTVVMVY1YkdKTlJqQTNXRWMxWTJKcFFXZEpRMEZuU1VoU2IyRllUWFZZTWtacldrVldNbHBYTlRCVVIyeDZaRWRXZFZwWVNucExRMnMzV0VjMFowbERRV2RtVm5oMVdFYzBaMGxEUVdkTWVUaG5XakpXTUdSSFZubGpNWGgxV0VjMFowbERRV2RNZVRoblkwaFdhV0pIYkdwWVJ6VmpZbWxCWjBsRFFrUlpXRXAyWkZoT2JHSkROWGRqYlRrd1lqTlNOV05IVlhWaWJWWTBaRU5CT1VsSFdqRmliVTR3WVZjNWRVbEhOV3hsU0ZGdlMxTkNOMWhITkdkSlEwRm5TVU5DY0ZwcFFXOWtSMmh3WTNrMVptRllUbFJpUjJ4cllWYzFia3RUUWpkWVJ6Um5TVU5CWjBsRFFXZEpTRkp2WTIwNU0wbEhOV3hrZVVKR1kyNUtkbU5wWjI1Uk1rWjVZak5XZWxwWGQyZGhXRTFuWXpKNGNGcEhiSFZhZVdOd1R6RjRkVWxEUVdkSlEwRm5abFo0ZFVsRFFXZEpRMEZuWkVkb2NHTjVOV1pqTW5od1drZFZiMUpIYkhsYVYwNHdZVmM1ZFV4ck5VWlhSbEZ3VHpGNGRVbERRV2RKU0RBM1dFYzFZMkpwUVdkSlEwSkVXVmhLZG1SWVRteGlRelYzWTIwNU1HSXpValZqUjFWMVltMVdOR1JHWkc5YVZ6VlhZVmhPY0ZsdGVHeEpSREJuV201V2RWa3pVbkJpTWpSblltMVdOR1JHWkc5YVZ6VlhZVmhPY0ZsdGVHeExRMnRuWlRGNGRVbERRV2RKUTBGblRIazRaMUpIT1hWS00xRm5XVEpHYzJKRFFuVmFXR2d3U1Voa2IxcFhOR2RrUjJoc1NVaENhRm95VldkaFdFNTFTak5SWjJSdGJIcGhWMHB6V2xaNGRVbERRV2RKUTBGbllWZFpaMHREUm10aU1rNHhZbGRXZFdSRE5XOWhWMUpyV2xjMGNFbElkR05pYVVGblNVTkJaMGxEUVdka1IyaHdZM2sxZFZwWWFEQkxRMnMzV0VjMFowbERRV2RKUTBJNVdFYzBaMGxEUVdkbVZIUmpZbXg0ZFVsRFFXZEpSVTVvWTIwNU1XTXlWbk5NYmtKNVlqTlNkbVJJYkhkYVV6VjNZMjFXTWtsRU1HZGFibFoxV1ROU2NHSXlOR2RqU0Vwc1pHbG5jRWxJZEdOaWFVRm5TVU5CWjBsSGJHMUpRMmd3WVVkc2VreHNPWEJqTVU1ellWZFNjR0p0WTNCSlNIUmpZbWxCWjBsRFFXZEpRMEZuWkVkb2VXSXpZMmRpYlZZelNVVldlV050T1hsTFEyUkVXVmhLZG1SWVRteGlRMEp3WTNsQ2VtSkhiR3RoVnpWdVNubHJOMWhITkdkSlEwRm5TVU5DT1ZoSE5HZEpRMEZuU1VOQ01HRkhiSHBNYkRsNllrZHNhMXBUYUVWaFdFcHNXVE5TY0dJeU5IVlZSa3BHVm10c1VGWldUWEJQTVhoMVNVTkJaMGxJTURkWVJ6VmpZbWxCWjBsRFFrUlpXRXAyWkZoT2JHSkROWGRqYlRrd1lqTlNOV05IVlhWalIwWXhZekpWWjFCVFFtMWtWelZxWkVkc2RtSnBRbmRaV0ZaNldsTm9iR1J0Vm5Wa1EydG5aVEY0ZFVsRFFXZEpRMEZuWVZkWlowdERSbXhrYlZaMVpFTnJaMlV4ZUhWSlEwRm5TVU5CWjBsRFFqQmhSMng2VEd3NWNHTXhRbWhrV0U1c1drTkJPVWxJVW5sa1YxVTNXRWMwWjBsRFFXZEpRMEk1V0VjMVkySnBRV2RKUTBGblNVZHNiVWxEWjJ0TFNGSnZZVmhOZFZneVZuTmFWekZzWW01UmNFeHRXbkJpYlZGdlZUSldjMXBYVGpCaU0wbDFWR3RXV1ZaR09WRlZhMVpYUzFaemQxaFRRVzFLYVVKV1pFZHNjMHh1VGpGalNFSjJZMjVTZWxaSVNtaGliazV3WkVkc2RtSnJWblZhUTJkd1MxTkNOMWhITkdkSlEwRm5TVU5CWjBsR1ZqQmhWM2QxWkVoS2NGb3laR3hqYkZKNVdWYzFlbUZZVW5CaU1qVkdZbTFSYjJSSGFIQmplVFZtV2xkNGJHSlhWblZrUTJzM1dFYzBaMGxEUVdkSlEwRm5TVWhTYjJGWVRYVlpNMnhxWWtkVmIyUklTakZhVTJzM1dFYzBaMGxEUVdkSlEwSTVXRWMxWTJKcFFXZEpRMEZuU1VkT2MxcFhSbmxUVnpVd1dsaEtNbGxYZDI5a1IyaHdZM2sxWm1GWE5UQmFXRW95V1ZkM2NFOHhlSFZKUTBGblNVTkJaMlJIYUhCamVUVm1ZVmMxTUZwWVNqSlpWM2RuVUZOQ2RXUlhlSE5QTVhoMVNVTkJaMGxJTURkWVJ6VmpZbWxCWjBsRFFrUlpXRXAyWkZoT2JHSkROWGRqYlRrd1lqTlNOV05IVlhWWk0yeHFZa2RWWjFCVFFtMWtWelZxWkVkc2RtSnBRbXBsVjA1eldsTm9iR1J0Vm5Wa1EydG5aVEY0ZFVsRFFXZEpRMEZuWVZkWlowdERSbXhrYlZaMVpFTnJaMlV4ZUhWSlEwRm5TVU5CWjBsRFFqQmhSMng2VEd3NWNHTXhRbWhrV0U1c1drTkJPVWxIV21oaVNFNXNUekY0ZFVsRFFXZEpRMEZuWmxaNGRWaEhOR2RKUTBGblNVTkNjRnBwUVc5a1IyaHdZM2sxWm1GWE5UQmFXRW95V1ZkM2NFbElkR05pYVVGblNVTkJaMGxEUVdkWk1uaHNXVmhLU21KdVVteGpibHBvWWtOb01HRkhiSHBNYkRsd1ltNVNiR051V21oaVEyczNXRWMwWjBsRFFXZEpRMEZuU1VoU2IyRllUWFZZTW14MVpFZFdlV1J0Um5OSlJEQm5ZbTVXYzJKRWRHTmlhVUZuU1VOQlowbElNV05pYkhoMVNVTkJaMGxEUVdkaFYxbG5TMGhTYjJGWVRYVllNazUyWW0xYWNGcDVOWEJpYmxKc1kyNWFhR0pEUVcxS2FVRm9aRWRvY0dONU5XWmhXRTVSV1ZoV2VscFhVWEJKU0hSalltbEJaMGxEUVdkSlEwRm5aRWRvY0dONU5XWmhWelV3V2xoS01sbFhkMmRRVTBKNldsaFNTbUp1VW14amJscG9Za05uYjFwSE9XcGtWekZzWW01UmRXUnRiSHBoVjBwd1lrZHNNR1ZXVGpCWldGSnNTVVE0WjJSSGFIQmplVFYxV2xob01GWXlhR3hpYkZwd1l6SnNhV0pIVldkUGFVSXdZVWRzZWt4dE5XeGxTRkZ3VEcxS2NHSnRVVzlrUjJod1kzbHJjMGxJVW05aFdFMTFXREpPZG1KdFduQmFlVFZ3WW01U2JHTnVXbWhpUTJzM1dFYzBaMGxEUVdkSlEwSTVXRWMwWjBsRFFXZG1WSFJqWW14NGRVbERRV2RKUlU1b1kyMDVNV015Vm5OTWJrSjVZak5TZG1SSWJIZGFVelV3WW5sQk9VbEhXakZpYlU0d1lWYzVkVWxJVW5aTFIyeDFXa2RXTkV0VFFqZFlSelJuU1VOQlowbERRakpaV0VsbldETlNiMkZZVFdkUVUwSXdZVWRzZWs4eGVIVllSelJuU1VOQlowbERRakJoUjJ4NlRHdzVhRmt6VW5Ca2JWWkdZa2RXZEZwWE5UQkpSREJuU2tOb01HRkhiSHBNYkRsc1lrZFdkRnBYTlRCTFV6VnRZVmMxYTB0R1RteGlSMVpxWkVjNWVVeHJSa1JXUld4WFVsWTVTbFpGVms1TFZuTjNXRlIwWTJKc2VIVkpRMEZuU1VOQloyUnRSbmxKUjBacVpFZHNNbHBWYkhWYVIxWTBTVVF3WjJSSGFIQmplVFZtV2pKV01GTllVbXhpVld4MVdrZFdORXRJVW05aFdFMTFXREpHYW1SSGJESmFWVlp6V2xjeGJHSnVVWEJQTVhoMVdFYzBaMGxEUVdkSlEwSndXbWxCYjJGWE5XdGFXR2RuVUdsQ01HRkhiSHBNYkRsd1pFZFdkR041TlhOYVZ6VnVaRWRuWjB4VFFYaEpTSGc0U1Vkc2RWcEhWalJKUkhkblRVTnJaMlV4ZUhWSlEwRm5TVU5CWjBsRFFubGFXRkl4WTIwME4xaEhOR2RKUTBGblNVTkNPVmhITldOaWFVRm5TVU5CWjBsSGJHMUpRMmd3WVVkc2VreHNPWEJqTVU1ellWZFNjR0p0WTNCSlNIUmpZbWxCWjBsRFFXZEpRMEZuU2tOb01HRkhiSHBNYkRsc1lrZFdkRnBYTlRCTFV6VjJZbTFWYjFKWVdteGlibEYxVlRCNFNsSkRkMmRhYmxaMVdUTlNjR0l5TkdkTFEydG5aVEY0ZFVsRFFXZEpRMEZuU1VOQlowbElTbXhrU0ZaNVltbENabVJIYUhCamVUVXdZbmxvY0dKdFVteGxRMnMzV0VjMFowbERRV2RKUTBGblNVZ3djRTh4ZUhWSlEwRm5TVU5CWjBsRFFubGFXRkl4WTIwME4xaEhOR2RKUTBGblNVTkNPVmhITldOaWFVRm5TVU5CWjBsSGJHMUpRMmhvV1ROU2NHUnRWa3BpYlZKc1pVTkJPVkJVTUdkaFZ6VnJXbGhuY0VsSWRHTmlhVUZuU1VOQlowbERRV2RrUjJod1kzazFkMWxZVm5wYVUyZHdUekY0ZFVsRFFXZEpRMEZuU1VOQ01HRkhiSHBNYlU0MVdUSjRiRXREYXpkWVJ6Um5TVU5CWjBsRFFXZEpTRXBzWkVoV2VXSnFkR05pYVVGblNVTkJaMGxJTVdOaWJIaDFTVU5CWjBsRFFXZGtiVVo1U1VkU2NHTnRWbXBrUjJ4MlltbEJPVWxIYkhWYVIxWTBTVVEwWjFsWFRqQmhXRnBzVTFjMWExcFlaMmRRZVVKRllWaEtiRmt6VW5CaU1qUjFWR3RXV1ZaRFFUWkpSVkp3WTIxV2FtUkhiSFppYVRWUlZXdFdWMU5WT1ZaVmVuUmpZbXg0ZFVsRFFXZEpRMEZuWkVkb2NHTjVOV1pqTW5od1drZFZiMXBIYkhsYVYwNHdZVmM1ZFV4RFFqQmhSMng2VEd3NWNHUkhWblJqTVhSd1ltMVNiR1ZHTUhCUE1YaDFTVU5CWjBsSU1EZFlSelZqWW1sQlowbERRa1JaV0VwMlpGaE9iR0pETlhkamJUa3dZak5TTldOSFZYVmFSMng2WTBjNWVscFRRVGxKUjFveFltMU9NR0ZYT1hWSlIxSndZek5DZG1NeVZXOUxVMEkzV0VjMFowbERRV2RKUTBGclMwaFNiMkZZVFhWWU1sWnpXbGN4YkdKdVVYQk1iVGx0V21sb1JsWnJWazlXUmpsTVVsWnJjRTh4ZUhWSlEwRm5TVU5CWjBwRE5YbGFWekYyWkcxV1JWbFlVbWhMU0ZKdllWaE5kVmd5Vm5OYVZ6RnNZbTVSYzBsRlVrSldSVVptVXpCV1drdFVkR05pYkhoMVNVTkJaMGxEUVdka1IyaHdZM2sxWm1GWVVteGlXRTFuVUZOQ2RXUlhlSE5QTVhoMVNVTkJaMGxEUVdka1IyaHdZM2sxWmxreU9YVmFiV3h1U1VRd1oySnVWbk5pUkhSalltbEJaMGxEUVdkSlNGSnZZVmhOZFZneVZuTmFWekZzWW01UloxQlRRblZrVjNoelR6RjRkVWxEUVdkSlEwRm5aRWRvY0dONU5XWmhWelV3V2xoS01sbFhkMmRRVTBKMVpGZDRjMDh4ZUhWSlEwRm5TVU5CWjJSSGFIQmplVFZtWVZoT1VWbFlWbnBhVjFGblVGTkNkV1JYZUhOUE1YaDFTVU5CWjBsRFFXZGtSMmh3WTNrMVptRllUbFJpUjJ4cllWYzFia2xFTUdkaWJsWnpZa1IwWTJKcFFXZEpRMEZuU1VoU2IyRllUWFZZTWtacVpFZHNNbHBWVm5OYVZ6RnNZbTVSWjFCVFFuVmtWM2h6VHpGNGRVbERRV2RKUTBGblpFZG9jR041TldaaFZ6VnJZVmRPYUdSSE9YbGpNRlp6V2xjeGJHSnVVV2RRVTBKMVpGZDRjMDh4ZUhWSlEwRm5TVWd3TjFoSE5XTmlhVUZuU1VOQmRreDVRbmRqYld3eVdWaFNiRmhITldOaWFVRm5TVU5DUkZsWVNuWmtXRTVzWWtNMWQyTnRPVEJpTTFJMVkwZFZkVmd5Wkd4a1JVNTJZbTFhY0ZwNVFUbEpSMW94WW0xT01HRlhPWFZKUmpsdVdsaFNSR0l5TlcxaFYyTnZXVEk1ZFZwdGJHNUxVMEkzV0VjMFowbERRV2RKUTBKcVlqSTFiV0ZYWTJkUVUwRnJURzFXTkdSSFZuVmFRMmczWmxOM1oxSkhWbTFaV0ZaelpFTjNaMWt5T1hWYWJXeHVTMVIwWTJKcFFXZEpRMEZuU1VaV01HRlhkM1ZrU0d4M1dsVk9iMXBYVG5KUk1qbDFXbTFzYmt0Rk5VSlVWVlZ6U1VkT2RtSnRXbkJhZVhkblVrZFdiVmxZVm5Oa1JsSTFZMGRWY0U4eGVIVkpRMEZuU1VOQloyTnRWakJrV0VwMVNVZE9kbUp0V25CYWVuUmpZbWxCWjBsRFFqbFBNWGgxV0VjMFowbERRV2RSTWtaNVlqTldlbHBYZDNWalNFcDJaRWM1TUdWWVFteE1iRGxvV2tkU1JtUnRWblZrUlhod1l6TlNiR0p0Vm5samVVRTVTVWRhTVdKdFRqQmhWemwxU1VZNWFGcEhVa1prYlZaMVpFVjRjR016VW14aWJWWjVZM2xuY0VsSWRHTmlhVUZuU1VOQlowbElXbWhqYVVKbVpFZG9jR042U1dkUVUwSXdZVWRzZWs4eGVIVllSelJuU1VOQlowbERRbkJhYVVGdlpFZG9jR041TldaWk1qbDFXbTFzYmt4dGRHeGxWMHAyV1ZoS2EwdFRRamRZUnpSblNVTkJaMGxEUVdkSlExRnZaRWRvY0dONU5XWmFWM2hzWWxkV2RXUkRhM1ZpTWpSdlVsaGFiR0p1VVhWVE1GWmFVa1U1V0ZScGQyZGFibFoxV1ROU2NHSXlOR2RMUjFZeVdsYzFNRXRUUWpkWVJ6Um5TVU5CWjBsRFFXZEpRMEZuWTIxV01HUllTblZKUmprd1lVZHNlazFwTldaaE1sWTFXa2M1TTJKcGFHeGtiVloxWkVOck4xaEhOR2RKUTBGblNVTkJaMGxJTUhCUE1YaDFTVU5CWjBsRFFXZG1WbmgxV0VjMFowbERRV2RKUTBKd1dtbEJiMlJIYUhCamVUVm1XVEk1ZFZwdGJHNU1ia0pvWkZoT2JFbEVNRGxRVTBGdVlVYzVNbHBZU1c1SlExbHRTVU5GYjBveU9YVmtSemt4V1RKb2VtUkhSbmxrUTJObllWYzBaMXBIT1dwa1Z6RnNZbTVSZFZwSE9XcGtWekZzWW01U1JtSkhWblJhVnpVd1MxTnJaMlV4ZUhWSlEwRm5TVU5CWjBsRFFXdExTRkp2WVZoTmRWZ3lWbk5hVnpGc1ltNVJjRXh0T1hWTFJWWXlXbGMxTUV4ck1WQldWazVHVWxVMVZWSldTWE5KUjFveFltMU9NR0ZYT1hWSlEyaHNaRzFXZFdSRGEyZGxNWGgxU1VOQlowbERRV2RKUTBGblNVaEtiR1JJVm5saWFVSm1aRWRvY0dONlNYVmpSMFl4WXpKVmIxcFlXbXhpYmxGd1R6RjRkVWxEUVdkSlEwRm5TVU5DT1V0VE5YWmlhV2hHWkcxV2RXUkROVTVVTVZaVVVsVjRSbEZXV2taTVEwSnRaRmMxYW1SSGJIWmlhVUZ2V2xoYWJHSnVVWEJKU0hSalltbEJaMGxEUVdkSlEwRm5TVU5DZVZwWVVqRmpiVFJuV0ROU2IyRllUWGxNYlU0MVdUSjRiRXRIVmpKYVZ6VXdTMVIwWTJKcFFXZEpRMEZuU1VOQloyWlRhemRZUnpSblNVTkJaMGxEUWpsWVJ6Um5TVU5CWjJaVWRHTmliSGgxU1VOQlowbEZUbWhqYlRreFl6SldjMHh1UW5saU0xSjJaRWhzZDFwVE5XWmhNbFkxV2tjNU0ySnBRVGxKUjFveFltMU9NR0ZYT1hWSlJqbHlXbGhzYTJJelpIVkxSMVl5V2xjMU1FdFRRamRZUnpSblNVTkJaMGxEUW5CYWFVRnZUREpzZFdOSVZqQm1TRkpzWlVoU2FHTnRWbWhNTW10MVpFZFdlbVJEYUd4a2JWWjFaRU0xTUZsWVNtNWFXRkYxWkVkR2JsUnRSblJhVTJ0d1NVaDBZMkpwUVdkSlEwRm5TVU5CWjJOdFZqQmtXRXAxVHpGNGRVbERRV2RKUTBGblpsWjRkVmhITkdkSlEwRm5TVU5DZW1ReWJEQlpNbWRuUzBkV01scFhOVEJNYm1SdllWZE9iMHRUUWpkWVJ6Um5TVU5CWjBsRFFXZEpSMDVvWXpKVloxRldTbE5VTVdSbVZFVldSMVpHT1V4U1ZteEVWREJTUms5c2VIVkpRMEZuU1VOQlowbERRV2RKUjFZeVdsYzFNRXh1UW5sYVdGcHNZbTVTUlZwWFdtaGtWM2d3UzBOck4xaEhOR2RKUTBGblNVTkJaMGxEUVdka1IyaHdZM2sxZDJOdFZqSkxRMnMzV0VjMFowbERRV2RKUTBGblNVTkJaMWx1U214WlYzTTNXRWMwWjBsRFFXZEpRMEZuU1VkT2FHTXlWV2RSVmtwVFZERmtabFZyYkVoVFJsSm1VekJXV2xFd09VVlNWSEJqWW1sQlowbERRV2RKUTBGblNVTkNiR1J0Vm5Wa1F6VjNZMjFXTWxwWE5UQlNSMVp0V1ZoV2MyUkRaM0JQTVhoMVNVTkJaMGxEUVdkSlEwRm5TVWhTYjJGWVRYVmliVlkwWkVObmNFOHhlSFZKUTBGblNVTkJaMGxEUVdkSlIwcDVXbGRHY2s4eGVIVkpRMEZuU1VOQlowbERRbXRhVjFwb1pGZDRNRTlzZUhWSlEwRm5TVU5CWjBsRFFXZEpTRXBzWkVoV2VXSnFkR05pYVVGblNVTkJaMGxJTVdOaWFVRm5TVU5DT1U4eGVIVllSelJuU1VOQloxRXlSbmxpTTFaNldsZDNkV05JU25aa1J6a3daVmhDYkV4c09XNWFXRkpLWkVkV2RGTlhOV3RhV0dkblVGTkNiV1JYTldwa1IyeDJZbWxDWmxveVZqQlRXRkpzWWxWc2RWcEhWalJMUjFaeldsY3hiR0p1VVhCSlNIUmpZbWxCWjBsRFFXZEpTRkp2WVZoTmRWZ3liREJhVnpGNlNVUXdaMHBETlhSWlYzUnNVVmhLZVZsWWEyOUtRMmhzWWtkV2RGcFhOVEJMVXpWM1dWaEtiR0p1VVc5TFV6VnRZVmMxYTB0R1RteGlSMVpxWkVjNWVVeHJiRlZTVlRCd1MxUjBZMkpwUVdkSlEwRm5TVWhLYkdSSVZubGlhVUl3WVVkc2VreHNPWEJrUjFaMFkzazFjR0p0VW14bFJUbHRTMGRXYzFwWE1XeGlibEZ3VHpGNGRVbERRV2RKU0RBM1dFYzFZMkpwUVdkSlEwSkVXVmhLZG1SWVRteGlRelYzWTIwNU1HSXpValZqUjFWMVdESmtiR1JGYkRCYVZ6RkRaVlZTY0dOdFZtcGtSMngyWW1sQk9VbEhXakZpYlU0d1lWYzVkVWxHT1c1YVdGSktaRWRXZEZGdWJFVmhXRXBzV1ROU2NHSXlORzlhUjJ4NVdsZE9NR0ZYT1hWTVEwSm9XVE5TY0dSdFZrWmlSMVowV2xjMU1FdFRRamRZUnpSblNVTkJaMGxEUWpKWldFbG5ZVmhPVDFwWWFEQlNSMng1V2xkT01HRlhPWFZKUkRCbldrZHNlVnBYVGpCaFZ6bDFTVVF3T1ZCVFFrVmhXRXBzV1ROU2NHSXlOSFZVYTFaWlZrUjBZMkpwUVdkSlEwRm5TVWhhYUdOcFFuQmpNVUo1V2xoYVJXRllTbXhaTTFKd1lqSTBaMUJUUW10aFdFcHNXVE5TY0dJeU5HZFFWREE1U1VWU2NHTnRWbXBrUjJ4MlltazFVVlZyVmxkVFZUbFdWWHAwWTJKcFFXZEpRMEZuU1VoYWFHTnBRbWhaTTFKd1pHMVdTbUp0VW14bFEwRTVTVWhTYjJGWVRYVllNbVJzWkVWc01GcFhNVXBpYlZKc1pVTm9hRmt6VW5Ca2JWWkdZa2RXZEZwWE5UQkxWSFJqWW1sQlowbERRV2RKU0Zwb1kybENjMWxZVGpCVFdGSnNZbFZzZFZwSFZqUkpSREJuWkVkb2NHTjVOV1poV0ZKc1lsaE5kV0pIVm5WYU0xSnZTVU13WjAxVWRHTmlhVUZuU1VOQlowbElXbWhqYVVKd1l6QmtkbUZYTlc1V1J6bFlZMjFHZDBsRU1HZGhXRTVSWTIxV01sSkhiSGxhVjA0d1lWYzVkVWxEV1cxSlIwWnFaRWRzTWxwVmJIVmFSMVkwU1VRd09WQlRRWGRKU0hnNFNVZHNlbFJ0VmpSa1JWSndZMjFXYW1SSGJIWmlhVUZ0U21sQ2FGa3pVbkJrYlZaS1ltMVNiR1ZEUVRsUVZEQm5Za2RHZW1SRmJEQmFWekZLWW0xU2JHVkVkR05pYkhoMVNVTkJaMGxEUVdkaFYxbG5TMGRzZWxJeU9YQmliV1JWWWpGa2VWbFlRV2RLYVZsblNWaFNiMkZZVFhWWU1rNTJZbTFhY0ZwNU5UTmpiVVozUzFOQ04xaEhOR2RKUTBGblNVTkJaMGxJU214a1NGWjVZbWxDYUZrelVuQmtiVlpHWWtkV2RGcFhOVEJQTVhoMVNVTkJaMGxEUVdkbVZuaDFXRWMwWjBsRFFXZEpRMEl5V1ZoSloxcEhWbk5rUjBWblVGTkNhMkZZU214Wk0xSndZakkwWjFCVU1EbEpSVkp3WTIxV2FtUkhiSFppYVRWUlZXdFdWMU5WT1ZaVmVVRXZTVU13ZUVsRWIyZE5WSFJqWW1sQlowbERRV2RKU0Zwb1kybENjR1JIVm5SVFZ6VnJXbGhuWjFCVFFXOVpWMDR3WVZoYWJGTlhOV3RhV0dkblMzbENhMXBYZURCWlUydG5TbE5DTUdGSGJIcE1iRGx3WkVkV2RHTjVOWE5hVnpWdVpFZG5OMWhITldOaWFVRm5TVU5CWjBsSVNteGtTRlo1WW1sQ2NHUkhWblJUVnpWcldsaG5aMUJVTURsSlF6QjRTVVE0WjJSSGFIQmplVFZtWVZoU2JHSllUbUprUjJod1kzazFabUZZVW14aVdFMTFZa2RXZFZvelVtOUpRekJuVFZZd1owOXBRakJoUjJ4NlRHdzVjR1JIVm5Sak1YUndaRWRXZEZOWE5XdGFXR2hrVHpGNGRVbERRV2RKU0RBM1dFYzFZMkpwUVdkSlEwSkVXVmhLZG1SWVRteGlRelYzWTIwNU1HSXpValZqUjFWMVdETlNlV0ZYWkc1YVdFcFVZa2RzYTFwVlZqSmFWelV3U1VRd1oxcHVWblZaTTFKd1lqSTBaMWd6VW5saFYyUnVXbGhLVkdKSGJHdGFWVll5V2xjMU1FdElTbXhpUjBZd1dsZFNWVmxZU201YVdGRnpTVWRXTWxwWE5UQlNSMng1V2xkT01HRlhPWFZVYlVaMFdsTnJaMlV4ZUhWSlEwRm5TVU5CWjJSdFJubEpTRTV6WVZkU2JGSllXbXhpYmxGblVGTkJhMHhyVmpKYVZ6VXdTMFZXTWxwWE5UQk1iRTVOVTFWU1JreERRamRZUnpSblNVTkJaMGxEUVdkSlNFcHNZa2RHTUZwWFVsVlpXRXB1V2xoUk5rbElTbXhpUjBZd1dsZFNWVmxZU201YVdGRnpXRWMwWjBsRFFXZEpRMEZuU1VkU2NHTnRWbXBrUjJ4MlltcHZaMXBZV214aWJsSkZZVmhLYkZrelVuQmlNalZQV1ZjeGJGaEhOR2RKUTBGblNVTkNPVXRVZEdOaWJIaDFTVU5CWjBsRFFXZEtRMmd3WVVkc2VreHNPV3hpUjFaMFdsYzFNRXRUTlRCamJXeHVXakpXZVV0SVRuTmhWMUpzVWxoYWJHSnVVWEJQTVhoMVdFYzBaMGxEUVdkSlEwSjVXbGhTTVdOdE5HZGpNbmh3V2tkV1JtUnRWblZrUkhSalltbEJaMGxEUWpsUE1YaDFXRWMwWjBsRFFXZFJNa1o1WWpOV2VscFhkM1ZqU0VwMlpFYzVNR1ZZUW14TWJEbDZXbGhTUWxrelVuQmtiVlpLWW0xU2NGa3lSakJpTTBwR1lrZFdkRnBYTlRCSlJEQm5XbTVXZFZrelVuQmlNalJuV0ROT2JHUkZSbXBrUjJ3eVdsVnNkVnBIYkdwWldGSjJZMnRXYzFwWE1XeGlibEZ2V2xkNGJHSlhWblZrUTJ0blpURjRkVWxEUVdkSlEwRm5ZVmRaWjB0SVVtOWhXRTExV0RKc2RWcEhiR3BaV0ZKMlkyNU9SbUpIVm5SYVZ6VXdTMU5DTjFoSE5HZEpRMEZuU1VOQlowbERVVzlrUjJod1kzazFabUZYTld0aFYwNW9aRWM1ZVdNd1ZuTmFWekZzWW01UmNFeHRXbkJpYlZGdlZUSldjMXBYVGpCaU0wbDFVVlZPVlZOV1drWkxVelY1V2xjeGRtUnRWa1JpUjBaNlkzbG9SR0pIUm5wak1EVm9ZbGRWZFZGVlRsVlRWbHBHUzFSMFkySnNlSFZKUTBGblNVTkJaMGxEUWpKWldFbG5ZbTFXTkdSRmJIVmFSMnhxV1ZoU2RtTnBRVGxKU0ZKdllWaE5kVmd5YkhWYVIyeHFXVmhTZG1OdVRrWmlSMVowV2xjMU1FeHRUbTloVjNoclkyMVdkVmN6VW05aFdFMTFXREprYkdSRmJEQmFWekZLWW0xU2JHVkRhR3hpUjFaMFdsYzFNRXRXTURkWVJ6VmpZbWxCWjBsRFFXZEpRMEZuWVZkWlowdEhOV3hsU0ZKS1ltMVNjRmt5UmpCaU0wbHdTVWgwWTJKcFFXZEpRMEZuU1VOQlowbERRV3RMUnpWc1pVaFNTbUp0VW5CWk1rWXdZak5KY0V4dFJtdGFSVTV6V1ZoT2VrdEZUbk5aV0U1NlZHMUdkRnBUTlVKUk1WSktWbXRWY0U4eGVIVkpRMEZuU1VOQlowbERRamxZUnpSblNVTkJaMGxEUWpsWVJ6Um5TVU5CWjJaVWRHTmliSGgxU1VOQlowbEZUbWhqYlRreFl6SldjMHh1UW5saU0xSjJaRWhzZDFwVE5XWmpNbmh3V2tkVloxQlRRbTFrVnpWcVpFZHNkbUpwUW1aak1uaHdXa2RWYjFwSGJIbGFWMDR3WVZjNWRVeERRbXhpUjFaMFdsYzFNRXRUUWpkWVJ6Um5TVU5CWjBsRFFqSlpXRWxuV0ROU2IyRllUWHBKUkRCblpFZG9jR042ZEdOaWJIaDFTVU5CWjBsRFFXZGtiVVo1U1VkR2FtUkhiREphVlZaeldsY3hiR0p1VVdkUVUwRnJTMGhTYjJGWVRYVllNbFp6V2xjeGJHSnVVWEJNYlZwd1ltMVJiMVV5Vm5OYVYwNHdZak5KZFZGVlRsVlRWbHBHV0RCc1ZWSlZNSEJYZWtKa1R6RjRkVWxEUVdkSlEwRm5aRzFHZVVsSE5XeGxTRkpHWWtkV2RGcFhOVEJKUkRCbldsZDRiR0pYVm5Wa1EwSTRaa05DYUZrelVuQmtiVlpHWWtkV2RGcFhOVEJKUTFsdFNVaFNiMkZZVFhWWU1tUnNaRVZzTUZwWE1VTmxWVkp3WTIxV2FtUkhiSFppYVdocllWaEtiRmt6VW5CaU1qUnpTVWRHYW1SSGJESmFWVlp6V2xjeGJHSnVVWEJQTVhoMVdFYzBaMGxEUVdkSlEwSXlXVmhKWjJGWVRrUmxWMDV6WVZjMWJrbEVNR2RSYlRsMllrZFdhR0pwYURCaFIyeDZUR3c1Y0dKdVVteGpibHBvWWtOck4xaEhOV05pYVVGblNVTkJaMGxJV21oamFVSnJZVmhLYkZrelVuQmlNalZvWWtWT2MxbFlUbnBVYlVaMFdsTkJPVWxJV25aaFYxRm5UVVIwWTJKcFFXZEpRMEZuU1VoYWFHTnBRblpqYlZKc1kydE9jMWxZVG5wVWJVWjBXbE5CT1VsSVduWmhWMUZuVFVSMFkySnBRV2RKUTBGblNVaGFhR05wUW14a2JWWjFaRVZTY0dOdFZtcGtSMngyWW1zMWFHSlhWV2RRVTBJeVlqSnNhMGxFUVRkWVJ6VmpZbWxCWjBsRFFXZEpSMnh0U1VOb2EyRllTbXhaTTFKd1lqSTBaMUJVTURsSlJWSndZMjFXYW1SSGJIWmlhVFZQVWxab1ZVdFRRamRZUnpSblNVTkJaMGxEUVdkSlIxSndZMjFXYW1SSGJIWmliVVp6VVRKNGFHTXpUazlaVnpGc1NVUXdaMUV5ZUdoak0wNVBXVmN4YkV4cmVFWlNiRkUzV0VjMFowbERRV2RKUTBGblNVYzVlVnBIVm5sUk1uaG9Zek5PVDFsWE1XeEpSREJuVVRKNGFHTXpUazlaVnpGc1RHczFSbGRHVVRkWVJ6Um5TVU5CWjBsRFFXZEpSMVl5V2xjMU1GSkhiSGxhVjA0d1lWYzVkVlJ0Um5SYVUwRTVTVVZTY0dOdFZtcGtSMngyWW1rMVRWSlZXbFZQTVhoMVNVTkJaMGxEUVdkbVUwSnNZa2hPYkVsSWRHTmlhVUZuU1VOQlowbERRV2RhUjJ4NVdsZE9NR0ZYT1hWWlYzaEVZa2RHZW1Nd05XaGlWMVZuVUZOQ1JHSkhSbnBqTURWb1lsZFZkVlZyYkVoVFJsRTNXRWMwWjBsRFFXZEpRMEZuU1VjNWVWcEhWbmxSTW5ob1l6Tk9UMWxYTVd4SlJEQm5VVEo0YUdNelRrOVpWekZzVEd4Q1UxSldXVGRZUnpSblNVTkJaMGxEUVdkSlIxWXlXbGMxTUZKSGJIbGFWMDR3WVZjNWRWUnRSblJhVTBFNVNVVlNjR050Vm1wa1IyeDJZbWsxVTFOVlpFbFdSSFJqWW1sQlowbERRV2RKU0RGallteDRkVWxEUVdkSlEwRm5ZVmRaWjB0SE5XeGxTRkpHWWtkV2RGcFhOVEJKUTFsdFNVTlJiMkp0VmpSa1JWWnpXbGN4YkdKdVVYQk1iV2hvWXpCT2MxbFlUbnBMUlU1eldWaE9lbFJ0Um5SYVV6VkNVVEZTU2xaclZYQkxVMEkzV0VjMFowbERRV2RKUTBGblNVaFNiMkZZVFhWWU1teDZWVEo0Y0ZwSGJIVmFlVUU1U1VkYWFHSklUbXhQTVhoMVNVTkJaMGxEUVdkSlEwSjVXbGhTTVdOdE5EZFlSelJuU1VOQlowbERRamxZUnpWalltbEJaMGxEUVdkSlNGcG9ZMmxDZW1KSGJHdGFWVll5V2xjMU1FbEVNR2RrUjJod1kzazFabVJJU25CYU1tUnNZMnhPYzJGWFVteFNXRnBzWW01UmIySnRWalJrUlZaeldsY3hiR0p1VVhOSlIxWXlXbGMxTUZKSGJIbGFWMDR3WVZjNWRWUnRSblJhVTJzM1dFYzBaMGxEUVdkSlEwSndXbWxCYjJNeWVIQmFSMVpHWkcxV2RXUkROWEJqTUZKc1dtMUdNV0pJVWxGamJWWXlXbGMxTUZwWFVXOUxVMnRuWlRGNGRVbERRV2RKUTBGblNVTkNlVnBZVWpGamJUUTNXRWMwWjBsRFFXZEpRMEk1V0VjMVkySnBRV2RKUTBGblNVZHNiVWxEWjJoWlYwNHdZVmhhYkZKWGVHeGlWMVoxWkVOQ09HWkRRV2hpYlZZMFpFVldjMXBYTVd4aWJsRndTVWgwWTJKcFFXZEpRMEZuU1VOQloweDVPR2RqTWpsMFdsTkNNMXBYYkhsYVJ6VnNZek5OWjJGWVRXZGhSMFozWTBkV2RXRlhOVzVNUTBKNllubENNMXBUUW1sWlYyeHpXRWMwWjBsRFFXZEpRMEZuU1VoS2JHUklWbmxpYW5SalltbEJaMGxEUVdkSlNERmpZbXg0ZFVsRFFXZEpRMEZuWkVkb2NHTjVOV1poV0U1VVlrZHNhMkZYTlc1SlJEQm5aRWhLTVZwVWRHTmliSGgxU1VOQlowbERRV2RoVjFsblMwZHNlbEV6YkdwaVIyeDFXbmxyWjJVeGVIVkpRMEZuU1VOQlowbERRakJoUjJ4NlRHNUNhR1JZVG14TFEyczNXRWMwWjBsRFFXZEpRMEk1V0VjMVkySnBRV2RKUTBGblNVaFNiMkZZVFhWWU0wNXNaRVZHYW1SSGJESmFWV3gxV2tkc2FsbFlVblpqYTFaeldsY3hiR0p1VVc5aWJWWTBaRVZXYzFwWE1XeGlibEZ3VHpGNGRWaEhOR2RKUTBGblNVTkNNbGxZU1dkak1uaHdXa1ZXTWxwWE5UQkpSREJuU2tNMVJtUnRWblZrUTJoR1pHMVdkV1JETlZSVVJXeEZURU5DTjFoSE5HZEpRMEZuU1VOQlowbElTbXhpUjBZd1dsZFNWVmxZU201YVdGRTJTVWMxYkdWSVVrWmlSMVowV2xjMU1FeEdlSFZKUTBGblNVTkJaMGxEUW10aFdFcHNXVE5TY0dJeU5EWkpSMVl5V2xjMU1GSkhiSGxhVjA0d1lWYzVkVlJ0Um5SYVZuaDFTVU5CWjBsRFFXZG1VMnMzV0VjMVkySnBRV2RKUTBGblNVZHNiVWxEYUZaa1IyeHpURzVPTVdOSVFuWmpibEo2VmtoS2FHSnVUbkJrUjJ4MlltdFdkVnBEWjNCSlExbHRTVU5SYjJSSGFIQmplVFZtV2xkNGJHSlhWblZrUTJ0MVlVZEdlbEV5ZUdoak0wMXZVVEo0YUdNelRrOVpWekZzVEd4T1RWTlZVa1pMVTJ0blpURjRkVmhITkdkSlEwRm5TVU5CWjBsRFVXOWliVlkwWkVWV2MxcFhNV3hpYmxGd1RHMUdhMXBGVG5OWldFNTZTMGM1ZVZwSFZubFJNbmhvWXpOT1QxbFhNV3hMVkhSallteDRkVWxEUVdkSlEwRm5TVU5DVm1SSGJITk1ia3BzV20xNGRtUjVhSFZhV0dnd1VsZDRiR0pYVm5Wa1EyczNXRWMxWTJKcFFXZEpRMEZuU1VOQlowcERhR2haTTFKd1pHMVdSbUpIVm5SYVZ6VXdTMU0xYUZwSFVrUmlSMFo2WTNsb2EyRllTbXhaTTFKd1lqSTFhR0pGVG5OWldFNTZWRzFHZEZwVGF6ZFlSelJuU1VOQlowbERRV2RKUTFGdlltMVdOR1JGVm5OYVZ6RnNZbTVSY0V4dFJtdGFSVTV6V1ZoT2VrdEhVbkJqYlZacVpFZHNkbUp0Um5OUk1uaG9Zek5PVDFsWE1XeExWSFJqWW14NGRVbERRV2RKUTBGblNVTkJhMHRIUm1wa1Iyd3lXbFZXYzFwWE1XeGlibEZ3VEcwNWRWcFRhRlprUjJ4elRHeFNVMUZWTlZSVFZsSktWREExWmxKVk5VVk1RMEp0WkZjMWFtUkhiSFppYVVGdlMxTkNOMWhITkdkSlEwRm5TVU5CWjBsRFFXZEtRMmgxV2xob01GSlhlR3hpVjFaMVpFTnJkV050Vm5SaU0xcHNVVEo0YUdNelRXOWFSMng1V2xkT01HRlhPWFZaVjNoRVlrZEdlbU13TldoaVYxVm5TM2xCYmtsRFkyZExlVUoyWTIxU2JHTnJUbk5aV0U1NlZHMUdkRnBUYTNWWlYxSnJVVEo0YUdNelRXOVJNbmhvWXpOT1QxbFhNV3hNYTBaRVZrVnNWMUpUYXpkWVJ6VmpZbWxCWjBsRFFXZEpRMEZuU1VOQmEwdEhSbXBrUjJ3eVdsVldjMXBYTVd4aWJsRndURzVLYkdKWE9USmFWVTV6V1ZoT2VrdEZUbk5aV0U1NlZHMUdkRnBUTlVKUk1WSktWbXRWWjB0NVFXNUpRMk5uUzNsQ2RtTnRVbXhqYTA1eldWaE9lbFJ0Um5SYVUwRnlTVU5qWjBwNVFYSkpSMUp3WTIxV2FtUkhiSFppYlVaelVUSjRhR016VGs5WlZ6RnNTMVIwWTJKc2VIVkpRMEZuU1VOQlowbERRV2RKUmprd1lVZHNlazE1TldaaFdFNVVZa2RzYTJGWE5XNUpSREJuV20xR2MyTXlWVGRZUnpWalltbEJaMGxEUVdkSlEwRm5TVU5DZWxwWVVsVmhWekZzWWpOV01FdEhXakZpYlU0d1lWYzVkVWxEWjNCSlNIUmpZbWxCWjBsRFFXZEpRMEZuU1VOQlowbElTbXhrU0ZaNVltbEJhMHRHT1RCaFIyeDZUWGsxWmxwWGVHeGlWMVoxWkVOcmRXUklTbkJhTW1Sc1kybG9lbUpIYkd0U1dGcHNZbTVSY0U4eGVIVkpRMEZuU1VOQlowbERRV2RKU0RCelNVUkJjRTh4ZUhWSlEwRm5TVU5CWjBsRFFqbExVelZzWWxoV2MxbFlVbXhXU0Vwb1ltNU9jR1JIYkhaaWExWjFXa05vVlZWclJrOVZNR3hWVTFVNVQxZ3dVbFpWYTBaVlUxVTVUMHRVZEdOaWFVRm5TVU5CWjBsSU1HZGFWM2g2V2xOQ04xaEhOR2RKUTBGblNVTkJaMGxEVVc5WlYwNHdZVmhhYkZKWGVHeGlWMVoxWkVOcmRXTnRWblJpTTFwc1VUSjRhR016VFc5Uk1uaG9Zek5PVDFsWE1XeE1hMFpFVmtWc1YxSlRhemRZUnpSblNVTkJaMGxEUVdkSlExRnZZbTFXTkdSRlZuTmFWekZzWW01UmNFeHRSbXRhUlU1eldWaE9la3RGVG5OWldFNTZWRzFHZEZwVE5VSlJNVkpLVm10VmNFOHhlSFZZUnpSblNVTkJaMGxEUVdkSlNGSnZZVmhOZFZneWJIcFZNbmh3V2tkc2RWcDVRVGxKUjFwb1lraE9iRTh4ZUhWSlEwRm5TVU5CWjBsRFFXdExTRkp2WVZoTmRWZ3lWbk5hVnpGc1ltNVJjRXh1VW5saFYyUnVXbGhKYjJNeWVIQmFSVll5V2xjMU1FdFVkR05pYVVGblNVTkJaMGxJTVdOaWJIaDFTVU5CWjBsRFFXZGhWMWxuUzBkc2VsRXpiR3BpUjJ4MVdubHJaMlV4ZUhWSlEwRm5TVU5CWjBsRFFqQmhSMng2VEcxT05Wa3llR3hMUTJzM1dFYzBaMGxEUVdkSlEwSTVXRWMwWjBsRFFXZG1WSFJqWW14NGRVbERRV2RKUXpoMlNVaE9NRmxZVW5CWk1YaDFXRWMwWjBsRFFXZFJNa1o1WWpOV2VscFhkM1ZZTW5CU1pGZFdlV1ZWYkhWa1IxWjVXbTFHYWxwVFFUbEpSMW94WW0xT01HRlhPWFZKUmpseFZWaFdiR051YkVwaWJsSnNZMjFhYUZreVZXOVpNamwxV20xc2JrdFRRamRZUnpSblNVTkJaMGxEUW5sYVdGSXhZMjAwWjJSSGFIQmplVFZzV1ZkT2IwdEhXakZpYlU0d1lWYzVkVWxEWjNCSlNIUmpZbWxCWjBsRFFXZEpRMEZuWkcxR2VVbEhVbWhrUjBWblVGTkJhMHRJVW05aFdFMXdURzFTYUdSSFJXOVNSVVpWVVZZNVRGSldhM0JQTVhoMVNVTkJaMGxEUVdkSlEwSXlXVmhKWjFneVRuWmliVnB3V25sQk9VbERVWFZhV0dnd1dsYzFhMHRJZERsTVEwSkZXbGRhYUdSWGVEQk1RMEZyUzBoU2IyRllUWEJNYlZKb1pFZEZiMHRUYXpkWVJ6VmpZbWxCWjBsRFFXZEpRMEZuWVZkWlowdERhREJsV0VKc1lqSlpaMWt5T1hWYWJXeHVTVVF3T1ZCVFFXNWtWelZyV2xkYWNHSnRWbXRLZVVFdlNVTmtNV0p0VW14YWJXeDFXbGRSYmtsRWIyZFlNMUkxWTBkV2RscHBhR3BpTWpWdFlWZGpjRXRUUVRsUVZEQm5Takk1YVdGdFZtcGtRMk53U1VoMFkySnBRV2RKUTBGblNVTkJaMGxEUVd0TWJWWTBaRWRXZFZwRGFHWlpNamwxV20xc2JreERRbXBpTWpWdFlWZGpjRTh4ZUhWSlEwRm5TVU5CWjBsRFFqbFlSelZqWW1sQlowbERRV2RKUTBGblpHMUdlVWxIUm1wa1IyeDJZbWxCT1VsSVVqVmpSMVoyV21sQ2FtSXlOVzFoVjJOblVGUXdPVWxEWkhwa1NFcHdZbTFqYmtsRU9HZFpNamwxV20xc2JrbEViMmRZTWs1MlltMWFjRnA1TlhwaVIyeHJXbFIwWTJKc2VIVkpRMEZuU1VOQlowbERRbkJhYVVGdlNWZFNhR1JIUlhCSlNIUmpZbWxCWjBsRFFXZEpRMEZuU1VOQ2ExbFlVbWhKUkRCblltMVdNMGxGVG1oamJUa3hZekpXYzB0SVVtOWhXRTF6U1VZNWFtSXlOVzFoVjJOd1R6RjRkVWxEUVdkSlEwRm5TVU5CWjBsRFVXOWtSMmh3WTNscmRWcEhSakJaVTJoRlVWWlNRbGd3ZEVaWFUzZG5Xa2RHTUZsVGF6ZFlSelJuU1VOQlowbERRV2RKU0RGallteDRkVWxEUVdkSlEwRm5TVU5DY0ZwcFFXOWtTR3gzV2xjNWJVbEhUblppYlZwd1dubEJPVkJVTUdkS01qVXhZbGRLYkdOcFkzQkpTSFJqWW1sQlowbERRV2RKUTBGblNVTkNhMWxZVW1oTWJsSjJTMGRPZG1KdFduQmFlV3MzV0VjMFowbERRV2RKUTBGblNVZ3daMXBYZUhwYVUwSndXbWxCYjJSSWJIZGFWemx0U1VkR2FtUkhiSFppYVVFNVVGUXdaMG96VGpCamJXeDFXbmxqY0VsSWRHTmlhVUZuU1VOQlowbERRV2RKUTBKd1dtbEJiMXBIUmpCWlZuUm9XVE5TY0dJeU5XUkpSREE1VUZOQ01XSnRVbXhhYld4MVdsZFJjRWxJZEdOaWFVRm5TVU5CWjBsRFFXZEpRMEZuU1VoU2IyTnRPVE5KUnpWc1pIbENSbU51U25aamFXZHVWRzA0WjJKWFZqQmhSemxyU1VjMWFHSlhWbXRKUm5kcFNubEJja2xIUm1wa1IyeDJZbWxCY2tsRFpHTkphV053VHpGNGRVbERRV2RKUTBGblNVTkJaMGxJTVdOaWFVRm5TVU5CWjBsRFFXZEpRMEpyV1ZoU2FGY3lSbXBrUjJ4Mlltd3diMHRVZEdOaWFVRm5TVU5CWjBsRFFXZG1VMEpzWWtoT2JFbEhiRzFKUTJobVdUSTVkVnB0Ykc1TWJXeDFaRWRXZVdSdFJuTkxVMEkzV0VjMFowbERRV2RKUTBGblNVTkJaMXBIUmpCWlV6VjNXVmhXZWxwVFozQlBNWGgxU1VOQlowbERRV2RKUTBGblNVZFNhR1JIUlhWWk0yeHFZa2RWYjB0VWRHTmlhVUZuU1VOQlowbERRV2RtVm5oMVNVTkJaMGxEUVdkbVUyczNXRWMwWjBsRFFXZG1WSFJqWW14NGRVbERRV2RKUlU1b1kyMDVNV015Vm5OTWJEbHJXVmhTYUZGWVFuQlJNbmh3V1RKMFNWbFhOV3RpUjFaNVNVUXdaMXB1Vm5WWk0xSndZakkwWjFneVVtaGtSMFpDWTBkc1JHSkhiR3BoTUdob1ltMVNjMXBZU1c5YVdGcHNZbTVSY0VsSWRHTmlhVUZuU1VOQlowbElXbWhqYVVKNldsZDRiRmt6VW5aamFVRTVTVVpXTUdGWGQzVmFNbFl3VlRKV2MxcFhUakJpTTBwSFkyMDVkRkpYZUd4aVYxWjFaRU5vTUdGSGJIcExWSFJqWW14NGRVbERRV2RKUTBGbllWZFpaMHREUm5wYVYzaHNXVE5TZG1OcGEyZGxNWGgxU1VOQlowbERRV2RKUTBKNVdsaFNNV050TkRkWVJ6Um5TVU5CWjBsRFFqbFlSelZqWW1sQlowbERRV2RKU0Zwb1kybENNRmxZU201YVdGRm5VRk5CYTB0SVRteGlSMVpxWkVjNWVVdFdjM2RZVkhSallteDRkVWxEUVdkSlEwRm5ZVmRaWjB0RFJqQlpXRXB1V2xoUloyWklkMmRKVTFGdlpFZEdlVm95VmpCTFV6VnZXVmhPUkdKSFJucGplV2hFWWtkR2VtTXdOV2hpVjFWMVVUQkdVMVF4VmxSU1ZYZHdTMU5DTjFoSE5HZEpRMEZuU1VOQlowbElTbXhrU0ZaNVltcDBZMkpwUVdkSlEwRm5TVWd4WTJKc2VIVkpRMEZuU1VOQloyUnRSbmxKUjA1MlltMWFjRnA1UVRsSlExRjFXbGhvTUZwWE5XdExTSFE1VEVOQmEwdElVbWhqYldSc1pFTnJkVnBIUmpCWlUyZHdURU5CYTB0SVVtOWhXRTF3VEcxU2FHUkhSVzlMVTJzM1dFYzBaMGxEUVdkSlEwSXlXVmhKWjJNeWVIQmFSMVpLWW0xU2JHVkRRVGxKU0ZKdllWaE5kVm95VmpCUldGSXdZMjFzYVdSWVVteExRMlJyV1ZoU2FFeFlUbk5oVjFKc1RGaFNka3A1YXpkWVJ6VmpZbWxCWjBsRFFXZEpSMnh0U1VOb2VtSkhiR3RhVld4MVdrZFdORXRUUWpkWVJ6Um5TVU5CWjBsRFFXZEpSMDUyWW0xYWNGcDVOWEJpYmxKc1kyNWFhR0pEUVRsSlIxcG9Za2hPYkU4eGVIVkpRMEZuU1VOQloyWldlSFZZUnpSblNVTkJaMGxEUWtSWldFcDJaRmhPYkdKRE5XWmhiRVl4V2xoS05WTlhOVEJhV0VwdFdWZE9iRXh0VG1oaVIzZHZTa05vTUZsWVNtNWFXRkZ3VEVOQ2FtSXlOVzFoVjJOd1R6RjRkVmhITkdkSlEwRm5TVU5DY0ZwcFFXOWpNbmh3V2tkV1NtSnRVbXhsUTJ0blpURjRkVWxEUVdkSlEwRm5TVU5CYTB0SVVtaGpiV1JzWkVOcmRWcEhSakJaVTJoRlVWWlNRbGd3ZEVaWFUydDFaRWM0YjJNeWVIQmFSMVpLWW0xU2JHVkRhemRZUnpSblNVTkJaMGxEUWpsWVJ6VmpZbWxCWjBsRFFXZEpSMVl5V2xjMU1FeHVRbmxhV0Zwc1ltNVNSVnBYV21oa1YzZ3dTME5yTjFoSE5HZEpRMEZuWmxSMFkySnNlSFZKUTBGblNVWTVhbU50Vm1oa1IxWkVZa2RHZW1ONWFFUlpXRXAyWkZoT2JHSkRkMmRpYmxaellrTjNaMWN6ZEdOaWFVRm5TVU5CWjBsSGRHeGxWRzluU2pGYVJsVnNUa3BVTURSdVRFWjRkVWxEUVdkSlEwRm5XakpXTUU5cFFtMWtWelZxWkVkc2RtSnBRbTVhV0ZGdlMxTkNOMWhITkdkSlEwRm5TVU5CWjBsSVNteGtTRlo1WW1sQ1YxSldTbFJUVlRsUFR6RjRkVWxEUVdkSlEwRm5abFo0ZFVsRFFXZEpTREJ6U1VoMFkySnBRV2RKUTBGblNVZDBiR1ZVYjJkS01GSnNXbTFHTVdKSVVXNU1SbmgxU1VOQlowbERRV2RhTWxZd1QybENiV1JYTldwa1IyeDJZbWxDYmxwWVVXOUxVMEkzV0VjMFowbERRV2RKUTBGblNVaEtiR1JJVm5saWFVSkZXbGRhYUdSWGVEQlBNWGgxU1VOQlowbERRV2RtVm5oMVNVTkJaMGxJTVdSTFZIUmpZbXg0ZFVsRFFXZEpTRXBzWkVoV2VXSnBRa1JaV0VwMlpGaE9iR0pFZEdOaWFVRm5abE5uY0U4eGVIVllSelJuU1VNNGNVdHNlSFZKUTBGblMybEJkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNeFkySnBRV2RKUTI5blVrZEdNRmxUUWtKalIydG5ZVmN4ZDJKSFZuUmFWelV3V1ZoU2NHSXlOV05pYVVGblNVTnZaMHhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RGaEhOR2RKUTBGeFRERjRkVmhITkdkSlExRnZXa2M1YW1SWE1XeGlibEZ3VEcwNWRVdEZWakphVnpVd1RHdE9UVk5WVGt4WU1GSkNWa1ZHWmxGV1FrcE1RMEpVV2xkNGJGa3pVblpqYVRWRlVWWlNRbGd4VGsxVFZWSkdURU5DUkZsWVNuWmtXRTVzWWtNMVpscEhSakJaVlVaM1lWVk9jMkZYVG5KVFIwWjFXa2Q0YkdOcGF6ZFlSelZqWW1sQlowcERhRE5oVnpWcllqTmpjRXh0T1hWTFJWWXlXbGMxTUV4cmVGQlJWVkptVWtWR1ZWRldPVUpWUld0elNVZGFNV0p0VGpCaFZ6bDFTVU5uY0VsSWRHTmlhVUZuU1VOQmEwdEdUbXhpUjFacVpFYzVlVXhyVWtKV1JVWm1WV3RzUlZKVGEzVmFWMFpxWVVOb2JXUlhOV3BrUjJ4MlltbEJiMHRUUWpkWVJ6Um5TVU5CWjBsRFFqSlpXRWxuU2tkT2FHTnRPVEZqTWxaelNVUXdaMHBEYURCaFIyeDZTMVIwWTJKcFFXZEpRMEZuU1VWT2FHTnRPVEZqTWxaelRHdzVjVlZZVm14amJteEtZbTVTYkdOdFdtaFpNbFYxV1RKR2MySkRaMnRaTWtaNVlqTldlbHBYZDNOSlExSnFXVmhLZG1SWVRteGlRelZyV1ZoU2FFdERhM0JQTVhoMVNVTkJaMGxJTUhCUE1YaDFTVU5DT1V0VWRHTmliSGgxU1VOQmRrdHBjR05pYVVGblNVTnZaMHhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RGaEhOR2RKUTBGeFNVZHdVbVJYVm5sbFZuaDFTVU5CWjB0cFFYUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTVdOaWFVRm5TVU52ZGxoSE5XTmlhVUZuU2tNMWJXSnNkRTlSVlRGR1dGTkJPVWxGVG1oamJUa3hZekpXYzB4c09YRlZXRlpzWTI1c1NtSnVVbXhqYlZwb1dUSlZOMWhITkdkSlExRjFXbTAxWWxSclJrNVNWakIxVVRJNWRXTXpVbmxrVjA0d1lqTkpaMUJUUWtSWldFcDJaRmhPYkdKRWRHTmlhVUZuU2tNMWJXSnNkRTlSVlRGR1dGTTFkV0l3VG5aaWJWcHpZVmRPTUVsRU1HZGFibFoxV1ROU2NHSXlOR2RMUTJ0blpURjRkVWxEUVdkSlExRjFXbTAxWWxSclJrNVNWakJuVUZOQ1MxVldWa1pWYkd4bVZHczVabEV3T1U5U2EzaEtVVEZSTjFoSE5HZEpRMEZuWTIxV01HUllTblZKUlU1b1kyMDVNV015Vm5OTWJEbHhWVmhXYkdOdWJFcGlibEpzWTIxYWFGa3lWVGRZUnpSblNVZ3dOMWhITldOaWFVRm5ZMjFXTUdSWVNuVkpSVTVvWTIwNU1XTXlWbk5QTVhoMVpsTm9jVlZZVm14amJtdHdUekY0ZFV4NU9HcEpTRTUyWkZoS2FscFZNV2hqU0VKd1ltMWtWbFZyZHpsWk1rWjVZak5XZWxwWGQzVmhiazExWWxkR2QxaEhOR2xZV0RBOVhHNGlYWDA9XG4iXX0=
