var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
                descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function (Constructor, protoProps, staticProps) {
        if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
            defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): tooltip.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Tooltip = function ($) {
    /**
     * Check for Tether dependency
     * Tether - http://tether.io/
     */
    if (typeof Tether === 'undefined') {
        throw new Error('Bootstrap tooltips require Tether (http://tether.io/)');
    }
    /**
     * ------------------------------------------------------------------------
     * Constants
     * ------------------------------------------------------------------------
     */
    var NAME = 'tooltip';
    var VERSION = '4.0.0-alpha.6';
    var DATA_KEY = 'bs.tooltip';
    var EVENT_KEY = '.' + DATA_KEY;
    var JQUERY_NO_CONFLICT = $.fn[NAME];
    var TRANSITION_DURATION = 150;
    var CLASS_PREFIX = 'bs-tether';
    var Default = {
        animation: true,
        template: '<div class="tooltip" role="tooltip">' + '<div class="tooltip-inner"></div></div>',
        trigger: 'hover focus',
        title: '',
        delay: 0,
        html: false,
        selector: false,
        placement: 'top',
        offset: '0 0',
        constraints: [],
        container: false
    };
    var DefaultType = {
        animation: 'boolean',
        template: 'string',
        title: '(string|element|function)',
        trigger: 'string',
        delay: '(number|object)',
        html: 'boolean',
        selector: '(string|boolean)',
        placement: '(string|function)',
        offset: 'string',
        constraints: 'array',
        container: '(string|element|boolean)'
    };
    var AttachmentMap = {
        TOP: 'bottom center',
        RIGHT: 'middle left',
        BOTTOM: 'top center',
        LEFT: 'middle right'
    };
    var HoverState = {
        SHOW: 'show',
        OUT: 'out'
    };
    var Event = {
        HIDE: 'hide' + EVENT_KEY,
        HIDDEN: 'hidden' + EVENT_KEY,
        SHOW: 'show' + EVENT_KEY,
        SHOWN: 'shown' + EVENT_KEY,
        INSERTED: 'inserted' + EVENT_KEY,
        CLICK: 'click' + EVENT_KEY,
        FOCUSIN: 'focusin' + EVENT_KEY,
        FOCUSOUT: 'focusout' + EVENT_KEY,
        MOUSEENTER: 'mouseenter' + EVENT_KEY,
        MOUSELEAVE: 'mouseleave' + EVENT_KEY
    };
    var ClassName = {
        FADE: 'fade',
        SHOW: 'show'
    };
    var Selector = {
        TOOLTIP: '.tooltip',
        TOOLTIP_INNER: '.tooltip-inner'
    };
    var TetherClass = {
        element: false,
        enabled: false
    };
    var Trigger = {
        HOVER: 'hover',
        FOCUS: 'focus',
        CLICK: 'click',
        MANUAL: 'manual'
    };
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */
    var Tooltip = function () {
        function Tooltip(element, config) {
            _classCallCheck(this, Tooltip);
            // private
            this._isEnabled = true;
            this._timeout = 0;
            this._hoverState = '';
            this._activeTrigger = {};
            this._isTransitioning = false;
            this._tether = null;
            // protected
            this.element = element;
            this.config = this._getConfig(config);
            this.tip = null;
            this._setListeners();
        }
        // getters
        // public
        Tooltip.prototype.enable = function enable() {
            this._isEnabled = true;
        };
        Tooltip.prototype.disable = function disable() {
            this._isEnabled = false;
        };
        Tooltip.prototype.toggleEnabled = function toggleEnabled() {
            this._isEnabled = !this._isEnabled;
        };
        Tooltip.prototype.toggle = function toggle(event) {
            if (event) {
                var dataKey = this.constructor.DATA_KEY;
                var context = $(event.currentTarget).data(dataKey);
                if (!context) {
                    context = new this.constructor(event.currentTarget, this._getDelegateConfig());
                    $(event.currentTarget).data(dataKey, context);
                }
                context._activeTrigger.click = !context._activeTrigger.click;
                if (context._isWithActiveTrigger()) {
                    context._enter(null, context);
                }
                else {
                    context._leave(null, context);
                }
            }
            else {
                if ($(this.getTipElement()).hasClass(ClassName.SHOW)) {
                    this._leave(null, this);
                    return;
                }
                this._enter(null, this);
            }
        };
        Tooltip.prototype.dispose = function dispose() {
            clearTimeout(this._timeout);
            this.cleanupTether();
            $.removeData(this.element, this.constructor.DATA_KEY);
            $(this.element).off(this.constructor.EVENT_KEY);
            $(this.element).closest('.modal').off('hide.bs.modal');
            if (this.tip) {
                $(this.tip).remove();
            }
            this._isEnabled = null;
            this._timeout = null;
            this._hoverState = null;
            this._activeTrigger = null;
            this._tether = null;
            this.element = null;
            this.config = null;
            this.tip = null;
        };
        Tooltip.prototype.show = function show() {
            var _this = this;
            if ($(this.element).css('display') === 'none') {
                throw new Error('Please use show on visible elements');
            }
            var showEvent = $.Event(this.constructor.Event.SHOW);
            if (this.isWithContent() && this._isEnabled) {
                if (this._isTransitioning) {
                    throw new Error('Tooltip is transitioning');
                }
                $(this.element).trigger(showEvent);
                var isInTheDom = $.contains(this.element.ownerDocument.documentElement, this.element);
                if (showEvent.isDefaultPrevented() || !isInTheDom) {
                    return;
                }
                var tip = this.getTipElement();
                var tipId = Util.getUID(this.constructor.NAME);
                tip.setAttribute('id', tipId);
                this.element.setAttribute('aria-describedby', tipId);
                this.setContent();
                if (this.config.animation) {
                    $(tip).addClass(ClassName.FADE);
                }
                var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;
                var attachment = this._getAttachment(placement);
                var container = this.config.container === false ? document.body : $(this.config.container);
                $(tip).data(this.constructor.DATA_KEY, this).appendTo(container);
                $(this.element).trigger(this.constructor.Event.INSERTED);
                this._tether = new Tether({
                    attachment: attachment,
                    element: tip,
                    target: this.element,
                    classes: TetherClass,
                    classPrefix: CLASS_PREFIX,
                    offset: this.config.offset,
                    constraints: this.config.constraints,
                    addTargetClasses: false
                });
                Util.reflow(tip);
                this._tether.position();
                $(tip).addClass(ClassName.SHOW);
                var complete = function complete() {
                    var prevHoverState = _this._hoverState;
                    _this._hoverState = null;
                    _this._isTransitioning = false;
                    $(_this.element).trigger(_this.constructor.Event.SHOWN);
                    if (prevHoverState === HoverState.OUT) {
                        _this._leave(null, _this);
                    }
                };
                if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {
                    this._isTransitioning = true;
                    $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(Tooltip._TRANSITION_DURATION);
                    return;
                }
                complete();
            }
        };
        Tooltip.prototype.hide = function hide(callback) {
            var _this2 = this;
            var tip = this.getTipElement();
            var hideEvent = $.Event(this.constructor.Event.HIDE);
            if (this._isTransitioning) {
                throw new Error('Tooltip is transitioning');
            }
            var complete = function complete() {
                if (_this2._hoverState !== HoverState.SHOW && tip.parentNode) {
                    tip.parentNode.removeChild(tip);
                }
                _this2.element.removeAttribute('aria-describedby');
                $(_this2.element).trigger(_this2.constructor.Event.HIDDEN);
                _this2._isTransitioning = false;
                _this2.cleanupTether();
                if (callback) {
                    callback();
                }
            };
            $(this.element).trigger(hideEvent);
            if (hideEvent.isDefaultPrevented()) {
                return;
            }
            $(tip).removeClass(ClassName.SHOW);
            this._activeTrigger[Trigger.CLICK] = false;
            this._activeTrigger[Trigger.FOCUS] = false;
            this._activeTrigger[Trigger.HOVER] = false;
            if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {
                this._isTransitioning = true;
                $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);
            }
            else {
                complete();
            }
            this._hoverState = '';
        };
        // protected
        Tooltip.prototype.isWithContent = function isWithContent() {
            return Boolean(this.getTitle());
        };
        Tooltip.prototype.getTipElement = function getTipElement() {
            return this.tip = this.tip || $(this.config.template)[0];
        };
        Tooltip.prototype.setContent = function setContent() {
            var $tip = $(this.getTipElement());
            this.setElementContent($tip.find(Selector.TOOLTIP_INNER), this.getTitle());
            $tip.removeClass(ClassName.FADE + ' ' + ClassName.SHOW);
            this.cleanupTether();
        };
        Tooltip.prototype.setElementContent = function setElementContent($element, content) {
            var html = this.config.html;
            if ((typeof content === 'undefined' ? 'undefined' : _typeof(content)) === 'object' && (content.nodeType || content.jquery)) {
                // content is a DOM node or a jQuery
                if (html) {
                    if (!$(content).parent().is($element)) {
                        $element.empty().append(content);
                    }
                }
                else {
                    $element.text($(content).text());
                }
            }
            else {
                $element[html ? 'html' : 'text'](content);
            }
        };
        Tooltip.prototype.getTitle = function getTitle() {
            var title = this.element.getAttribute('data-original-title');
            if (!title) {
                title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;
            }
            return title;
        };
        Tooltip.prototype.cleanupTether = function cleanupTether() {
            if (this._tether) {
                this._tether.destroy();
            }
        };
        // private
        Tooltip.prototype._getAttachment = function _getAttachment(placement) {
            return AttachmentMap[placement.toUpperCase()];
        };
        Tooltip.prototype._setListeners = function _setListeners() {
            var _this3 = this;
            var triggers = this.config.trigger.split(' ');
            triggers.forEach(function (trigger) {
                if (trigger === 'click') {
                    $(_this3.element).on(_this3.constructor.Event.CLICK, _this3.config.selector, function (event) {
                        return _this3.toggle(event);
                    });
                }
                else if (trigger !== Trigger.MANUAL) {
                    var eventIn = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSEENTER : _this3.constructor.Event.FOCUSIN;
                    var eventOut = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSELEAVE : _this3.constructor.Event.FOCUSOUT;
                    $(_this3.element).on(eventIn, _this3.config.selector, function (event) {
                        return _this3._enter(event);
                    }).on(eventOut, _this3.config.selector, function (event) {
                        return _this3._leave(event);
                    });
                }
                $(_this3.element).closest('.modal').on('hide.bs.modal', function () {
                    return _this3.hide();
                });
            });
            if (this.config.selector) {
                this.config = $.extend({}, this.config, {
                    trigger: 'manual',
                    selector: ''
                });
            }
            else {
                this._fixTitle();
            }
        };
        Tooltip.prototype._fixTitle = function _fixTitle() {
            var titleType = _typeof(this.element.getAttribute('data-original-title'));
            if (this.element.getAttribute('title') || titleType !== 'string') {
                this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');
                this.element.setAttribute('title', '');
            }
        };
        Tooltip.prototype._enter = function _enter(event, context) {
            var dataKey = this.constructor.DATA_KEY;
            context = context || $(event.currentTarget).data(dataKey);
            if (!context) {
                context = new this.constructor(event.currentTarget, this._getDelegateConfig());
                $(event.currentTarget).data(dataKey, context);
            }
            if (event) {
                context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;
            }
            if ($(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {
                context._hoverState = HoverState.SHOW;
                return;
            }
            clearTimeout(context._timeout);
            context._hoverState = HoverState.SHOW;
            if (!context.config.delay || !context.config.delay.show) {
                context.show();
                return;
            }
            context._timeout = setTimeout(function () {
                if (context._hoverState === HoverState.SHOW) {
                    context.show();
                }
            }, context.config.delay.show);
        };
        Tooltip.prototype._leave = function _leave(event, context) {
            var dataKey = this.constructor.DATA_KEY;
            context = context || $(event.currentTarget).data(dataKey);
            if (!context) {
                context = new this.constructor(event.currentTarget, this._getDelegateConfig());
                $(event.currentTarget).data(dataKey, context);
            }
            if (event) {
                context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;
            }
            if (context._isWithActiveTrigger()) {
                return;
            }
            clearTimeout(context._timeout);
            context._hoverState = HoverState.OUT;
            if (!context.config.delay || !context.config.delay.hide) {
                context.hide();
                return;
            }
            context._timeout = setTimeout(function () {
                if (context._hoverState === HoverState.OUT) {
                    context.hide();
                }
            }, context.config.delay.hide);
        };
        Tooltip.prototype._isWithActiveTrigger = function _isWithActiveTrigger() {
            for (var trigger in this._activeTrigger) {
                if (this._activeTrigger[trigger]) {
                    return true;
                }
            }
            return false;
        };
        Tooltip.prototype._getConfig = function _getConfig(config) {
            config = $.extend({}, this.constructor.Default, $(this.element).data(), config);
            if (config.delay && typeof config.delay === 'number') {
                config.delay = {
                    show: config.delay,
                    hide: config.delay
                };
            }
            Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);
            return config;
        };
        Tooltip.prototype._getDelegateConfig = function _getDelegateConfig() {
            var config = {};
            if (this.config) {
                for (var key in this.config) {
                    if (this.constructor.Default[key] !== this.config[key]) {
                        config[key] = this.config[key];
                    }
                }
            }
            return config;
        };
        // static
        Tooltip._jQueryInterface = function _jQueryInterface(config) {
            return this.each(function () {
                var data = $(this).data(DATA_KEY);
                var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config;
                if (!data && /dispose|hide/.test(config)) {
                    return;
                }
                if (!data) {
                    data = new Tooltip(this, _config);
                    $(this).data(DATA_KEY, data);
                }
                if (typeof config === 'string') {
                    if (data[config] === undefined) {
                        throw new Error('No method named "' + config + '"');
                    }
                    data[config]();
                }
            });
        };
        _createClass(Tooltip, null, [{
                key: 'VERSION',
                get: function get() {
                    return VERSION;
                }
            }, {
                key: 'Default',
                get: function get() {
                    return Default;
                }
            }, {
                key: 'NAME',
                get: function get() {
                    return NAME;
                }
            }, {
                key: 'DATA_KEY',
                get: function get() {
                    return DATA_KEY;
                }
            }, {
                key: 'Event',
                get: function get() {
                    return Event;
                }
            }, {
                key: 'EVENT_KEY',
                get: function get() {
                    return EVENT_KEY;
                }
            }, {
                key: 'DefaultType',
                get: function get() {
                    return DefaultType;
                }
            }]);
        return Tooltip;
    }();
    /**
     * ------------------------------------------------------------------------
     * jQuery
     * ------------------------------------------------------------------------
     */
    $.fn[NAME] = Tooltip._jQueryInterface;
    $.fn[NAME].Constructor = Tooltip;
    $.fn[NAME].noConflict = function () {
        $.fn[NAME] = JQUERY_NO_CONFLICT;
        return Tooltip._jQueryInterface;
    };
    return Tooltip;
}(jQuery); /* global Tether */
//# sourceMappingURL=tooltip.js.map
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9ib290c3RyYXAvanMvZGlzdC90b29sdGlwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUksT0FBTyxHQUFHLE9BQU8sTUFBTSxLQUFLLFVBQVUsSUFBSSxPQUFPLE1BQU0sQ0FBQyxRQUFRLEtBQUssUUFBUSxHQUFHLFVBQVUsR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxVQUFVLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxJQUFJLE9BQU8sTUFBTSxLQUFLLFVBQVUsSUFBSSxHQUFHLENBQUMsV0FBVyxLQUFLLE1BQU0sSUFBSSxHQUFHLEtBQUssTUFBTSxDQUFDLFNBQVMsR0FBRyxRQUFRLEdBQUcsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFN1EsSUFBSSxZQUFZLEdBQUcsY0FBYywwQkFBMEIsTUFBTSxFQUFFLEtBQUssSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztJQUFDLElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUFDLFVBQVUsQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDLFVBQVUsSUFBSSxLQUFLLENBQUM7SUFBQyxVQUFVLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztJQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxVQUFVLENBQUM7UUFBQyxVQUFVLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztJQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLFdBQVcsRUFBRSxVQUFVLEVBQUUsV0FBVyxJQUFJLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FB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SUFBSSxDQUFDO2dCQUNkLENBQUM7YUFDRixFQUFFO2dCQUNELEdBQUcsRUFBRSxVQUFVO2dCQUNmLEdBQUcsRUFBRTtvQkFDSCxNQUFNLENBQUMsUUFBUSxDQUFDO2dCQUNsQixDQUFDO2FBQ0YsRUFBRTtnQkFDRCxHQUFHLEVBQUUsT0FBTztnQkFDWixHQUFHLEVBQUU7b0JBQ0gsTUFBTSxDQUFDLEtBQUssQ0FBQztnQkFDZixDQUFDO2FBQ0YsRUFBRTtnQkFDRCxHQUFHLEVBQUUsV0FBVztnQkFDaEIsR0FBRyxFQUFFO29CQUNILE1BQU0sQ0FBQyxTQUFTLENBQUM7Z0JBQ25CLENBQUM7YUFDRixFQUFFO2dCQUNELEdBQUcsRUFBRSxhQUFhO2dCQUNsQixHQUFHLEVBQUU7b0JBQ0gsTUFBTSxDQUFDLFdBQVcsQ0FBQztnQkFDckIsQ0FBQzthQUNGLENBQUMsQ0FBQyxDQUFDO1FBRUosTUFBTSxDQUFDLE9BQU8sQ0FBQztJQUNqQixDQUFDLEVBQUUsQ0FBQztJQUVKOzs7O09BSUc7SUFFSCxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztJQUN0QyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUM7SUFDakMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxVQUFVLEdBQUc7UUFDdEIsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxrQkFBa0IsQ0FBQztRQUNoQyxNQUFNLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDO0lBQ2xDLENBQUMsQ0FBQztJQUVGLE1BQU0sQ0FBQyxPQUFPLENBQUM7QUFDakIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsbUJBQW1CO0FBQzlCLG1DQUFtQyIsImZpbGUiOiJ3d3cvcGFja3MvYm9vdHN0cmFwL2pzL2Rpc3QvdG9vbHRpcC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuLyoqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQm9vdHN0cmFwICh2NC4wLjAtYWxwaGEuNik6IHRvb2x0aXAuanNcbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbnZhciBUb29sdGlwID0gZnVuY3Rpb24gKCQpIHtcblxuICAvKipcbiAgICogQ2hlY2sgZm9yIFRldGhlciBkZXBlbmRlbmN5XG4gICAqIFRldGhlciAtIGh0dHA6Ly90ZXRoZXIuaW8vXG4gICAqL1xuICBpZiAodHlwZW9mIFRldGhlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Jvb3RzdHJhcCB0b29sdGlwcyByZXF1aXJlIFRldGhlciAoaHR0cDovL3RldGhlci5pby8pJyk7XG4gIH1cblxuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAqIENvbnN0YW50c1xuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICovXG5cbiAgdmFyIE5BTUUgPSAndG9vbHRpcCc7XG4gIHZhciBWRVJTSU9OID0gJzQuMC4wLWFscGhhLjYnO1xuICB2YXIgREFUQV9LRVkgPSAnYnMudG9vbHRpcCc7XG4gIHZhciBFVkVOVF9LRVkgPSAnLicgKyBEQVRBX0tFWTtcbiAgdmFyIEpRVUVSWV9OT19DT05GTElDVCA9ICQuZm5bTkFNRV07XG4gIHZhciBUUkFOU0lUSU9OX0RVUkFUSU9OID0gMTUwO1xuICB2YXIgQ0xBU1NfUFJFRklYID0gJ2JzLXRldGhlcic7XG5cbiAgdmFyIERlZmF1bHQgPSB7XG4gICAgYW5pbWF0aW9uOiB0cnVlLFxuICAgIHRlbXBsYXRlOiAnPGRpdiBjbGFzcz1cInRvb2x0aXBcIiByb2xlPVwidG9vbHRpcFwiPicgKyAnPGRpdiBjbGFzcz1cInRvb2x0aXAtaW5uZXJcIj48L2Rpdj48L2Rpdj4nLFxuICAgIHRyaWdnZXI6ICdob3ZlciBmb2N1cycsXG4gICAgdGl0bGU6ICcnLFxuICAgIGRlbGF5OiAwLFxuICAgIGh0bWw6IGZhbHNlLFxuICAgIHNlbGVjdG9yOiBmYWxzZSxcbiAgICBwbGFjZW1lbnQ6ICd0b3AnLFxuICAgIG9mZnNldDogJzAgMCcsXG4gICAgY29uc3RyYWludHM6IFtdLFxuICAgIGNvbnRhaW5lcjogZmFsc2VcbiAgfTtcblxuICB2YXIgRGVmYXVsdFR5cGUgPSB7XG4gICAgYW5pbWF0aW9uOiAnYm9vbGVhbicsXG4gICAgdGVtcGxhdGU6ICdzdHJpbmcnLFxuICAgIHRpdGxlOiAnKHN0cmluZ3xlbGVtZW50fGZ1bmN0aW9uKScsXG4gICAgdHJpZ2dlcjogJ3N0cmluZycsXG4gICAgZGVsYXk6ICcobnVtYmVyfG9iamVjdCknLFxuICAgIGh0bWw6ICdib29sZWFuJyxcbiAgICBzZWxlY3RvcjogJyhzdHJpbmd8Ym9vbGVhbiknLFxuICAgIHBsYWNlbWVudDogJyhzdHJpbmd8ZnVuY3Rpb24pJyxcbiAgICBvZmZzZXQ6ICdzdHJpbmcnLFxuICAgIGNvbnN0cmFpbnRzOiAnYXJyYXknLFxuICAgIGNvbnRhaW5lcjogJyhzdHJpbmd8ZWxlbWVudHxib29sZWFuKSdcbiAgfTtcblxuICB2YXIgQXR0YWNobWVudE1hcCA9IHtcbiAgICBUT1A6ICdib3R0b20gY2VudGVyJyxcbiAgICBSSUdIVDogJ21pZGRsZSBsZWZ0JyxcbiAgICBCT1RUT006ICd0b3AgY2VudGVyJyxcbiAgICBMRUZUOiAnbWlkZGxlIHJpZ2h0J1xuICB9O1xuXG4gIHZhciBIb3ZlclN0YXRlID0ge1xuICAgIFNIT1c6ICdzaG93JyxcbiAgICBPVVQ6ICdvdXQnXG4gIH07XG5cbiAgdmFyIEV2ZW50ID0ge1xuICAgIEhJREU6ICdoaWRlJyArIEVWRU5UX0tFWSxcbiAgICBISURERU46ICdoaWRkZW4nICsgRVZFTlRfS0VZLFxuICAgIFNIT1c6ICdzaG93JyArIEVWRU5UX0tFWSxcbiAgICBTSE9XTjogJ3Nob3duJyArIEVWRU5UX0tFWSxcbiAgICBJTlNFUlRFRDogJ2luc2VydGVkJyArIEVWRU5UX0tFWSxcbiAgICBDTElDSzogJ2NsaWNrJyArIEVWRU5UX0tFWSxcbiAgICBGT0NVU0lOOiAnZm9jdXNpbicgKyBFVkVOVF9LRVksXG4gICAgRk9DVVNPVVQ6ICdmb2N1c291dCcgKyBFVkVOVF9LRVksXG4gICAgTU9VU0VFTlRFUjogJ21vdXNlZW50ZXInICsgRVZFTlRfS0VZLFxuICAgIE1PVVNFTEVBVkU6ICdtb3VzZWxlYXZlJyArIEVWRU5UX0tFWVxuICB9O1xuXG4gIHZhciBDbGFzc05hbWUgPSB7XG4gICAgRkFERTogJ2ZhZGUnLFxuICAgIFNIT1c6ICdzaG93J1xuICB9O1xuXG4gIHZhciBTZWxlY3RvciA9IHtcbiAgICBUT09MVElQOiAnLnRvb2x0aXAnLFxuICAgIFRPT0xUSVBfSU5ORVI6ICcudG9vbHRpcC1pbm5lcidcbiAgfTtcblxuICB2YXIgVGV0aGVyQ2xhc3MgPSB7XG4gICAgZWxlbWVudDogZmFsc2UsXG4gICAgZW5hYmxlZDogZmFsc2VcbiAgfTtcblxuICB2YXIgVHJpZ2dlciA9IHtcbiAgICBIT1ZFUjogJ2hvdmVyJyxcbiAgICBGT0NVUzogJ2ZvY3VzJyxcbiAgICBDTElDSzogJ2NsaWNrJyxcbiAgICBNQU5VQUw6ICdtYW51YWwnXG4gIH07XG5cbiAgLyoqXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKiBDbGFzcyBEZWZpbml0aW9uXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICB2YXIgVG9vbHRpcCA9IGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUb29sdGlwKGVsZW1lbnQsIGNvbmZpZykge1xuICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRvb2x0aXApO1xuXG4gICAgICAvLyBwcml2YXRlXG4gICAgICB0aGlzLl9pc0VuYWJsZWQgPSB0cnVlO1xuICAgICAgdGhpcy5fdGltZW91dCA9IDA7XG4gICAgICB0aGlzLl9ob3ZlclN0YXRlID0gJyc7XG4gICAgICB0aGlzLl9hY3RpdmVUcmlnZ2VyID0ge307XG4gICAgICB0aGlzLl9pc1RyYW5zaXRpb25pbmcgPSBmYWxzZTtcbiAgICAgIHRoaXMuX3RldGhlciA9IG51bGw7XG5cbiAgICAgIC8vIHByb3RlY3RlZFxuICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgIHRoaXMuY29uZmlnID0gdGhpcy5fZ2V0Q29uZmlnKGNvbmZpZyk7XG4gICAgICB0aGlzLnRpcCA9IG51bGw7XG5cbiAgICAgIHRoaXMuX3NldExpc3RlbmVycygpO1xuICAgIH1cblxuICAgIC8vIGdldHRlcnNcblxuICAgIC8vIHB1YmxpY1xuXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuZW5hYmxlID0gZnVuY3Rpb24gZW5hYmxlKCkge1xuICAgICAgdGhpcy5faXNFbmFibGVkID0gdHJ1ZTtcbiAgICB9O1xuXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuZGlzYWJsZSA9IGZ1bmN0aW9uIGRpc2FibGUoKSB7XG4gICAgICB0aGlzLl9pc0VuYWJsZWQgPSBmYWxzZTtcbiAgICB9O1xuXG4gICAgVG9vbHRpcC5wcm90b3R5cGUudG9nZ2xlRW5hYmxlZCA9IGZ1bmN0aW9uIHRvZ2dsZUVuYWJsZWQoKSB7XG4gICAgICB0aGlzLl9pc0VuYWJsZWQgPSAhdGhpcy5faXNFbmFibGVkO1xuICAgIH07XG5cbiAgICBUb29sdGlwLnByb3RvdHlwZS50b2dnbGUgPSBmdW5jdGlvbiB0b2dnbGUoZXZlbnQpIHtcbiAgICAgIGlmIChldmVudCkge1xuICAgICAgICB2YXIgZGF0YUtleSA9IHRoaXMuY29uc3RydWN0b3IuREFUQV9LRVk7XG4gICAgICAgIHZhciBjb250ZXh0ID0gJChldmVudC5jdXJyZW50VGFyZ2V0KS5kYXRhKGRhdGFLZXkpO1xuXG4gICAgICAgIGlmICghY29udGV4dCkge1xuICAgICAgICAgIGNvbnRleHQgPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcihldmVudC5jdXJyZW50VGFyZ2V0LCB0aGlzLl9nZXREZWxlZ2F0ZUNvbmZpZygpKTtcbiAgICAgICAgICAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoZGF0YUtleSwgY29udGV4dCk7XG4gICAgICAgIH1cblxuICAgICAgICBjb250ZXh0Ll9hY3RpdmVUcmlnZ2VyLmNsaWNrID0gIWNvbnRleHQuX2FjdGl2ZVRyaWdnZXIuY2xpY2s7XG5cbiAgICAgICAgaWYgKGNvbnRleHQuX2lzV2l0aEFjdGl2ZVRyaWdnZXIoKSkge1xuICAgICAgICAgIGNvbnRleHQuX2VudGVyKG51bGwsIGNvbnRleHQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnRleHQuX2xlYXZlKG51bGwsIGNvbnRleHQpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuXG4gICAgICAgIGlmICgkKHRoaXMuZ2V0VGlwRWxlbWVudCgpKS5oYXNDbGFzcyhDbGFzc05hbWUuU0hPVykpIHtcbiAgICAgICAgICB0aGlzLl9sZWF2ZShudWxsLCB0aGlzKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9lbnRlcihudWxsLCB0aGlzKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5fdGltZW91dCk7XG5cbiAgICAgIHRoaXMuY2xlYW51cFRldGhlcigpO1xuXG4gICAgICAkLnJlbW92ZURhdGEodGhpcy5lbGVtZW50LCB0aGlzLmNvbnN0cnVjdG9yLkRBVEFfS0VZKTtcblxuICAgICAgJCh0aGlzLmVsZW1lbnQpLm9mZih0aGlzLmNvbnN0cnVjdG9yLkVWRU5UX0tFWSk7XG4gICAgICAkKHRoaXMuZWxlbWVudCkuY2xvc2VzdCgnLm1vZGFsJykub2ZmKCdoaWRlLmJzLm1vZGFsJyk7XG5cbiAgICAgIGlmICh0aGlzLnRpcCkge1xuICAgICAgICAkKHRoaXMudGlwKS5yZW1vdmUoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5faXNFbmFibGVkID0gbnVsbDtcbiAgICAgIHRoaXMuX3RpbWVvdXQgPSBudWxsO1xuICAgICAgdGhpcy5faG92ZXJTdGF0ZSA9IG51bGw7XG4gICAgICB0aGlzLl9hY3RpdmVUcmlnZ2VyID0gbnVsbDtcbiAgICAgIHRoaXMuX3RldGhlciA9IG51bGw7XG5cbiAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7XG4gICAgICB0aGlzLmNvbmZpZyA9IG51bGw7XG4gICAgICB0aGlzLnRpcCA9IG51bGw7XG4gICAgfTtcblxuICAgIFRvb2x0aXAucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiBzaG93KCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgaWYgKCQodGhpcy5lbGVtZW50KS5jc3MoJ2Rpc3BsYXknKSA9PT0gJ25vbmUnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIHVzZSBzaG93IG9uIHZpc2libGUgZWxlbWVudHMnKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHNob3dFdmVudCA9ICQuRXZlbnQodGhpcy5jb25zdHJ1Y3Rvci5FdmVudC5TSE9XKTtcbiAgICAgIGlmICh0aGlzLmlzV2l0aENvbnRlbnQoKSAmJiB0aGlzLl9pc0VuYWJsZWQpIHtcbiAgICAgICAgaWYgKHRoaXMuX2lzVHJhbnNpdGlvbmluZykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVG9vbHRpcCBpcyB0cmFuc2l0aW9uaW5nJyk7XG4gICAgICAgIH1cbiAgICAgICAgJCh0aGlzLmVsZW1lbnQpLnRyaWdnZXIoc2hvd0V2ZW50KTtcblxuICAgICAgICB2YXIgaXNJblRoZURvbSA9ICQuY29udGFpbnModGhpcy5lbGVtZW50Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCB0aGlzLmVsZW1lbnQpO1xuXG4gICAgICAgIGlmIChzaG93RXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgfHwgIWlzSW5UaGVEb20pIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdGlwID0gdGhpcy5nZXRUaXBFbGVtZW50KCk7XG4gICAgICAgIHZhciB0aXBJZCA9IFV0aWwuZ2V0VUlEKHRoaXMuY29uc3RydWN0b3IuTkFNRSk7XG5cbiAgICAgICAgdGlwLnNldEF0dHJpYnV0ZSgnaWQnLCB0aXBJZCk7XG4gICAgICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtZGVzY3JpYmVkYnknLCB0aXBJZCk7XG5cbiAgICAgICAgdGhpcy5zZXRDb250ZW50KCk7XG5cbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLmFuaW1hdGlvbikge1xuICAgICAgICAgICQodGlwKS5hZGRDbGFzcyhDbGFzc05hbWUuRkFERSk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcGxhY2VtZW50ID0gdHlwZW9mIHRoaXMuY29uZmlnLnBsYWNlbWVudCA9PT0gJ2Z1bmN0aW9uJyA/IHRoaXMuY29uZmlnLnBsYWNlbWVudC5jYWxsKHRoaXMsIHRpcCwgdGhpcy5lbGVtZW50KSA6IHRoaXMuY29uZmlnLnBsYWNlbWVudDtcblxuICAgICAgICB2YXIgYXR0YWNobWVudCA9IHRoaXMuX2dldEF0dGFjaG1lbnQocGxhY2VtZW50KTtcblxuICAgICAgICB2YXIgY29udGFpbmVyID0gdGhpcy5jb25maWcuY29udGFpbmVyID09PSBmYWxzZSA/IGRvY3VtZW50LmJvZHkgOiAkKHRoaXMuY29uZmlnLmNvbnRhaW5lcik7XG5cbiAgICAgICAgJCh0aXApLmRhdGEodGhpcy5jb25zdHJ1Y3Rvci5EQVRBX0tFWSwgdGhpcykuYXBwZW5kVG8oY29udGFpbmVyKTtcblxuICAgICAgICAkKHRoaXMuZWxlbWVudCkudHJpZ2dlcih0aGlzLmNvbnN0cnVjdG9yLkV2ZW50LklOU0VSVEVEKTtcblxuICAgICAgICB0aGlzLl90ZXRoZXIgPSBuZXcgVGV0aGVyKHtcbiAgICAgICAgICBhdHRhY2htZW50OiBhdHRhY2htZW50LFxuICAgICAgICAgIGVsZW1lbnQ6IHRpcCxcbiAgICAgICAgICB0YXJnZXQ6IHRoaXMuZWxlbWVudCxcbiAgICAgICAgICBjbGFzc2VzOiBUZXRoZXJDbGFzcyxcbiAgICAgICAgICBjbGFzc1ByZWZpeDogQ0xBU1NfUFJFRklYLFxuICAgICAgICAgIG9mZnNldDogdGhpcy5jb25maWcub2Zmc2V0LFxuICAgICAgICAgIGNvbnN0cmFpbnRzOiB0aGlzLmNvbmZpZy5jb25zdHJhaW50cyxcbiAgICAgICAgICBhZGRUYXJnZXRDbGFzc2VzOiBmYWxzZVxuICAgICAgICB9KTtcblxuICAgICAgICBVdGlsLnJlZmxvdyh0aXApO1xuICAgICAgICB0aGlzLl90ZXRoZXIucG9zaXRpb24oKTtcblxuICAgICAgICAkKHRpcCkuYWRkQ2xhc3MoQ2xhc3NOYW1lLlNIT1cpO1xuXG4gICAgICAgIHZhciBjb21wbGV0ZSA9IGZ1bmN0aW9uIGNvbXBsZXRlKCkge1xuICAgICAgICAgIHZhciBwcmV2SG92ZXJTdGF0ZSA9IF90aGlzLl9ob3ZlclN0YXRlO1xuICAgICAgICAgIF90aGlzLl9ob3ZlclN0YXRlID0gbnVsbDtcbiAgICAgICAgICBfdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gZmFsc2U7XG5cbiAgICAgICAgICAkKF90aGlzLmVsZW1lbnQpLnRyaWdnZXIoX3RoaXMuY29uc3RydWN0b3IuRXZlbnQuU0hPV04pO1xuXG4gICAgICAgICAgaWYgKHByZXZIb3ZlclN0YXRlID09PSBIb3ZlclN0YXRlLk9VVCkge1xuICAgICAgICAgICAgX3RoaXMuX2xlYXZlKG51bGwsIF90aGlzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKFV0aWwuc3VwcG9ydHNUcmFuc2l0aW9uRW5kKCkgJiYgJCh0aGlzLnRpcCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLkZBREUpKSB7XG4gICAgICAgICAgdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gdHJ1ZTtcbiAgICAgICAgICAkKHRoaXMudGlwKS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgY29tcGxldGUpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKFRvb2x0aXAuX1RSQU5TSVRJT05fRFVSQVRJT04pO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbXBsZXRlKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIFRvb2x0aXAucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbiBoaWRlKGNhbGxiYWNrKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIHRpcCA9IHRoaXMuZ2V0VGlwRWxlbWVudCgpO1xuICAgICAgdmFyIGhpZGVFdmVudCA9ICQuRXZlbnQodGhpcy5jb25zdHJ1Y3Rvci5FdmVudC5ISURFKTtcbiAgICAgIGlmICh0aGlzLl9pc1RyYW5zaXRpb25pbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUb29sdGlwIGlzIHRyYW5zaXRpb25pbmcnKTtcbiAgICAgIH1cbiAgICAgIHZhciBjb21wbGV0ZSA9IGZ1bmN0aW9uIGNvbXBsZXRlKCkge1xuICAgICAgICBpZiAoX3RoaXMyLl9ob3ZlclN0YXRlICE9PSBIb3ZlclN0YXRlLlNIT1cgJiYgdGlwLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICB0aXAucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aXApO1xuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXMyLmVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5Jyk7XG4gICAgICAgICQoX3RoaXMyLmVsZW1lbnQpLnRyaWdnZXIoX3RoaXMyLmNvbnN0cnVjdG9yLkV2ZW50LkhJRERFTik7XG4gICAgICAgIF90aGlzMi5faXNUcmFuc2l0aW9uaW5nID0gZmFsc2U7XG4gICAgICAgIF90aGlzMi5jbGVhbnVwVGV0aGVyKCk7XG5cbiAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgJCh0aGlzLmVsZW1lbnQpLnRyaWdnZXIoaGlkZUV2ZW50KTtcblxuICAgICAgaWYgKGhpZGVFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgICQodGlwKS5yZW1vdmVDbGFzcyhDbGFzc05hbWUuU0hPVyk7XG5cbiAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXJbVHJpZ2dlci5DTElDS10gPSBmYWxzZTtcbiAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXJbVHJpZ2dlci5GT0NVU10gPSBmYWxzZTtcbiAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXJbVHJpZ2dlci5IT1ZFUl0gPSBmYWxzZTtcblxuICAgICAgaWYgKFV0aWwuc3VwcG9ydHNUcmFuc2l0aW9uRW5kKCkgJiYgJCh0aGlzLnRpcCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLkZBREUpKSB7XG4gICAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IHRydWU7XG4gICAgICAgICQodGlwKS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgY29tcGxldGUpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKFRSQU5TSVRJT05fRFVSQVRJT04pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29tcGxldGUoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5faG92ZXJTdGF0ZSA9ICcnO1xuICAgIH07XG5cbiAgICAvLyBwcm90ZWN0ZWRcblxuICAgIFRvb2x0aXAucHJvdG90eXBlLmlzV2l0aENvbnRlbnQgPSBmdW5jdGlvbiBpc1dpdGhDb250ZW50KCkge1xuICAgICAgcmV0dXJuIEJvb2xlYW4odGhpcy5nZXRUaXRsZSgpKTtcbiAgICB9O1xuXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuZ2V0VGlwRWxlbWVudCA9IGZ1bmN0aW9uIGdldFRpcEVsZW1lbnQoKSB7XG4gICAgICByZXR1cm4gdGhpcy50aXAgPSB0aGlzLnRpcCB8fCAkKHRoaXMuY29uZmlnLnRlbXBsYXRlKVswXTtcbiAgICB9O1xuXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuc2V0Q29udGVudCA9IGZ1bmN0aW9uIHNldENvbnRlbnQoKSB7XG4gICAgICB2YXIgJHRpcCA9ICQodGhpcy5nZXRUaXBFbGVtZW50KCkpO1xuXG4gICAgICB0aGlzLnNldEVsZW1lbnRDb250ZW50KCR0aXAuZmluZChTZWxlY3Rvci5UT09MVElQX0lOTkVSKSwgdGhpcy5nZXRUaXRsZSgpKTtcblxuICAgICAgJHRpcC5yZW1vdmVDbGFzcyhDbGFzc05hbWUuRkFERSArICcgJyArIENsYXNzTmFtZS5TSE9XKTtcblxuICAgICAgdGhpcy5jbGVhbnVwVGV0aGVyKCk7XG4gICAgfTtcblxuICAgIFRvb2x0aXAucHJvdG90eXBlLnNldEVsZW1lbnRDb250ZW50ID0gZnVuY3Rpb24gc2V0RWxlbWVudENvbnRlbnQoJGVsZW1lbnQsIGNvbnRlbnQpIHtcbiAgICAgIHZhciBodG1sID0gdGhpcy5jb25maWcuaHRtbDtcbiAgICAgIGlmICgodHlwZW9mIGNvbnRlbnQgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGNvbnRlbnQpKSA9PT0gJ29iamVjdCcgJiYgKGNvbnRlbnQubm9kZVR5cGUgfHwgY29udGVudC5qcXVlcnkpKSB7XG4gICAgICAgIC8vIGNvbnRlbnQgaXMgYSBET00gbm9kZSBvciBhIGpRdWVyeVxuICAgICAgICBpZiAoaHRtbCkge1xuICAgICAgICAgIGlmICghJChjb250ZW50KS5wYXJlbnQoKS5pcygkZWxlbWVudCkpIHtcbiAgICAgICAgICAgICRlbGVtZW50LmVtcHR5KCkuYXBwZW5kKGNvbnRlbnQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAkZWxlbWVudC50ZXh0KCQoY29udGVudCkudGV4dCgpKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJGVsZW1lbnRbaHRtbCA/ICdodG1sJyA6ICd0ZXh0J10oY29udGVudCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIFRvb2x0aXAucHJvdG90eXBlLmdldFRpdGxlID0gZnVuY3Rpb24gZ2V0VGl0bGUoKSB7XG4gICAgICB2YXIgdGl0bGUgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLW9yaWdpbmFsLXRpdGxlJyk7XG5cbiAgICAgIGlmICghdGl0bGUpIHtcbiAgICAgICAgdGl0bGUgPSB0eXBlb2YgdGhpcy5jb25maWcudGl0bGUgPT09ICdmdW5jdGlvbicgPyB0aGlzLmNvbmZpZy50aXRsZS5jYWxsKHRoaXMuZWxlbWVudCkgOiB0aGlzLmNvbmZpZy50aXRsZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRpdGxlO1xuICAgIH07XG5cbiAgICBUb29sdGlwLnByb3RvdHlwZS5jbGVhbnVwVGV0aGVyID0gZnVuY3Rpb24gY2xlYW51cFRldGhlcigpIHtcbiAgICAgIGlmICh0aGlzLl90ZXRoZXIpIHtcbiAgICAgICAgdGhpcy5fdGV0aGVyLmRlc3Ryb3koKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gcHJpdmF0ZVxuXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuX2dldEF0dGFjaG1lbnQgPSBmdW5jdGlvbiBfZ2V0QXR0YWNobWVudChwbGFjZW1lbnQpIHtcbiAgICAgIHJldHVybiBBdHRhY2htZW50TWFwW3BsYWNlbWVudC50b1VwcGVyQ2FzZSgpXTtcbiAgICB9O1xuXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuX3NldExpc3RlbmVycyA9IGZ1bmN0aW9uIF9zZXRMaXN0ZW5lcnMoKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdmFyIHRyaWdnZXJzID0gdGhpcy5jb25maWcudHJpZ2dlci5zcGxpdCgnICcpO1xuXG4gICAgICB0cmlnZ2Vycy5mb3JFYWNoKGZ1bmN0aW9uICh0cmlnZ2VyKSB7XG4gICAgICAgIGlmICh0cmlnZ2VyID09PSAnY2xpY2snKSB7XG4gICAgICAgICAgJChfdGhpczMuZWxlbWVudCkub24oX3RoaXMzLmNvbnN0cnVjdG9yLkV2ZW50LkNMSUNLLCBfdGhpczMuY29uZmlnLnNlbGVjdG9yLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpczMudG9nZ2xlKGV2ZW50KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIGlmICh0cmlnZ2VyICE9PSBUcmlnZ2VyLk1BTlVBTCkge1xuICAgICAgICAgIHZhciBldmVudEluID0gdHJpZ2dlciA9PT0gVHJpZ2dlci5IT1ZFUiA/IF90aGlzMy5jb25zdHJ1Y3Rvci5FdmVudC5NT1VTRUVOVEVSIDogX3RoaXMzLmNvbnN0cnVjdG9yLkV2ZW50LkZPQ1VTSU47XG4gICAgICAgICAgdmFyIGV2ZW50T3V0ID0gdHJpZ2dlciA9PT0gVHJpZ2dlci5IT1ZFUiA/IF90aGlzMy5jb25zdHJ1Y3Rvci5FdmVudC5NT1VTRUxFQVZFIDogX3RoaXMzLmNvbnN0cnVjdG9yLkV2ZW50LkZPQ1VTT1VUO1xuXG4gICAgICAgICAgJChfdGhpczMuZWxlbWVudCkub24oZXZlbnRJbiwgX3RoaXMzLmNvbmZpZy5zZWxlY3RvciwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMzLl9lbnRlcihldmVudCk7XG4gICAgICAgICAgfSkub24oZXZlbnRPdXQsIF90aGlzMy5jb25maWcuc2VsZWN0b3IsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5fbGVhdmUoZXZlbnQpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgJChfdGhpczMuZWxlbWVudCkuY2xvc2VzdCgnLm1vZGFsJykub24oJ2hpZGUuYnMubW9kYWwnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMy5oaWRlKCk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG5cbiAgICAgIGlmICh0aGlzLmNvbmZpZy5zZWxlY3Rvcikge1xuICAgICAgICB0aGlzLmNvbmZpZyA9ICQuZXh0ZW5kKHt9LCB0aGlzLmNvbmZpZywge1xuICAgICAgICAgIHRyaWdnZXI6ICdtYW51YWwnLFxuICAgICAgICAgIHNlbGVjdG9yOiAnJ1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX2ZpeFRpdGxlKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIFRvb2x0aXAucHJvdG90eXBlLl9maXhUaXRsZSA9IGZ1bmN0aW9uIF9maXhUaXRsZSgpIHtcbiAgICAgIHZhciB0aXRsZVR5cGUgPSBfdHlwZW9mKHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtb3JpZ2luYWwtdGl0bGUnKSk7XG4gICAgICBpZiAodGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZSgndGl0bGUnKSB8fCB0aXRsZVR5cGUgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtb3JpZ2luYWwtdGl0bGUnLCB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCd0aXRsZScpIHx8ICcnKTtcbiAgICAgICAgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZSgndGl0bGUnLCAnJyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIFRvb2x0aXAucHJvdG90eXBlLl9lbnRlciA9IGZ1bmN0aW9uIF9lbnRlcihldmVudCwgY29udGV4dCkge1xuICAgICAgdmFyIGRhdGFLZXkgPSB0aGlzLmNvbnN0cnVjdG9yLkRBVEFfS0VZO1xuXG4gICAgICBjb250ZXh0ID0gY29udGV4dCB8fCAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoZGF0YUtleSk7XG5cbiAgICAgIGlmICghY29udGV4dCkge1xuICAgICAgICBjb250ZXh0ID0gbmV3IHRoaXMuY29uc3RydWN0b3IoZXZlbnQuY3VycmVudFRhcmdldCwgdGhpcy5fZ2V0RGVsZWdhdGVDb25maWcoKSk7XG4gICAgICAgICQoZXZlbnQuY3VycmVudFRhcmdldCkuZGF0YShkYXRhS2V5LCBjb250ZXh0KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGV2ZW50KSB7XG4gICAgICAgIGNvbnRleHQuX2FjdGl2ZVRyaWdnZXJbZXZlbnQudHlwZSA9PT0gJ2ZvY3VzaW4nID8gVHJpZ2dlci5GT0NVUyA6IFRyaWdnZXIuSE9WRVJdID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCQoY29udGV4dC5nZXRUaXBFbGVtZW50KCkpLmhhc0NsYXNzKENsYXNzTmFtZS5TSE9XKSB8fCBjb250ZXh0Ll9ob3ZlclN0YXRlID09PSBIb3ZlclN0YXRlLlNIT1cpIHtcbiAgICAgICAgY29udGV4dC5faG92ZXJTdGF0ZSA9IEhvdmVyU3RhdGUuU0hPVztcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjbGVhclRpbWVvdXQoY29udGV4dC5fdGltZW91dCk7XG5cbiAgICAgIGNvbnRleHQuX2hvdmVyU3RhdGUgPSBIb3ZlclN0YXRlLlNIT1c7XG5cbiAgICAgIGlmICghY29udGV4dC5jb25maWcuZGVsYXkgfHwgIWNvbnRleHQuY29uZmlnLmRlbGF5LnNob3cpIHtcbiAgICAgICAgY29udGV4dC5zaG93KCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29udGV4dC5fdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoY29udGV4dC5faG92ZXJTdGF0ZSA9PT0gSG92ZXJTdGF0ZS5TSE9XKSB7XG4gICAgICAgICAgY29udGV4dC5zaG93KCk7XG4gICAgICAgIH1cbiAgICAgIH0sIGNvbnRleHQuY29uZmlnLmRlbGF5LnNob3cpO1xuICAgIH07XG5cbiAgICBUb29sdGlwLnByb3RvdHlwZS5fbGVhdmUgPSBmdW5jdGlvbiBfbGVhdmUoZXZlbnQsIGNvbnRleHQpIHtcbiAgICAgIHZhciBkYXRhS2V5ID0gdGhpcy5jb25zdHJ1Y3Rvci5EQVRBX0tFWTtcblxuICAgICAgY29udGV4dCA9IGNvbnRleHQgfHwgJChldmVudC5jdXJyZW50VGFyZ2V0KS5kYXRhKGRhdGFLZXkpO1xuXG4gICAgICBpZiAoIWNvbnRleHQpIHtcbiAgICAgICAgY29udGV4dCA9IG5ldyB0aGlzLmNvbnN0cnVjdG9yKGV2ZW50LmN1cnJlbnRUYXJnZXQsIHRoaXMuX2dldERlbGVnYXRlQ29uZmlnKCkpO1xuICAgICAgICAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoZGF0YUtleSwgY29udGV4dCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChldmVudCkge1xuICAgICAgICBjb250ZXh0Ll9hY3RpdmVUcmlnZ2VyW2V2ZW50LnR5cGUgPT09ICdmb2N1c291dCcgPyBUcmlnZ2VyLkZPQ1VTIDogVHJpZ2dlci5IT1ZFUl0gPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNvbnRleHQuX2lzV2l0aEFjdGl2ZVRyaWdnZXIoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNsZWFyVGltZW91dChjb250ZXh0Ll90aW1lb3V0KTtcblxuICAgICAgY29udGV4dC5faG92ZXJTdGF0ZSA9IEhvdmVyU3RhdGUuT1VUO1xuXG4gICAgICBpZiAoIWNvbnRleHQuY29uZmlnLmRlbGF5IHx8ICFjb250ZXh0LmNvbmZpZy5kZWxheS5oaWRlKSB7XG4gICAgICAgIGNvbnRleHQuaGlkZSgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnRleHQuX3RpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGNvbnRleHQuX2hvdmVyU3RhdGUgPT09IEhvdmVyU3RhdGUuT1VUKSB7XG4gICAgICAgICAgY29udGV4dC5oaWRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0sIGNvbnRleHQuY29uZmlnLmRlbGF5LmhpZGUpO1xuICAgIH07XG5cbiAgICBUb29sdGlwLnByb3RvdHlwZS5faXNXaXRoQWN0aXZlVHJpZ2dlciA9IGZ1bmN0aW9uIF9pc1dpdGhBY3RpdmVUcmlnZ2VyKCkge1xuICAgICAgZm9yICh2YXIgdHJpZ2dlciBpbiB0aGlzLl9hY3RpdmVUcmlnZ2VyKSB7XG4gICAgICAgIGlmICh0aGlzLl9hY3RpdmVUcmlnZ2VyW3RyaWdnZXJdKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG5cbiAgICBUb29sdGlwLnByb3RvdHlwZS5fZ2V0Q29uZmlnID0gZnVuY3Rpb24gX2dldENvbmZpZyhjb25maWcpIHtcbiAgICAgIGNvbmZpZyA9ICQuZXh0ZW5kKHt9LCB0aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHQsICQodGhpcy5lbGVtZW50KS5kYXRhKCksIGNvbmZpZyk7XG5cbiAgICAgIGlmIChjb25maWcuZGVsYXkgJiYgdHlwZW9mIGNvbmZpZy5kZWxheSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgY29uZmlnLmRlbGF5ID0ge1xuICAgICAgICAgIHNob3c6IGNvbmZpZy5kZWxheSxcbiAgICAgICAgICBoaWRlOiBjb25maWcuZGVsYXlcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgVXRpbC50eXBlQ2hlY2tDb25maWcoTkFNRSwgY29uZmlnLCB0aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHRUeXBlKTtcblxuICAgICAgcmV0dXJuIGNvbmZpZztcbiAgICB9O1xuXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuX2dldERlbGVnYXRlQ29uZmlnID0gZnVuY3Rpb24gX2dldERlbGVnYXRlQ29uZmlnKCkge1xuICAgICAgdmFyIGNvbmZpZyA9IHt9O1xuXG4gICAgICBpZiAodGhpcy5jb25maWcpIHtcbiAgICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMuY29uZmlnKSB7XG4gICAgICAgICAgaWYgKHRoaXMuY29uc3RydWN0b3IuRGVmYXVsdFtrZXldICE9PSB0aGlzLmNvbmZpZ1trZXldKSB7XG4gICAgICAgICAgICBjb25maWdba2V5XSA9IHRoaXMuY29uZmlnW2tleV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb25maWc7XG4gICAgfTtcblxuICAgIC8vIHN0YXRpY1xuXG4gICAgVG9vbHRpcC5falF1ZXJ5SW50ZXJmYWNlID0gZnVuY3Rpb24gX2pRdWVyeUludGVyZmFjZShjb25maWcpIHtcbiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGF0YSA9ICQodGhpcykuZGF0YShEQVRBX0tFWSk7XG4gICAgICAgIHZhciBfY29uZmlnID0gKHR5cGVvZiBjb25maWcgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGNvbmZpZykpID09PSAnb2JqZWN0JyAmJiBjb25maWc7XG5cbiAgICAgICAgaWYgKCFkYXRhICYmIC9kaXNwb3NlfGhpZGUvLnRlc3QoY29uZmlnKSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghZGF0YSkge1xuICAgICAgICAgIGRhdGEgPSBuZXcgVG9vbHRpcCh0aGlzLCBfY29uZmlnKTtcbiAgICAgICAgICAkKHRoaXMpLmRhdGEoREFUQV9LRVksIGRhdGEpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgaWYgKGRhdGFbY29uZmlnXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIG1ldGhvZCBuYW1lZCBcIicgKyBjb25maWcgKyAnXCInKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZGF0YVtjb25maWddKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBfY3JlYXRlQ2xhc3MoVG9vbHRpcCwgbnVsbCwgW3tcbiAgICAgIGtleTogJ1ZFUlNJT04nLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBWRVJTSU9OO1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogJ0RlZmF1bHQnLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBEZWZhdWx0O1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogJ05BTUUnLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBOQU1FO1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogJ0RBVEFfS0VZJyxcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gREFUQV9LRVk7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiAnRXZlbnQnLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBFdmVudDtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6ICdFVkVOVF9LRVknLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBFVkVOVF9LRVk7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiAnRGVmYXVsdFR5cGUnLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiBEZWZhdWx0VHlwZTtcbiAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gVG9vbHRpcDtcbiAgfSgpO1xuXG4gIC8qKlxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICogalF1ZXJ5XG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICAkLmZuW05BTUVdID0gVG9vbHRpcC5falF1ZXJ5SW50ZXJmYWNlO1xuICAkLmZuW05BTUVdLkNvbnN0cnVjdG9yID0gVG9vbHRpcDtcbiAgJC5mbltOQU1FXS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm5bTkFNRV0gPSBKUVVFUllfTk9fQ09ORkxJQ1Q7XG4gICAgcmV0dXJuIFRvb2x0aXAuX2pRdWVyeUludGVyZmFjZTtcbiAgfTtcblxuICByZXR1cm4gVG9vbHRpcDtcbn0oalF1ZXJ5KTsgLyogZ2xvYmFsIFRldGhlciAqL1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9vbHRpcC5qcy5tYXBcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy9wYWNrcy9ib290c3RyYXAvanMvZGlzdC90b29sdGlwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUksT0FBTyxHQUFHLE9BQU8sTUFBTSxLQUFLLFVBQVUsSUFBSSxPQUFPLE1BQU0sQ0FBQyxRQUFRLEtBQUssUUFBUSxHQUFHLFVBQVUsR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxVQUFVLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxJQUFJLE9BQU8sTUFBTSxLQUFLLFVBQVUsSUFBSSxHQUFHLENBQUMsV0FBVyxLQUFLLE1BQU0sSUFBSSxHQUFHLEtBQUssTUFBTSxDQUFDLFNBQVMsR0FBRyxRQUFRLEdBQUcsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN1EsSUFBSSxZQUFZLEdBQUc7SUFDZiwwQkFBMEIsTUFBTSxFQUFFLEtBQUs7UUFDbkMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDcEMsSUFBSSxVQUFVLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzFCLFVBQVUsQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDLFVBQVUsSUFBSSxLQUFLLENBQUM7WUFDdkQsVUFBVSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7WUFDL0IsRUFBRSxDQUFDLENBQUMsT0FBTyxJQUFJLFVBQVUsQ0FBQztnQkFDdEIsVUFBVSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFDL0IsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUM5RCxDQUFDO0lBQ0wsQ0FBQztJQUNELE1BQU0sQ0FBQyxVQUFVLFdBQVcsRUFBRSxVQUFVLEVBQUUsV0FBVztRQUNqRCxFQUFFLENBQUMsQ0FB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cyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICAgICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgICAgICAgaWYgKHByb3RvUHJvcHMpXG4gICAgICAgICAgICBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgICAgIGlmIChzdGF0aWNQcm9wcylcbiAgICAgICAgICAgIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICAgICAgcmV0dXJuIENvbnN0cnVjdG9yO1xuICAgIH07XG59KCk7XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgICB9XG59XG4vKipcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBCb290c3RyYXAgKHY0LjAuMC1hbHBoYS42KTogdG9vbHRpcC5qc1xuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cbnZhciBUb29sdGlwID0gZnVuY3Rpb24gKCQpIHtcbiAgICAvKipcbiAgICAgKiBDaGVjayBmb3IgVGV0aGVyIGRlcGVuZGVuY3lcbiAgICAgKiBUZXRoZXIgLSBodHRwOi8vdGV0aGVyLmlvL1xuICAgICAqL1xuICAgIGlmICh0eXBlb2YgVGV0aGVyID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Jvb3RzdHJhcCB0b29sdGlwcyByZXF1aXJlIFRldGhlciAoaHR0cDovL3RldGhlci5pby8pJyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqIENvbnN0YW50c1xuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqL1xuICAgIHZhciBOQU1FID0gJ3Rvb2x0aXAnO1xuICAgIHZhciBWRVJTSU9OID0gJzQuMC4wLWFscGhhLjYnO1xuICAgIHZhciBEQVRBX0tFWSA9ICdicy50b29sdGlwJztcbiAgICB2YXIgRVZFTlRfS0VZID0gJy4nICsgREFUQV9LRVk7XG4gICAgdmFyIEpRVUVSWV9OT19DT05GTElDVCA9ICQuZm5bTkFNRV07XG4gICAgdmFyIFRSQU5TSVRJT05fRFVSQVRJT04gPSAxNTA7XG4gICAgdmFyIENMQVNTX1BSRUZJWCA9ICdicy10ZXRoZXInO1xuICAgIHZhciBEZWZhdWx0ID0ge1xuICAgICAgICBhbmltYXRpb246IHRydWUsXG4gICAgICAgIHRlbXBsYXRlOiAnPGRpdiBjbGFzcz1cInRvb2x0aXBcIiByb2xlPVwidG9vbHRpcFwiPicgKyAnPGRpdiBjbGFzcz1cInRvb2x0aXAtaW5uZXJcIj48L2Rpdj48L2Rpdj4nLFxuICAgICAgICB0cmlnZ2VyOiAnaG92ZXIgZm9jdXMnLFxuICAgICAgICB0aXRsZTogJycsXG4gICAgICAgIGRlbGF5OiAwLFxuICAgICAgICBodG1sOiBmYWxzZSxcbiAgICAgICAgc2VsZWN0b3I6IGZhbHNlLFxuICAgICAgICBwbGFjZW1lbnQ6ICd0b3AnLFxuICAgICAgICBvZmZzZXQ6ICcwIDAnLFxuICAgICAgICBjb25zdHJhaW50czogW10sXG4gICAgICAgIGNvbnRhaW5lcjogZmFsc2VcbiAgICB9O1xuICAgIHZhciBEZWZhdWx0VHlwZSA9IHtcbiAgICAgICAgYW5pbWF0aW9uOiAnYm9vbGVhbicsXG4gICAgICAgIHRlbXBsYXRlOiAnc3RyaW5nJyxcbiAgICAgICAgdGl0bGU6ICcoc3RyaW5nfGVsZW1lbnR8ZnVuY3Rpb24pJyxcbiAgICAgICAgdHJpZ2dlcjogJ3N0cmluZycsXG4gICAgICAgIGRlbGF5OiAnKG51bWJlcnxvYmplY3QpJyxcbiAgICAgICAgaHRtbDogJ2Jvb2xlYW4nLFxuICAgICAgICBzZWxlY3RvcjogJyhzdHJpbmd8Ym9vbGVhbiknLFxuICAgICAgICBwbGFjZW1lbnQ6ICcoc3RyaW5nfGZ1bmN0aW9uKScsXG4gICAgICAgIG9mZnNldDogJ3N0cmluZycsXG4gICAgICAgIGNvbnN0cmFpbnRzOiAnYXJyYXknLFxuICAgICAgICBjb250YWluZXI6ICcoc3RyaW5nfGVsZW1lbnR8Ym9vbGVhbiknXG4gICAgfTtcbiAgICB2YXIgQXR0YWNobWVudE1hcCA9IHtcbiAgICAgICAgVE9QOiAnYm90dG9tIGNlbnRlcicsXG4gICAgICAgIFJJR0hUOiAnbWlkZGxlIGxlZnQnLFxuICAgICAgICBCT1RUT006ICd0b3AgY2VudGVyJyxcbiAgICAgICAgTEVGVDogJ21pZGRsZSByaWdodCdcbiAgICB9O1xuICAgIHZhciBIb3ZlclN0YXRlID0ge1xuICAgICAgICBTSE9XOiAnc2hvdycsXG4gICAgICAgIE9VVDogJ291dCdcbiAgICB9O1xuICAgIHZhciBFdmVudCA9IHtcbiAgICAgICAgSElERTogJ2hpZGUnICsgRVZFTlRfS0VZLFxuICAgICAgICBISURERU46ICdoaWRkZW4nICsgRVZFTlRfS0VZLFxuICAgICAgICBTSE9XOiAnc2hvdycgKyBFVkVOVF9LRVksXG4gICAgICAgIFNIT1dOOiAnc2hvd24nICsgRVZFTlRfS0VZLFxuICAgICAgICBJTlNFUlRFRDogJ2luc2VydGVkJyArIEVWRU5UX0tFWSxcbiAgICAgICAgQ0xJQ0s6ICdjbGljaycgKyBFVkVOVF9LRVksXG4gICAgICAgIEZPQ1VTSU46ICdmb2N1c2luJyArIEVWRU5UX0tFWSxcbiAgICAgICAgRk9DVVNPVVQ6ICdmb2N1c291dCcgKyBFVkVOVF9LRVksXG4gICAgICAgIE1PVVNFRU5URVI6ICdtb3VzZWVudGVyJyArIEVWRU5UX0tFWSxcbiAgICAgICAgTU9VU0VMRUFWRTogJ21vdXNlbGVhdmUnICsgRVZFTlRfS0VZXG4gICAgfTtcbiAgICB2YXIgQ2xhc3NOYW1lID0ge1xuICAgICAgICBGQURFOiAnZmFkZScsXG4gICAgICAgIFNIT1c6ICdzaG93J1xuICAgIH07XG4gICAgdmFyIFNlbGVjdG9yID0ge1xuICAgICAgICBUT09MVElQOiAnLnRvb2x0aXAnLFxuICAgICAgICBUT09MVElQX0lOTkVSOiAnLnRvb2x0aXAtaW5uZXInXG4gICAgfTtcbiAgICB2YXIgVGV0aGVyQ2xhc3MgPSB7XG4gICAgICAgIGVsZW1lbnQ6IGZhbHNlLFxuICAgICAgICBlbmFibGVkOiBmYWxzZVxuICAgIH07XG4gICAgdmFyIFRyaWdnZXIgPSB7XG4gICAgICAgIEhPVkVSOiAnaG92ZXInLFxuICAgICAgICBGT0NVUzogJ2ZvY3VzJyxcbiAgICAgICAgQ0xJQ0s6ICdjbGljaycsXG4gICAgICAgIE1BTlVBTDogJ21hbnVhbCdcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqIENsYXNzIERlZmluaXRpb25cbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgKi9cbiAgICB2YXIgVG9vbHRpcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZnVuY3Rpb24gVG9vbHRpcChlbGVtZW50LCBjb25maWcpIHtcbiAgICAgICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUb29sdGlwKTtcbiAgICAgICAgICAgIC8vIHByaXZhdGVcbiAgICAgICAgICAgIHRoaXMuX2lzRW5hYmxlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLl90aW1lb3V0ID0gMDtcbiAgICAgICAgICAgIHRoaXMuX2hvdmVyU3RhdGUgPSAnJztcbiAgICAgICAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXIgPSB7fTtcbiAgICAgICAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5fdGV0aGVyID0gbnVsbDtcbiAgICAgICAgICAgIC8vIHByb3RlY3RlZFxuICAgICAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgICAgICAgIHRoaXMuY29uZmlnID0gdGhpcy5fZ2V0Q29uZmlnKGNvbmZpZyk7XG4gICAgICAgICAgICB0aGlzLnRpcCA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLl9zZXRMaXN0ZW5lcnMoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBnZXR0ZXJzXG4gICAgICAgIC8vIHB1YmxpY1xuICAgICAgICBUb29sdGlwLnByb3RvdHlwZS5lbmFibGUgPSBmdW5jdGlvbiBlbmFibGUoKSB7XG4gICAgICAgICAgICB0aGlzLl9pc0VuYWJsZWQgPSB0cnVlO1xuICAgICAgICB9O1xuICAgICAgICBUb29sdGlwLnByb3RvdHlwZS5kaXNhYmxlID0gZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgICAgICAgICAgIHRoaXMuX2lzRW5hYmxlZCA9IGZhbHNlO1xuICAgICAgICB9O1xuICAgICAgICBUb29sdGlwLnByb3RvdHlwZS50b2dnbGVFbmFibGVkID0gZnVuY3Rpb24gdG9nZ2xlRW5hYmxlZCgpIHtcbiAgICAgICAgICAgIHRoaXMuX2lzRW5hYmxlZCA9ICF0aGlzLl9pc0VuYWJsZWQ7XG4gICAgICAgIH07XG4gICAgICAgIFRvb2x0aXAucHJvdG90eXBlLnRvZ2dsZSA9IGZ1bmN0aW9uIHRvZ2dsZShldmVudCkge1xuICAgICAgICAgICAgaWYgKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIGRhdGFLZXkgPSB0aGlzLmNvbnN0cnVjdG9yLkRBVEFfS0VZO1xuICAgICAgICAgICAgICAgIHZhciBjb250ZXh0ID0gJChldmVudC5jdXJyZW50VGFyZ2V0KS5kYXRhKGRhdGFLZXkpO1xuICAgICAgICAgICAgICAgIGlmICghY29udGV4dCkge1xuICAgICAgICAgICAgICAgICAgICBjb250ZXh0ID0gbmV3IHRoaXMuY29uc3RydWN0b3IoZXZlbnQuY3VycmVudFRhcmdldCwgdGhpcy5fZ2V0RGVsZWdhdGVDb25maWcoKSk7XG4gICAgICAgICAgICAgICAgICAgICQoZXZlbnQuY3VycmVudFRhcmdldCkuZGF0YShkYXRhS2V5LCBjb250ZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29udGV4dC5fYWN0aXZlVHJpZ2dlci5jbGljayA9ICFjb250ZXh0Ll9hY3RpdmVUcmlnZ2VyLmNsaWNrO1xuICAgICAgICAgICAgICAgIGlmIChjb250ZXh0Ll9pc1dpdGhBY3RpdmVUcmlnZ2VyKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dC5fZW50ZXIobnVsbCwgY29udGV4dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb250ZXh0Ll9sZWF2ZShudWxsLCBjb250ZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzLmdldFRpcEVsZW1lbnQoKSkuaGFzQ2xhc3MoQ2xhc3NOYW1lLlNIT1cpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2xlYXZlKG51bGwsIHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuX2VudGVyKG51bGwsIHRoaXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBUb29sdGlwLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0KTtcbiAgICAgICAgICAgIHRoaXMuY2xlYW51cFRldGhlcigpO1xuICAgICAgICAgICAgJC5yZW1vdmVEYXRhKHRoaXMuZWxlbWVudCwgdGhpcy5jb25zdHJ1Y3Rvci5EQVRBX0tFWSk7XG4gICAgICAgICAgICAkKHRoaXMuZWxlbWVudCkub2ZmKHRoaXMuY29uc3RydWN0b3IuRVZFTlRfS0VZKTtcbiAgICAgICAgICAgICQodGhpcy5lbGVtZW50KS5jbG9zZXN0KCcubW9kYWwnKS5vZmYoJ2hpZGUuYnMubW9kYWwnKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnRpcCkge1xuICAgICAgICAgICAgICAgICQodGhpcy50aXApLnJlbW92ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5faXNFbmFibGVkID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuX3RpbWVvdXQgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5faG92ZXJTdGF0ZSA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLl9hY3RpdmVUcmlnZ2VyID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuX3RldGhlciA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5jb25maWcgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy50aXAgPSBudWxsO1xuICAgICAgICB9O1xuICAgICAgICBUb29sdGlwLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gc2hvdygpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICBpZiAoJCh0aGlzLmVsZW1lbnQpLmNzcygnZGlzcGxheScpID09PSAnbm9uZScpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BsZWFzZSB1c2Ugc2hvdyBvbiB2aXNpYmxlIGVsZW1lbnRzJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgc2hvd0V2ZW50ID0gJC5FdmVudCh0aGlzLmNvbnN0cnVjdG9yLkV2ZW50LlNIT1cpO1xuICAgICAgICAgICAgaWYgKHRoaXMuaXNXaXRoQ29udGVudCgpICYmIHRoaXMuX2lzRW5hYmxlZCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9pc1RyYW5zaXRpb25pbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUb29sdGlwIGlzIHRyYW5zaXRpb25pbmcnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJCh0aGlzLmVsZW1lbnQpLnRyaWdnZXIoc2hvd0V2ZW50KTtcbiAgICAgICAgICAgICAgICB2YXIgaXNJblRoZURvbSA9ICQuY29udGFpbnModGhpcy5lbGVtZW50Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCB0aGlzLmVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIGlmIChzaG93RXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgfHwgIWlzSW5UaGVEb20pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgdGlwID0gdGhpcy5nZXRUaXBFbGVtZW50KCk7XG4gICAgICAgICAgICAgICAgdmFyIHRpcElkID0gVXRpbC5nZXRVSUQodGhpcy5jb25zdHJ1Y3Rvci5OQU1FKTtcbiAgICAgICAgICAgICAgICB0aXAuc2V0QXR0cmlidXRlKCdpZCcsIHRpcElkKTtcbiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5JywgdGlwSWQpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0Q29udGVudCgpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNvbmZpZy5hbmltYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgJCh0aXApLmFkZENsYXNzKENsYXNzTmFtZS5GQURFKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHBsYWNlbWVudCA9IHR5cGVvZiB0aGlzLmNvbmZpZy5wbGFjZW1lbnQgPT09ICdmdW5jdGlvbicgPyB0aGlzLmNvbmZpZy5wbGFjZW1lbnQuY2FsbCh0aGlzLCB0aXAsIHRoaXMuZWxlbWVudCkgOiB0aGlzLmNvbmZpZy5wbGFjZW1lbnQ7XG4gICAgICAgICAgICAgICAgdmFyIGF0dGFjaG1lbnQgPSB0aGlzLl9nZXRBdHRhY2htZW50KHBsYWNlbWVudCk7XG4gICAgICAgICAgICAgICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuY29uZmlnLmNvbnRhaW5lciA9PT0gZmFsc2UgPyBkb2N1bWVudC5ib2R5IDogJCh0aGlzLmNvbmZpZy5jb250YWluZXIpO1xuICAgICAgICAgICAgICAgICQodGlwKS5kYXRhKHRoaXMuY29uc3RydWN0b3IuREFUQV9LRVksIHRoaXMpLmFwcGVuZFRvKGNvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgJCh0aGlzLmVsZW1lbnQpLnRyaWdnZXIodGhpcy5jb25zdHJ1Y3Rvci5FdmVudC5JTlNFUlRFRCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fdGV0aGVyID0gbmV3IFRldGhlcih7XG4gICAgICAgICAgICAgICAgICAgIGF0dGFjaG1lbnQ6IGF0dGFjaG1lbnQsXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6IHRpcCxcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiB0aGlzLmVsZW1lbnQsXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzZXM6IFRldGhlckNsYXNzLFxuICAgICAgICAgICAgICAgICAgICBjbGFzc1ByZWZpeDogQ0xBU1NfUFJFRklYLFxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IHRoaXMuY29uZmlnLm9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgY29uc3RyYWludHM6IHRoaXMuY29uZmlnLmNvbnN0cmFpbnRzLFxuICAgICAgICAgICAgICAgICAgICBhZGRUYXJnZXRDbGFzc2VzOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIFV0aWwucmVmbG93KHRpcCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fdGV0aGVyLnBvc2l0aW9uKCk7XG4gICAgICAgICAgICAgICAgJCh0aXApLmFkZENsYXNzKENsYXNzTmFtZS5TSE9XKTtcbiAgICAgICAgICAgICAgICB2YXIgY29tcGxldGUgPSBmdW5jdGlvbiBjb21wbGV0ZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHByZXZIb3ZlclN0YXRlID0gX3RoaXMuX2hvdmVyU3RhdGU7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLl9ob3ZlclN0YXRlID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuX2lzVHJhbnNpdGlvbmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAkKF90aGlzLmVsZW1lbnQpLnRyaWdnZXIoX3RoaXMuY29uc3RydWN0b3IuRXZlbnQuU0hPV04pO1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJldkhvdmVyU3RhdGUgPT09IEhvdmVyU3RhdGUuT1VUKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5fbGVhdmUobnVsbCwgX3RoaXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZiAoVXRpbC5zdXBwb3J0c1RyYW5zaXRpb25FbmQoKSAmJiAkKHRoaXMudGlwKS5oYXNDbGFzcyhDbGFzc05hbWUuRkFERSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzLnRpcCkub25lKFV0aWwuVFJBTlNJVElPTl9FTkQsIGNvbXBsZXRlKS5lbXVsYXRlVHJhbnNpdGlvbkVuZChUb29sdGlwLl9UUkFOU0lUSU9OX0RVUkFUSU9OKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb21wbGV0ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBUb29sdGlwLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gaGlkZShjYWxsYmFjaykge1xuICAgICAgICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG4gICAgICAgICAgICB2YXIgdGlwID0gdGhpcy5nZXRUaXBFbGVtZW50KCk7XG4gICAgICAgICAgICB2YXIgaGlkZUV2ZW50ID0gJC5FdmVudCh0aGlzLmNvbnN0cnVjdG9yLkV2ZW50LkhJREUpO1xuICAgICAgICAgICAgaWYgKHRoaXMuX2lzVHJhbnNpdGlvbmluZykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVG9vbHRpcCBpcyB0cmFuc2l0aW9uaW5nJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgY29tcGxldGUgPSBmdW5jdGlvbiBjb21wbGV0ZSgpIHtcbiAgICAgICAgICAgICAgICBpZiAoX3RoaXMyLl9ob3ZlclN0YXRlICE9PSBIb3ZlclN0YXRlLlNIT1cgJiYgdGlwLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGlwLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGlwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgX3RoaXMyLmVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5Jyk7XG4gICAgICAgICAgICAgICAgJChfdGhpczIuZWxlbWVudCkudHJpZ2dlcihfdGhpczIuY29uc3RydWN0b3IuRXZlbnQuSElEREVOKTtcbiAgICAgICAgICAgICAgICBfdGhpczIuX2lzVHJhbnNpdGlvbmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIF90aGlzMi5jbGVhbnVwVGV0aGVyKCk7XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICQodGhpcy5lbGVtZW50KS50cmlnZ2VyKGhpZGVFdmVudCk7XG4gICAgICAgICAgICBpZiAoaGlkZUV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJCh0aXApLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5TSE9XKTtcbiAgICAgICAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXJbVHJpZ2dlci5DTElDS10gPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXJbVHJpZ2dlci5GT0NVU10gPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXJbVHJpZ2dlci5IT1ZFUl0gPSBmYWxzZTtcbiAgICAgICAgICAgIGlmIChVdGlsLnN1cHBvcnRzVHJhbnNpdGlvbkVuZCgpICYmICQodGhpcy50aXApLmhhc0NsYXNzKENsYXNzTmFtZS5GQURFKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgJCh0aXApLm9uZShVdGlsLlRSQU5TSVRJT05fRU5ELCBjb21wbGV0ZSkuZW11bGF0ZVRyYW5zaXRpb25FbmQoVFJBTlNJVElPTl9EVVJBVElPTik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb21wbGV0ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5faG92ZXJTdGF0ZSA9ICcnO1xuICAgICAgICB9O1xuICAgICAgICAvLyBwcm90ZWN0ZWRcbiAgICAgICAgVG9vbHRpcC5wcm90b3R5cGUuaXNXaXRoQ29udGVudCA9IGZ1bmN0aW9uIGlzV2l0aENvbnRlbnQoKSB7XG4gICAgICAgICAgICByZXR1cm4gQm9vbGVhbih0aGlzLmdldFRpdGxlKCkpO1xuICAgICAgICB9O1xuICAgICAgICBUb29sdGlwLnByb3RvdHlwZS5nZXRUaXBFbGVtZW50ID0gZnVuY3Rpb24gZ2V0VGlwRWxlbWVudCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRpcCA9IHRoaXMudGlwIHx8ICQodGhpcy5jb25maWcudGVtcGxhdGUpWzBdO1xuICAgICAgICB9O1xuICAgICAgICBUb29sdGlwLnByb3RvdHlwZS5zZXRDb250ZW50ID0gZnVuY3Rpb24gc2V0Q29udGVudCgpIHtcbiAgICAgICAgICAgIHZhciAkdGlwID0gJCh0aGlzLmdldFRpcEVsZW1lbnQoKSk7XG4gICAgICAgICAgICB0aGlzLnNldEVsZW1lbnRDb250ZW50KCR0aXAuZmluZChTZWxlY3Rvci5UT09MVElQX0lOTkVSKSwgdGhpcy5nZXRUaXRsZSgpKTtcbiAgICAgICAgICAgICR0aXAucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lLkZBREUgKyAnICcgKyBDbGFzc05hbWUuU0hPVyk7XG4gICAgICAgICAgICB0aGlzLmNsZWFudXBUZXRoZXIoKTtcbiAgICAgICAgfTtcbiAgICAgICAgVG9vbHRpcC5wcm90b3R5cGUuc2V0RWxlbWVudENvbnRlbnQgPSBmdW5jdGlvbiBzZXRFbGVtZW50Q29udGVudCgkZWxlbWVudCwgY29udGVudCkge1xuICAgICAgICAgICAgdmFyIGh0bWwgPSB0aGlzLmNvbmZpZy5odG1sO1xuICAgICAgICAgICAgaWYgKCh0eXBlb2YgY29udGVudCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoY29udGVudCkpID09PSAnb2JqZWN0JyAmJiAoY29udGVudC5ub2RlVHlwZSB8fCBjb250ZW50LmpxdWVyeSkpIHtcbiAgICAgICAgICAgICAgICAvLyBjb250ZW50IGlzIGEgRE9NIG5vZGUgb3IgYSBqUXVlcnlcbiAgICAgICAgICAgICAgICBpZiAoaHRtbCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoISQoY29udGVudCkucGFyZW50KCkuaXMoJGVsZW1lbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkZWxlbWVudC5lbXB0eSgpLmFwcGVuZChjb250ZW50KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgJGVsZW1lbnQudGV4dCgkKGNvbnRlbnQpLnRleHQoKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgJGVsZW1lbnRbaHRtbCA/ICdodG1sJyA6ICd0ZXh0J10oY29udGVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFRvb2x0aXAucHJvdG90eXBlLmdldFRpdGxlID0gZnVuY3Rpb24gZ2V0VGl0bGUoKSB7XG4gICAgICAgICAgICB2YXIgdGl0bGUgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLW9yaWdpbmFsLXRpdGxlJyk7XG4gICAgICAgICAgICBpZiAoIXRpdGxlKSB7XG4gICAgICAgICAgICAgICAgdGl0bGUgPSB0eXBlb2YgdGhpcy5jb25maWcudGl0bGUgPT09ICdmdW5jdGlvbicgPyB0aGlzLmNvbmZpZy50aXRsZS5jYWxsKHRoaXMuZWxlbWVudCkgOiB0aGlzLmNvbmZpZy50aXRsZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aXRsZTtcbiAgICAgICAgfTtcbiAgICAgICAgVG9vbHRpcC5wcm90b3R5cGUuY2xlYW51cFRldGhlciA9IGZ1bmN0aW9uIGNsZWFudXBUZXRoZXIoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fdGV0aGVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fdGV0aGVyLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgLy8gcHJpdmF0ZVxuICAgICAgICBUb29sdGlwLnByb3RvdHlwZS5fZ2V0QXR0YWNobWVudCA9IGZ1bmN0aW9uIF9nZXRBdHRhY2htZW50KHBsYWNlbWVudCkge1xuICAgICAgICAgICAgcmV0dXJuIEF0dGFjaG1lbnRNYXBbcGxhY2VtZW50LnRvVXBwZXJDYXNlKCldO1xuICAgICAgICB9O1xuICAgICAgICBUb29sdGlwLnByb3RvdHlwZS5fc2V0TGlzdGVuZXJzID0gZnVuY3Rpb24gX3NldExpc3RlbmVycygpIHtcbiAgICAgICAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuICAgICAgICAgICAgdmFyIHRyaWdnZXJzID0gdGhpcy5jb25maWcudHJpZ2dlci5zcGxpdCgnICcpO1xuICAgICAgICAgICAgdHJpZ2dlcnMuZm9yRWFjaChmdW5jdGlvbiAodHJpZ2dlcikge1xuICAgICAgICAgICAgICAgIGlmICh0cmlnZ2VyID09PSAnY2xpY2snKSB7XG4gICAgICAgICAgICAgICAgICAgICQoX3RoaXMzLmVsZW1lbnQpLm9uKF90aGlzMy5jb25zdHJ1Y3Rvci5FdmVudC5DTElDSywgX3RoaXMzLmNvbmZpZy5zZWxlY3RvciwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLnRvZ2dsZShldmVudCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0cmlnZ2VyICE9PSBUcmlnZ2VyLk1BTlVBTCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZXZlbnRJbiA9IHRyaWdnZXIgPT09IFRyaWdnZXIuSE9WRVIgPyBfdGhpczMuY29uc3RydWN0b3IuRXZlbnQuTU9VU0VFTlRFUiA6IF90aGlzMy5jb25zdHJ1Y3Rvci5FdmVudC5GT0NVU0lOO1xuICAgICAgICAgICAgICAgICAgICB2YXIgZXZlbnRPdXQgPSB0cmlnZ2VyID09PSBUcmlnZ2VyLkhPVkVSID8gX3RoaXMzLmNvbnN0cnVjdG9yLkV2ZW50Lk1PVVNFTEVBVkUgOiBfdGhpczMuY29uc3RydWN0b3IuRXZlbnQuRk9DVVNPVVQ7XG4gICAgICAgICAgICAgICAgICAgICQoX3RoaXMzLmVsZW1lbnQpLm9uKGV2ZW50SW4sIF90aGlzMy5jb25maWcuc2VsZWN0b3IsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5fZW50ZXIoZXZlbnQpO1xuICAgICAgICAgICAgICAgICAgICB9KS5vbihldmVudE91dCwgX3RoaXMzLmNvbmZpZy5zZWxlY3RvciwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLl9sZWF2ZShldmVudCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAkKF90aGlzMy5lbGVtZW50KS5jbG9zZXN0KCcubW9kYWwnKS5vbignaGlkZS5icy5tb2RhbCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5oaWRlKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbmZpZy5zZWxlY3Rvcikge1xuICAgICAgICAgICAgICAgIHRoaXMuY29uZmlnID0gJC5leHRlbmQoe30sIHRoaXMuY29uZmlnLCB7XG4gICAgICAgICAgICAgICAgICAgIHRyaWdnZXI6ICdtYW51YWwnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJydcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuX2ZpeFRpdGxlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFRvb2x0aXAucHJvdG90eXBlLl9maXhUaXRsZSA9IGZ1bmN0aW9uIF9maXhUaXRsZSgpIHtcbiAgICAgICAgICAgIHZhciB0aXRsZVR5cGUgPSBfdHlwZW9mKHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtb3JpZ2luYWwtdGl0bGUnKSk7XG4gICAgICAgICAgICBpZiAodGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZSgndGl0bGUnKSB8fCB0aXRsZVR5cGUgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS1vcmlnaW5hbC10aXRsZScsIHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ3RpdGxlJykgfHwgJycpO1xuICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgJycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBUb29sdGlwLnByb3RvdHlwZS5fZW50ZXIgPSBmdW5jdGlvbiBfZW50ZXIoZXZlbnQsIGNvbnRleHQpIHtcbiAgICAgICAgICAgIHZhciBkYXRhS2V5ID0gdGhpcy5jb25zdHJ1Y3Rvci5EQVRBX0tFWTtcbiAgICAgICAgICAgIGNvbnRleHQgPSBjb250ZXh0IHx8ICQoZXZlbnQuY3VycmVudFRhcmdldCkuZGF0YShkYXRhS2V5KTtcbiAgICAgICAgICAgIGlmICghY29udGV4dCkge1xuICAgICAgICAgICAgICAgIGNvbnRleHQgPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcihldmVudC5jdXJyZW50VGFyZ2V0LCB0aGlzLl9nZXREZWxlZ2F0ZUNvbmZpZygpKTtcbiAgICAgICAgICAgICAgICAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoZGF0YUtleSwgY29udGV4dCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0Ll9hY3RpdmVUcmlnZ2VyW2V2ZW50LnR5cGUgPT09ICdmb2N1c2luJyA/IFRyaWdnZXIuRk9DVVMgOiBUcmlnZ2VyLkhPVkVSXSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoJChjb250ZXh0LmdldFRpcEVsZW1lbnQoKSkuaGFzQ2xhc3MoQ2xhc3NOYW1lLlNIT1cpIHx8IGNvbnRleHQuX2hvdmVyU3RhdGUgPT09IEhvdmVyU3RhdGUuU0hPVykge1xuICAgICAgICAgICAgICAgIGNvbnRleHQuX2hvdmVyU3RhdGUgPSBIb3ZlclN0YXRlLlNIT1c7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGNvbnRleHQuX3RpbWVvdXQpO1xuICAgICAgICAgICAgY29udGV4dC5faG92ZXJTdGF0ZSA9IEhvdmVyU3RhdGUuU0hPVztcbiAgICAgICAgICAgIGlmICghY29udGV4dC5jb25maWcuZGVsYXkgfHwgIWNvbnRleHQuY29uZmlnLmRlbGF5LnNob3cpIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0LnNob3coKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250ZXh0Ll90aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNvbnRleHQuX2hvdmVyU3RhdGUgPT09IEhvdmVyU3RhdGUuU0hPVykge1xuICAgICAgICAgICAgICAgICAgICBjb250ZXh0LnNob3coKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBjb250ZXh0LmNvbmZpZy5kZWxheS5zaG93KTtcbiAgICAgICAgfTtcbiAgICAgICAgVG9vbHRpcC5wcm90b3R5cGUuX2xlYXZlID0gZnVuY3Rpb24gX2xlYXZlKGV2ZW50LCBjb250ZXh0KSB7XG4gICAgICAgICAgICB2YXIgZGF0YUtleSA9IHRoaXMuY29uc3RydWN0b3IuREFUQV9LRVk7XG4gICAgICAgICAgICBjb250ZXh0ID0gY29udGV4dCB8fCAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoZGF0YUtleSk7XG4gICAgICAgICAgICBpZiAoIWNvbnRleHQpIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0ID0gbmV3IHRoaXMuY29uc3RydWN0b3IoZXZlbnQuY3VycmVudFRhcmdldCwgdGhpcy5fZ2V0RGVsZWdhdGVDb25maWcoKSk7XG4gICAgICAgICAgICAgICAgJChldmVudC5jdXJyZW50VGFyZ2V0KS5kYXRhKGRhdGFLZXksIGNvbnRleHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgY29udGV4dC5fYWN0aXZlVHJpZ2dlcltldmVudC50eXBlID09PSAnZm9jdXNvdXQnID8gVHJpZ2dlci5GT0NVUyA6IFRyaWdnZXIuSE9WRVJdID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY29udGV4dC5faXNXaXRoQWN0aXZlVHJpZ2dlcigpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGNvbnRleHQuX3RpbWVvdXQpO1xuICAgICAgICAgICAgY29udGV4dC5faG92ZXJTdGF0ZSA9IEhvdmVyU3RhdGUuT1VUO1xuICAgICAgICAgICAgaWYgKCFjb250ZXh0LmNvbmZpZy5kZWxheSB8fCAhY29udGV4dC5jb25maWcuZGVsYXkuaGlkZSkge1xuICAgICAgICAgICAgICAgIGNvbnRleHQuaGlkZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnRleHQuX3RpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoY29udGV4dC5faG92ZXJTdGF0ZSA9PT0gSG92ZXJTdGF0ZS5PVVQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dC5oaWRlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgY29udGV4dC5jb25maWcuZGVsYXkuaGlkZSk7XG4gICAgICAgIH07XG4gICAgICAgIFRvb2x0aXAucHJvdG90eXBlLl9pc1dpdGhBY3RpdmVUcmlnZ2VyID0gZnVuY3Rpb24gX2lzV2l0aEFjdGl2ZVRyaWdnZXIoKSB7XG4gICAgICAgICAgICBmb3IgKHZhciB0cmlnZ2VyIGluIHRoaXMuX2FjdGl2ZVRyaWdnZXIpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fYWN0aXZlVHJpZ2dlclt0cmlnZ2VyXSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH07XG4gICAgICAgIFRvb2x0aXAucHJvdG90eXBlLl9nZXRDb25maWcgPSBmdW5jdGlvbiBfZ2V0Q29uZmlnKGNvbmZpZykge1xuICAgICAgICAgICAgY29uZmlnID0gJC5leHRlbmQoe30sIHRoaXMuY29uc3RydWN0b3IuRGVmYXVsdCwgJCh0aGlzLmVsZW1lbnQpLmRhdGEoKSwgY29uZmlnKTtcbiAgICAgICAgICAgIGlmIChjb25maWcuZGVsYXkgJiYgdHlwZW9mIGNvbmZpZy5kZWxheSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICBjb25maWcuZGVsYXkgPSB7XG4gICAgICAgICAgICAgICAgICAgIHNob3c6IGNvbmZpZy5kZWxheSxcbiAgICAgICAgICAgICAgICAgICAgaGlkZTogY29uZmlnLmRlbGF5XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFV0aWwudHlwZUNoZWNrQ29uZmlnKE5BTUUsIGNvbmZpZywgdGhpcy5jb25zdHJ1Y3Rvci5EZWZhdWx0VHlwZSk7XG4gICAgICAgICAgICByZXR1cm4gY29uZmlnO1xuICAgICAgICB9O1xuICAgICAgICBUb29sdGlwLnByb3RvdHlwZS5fZ2V0RGVsZWdhdGVDb25maWcgPSBmdW5jdGlvbiBfZ2V0RGVsZWdhdGVDb25maWcoKSB7XG4gICAgICAgICAgICB2YXIgY29uZmlnID0ge307XG4gICAgICAgICAgICBpZiAodGhpcy5jb25maWcpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5jb25maWcpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuY29uc3RydWN0b3IuRGVmYXVsdFtrZXldICE9PSB0aGlzLmNvbmZpZ1trZXldKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maWdba2V5XSA9IHRoaXMuY29uZmlnW2tleV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY29uZmlnO1xuICAgICAgICB9O1xuICAgICAgICAvLyBzdGF0aWNcbiAgICAgICAgVG9vbHRpcC5falF1ZXJ5SW50ZXJmYWNlID0gZnVuY3Rpb24gX2pRdWVyeUludGVyZmFjZShjb25maWcpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBkYXRhID0gJCh0aGlzKS5kYXRhKERBVEFfS0VZKTtcbiAgICAgICAgICAgICAgICB2YXIgX2NvbmZpZyA9ICh0eXBlb2YgY29uZmlnID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihjb25maWcpKSA9PT0gJ29iamVjdCcgJiYgY29uZmlnO1xuICAgICAgICAgICAgICAgIGlmICghZGF0YSAmJiAvZGlzcG9zZXxoaWRlLy50ZXN0KGNvbmZpZykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IG5ldyBUb29sdGlwKHRoaXMsIF9jb25maWcpO1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmRhdGEoREFUQV9LRVksIGRhdGEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbmZpZyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFbY29uZmlnXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIG1ldGhvZCBuYW1lZCBcIicgKyBjb25maWcgKyAnXCInKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBkYXRhW2NvbmZpZ10oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX2NyZWF0ZUNsYXNzKFRvb2x0aXAsIG51bGwsIFt7XG4gICAgICAgICAgICAgICAga2V5OiAnVkVSU0lPTicsXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBWRVJTSU9OO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBrZXk6ICdEZWZhdWx0JyxcbiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIERlZmF1bHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIGtleTogJ05BTUUnLFxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gTkFNRTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAga2V5OiAnREFUQV9LRVknLFxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gREFUQV9LRVk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIGtleTogJ0V2ZW50JyxcbiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEV2ZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBrZXk6ICdFVkVOVF9LRVknLFxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRVZFTlRfS0VZO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBrZXk6ICdEZWZhdWx0VHlwZScsXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBEZWZhdWx0VHlwZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XSk7XG4gICAgICAgIHJldHVybiBUb29sdGlwO1xuICAgIH0oKTtcbiAgICAvKipcbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgKiBqUXVlcnlcbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgKi9cbiAgICAkLmZuW05BTUVdID0gVG9vbHRpcC5falF1ZXJ5SW50ZXJmYWNlO1xuICAgICQuZm5bTkFNRV0uQ29uc3RydWN0b3IgPSBUb29sdGlwO1xuICAgICQuZm5bTkFNRV0ubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJC5mbltOQU1FXSA9IEpRVUVSWV9OT19DT05GTElDVDtcbiAgICAgICAgcmV0dXJuIFRvb2x0aXAuX2pRdWVyeUludGVyZmFjZTtcbiAgICB9O1xuICAgIHJldHVybiBUb29sdGlwO1xufShqUXVlcnkpOyAvKiBnbG9iYWwgVGV0aGVyICovXG4vLyMgc291cmNlTWFwcGluZ1VSTD10b29sdGlwLmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbmQzZHk5d1lXTnJjeTlpYjI5MGMzUnlZWEF2YW5NdlpHbHpkQzkwYjI5c2RHbHdMbXB6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxFbEJRVWtzVDBGQlR5eEhRVUZITEU5QlFVOHNUVUZCVFN4TFFVRkxMRlZCUVZVc1NVRkJTU3hQUVVGUExFMUJRVTBzUTBGQlF5eFJRVUZSTEV0QlFVc3NVVUZCVVN4SFFVRkhMRlZCUVZVc1IwRkJSeXhKUVVGSkxFMUJRVTBzUTBGQlF5eFBRVUZQTEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhWUVVGVkxFZEJRVWNzU1VGQlNTeE5RVUZOTEVOQlFVTXNSMEZCUnl4SlFVRkpMRTlCUVU4c1RVRkJUU3hMUVVGTExGVkJRVlVzU1VGQlNTeEhRVUZITEVOQlFVTXNWMEZCVnl4TFFVRkxMRTFCUVUwc1NVRkJTU3hIUVVGSExFdEJRVXNzVFVGQlRTeERRVUZETEZOQlFWTXNSMEZCUnl4UlFVRlJMRWRCUVVjc1QwRkJUeXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdRVUZGTjFFc1NVRkJTU3haUVVGWkxFZEJRVWNzWTBGQll5d3dRa0ZCTUVJc1RVRkJUU3hGUVVGRkxFdEJRVXNzU1VGQlNTeEhRVUZITEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFVkJRVVVzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJReXhGUVVGRkxFVkJRVVVzUTBGQlF6dEpRVUZETEVsQlFVa3NWVUZCVlN4SFFVRkhMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEpRVUZETEZWQlFWVXNRMEZCUXl4VlFVRlZMRWRCUVVjc1ZVRkJWU3hEUVVGRExGVkJRVlVzU1VGQlNTeExRVUZMTEVOQlFVTTdTVUZCUXl4VlFVRlZMRU5CUVVNc1dVRkJXU3hIUVVGSExFbEJRVWtzUTBGQlF6dEpRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRTlCUVU4c1NVRkJTU3hWUVVGVkxFTkJRVU03VVVGQlF5eFZRVUZWTEVOQlFVTXNVVUZCVVN4SFFVRkhMRWxCUVVrc1EwRkJRenRKUVVGRExFMUJRVTBzUTBGQlF5eGpRVUZqTEVOQlFVTXNUVUZCVFN4RlFVRkZMRlZCUVZVc1EwRkJReXhIUVVGSExFVkJRVVVzVlVGQlZTeERRVUZETEVOQlFVTTdRVUZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF5eFZRVUZWTEZkQlFWY3NSVUZCUlN4VlFVRlZMRVZCUVVVc1YwRkJWeXhKUVVGSkxFVkJRVVVzUTBGQlF5eERRVUZETEZWQlFWVXNRMEZCUXp0SlFVRkRMR2RDUVVGblFpeERRVUZETEZkQlFWY3NRMEZCUXl4VFFVRlRMRVZCUVVVc1ZVRkJWU3hEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4WFFVRlhMRU5CUVVNN1NVRkJReXhuUWtGQlowSXNRMEZCUXl4WFFVRlhMRVZCUVVVc1YwRkJWeXhEUVVGRExFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNWMEZCVnl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTTdRVUZGY0dwQ0xIbENRVUY1UWl4UlFVRlJMRVZCUVVVc1YwRkJWeXhKUVVGSkxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4UlFVRlJMRmxCUVZrc1YwRkJWeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBsQlFVTXNUVUZCVFN4SlFVRkpMRk5CUVZNc1EwRkJReXh0UTBGQmJVTXNRMEZCUXl4RFFVRkRPMEZCUVVNc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRmVrbzdPenM3TzBkQlMwYzdRVUZGU0N4SlFVRkpMRTlCUVU4c1IwRkJSeXhWUVVGVkxFTkJRVU03U1VGRmRrSTdPenRQUVVkSE8wbEJRMGdzUlVGQlJTeERRVUZETEVOQlFVTXNUMEZCVHl4TlFVRk5MRXRCUVVzc1YwRkJWeXhEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU5zUXl4TlFVRk5MRWxCUVVrc1MwRkJTeXhEUVVGRExIVkVRVUYxUkN4RFFVRkRMRU5CUVVNN1NVRkRNMFVzUTBGQlF6dEpRVVZFT3pzN08wOUJTVWM3U1VGRlNDeEpRVUZKTEVsQlFVa3NSMEZCUnl4VFFVRlRMRU5CUVVNN1NVRkRja0lzU1VGQlNTeFBRVUZQTEVkQlFVY3NaVUZCWlN4RFFVRkRPMGxCUXpsQ0xFbEJRVWtzVVVGQlVTeEhRVUZITEZsQlFWa3NRMEZCUXp0SlFVTTFRaXhKUVVGSkxGTkJRVk1zUjBGQlJ5eEhRVUZITEVkQlFVY3NVVUZCVVN4RFFVRkRPMGxCUXk5Q0xFbEJRVWtzYTBKQlFXdENMRWRCUVVjc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0SlFVTndReXhKUVVGSkxHMUNRVUZ0UWl4SFFVRkhMRWRCUVVjc1EwRkJRenRKUVVNNVFpeEpRVUZKTEZsQlFWa3NSMEZCUnl4WFFVRlhMRU5CUVVNN1NVRkZMMElzU1VGQlNTeFBRVUZQTEVkQlFVYzdVVUZEV2l4VFFVRlRMRVZCUVVVc1NVRkJTVHRSUVVObUxGRkJRVkVzUlVGQlJTeHpRMEZCYzBNc1IwRkJSeXg1UTBGQmVVTTdVVUZETlVZc1QwRkJUeXhGUVVGRkxHRkJRV0U3VVVGRGRFSXNTMEZCU3l4RlFVRkZMRVZCUVVVN1VVRkRWQ3hMUVVGTExFVkJRVVVzUTBGQlF6dFJRVU5TTEVsQlFVa3NSVUZCUlN4TFFVRkxPMUZCUTFnc1VVRkJVU3hGUVVGRkxFdEJRVXM3VVVGRFppeFRRVUZUTEVWQlFVVXNTMEZCU3p0UlFVTm9RaXhOUVVGTkxFVkJRVVVzUzBGQlN6dFJRVU5pTEZkQlFWY3NSVUZCUlN4RlFVRkZPMUZCUTJZc1UwRkJVeXhGUVVGRkxFdEJRVXM3UzBGRGFrSXNRMEZCUXp0SlFVVkdMRWxCUVVrc1YwRkJWeXhIUVVGSE8xRkJRMmhDTEZOQlFWTXNSVUZCUlN4VFFVRlRPMUZCUTNCQ0xGRkJRVkVzUlVGQlJTeFJRVUZSTzFGQlEyeENMRXRCUVVzc1JVRkJSU3d5UWtGQk1rSTdVVUZEYkVNc1QwRkJUeXhGUVVGRkxGRkJRVkU3VVVGRGFrSXNTMEZCU3l4RlFVRkZMR2xDUVVGcFFqdFJRVU40UWl4SlFVRkpMRVZCUVVVc1UwRkJVenRSUVVObUxGRkJRVkVzUlVGQlJTeHJRa0ZCYTBJN1VVRkROVUlzVTBGQlV5eEZRVUZGTEcxQ1FVRnRRanRSUVVNNVFpeE5RVUZOTEVWQlFVVXNVVUZCVVR0UlFVTm9RaXhYUVVGWExFVkJRVVVzVDBGQlR6dFJRVU53UWl4VFFVRlRMRVZCUVVVc01FSkJRVEJDTzB0QlEzUkRMRU5CUVVNN1NVRkZSaXhKUVVGSkxHRkJRV0VzUjBGQlJ6dFJRVU5zUWl4SFFVRkhMRVZCUVVVc1pVRkJaVHRSUVVOd1FpeExRVUZMTEVWQlFVVXNZVUZCWVR0UlFVTndRaXhOUVVGTkxFVkJRVVVzV1VGQldUdFJRVU53UWl4SlFVRkpMRVZCUVVVc1kwRkJZenRMUVVOeVFpeERRVUZETzBsQlJVWXNTVUZCU1N4VlFVRlZMRWRCUVVjN1VVRkRaaXhKUVVGSkxFVkJRVVVzVFVGQlRUdFJRVU5hTEVkQlFVY3NSVUZCUlN4TFFVRkxPMHRCUTFnc1EwRkJRenRKUVVWR0xFbEJRVWtzUzBGQlN5eEhRVUZITzFGQlExWXNTVUZCU1N4RlFVRkZMRTFCUVUwc1IwRkJSeXhUUVVGVE8xRkJRM2hDTEUxQlFVMHNSVUZCUlN4UlFVRlJMRWRCUVVjc1UwRkJVenRSUVVNMVFpeEpRVUZKTEVWQlFVVXNUVUZCVFN4SFFVRkhMRk5CUVZNN1VVRkRlRUlzUzBGQlN5eEZRVUZGTEU5QlFVOHNSMEZCUnl4VFFVRlRPMUZCUXpGQ0xGRkJRVkVzUlVGQlJTeFZRVUZWTEVkQlFVY3NVMEZCVXp0UlFVTm9ReXhMUVVGTExFVkJRVVVzVDBGQlR5eEhRVUZITEZOQlFWTTdVVUZETVVJc1QwRkJUeXhGUVVGRkxGTkJRVk1zUjBGQlJ5eFRRVUZUTzFGQlF6bENMRkZCUVZFc1JVRkJSU3hWUVVGVkxFZEJRVWNzVTBGQlV6dFJRVU5vUXl4VlFVRlZMRVZCUVVVc1dVRkJXU3hIUVVGSExGTkJRVk03VVVGRGNFTXNWVUZCVlN4RlFVRkZMRmxCUVZrc1IwRkJSeXhUUVVGVE8wdEJRM0pETEVOQlFVTTdTVUZGUml4SlFVRkpMRk5CUVZNc1IwRkJSenRSUVVOa0xFbEJRVWtzUlVGQlJTeE5RVUZOTzFGQlExb3NTVUZCU1N4RlFVRkZMRTFCUVUwN1MwRkRZaXhEUVVGRE8wbEJSVVlzU1VGQlNTeFJRVUZSTEVkQlFVYzdVVUZEWWl4UFFVRlBMRVZCUVVVc1ZVRkJWVHRSUVVOdVFpeGhRVUZoTEVWQlFVVXNaMEpCUVdkQ08wdEJRMmhETEVOQlFVTTdTVUZGUml4SlFVRkpMRmRCUVZjc1IwRkJSenRSUVVOb1FpeFBRVUZQTEVWQlFVVXNTMEZCU3p0UlFVTmtMRTlCUVU4c1JVRkJSU3hMUVVGTE8wdEJRMllzUTBGQlF6dEpRVVZHTEVsQlFVa3NUMEZCVHl4SFFVRkhPMUZCUTFvc1MwRkJTeXhGUVVGRkxFOUJRVTg3VVVGRFpDeExRVUZMTEVWQlFVVXNUMEZCVHp0UlFVTmtMRXRCUVVzc1JVRkJSU3hQUVVGUE8xRkJRMlFzVFVGQlRTeEZRVUZGTEZGQlFWRTdTMEZEYWtJc1EwRkJRenRKUVVWR096czdPMDlCU1VjN1NVRkZTQ3hKUVVGSkxFOUJRVThzUjBGQlJ6dFJRVU5hTEdsQ1FVRnBRaXhQUVVGUExFVkJRVVVzVFVGQlRUdFpRVU01UWl4bFFVRmxMRU5CUVVNc1NVRkJTU3hGUVVGRkxFOUJRVThzUTBGQlF5eERRVUZETzFsQlJTOUNMRlZCUVZVN1dVRkRWaXhKUVVGSkxFTkJRVU1zVlVGQlZTeEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVTjJRaXhKUVVGSkxFTkJRVU1zVVVGQlVTeEhRVUZITEVOQlFVTXNRMEZCUXp0WlFVTnNRaXhKUVVGSkxFTkJRVU1zVjBGQlZ5eEhRVUZITEVWQlFVVXNRMEZCUXp0WlFVTjBRaXhKUVVGSkxFTkJRVU1zWTBGQll5eEhRVUZITEVWQlFVVXNRMEZCUXp0WlFVTjZRaXhKUVVGSkxFTkJRVU1zWjBKQlFXZENMRWRCUVVjc1MwRkJTeXhEUVVGRE8xbEJRemxDTEVsQlFVa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1NVRkJTU3hEUVVGRE8xbEJSWEJDTEZsQlFWazdXVUZEV2l4SlFVRkpMRU5CUVVNc1QwRkJUeXhIUVVGSExFOUJRVThzUTBGQlF6dFpRVU4yUWl4SlFVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNN1dVRkRkRU1zU1VGQlNTeERRVUZETEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNN1dVRkZhRUlzU1VGQlNTeERRVUZETEdGQlFXRXNSVUZCUlN4RFFVRkRPMUZCUTNaQ0xFTkJRVU03VVVGRlJDeFZRVUZWTzFGQlJWWXNVMEZCVXp0UlFVVlVMRTlCUVU4c1EwRkJReXhUUVVGVExFTkJRVU1zVFVGQlRTeEhRVUZITzFsQlEzcENMRWxCUVVrc1EwRkJReXhWUVVGVkxFZEJRVWNzU1VGQlNTeERRVUZETzFGQlEzcENMRU5CUVVNc1EwRkJRenRSUVVWR0xFOUJRVThzUTBGQlF5eFRRVUZUTEVOQlFVTXNUMEZCVHl4SFFVRkhPMWxCUXpGQ0xFbEJRVWtzUTBGQlF5eFZRVUZWTEVkQlFVY3NTMEZCU3l4RFFVRkRPMUZCUXpGQ0xFTkJRVU1zUTBGQlF6dFJRVVZHTEU5QlFVOHNRMEZCUXl4VFFVRlRMRU5CUVVNc1lVRkJZU3hIUVVGSE8xbEJRMmhETEVsQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETzFGQlEzSkRMRU5CUVVNc1EwRkJRenRSUVVWR0xFOUJRVThzUTBGQlF5eFRRVUZUTEVOQlFVTXNUVUZCVFN4SFFVRkhMR2RDUVVGblFpeExRVUZMTzFsQlF6bERMRVZCUVVVc1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTTdaMEpCUTFZc1NVRkJTU3hQUVVGUExFZEJRVWNzU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4UlFVRlJMRU5CUVVNN1owSkJRM2hETEVsQlFVa3NUMEZCVHl4SFFVRkhMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRE8yZENRVVZ1UkN4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTTdiMEpCUTJJc1QwRkJUeXhIUVVGSExFbEJRVWtzU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1lVRkJZU3hGUVVGRkxFbEJRVWtzUTBGQlF5eHJRa0ZCYTBJc1JVRkJSU3hEUVVGRExFTkJRVU03YjBKQlF5OUZMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6dG5Ra0ZEYUVRc1EwRkJRenRuUWtGRlJDeFBRVUZQTEVOQlFVTXNZMEZCWXl4RFFVRkRMRXRCUVVzc1IwRkJSeXhEUVVGRExFOUJRVThzUTBGQlF5eGpRVUZqTEVOQlFVTXNTMEZCU3l4RFFVRkRPMmRDUVVVM1JDeEZRVUZGTEVOQlFVTXNRMEZCUXl4UFFVRlBMRU5CUVVNc2IwSkJRVzlDTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNN2IwSkJRMjVETEU5QlFVOHNRMEZCUXl4TlFVRk5MRU5CUVVNc1NVRkJTU3hGUVVGRkxFOUJRVThzUTBGQlF5eERRVUZETzJkQ1FVTm9ReXhEUVVGRE8yZENRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMjlDUVVOT0xFOUJRVThzUTBGQlF5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RlFVRkZMRTlCUVU4c1EwRkJReXhEUVVGRE8yZENRVU5vUXl4RFFVRkRPMWxCUTBnc1EwRkJRenRaUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzJkQ1FVVk9MRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNZVUZCWVN4RlFVRkZMRU5CUVVNc1EwRkJReXhSUVVGUkxFTkJRVU1zVTBGQlV5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenR2UWtGRGNrUXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhKUVVGSkxFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdiMEpCUTNoQ0xFMUJRVTBzUTBGQlF6dG5Ra0ZEVkN4RFFVRkRPMmRDUVVWRUxFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRE8xbEJRekZDTEVOQlFVTTdVVUZEU0N4RFFVRkRMRU5CUVVNN1VVRkZSaXhQUVVGUExFTkJRVU1zVTBGQlV5eERRVUZETEU5QlFVOHNSMEZCUnp0WlFVTXhRaXhaUVVGWkxFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRPMWxCUlRWQ0xFbEJRVWtzUTBGQlF5eGhRVUZoTEVWQlFVVXNRMEZCUXp0WlFVVnlRaXhEUVVGRExFTkJRVU1zVlVGQlZTeERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRVZCUVVVc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXp0WlFVVjBSQ3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRPMWxCUTJoRUxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1QwRkJUeXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4bFFVRmxMRU5CUVVNc1EwRkJRenRaUVVWMlJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF6dG5Ra0ZEWWl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEUxQlFVMHNSVUZCUlN4RFFVRkRPMWxCUTNaQ0xFTkJRVU03V1VGRlJDeEpRVUZKTEVOQlFVTXNWVUZCVlN4SFFVRkhMRWxCUVVrc1EwRkJRenRaUVVOMlFpeEpRVUZKTEVOQlFVTXNVVUZCVVN4SFFVRkhMRWxCUVVrc1EwRkJRenRaUVVOeVFpeEpRVUZKTEVOQlFVTXNWMEZCVnl4SFFVRkhMRWxCUVVrc1EwRkJRenRaUVVONFFpeEpRVUZKTEVOQlFVTXNZMEZCWXl4SFFVRkhMRWxCUVVrc1EwRkJRenRaUVVNelFpeEpRVUZKTEVOQlFVTXNUMEZCVHl4SFFVRkhMRWxCUVVrc1EwRkJRenRaUVVWd1FpeEpRVUZKTEVOQlFVTXNUMEZCVHl4SFFVRkhMRWxCUVVrc1EwRkJRenRaUVVOd1FpeEpRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRWxCUVVrc1EwRkJRenRaUVVOdVFpeEpRVUZKTEVOQlFVTXNSMEZCUnl4SFFVRkhMRWxCUVVrc1EwRkJRenRSUVVOc1FpeERRVUZETEVOQlFVTTdVVUZGUml4UFFVRlBMRU5CUVVNc1UwRkJVeXhEUVVGRExFbEJRVWtzUjBGQlJ6dFpRVU4yUWl4SlFVRkpMRXRCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU03V1VGRmFrSXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1UwRkJVeXhEUVVGRExFdEJRVXNzVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRPVU1zVFVGQlRTeEpRVUZKTEV0QlFVc3NRMEZCUXl4eFEwRkJjVU1zUTBGQlF5eERRVUZETzFsQlEzcEVMRU5CUVVNN1dVRkZSQ3hKUVVGSkxGTkJRVk1zUjBGQlJ5eERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMWxCUTNKRUxFVkJRVVVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4aFFVRmhMRVZCUVVVc1NVRkJTU3hKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkROVU1zUlVGQlJTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMR2RDUVVGblFpeERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkRNVUlzVFVGQlRTeEpRVUZKTEV0QlFVc3NRMEZCUXl3d1FrRkJNRUlzUTBGQlF5eERRVUZETzJkQ1FVTTVReXhEUVVGRE8yZENRVU5FTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zVDBGQlR5eERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRPMmRDUVVWdVF5eEpRVUZKTEZWQlFWVXNSMEZCUnl4RFFVRkRMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNZVUZCWVN4RFFVRkRMR1ZCUVdVc1JVRkJSU3hKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTTdaMEpCUlhSR0xFVkJRVVVzUTBGQlF5eERRVUZETEZOQlFWTXNRMEZCUXl4clFrRkJhMElzUlVGQlJTeEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRU5CUVVNc1EwRkJRenR2UWtGRGJFUXNUVUZCVFN4RFFVRkRPMmRDUVVOVUxFTkJRVU03WjBKQlJVUXNTVUZCU1N4SFFVRkhMRWRCUVVjc1NVRkJTU3hEUVVGRExHRkJRV0VzUlVGQlJTeERRVUZETzJkQ1FVTXZRaXhKUVVGSkxFdEJRVXNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdaMEpCUlM5RExFZEJRVWNzUTBGQlF5eFpRVUZaTEVOQlFVTXNTVUZCU1N4RlFVRkZMRXRCUVVzc1EwRkJReXhEUVVGRE8yZENRVU01UWl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExGbEJRVmtzUTBGQlF5eHJRa0ZCYTBJc1JVRkJSU3hMUVVGTExFTkJRVU1zUTBGQlF6dG5Ra0ZGY2tRc1NVRkJTU3hEUVVGRExGVkJRVlVzUlVGQlJTeERRVUZETzJkQ1FVVnNRaXhGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRExFTkJRVU03YjBKQlF6RkNMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8yZENRVU5zUXl4RFFVRkRPMmRDUVVWRUxFbEJRVWtzVTBGQlV5eEhRVUZITEU5QlFVOHNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhUUVVGVExFdEJRVXNzVlVGQlZTeEhRVUZITEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVWQlFVVXNSMEZCUnl4RlFVRkZMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRk5CUVZNc1EwRkJRenRuUWtGRk1Va3NTVUZCU1N4VlFVRlZMRWRCUVVjc1NVRkJTU3hEUVVGRExHTkJRV01zUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXp0blFrRkZhRVFzU1VGQlNTeFRRVUZUTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhUUVVGVExFdEJRVXNzUzBGQlN5eEhRVUZITEZGQlFWRXNRMEZCUXl4SlFVRkpMRWRCUVVjc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN1owSkJSVE5HTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4UlFVRlJMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRPMmRDUVVWcVJTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF6dG5Ra0ZGZWtRc1NVRkJTU3hEUVVGRExFOUJRVThzUjBGQlJ5eEpRVUZKTEUxQlFVMHNRMEZCUXp0dlFrRkRlRUlzVlVGQlZTeEZRVUZGTEZWQlFWVTdiMEpCUTNSQ0xFOUJRVThzUlVGQlJTeEhRVUZITzI5Q1FVTmFMRTFCUVUwc1JVRkJSU3hKUVVGSkxFTkJRVU1zVDBGQlR6dHZRa0ZEY0VJc1QwRkJUeXhGUVVGRkxGZEJRVmM3YjBKQlEzQkNMRmRCUVZjc1JVRkJSU3haUVVGWk8yOUNRVU42UWl4TlFVRk5MRVZCUVVVc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTzI5Q1FVTXhRaXhYUVVGWExFVkJRVVVzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4WFFVRlhPMjlDUVVOd1F5eG5Ra0ZCWjBJc1JVRkJSU3hMUVVGTE8ybENRVU40UWl4RFFVRkRMRU5CUVVNN1owSkJSVWdzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRuUWtGRGFrSXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlF6dG5Ra0ZGZUVJc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03WjBKQlJXaERMRWxCUVVrc1VVRkJVU3hIUVVGSE8yOUNRVU5pTEVsQlFVa3NZMEZCWXl4SFFVRkhMRXRCUVVzc1EwRkJReXhYUVVGWExFTkJRVU03YjBKQlEzWkRMRXRCUVVzc1EwRkJReXhYUVVGWExFZEJRVWNzU1VGQlNTeERRVUZETzI5Q1FVTjZRaXhMUVVGTExFTkJRVU1zWjBKQlFXZENMRWRCUVVjc1MwRkJTeXhEUVVGRE8yOUNRVVV2UWl4RFFVRkRMRU5CUVVNc1MwRkJTeXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNc1YwRkJWeXhEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXp0dlFrRkZlRVFzUlVGQlJTeERRVUZETEVOQlFVTXNZMEZCWXl4TFFVRkxMRlZCUVZVc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETzNkQ1FVTjBReXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETEVsQlFVa3NSVUZCUlN4TFFVRkxMRU5CUVVNc1EwRkJRenR2UWtGRE5VSXNRMEZCUXp0blFrRkRTQ3hEUVVGRExFTkJRVU03WjBKQlJVWXNSVUZCUlN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExIRkNRVUZ4UWl4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkRla1VzU1VGQlNTeERRVUZETEdkQ1FVRm5RaXhIUVVGSExFbEJRVWtzUTBGQlF6dHZRa0ZETjBJc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hEUVVGRExHTkJRV01zUlVGQlJTeFJRVUZSTEVOQlFVTXNRMEZCUXl4dlFrRkJiMElzUTBGQlF5eFBRVUZQTEVOQlFVTXNiMEpCUVc5Q0xFTkJRVU1zUTBGQlF6dHZRa0ZEYkVjc1RVRkJUU3hEUVVGRE8yZENRVU5VTEVOQlFVTTdaMEpCUlVRc1VVRkJVU3hGUVVGRkxFTkJRVU03V1VGRFlpeERRVUZETzFGQlEwZ3NRMEZCUXl4RFFVRkRPMUZCUlVZc1QwRkJUeXhEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVkQlFVY3NZMEZCWXl4UlFVRlJPMWxCUXpkRExFbEJRVWtzVFVGQlRTeEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVVnNRaXhKUVVGSkxFZEJRVWNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNZVUZCWVN4RlFVRkZMRU5CUVVNN1dVRkRMMElzU1VGQlNTeFRRVUZUTEVkQlFVY3NRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRaUVVOeVJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVNeFFpeE5RVUZOTEVsQlFVa3NTMEZCU3l4RFFVRkRMREJDUVVFd1FpeERRVUZETEVOQlFVTTdXVUZET1VNc1EwRkJRenRaUVVORUxFbEJRVWtzVVVGQlVTeEhRVUZITzJkQ1FVTmlMRVZCUVVVc1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF5eFhRVUZYTEV0QlFVc3NWVUZCVlN4RFFVRkRMRWxCUVVrc1NVRkJTU3hIUVVGSExFTkJRVU1zVlVGQlZTeERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkROMFFzUjBGQlJ5eERRVUZETEZWQlFWVXNRMEZCUXl4WFFVRlhMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU03WjBKQlEyeERMRU5CUVVNN1owSkJSVVFzVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXl4bFFVRmxMRU5CUVVNc2EwSkJRV3RDTEVOQlFVTXNRMEZCUXp0blFrRkRia1FzUTBGQlF5eERRVUZETEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhQUVVGUExFTkJRVU1zVFVGQlRTeERRVUZETEZkQlFWY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU03WjBKQlF6TkVMRTFCUVUwc1EwRkJReXhuUWtGQlowSXNSMEZCUnl4TFFVRkxMRU5CUVVNN1owSkJRMmhETEUxQlFVMHNRMEZCUXl4aFFVRmhMRVZCUVVVc1EwRkJRenRuUWtGRmRrSXNSVUZCUlN4RFFVRkRMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZEWWl4UlFVRlJMRVZCUVVVc1EwRkJRenRuUWtGRFlpeERRVUZETzFsQlEwZ3NRMEZCUXl4RFFVRkRPMWxCUlVZc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4UFFVRlBMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU03V1VGRmJrTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1UwRkJVeXhEUVVGRExHdENRVUZyUWl4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU51UXl4TlFVRk5MRU5CUVVNN1dVRkRWQ3hEUVVGRE8xbEJSVVFzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRmRCUVZjc1EwRkJReXhUUVVGVExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdXVUZGYmtNc1NVRkJTU3hEUVVGRExHTkJRV01zUTBGQlF5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1MwRkJTeXhEUVVGRE8xbEJRek5ETEVsQlFVa3NRMEZCUXl4alFVRmpMRU5CUVVNc1QwRkJUeXhEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUXp0WlFVTXpReXhKUVVGSkxFTkJRVU1zWTBGQll5eERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNc1IwRkJSeXhMUVVGTExFTkJRVU03V1VGRk0wTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExIRkNRVUZ4UWl4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRla1VzU1VGQlNTeERRVUZETEdkQ1FVRm5RaXhIUVVGSExFbEJRVWtzUTBGQlF6dG5Ra0ZETjBJc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1kwRkJZeXhGUVVGRkxGRkJRVkVzUTBGQlF5eERRVUZETEc5Q1FVRnZRaXhEUVVGRExHMUNRVUZ0UWl4RFFVRkRMRU5CUVVNN1dVRkRkRVlzUTBGQlF6dFpRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMmRDUVVOT0xGRkJRVkVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXp0WlFVVkVMRWxCUVVrc1EwRkJReXhYUVVGWExFZEJRVWNzUlVGQlJTeERRVUZETzFGQlEzaENMRU5CUVVNc1EwRkJRenRSUVVWR0xGbEJRVms3VVVGRldpeFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRMR0ZCUVdFc1IwRkJSenRaUVVOb1F5eE5RVUZOTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlF5eERRVUZETzFGQlEyeERMRU5CUVVNc1EwRkJRenRSUVVWR0xFOUJRVThzUTBGQlF5eFRRVUZUTEVOQlFVTXNZVUZCWVN4SFFVRkhPMWxCUTJoRExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNSMEZCUnl4SFFVRkhMRWxCUVVrc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdVVUZETTBRc1EwRkJReXhEUVVGRE8xRkJSVVlzVDBGQlR5eERRVUZETEZOQlFWTXNRMEZCUXl4VlFVRlZMRWRCUVVjN1dVRkROMElzU1VGQlNTeEpRVUZKTEVkQlFVY3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhoUVVGaExFVkJRVVVzUTBGQlF5eERRVUZETzFsQlJXNURMRWxCUVVrc1EwRkJReXhwUWtGQmFVSXNRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFTkJRVU1zUTBGQlF6dFpRVVV6UlN4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVkQlFVY3NSMEZCUnl4SFFVRkhMRk5CUVZNc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dFpRVVY0UkN4SlFVRkpMRU5CUVVNc1lVRkJZU3hGUVVGRkxFTkJRVU03VVVGRGRrSXNRMEZCUXl4RFFVRkRPMUZCUlVZc1QwRkJUeXhEUVVGRExGTkJRVk1zUTBGQlF5eHBRa0ZCYVVJc1IwRkJSeXd5UWtGQk1rSXNVVUZCVVN4RlFVRkZMRTlCUVU4N1dVRkRhRVlzU1VGQlNTeEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU03V1VGRE5VSXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhQUVVGUExFOUJRVThzUzBGQlN5eFhRVUZYTEVkQlFVY3NWMEZCVnl4SFFVRkhMRTlCUVU4c1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eExRVUZMTEZGQlFWRXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFbEJRVWtzVDBGQlR5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRE0wZ3NiME5CUVc5RE8yZENRVU53UXl4RlFVRkZMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETzI5Q1FVTlVMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRExFVkJRVVVzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN2QwSkJRM1JETEZGQlFWRXNRMEZCUXl4TFFVRkxMRVZCUVVVc1EwRkJReXhOUVVGTkxFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTTdiMEpCUTI1RExFTkJRVU03WjBKQlEwZ3NRMEZCUXp0blFrRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dHZRa0ZEVGl4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJReXhEUVVGRE8yZENRVU51UXl4RFFVRkRPMWxCUTBnc1EwRkJRenRaUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzJkQ1FVTk9MRkZCUVZFc1EwRkJReXhKUVVGSkxFZEJRVWNzVFVGQlRTeEhRVUZITEUxQlFVMHNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRE8xbEJRelZETEVOQlFVTTdVVUZEU0N4RFFVRkRMRU5CUVVNN1VVRkZSaXhQUVVGUExFTkJRVU1zVTBGQlV5eERRVUZETEZGQlFWRXNSMEZCUnp0WlFVTXpRaXhKUVVGSkxFdEJRVXNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRmxCUVZrc1EwRkJReXh4UWtGQmNVSXNRMEZCUXl4RFFVRkRPMWxCUlRkRUxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRFdDeExRVUZMTEVkQlFVY3NUMEZCVHl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFdEJRVXNzUzBGQlN5eFZRVUZWTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXp0WlFVTTNSeXhEUVVGRE8xbEJSVVFzVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXp0UlFVTm1MRU5CUVVNc1EwRkJRenRSUVVWR0xFOUJRVThzUTBGQlF5eFRRVUZUTEVOQlFVTXNZVUZCWVN4SFFVRkhPMWxCUTJoRExFVkJRVVVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU5xUWl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFOUJRVThzUlVGQlJTeERRVUZETzFsQlEzcENMRU5CUVVNN1VVRkRTQ3hEUVVGRExFTkJRVU03VVVGRlJpeFZRVUZWTzFGQlJWWXNUMEZCVHl4RFFVRkRMRk5CUVZNc1EwRkJReXhqUVVGakxFZEJRVWNzZDBKQlFYZENMRk5CUVZNN1dVRkRiRVVzVFVGQlRTeERRVUZETEdGQlFXRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1YwRkJWeXhGUVVGRkxFTkJRVU1zUTBGQlF6dFJRVU5vUkN4RFFVRkRMRU5CUVVNN1VVRkZSaXhQUVVGUExFTkJRVU1zVTBGQlV5eERRVUZETEdGQlFXRXNSMEZCUnp0WlFVTm9ReXhKUVVGSkxFMUJRVTBzUjBGQlJ5eEpRVUZKTEVOQlFVTTdXVUZGYkVJc1NVRkJTU3hSUVVGUkxFZEJRVWNzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzFsQlJUbERMRkZCUVZFc1EwRkJReXhQUVVGUExFTkJRVU1zVlVGQlZTeFBRVUZQTzJkQ1FVTm9ReXhGUVVGRkxFTkJRVU1zUTBGQlF5eFBRVUZQTEV0QlFVc3NUMEZCVHl4RFFVRkRMRU5CUVVNc1EwRkJRenR2UWtGRGVFSXNRMEZCUXl4RFFVRkRMRTFCUVUwc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNUVUZCVFN4RFFVRkRMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zUzBGQlN5eEZRVUZGTEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1VVRkJVU3hGUVVGRkxGVkJRVlVzUzBGQlN6dDNRa0ZETVVZc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN2IwSkJRemxDTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVOTUxFTkJRVU03WjBKQlFVTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRExFOUJRVThzUzBGQlN5eFBRVUZQTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJRenR2UWtGRGRFTXNTVUZCU1N4UFFVRlBMRWRCUVVjc1QwRkJUeXhMUVVGTExFOUJRVThzUTBGQlF5eExRVUZMTEVkQlFVY3NUVUZCVFN4RFFVRkRMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zVlVGQlZTeEhRVUZITEUxQlFVMHNRMEZCUXl4WFFVRlhMRU5CUVVNc1MwRkJTeXhEUVVGRExFOUJRVThzUTBGQlF6dHZRa0ZEYWtnc1NVRkJTU3hSUVVGUkxFZEJRVWNzVDBGQlR5eExRVUZMTEU5QlFVOHNRMEZCUXl4TFFVRkxMRWRCUVVjc1RVRkJUU3hEUVVGRExGZEJRVmNzUTBGQlF5eExRVUZMTEVOQlFVTXNWVUZCVlN4SFFVRkhMRTFCUVUwc1EwRkJReXhYUVVGWExFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRXNRMEZCUXp0dlFrRkZia2dzUTBGQlF5eERRVUZETEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zVDBGQlR5eEZRVUZGTEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1VVRkJVU3hGUVVGRkxGVkJRVlVzUzBGQlN6dDNRa0ZEYmtVc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN2IwSkJRemxDTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXhSUVVGUkxFVkJRVVVzVFVGQlRTeERRVUZETEUxQlFVMHNRMEZCUXl4UlFVRlJMRVZCUVVVc1ZVRkJWU3hMUVVGTE8zZENRVU55UkN4TlFVRk5MRU5CUVVNc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXp0dlFrRkRPVUlzUTBGQlF5eERRVUZETEVOQlFVTTdaMEpCUTB3c1EwRkJRenRuUWtGRlJDeERRVUZETEVOQlFVTXNUVUZCVFN4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1pVRkJaU3hGUVVGRk8yOUNRVU4wUkN4TlFVRk5MRU5CUVVNc1RVRkJUU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzJkQ1FVTjJRaXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU5NTEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUlVnc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU42UWl4SlFVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlN4RlFVRkZMRWxCUVVrc1EwRkJReXhOUVVGTkxFVkJRVVU3YjBKQlEzUkRMRTlCUVU4c1JVRkJSU3hSUVVGUk8yOUNRVU5xUWl4UlFVRlJMRVZCUVVVc1JVRkJSVHRwUWtGRFlpeERRVUZETEVOQlFVTTdXVUZEVEN4RFFVRkRPMWxCUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03WjBKQlEwNHNTVUZCU1N4RFFVRkRMRk5CUVZNc1JVRkJSU3hEUVVGRE8xbEJRMjVDTEVOQlFVTTdVVUZEU0N4RFFVRkRMRU5CUVVNN1VVRkZSaXhQUVVGUExFTkJRVU1zVTBGQlV5eERRVUZETEZOQlFWTXNSMEZCUnp0WlFVTTFRaXhKUVVGSkxGTkJRVk1zUjBGQlJ5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhaUVVGWkxFTkJRVU1zY1VKQlFYRkNMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRekZGTEVWQlFVVXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zV1VGQldTeERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRk5CUVZNc1MwRkJTeXhSUVVGUkxFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTnFSU3hKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEZsQlFWa3NRMEZCUXl4eFFrRkJjVUlzUlVGQlJTeEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRmxCUVZrc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTXNRMEZCUXp0blFrRkRNMFlzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4WlFVRlpMRU5CUVVNc1QwRkJUeXhGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETzFsQlEzcERMRU5CUVVNN1VVRkRTQ3hEUVVGRExFTkJRVU03VVVGRlJpeFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRMRTFCUVUwc1IwRkJSeXhuUWtGQlowSXNTMEZCU3l4RlFVRkZMRTlCUVU4N1dVRkRka1FzU1VGQlNTeFBRVUZQTEVkQlFVY3NTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhSUVVGUkxFTkJRVU03V1VGRmVFTXNUMEZCVHl4SFFVRkhMRTlCUVU4c1NVRkJTU3hEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEdGQlFXRXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6dFpRVVV4UkN4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTTdaMEpCUTJJc1QwRkJUeXhIUVVGSExFbEJRVWtzU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1lVRkJZU3hGUVVGRkxFbEJRVWtzUTBGQlF5eHJRa0ZCYTBJc1JVRkJSU3hEUVVGRExFTkJRVU03WjBKQlF5OUZMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6dFpRVU5vUkN4RFFVRkRPMWxCUlVRc1JVRkJSU3hEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRWaXhQUVVGUExFTkJRVU1zWTBGQll5eERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRXRCUVVzc1UwRkJVeXhIUVVGSExFOUJRVThzUTBGQlF5eExRVUZMTEVkQlFVY3NUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF6dFpRVU14Uml4RFFVRkRPMWxCUlVRc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4aFFVRmhMRVZCUVVVc1EwRkJReXhEUVVGRExGRkJRVkVzUTBGQlF5eFRRVUZUTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1QwRkJUeXhEUVVGRExGZEJRVmNzUzBGQlN5eFZRVUZWTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRGJrY3NUMEZCVHl4RFFVRkRMRmRCUVZjc1IwRkJSeXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETzJkQ1FVTjBReXhOUVVGTkxFTkJRVU03V1VGRFZDeERRVUZETzFsQlJVUXNXVUZCV1N4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF6dFpRVVV2UWl4UFFVRlBMRU5CUVVNc1YwRkJWeXhIUVVGSExGVkJRVlVzUTBGQlF5eEpRVUZKTEVOQlFVTTdXVUZGZEVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNUVUZCVFN4RFFVRkRMRXRCUVVzc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlEzaEVMRTlCUVU4c1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlF6dG5Ra0ZEWml4TlFVRk5MRU5CUVVNN1dVRkRWQ3hEUVVGRE8xbEJSVVFzVDBGQlR5eERRVUZETEZGQlFWRXNSMEZCUnl4VlFVRlZMRU5CUVVNN1owSkJRelZDTEVWQlFVVXNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhYUVVGWExFdEJRVXNzVlVGQlZTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNN2IwSkJRelZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRuUWtGRGFrSXNRMEZCUXp0WlFVTklMRU5CUVVNc1JVRkJSU3hQUVVGUExFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRSUVVOb1F5eERRVUZETEVOQlFVTTdVVUZGUml4UFFVRlBMRU5CUVVNc1UwRkJVeXhEUVVGRExFMUJRVTBzUjBGQlJ5eG5Ra0ZCWjBJc1MwRkJTeXhGUVVGRkxFOUJRVTg3V1VGRGRrUXNTVUZCU1N4UFFVRlBMRWRCUVVjc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eFJRVUZSTEVOQlFVTTdXVUZGZUVNc1QwRkJUeXhIUVVGSExFOUJRVThzU1VGQlNTeERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMR0ZCUVdFc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXp0WlFVVXhSQ3hGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRMklzVDBGQlR5eEhRVUZITEVsQlFVa3NTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zWVVGQllTeEZRVUZGTEVsQlFVa3NRMEZCUXl4clFrRkJhMElzUlVGQlJTeERRVUZETEVOQlFVTTdaMEpCUXk5RkxFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNZVUZCWVN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUlVGQlJTeFBRVUZQTEVOQlFVTXNRMEZCUXp0WlFVTm9SQ3hEUVVGRE8xbEJSVVFzUlVGQlJTeERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRFZpeFBRVUZQTEVOQlFVTXNZMEZCWXl4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFdEJRVXNzVlVGQlZTeEhRVUZITEU5QlFVOHNRMEZCUXl4TFFVRkxMRWRCUVVjc1QwRkJUeXhEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUXp0WlFVTTFSaXhEUVVGRE8xbEJSVVFzUlVGQlJTeERRVUZETEVOQlFVTXNUMEZCVHl4RFFVRkRMRzlDUVVGdlFpeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVOdVF5eE5RVUZOTEVOQlFVTTdXVUZEVkN4RFFVRkRPMWxCUlVRc1dVRkJXU3hEUVVGRExFOUJRVThzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXp0WlFVVXZRaXhQUVVGUExFTkJRVU1zVjBGQlZ5eEhRVUZITEZWQlFWVXNRMEZCUXl4SFFVRkhMRU5CUVVNN1dVRkZja01zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXl4UFFVRlBMRU5CUVVNc1RVRkJUU3hEUVVGRExFdEJRVXNzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4TlFVRk5MRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTTdaMEpCUTNoRUxFOUJRVThzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0blFrRkRaaXhOUVVGTkxFTkJRVU03V1VGRFZDeERRVUZETzFsQlJVUXNUMEZCVHl4RFFVRkRMRkZCUVZFc1IwRkJSeXhWUVVGVkxFTkJRVU03WjBKQlF6VkNMRVZCUVVVc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eFhRVUZYTEV0QlFVc3NWVUZCVlN4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03YjBKQlF6TkRMRTlCUVU4c1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlF6dG5Ra0ZEYWtJc1EwRkJRenRaUVVOSUxFTkJRVU1zUlVGQlJTeFBRVUZQTEVOQlFVTXNUVUZCVFN4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dFJRVU5vUXl4RFFVRkRMRU5CUVVNN1VVRkZSaXhQUVVGUExFTkJRVU1zVTBGQlV5eERRVUZETEc5Q1FVRnZRaXhIUVVGSE8xbEJRM1pETEVkQlFVY3NRMEZCUXl4RFFVRkRMRWxCUVVrc1QwRkJUeXhKUVVGSkxFbEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVONFF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1kwRkJZeXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkRha01zVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXp0blFrRkRaQ3hEUVVGRE8xbEJRMGdzUTBGQlF6dFpRVVZFTEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVNN1VVRkRaaXhEUVVGRExFTkJRVU03VVVGRlJpeFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRMRlZCUVZVc1IwRkJSeXh2UWtGQmIwSXNUVUZCVFR0WlFVTjJSQ3hOUVVGTkxFZEJRVWNzUTBGQlF5eERRVUZETEUxQlFVMHNRMEZCUXl4RlFVRkZMRVZCUVVVc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eFBRVUZQTEVWQlFVVXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eEpRVUZKTEVWQlFVVXNSVUZCUlN4TlFVRk5MRU5CUVVNc1EwRkJRenRaUVVWb1JpeEZRVUZGTEVOQlFVTXNRMEZCUXl4TlFVRk5MRU5CUVVNc1MwRkJTeXhKUVVGSkxFOUJRVThzVFVGQlRTeERRVUZETEV0QlFVc3NTMEZCU3l4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU55UkN4TlFVRk5MRU5CUVVNc1MwRkJTeXhIUVVGSE8yOUNRVU5pTEVsQlFVa3NSVUZCUlN4TlFVRk5MRU5CUVVNc1MwRkJTenR2UWtGRGJFSXNTVUZCU1N4RlFVRkZMRTFCUVUwc1EwRkJReXhMUVVGTE8ybENRVU51UWl4RFFVRkRPMWxCUTBvc1EwRkJRenRaUVVWRUxFbEJRVWtzUTBGQlF5eGxRVUZsTEVOQlFVTXNTVUZCU1N4RlFVRkZMRTFCUVUwc1JVRkJSU3hKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRPMWxCUldwRkxFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTTdVVUZEYUVJc1EwRkJReXhEUVVGRE8xRkJSVVlzVDBGQlR5eERRVUZETEZOQlFWTXNRMEZCUXl4clFrRkJhMElzUjBGQlJ6dFpRVU55UXl4SlFVRkpMRTFCUVUwc1IwRkJSeXhGUVVGRkxFTkJRVU03V1VGRmFFSXNSVUZCUlN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEVOQlFVTTdaMEpCUTJoQ0xFZEJRVWNzUTBGQlF5eERRVUZETEVsQlFVa3NSMEZCUnl4SlFVRkpMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETzI5Q1FVTTFRaXhGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMRTlCUVU4c1EwRkJReXhIUVVGSExFTkJRVU1zUzBGQlN5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dDNRa0ZEZGtRc1RVRkJUU3hEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU03YjBKQlEycERMRU5CUVVNN1owSkJRMGdzUTBGQlF6dFpRVU5JTEVOQlFVTTdXVUZGUkN4TlFVRk5MRU5CUVVNc1RVRkJUU3hEUVVGRE8xRkJRMmhDTEVOQlFVTXNRMEZCUXp0UlFVVkdMRk5CUVZNN1VVRkZWQ3hQUVVGUExFTkJRVU1zWjBKQlFXZENMRWRCUVVjc01FSkJRVEJDTEUxQlFVMDdXVUZEZWtRc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTTdaMEpCUTJZc1NVRkJTU3hKUVVGSkxFZEJRVWNzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF6dG5Ra0ZEYkVNc1NVRkJTU3hQUVVGUExFZEJRVWNzUTBGQlF5eFBRVUZQTEUxQlFVMHNTMEZCU3l4WFFVRlhMRWRCUVVjc1YwRkJWeXhIUVVGSExFOUJRVThzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4TFFVRkxMRkZCUVZFc1NVRkJTU3hOUVVGTkxFTkJRVU03WjBKQlJYSkhMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeEpRVUZKTEdOQlFXTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzI5Q1FVTjZReXhOUVVGTkxFTkJRVU03WjBKQlExUXNRMEZCUXp0blFrRkZSQ3hGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNN2IwSkJRMVlzU1VGQlNTeEhRVUZITEVsQlFVa3NUMEZCVHl4RFFVRkRMRWxCUVVrc1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6dHZRa0ZEYkVNc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU03WjBKQlF5OUNMRU5CUVVNN1owSkJSVVFzUlVGQlJTeERRVUZETEVOQlFVTXNUMEZCVHl4TlFVRk5MRXRCUVVzc1VVRkJVU3hEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZETDBJc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4TFFVRkxMRk5CUVZNc1EwRkJReXhEUVVGRExFTkJRVU03ZDBKQlF5OUNMRTFCUVUwc1NVRkJTU3hMUVVGTExFTkJRVU1zYlVKQlFXMUNMRWRCUVVjc1RVRkJUU3hIUVVGSExFZEJRVWNzUTBGQlF5eERRVUZETzI5Q1FVTjBSQ3hEUVVGRE8yOUNRVU5FTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1JVRkJSU3hEUVVGRE8yZENRVU5xUWl4RFFVRkRPMWxCUTBnc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRFRDeERRVUZETEVOQlFVTTdVVUZGUml4WlFVRlpMRU5CUVVNc1QwRkJUeXhGUVVGRkxFbEJRVWtzUlVGQlJTeERRVUZETzJkQ1FVTXpRaXhIUVVGSExFVkJRVVVzVTBGQlV6dG5Ra0ZEWkN4SFFVRkhMRVZCUVVVN2IwSkJRMGdzVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXp0blFrRkRha0lzUTBGQlF6dGhRVU5HTEVWQlFVVTdaMEpCUTBRc1IwRkJSeXhGUVVGRkxGTkJRVk03WjBKQlEyUXNSMEZCUnl4RlFVRkZPMjlDUVVOSUxFMUJRVTBzUTBGQlF5eFBRVUZQTEVOQlFVTTdaMEpCUTJwQ0xFTkJRVU03WVVGRFJpeEZRVUZGTzJkQ1FVTkVMRWRCUVVjc1JVRkJSU3hOUVVGTk8yZENRVU5ZTEVkQlFVY3NSVUZCUlR0dlFrRkRTQ3hOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETzJkQ1FVTmtMRU5CUVVNN1lVRkRSaXhGUVVGRk8yZENRVU5FTEVkQlFVY3NSVUZCUlN4VlFVRlZPMmRDUVVObUxFZEJRVWNzUlVGQlJUdHZRa0ZEU0N4TlFVRk5MRU5CUVVNc1VVRkJVU3hEUVVGRE8yZENRVU5zUWl4RFFVRkRPMkZCUTBZc1JVRkJSVHRuUWtGRFJDeEhRVUZITEVWQlFVVXNUMEZCVHp0blFrRkRXaXhIUVVGSExFVkJRVVU3YjBKQlEwZ3NUVUZCVFN4RFFVRkRMRXRCUVVzc1EwRkJRenRuUWtGRFppeERRVUZETzJGQlEwWXNSVUZCUlR0blFrRkRSQ3hIUVVGSExFVkJRVVVzVjBGQlZ6dG5Ra0ZEYUVJc1IwRkJSeXhGUVVGRk8yOUNRVU5JTEUxQlFVMHNRMEZCUXl4VFFVRlRMRU5CUVVNN1owSkJRMjVDTEVOQlFVTTdZVUZEUml4RlFVRkZPMmRDUVVORUxFZEJRVWNzUlVGQlJTeGhRVUZoTzJkQ1FVTnNRaXhIUVVGSExFVkJRVVU3YjBKQlEwZ3NUVUZCVFN4RFFVRkRMRmRCUVZjc1EwRkJRenRuUWtGRGNrSXNRMEZCUXp0aFFVTkdMRU5CUVVNc1EwRkJReXhEUVVGRE8xRkJSVW9zVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXp0SlFVTnFRaXhEUVVGRExFVkJRVVVzUTBGQlF6dEpRVVZLT3pzN08wOUJTVWM3U1VGRlNDeERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFOUJRVThzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJRenRKUVVOMFF5eERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExGZEJRVmNzUjBGQlJ5eFBRVUZQTEVOQlFVTTdTVUZEYWtNc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4VlFVRlZMRWRCUVVjN1VVRkRkRUlzUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhyUWtGQmEwSXNRMEZCUXp0UlFVTm9ReXhOUVVGTkxFTkJRVU1zVDBGQlR5eERRVUZETEdkQ1FVRm5RaXhEUVVGRE8wbEJRMnhETEVOQlFVTXNRMEZCUXp0SlFVVkdMRTFCUVUwc1EwRkJReXhQUVVGUExFTkJRVU03UVVGRGFrSXNRMEZCUXl4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRExFTkJRVU1zYlVKQlFXMUNPMEZCUXpsQ0xHMURRVUZ0UXlJc0ltWnBiR1VpT2lKM2QzY3ZjR0ZqYTNNdlltOXZkSE4wY21Gd0wycHpMMlJwYzNRdmRHOXZiSFJwY0M1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJblpoY2lCZmRIbHdaVzltSUQwZ2RIbHdaVzltSUZONWJXSnZiQ0E5UFQwZ1hDSm1kVzVqZEdsdmJsd2lJQ1ltSUhSNWNHVnZaaUJUZVcxaWIyd3VhWFJsY21GMGIzSWdQVDA5SUZ3aWMzbHRZbTlzWENJZ1B5Qm1kVzVqZEdsdmJpQW9iMkpxS1NCN0lISmxkSFZ5YmlCMGVYQmxiMllnYjJKcU95QjlJRG9nWm5WdVkzUnBiMjRnS0c5aWFpa2dleUJ5WlhSMWNtNGdiMkpxSUNZbUlIUjVjR1Z2WmlCVGVXMWliMndnUFQwOUlGd2lablZ1WTNScGIyNWNJaUFtSmlCdlltb3VZMjl1YzNSeWRXTjBiM0lnUFQwOUlGTjViV0p2YkNBbUppQnZZbW9nSVQwOUlGTjViV0p2YkM1d2NtOTBiM1I1Y0dVZ1B5QmNJbk41YldKdmJGd2lJRG9nZEhsd1pXOW1JRzlpYWpzZ2ZUdGNibHh1ZG1GeUlGOWpjbVZoZEdWRGJHRnpjeUE5SUdaMWJtTjBhVzl1SUNncElIc2dablZ1WTNScGIyNGdaR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aDBZWEpuWlhRc0lIQnliM0J6S1NCN0lHWnZjaUFvZG1GeUlHa2dQU0F3T3lCcElEd2djSEp2Y0hNdWJHVnVaM1JvT3lCcEt5c3BJSHNnZG1GeUlHUmxjMk55YVhCMGIzSWdQU0J3Y205d2MxdHBYVHNnWkdWelkzSnBjSFJ2Y2k1bGJuVnRaWEpoWW14bElEMGdaR1Z6WTNKcGNIUnZjaTVsYm5WdFpYSmhZbXhsSUh4OElHWmhiSE5sT3lCa1pYTmpjbWx3ZEc5eUxtTnZibVpwWjNWeVlXSnNaU0E5SUhSeWRXVTdJR2xtSUNoY0luWmhiSFZsWENJZ2FXNGdaR1Z6WTNKcGNIUnZjaWtnWkdWelkzSnBjSFJ2Y2k1M2NtbDBZV0pzWlNBOUlIUnlkV1U3SUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaDBZWEpuWlhRc0lHUmxjMk55YVhCMGIzSXVhMlY1TENCa1pYTmpjbWx3ZEc5eUtUc2dmU0I5SUhKbGRIVnliaUJtZFc1amRHbHZiaUFvUTI5dWMzUnlkV04wYjNJc0lIQnliM1J2VUhKdmNITXNJSE4wWVhScFkxQnliM0J6S1NCN0lHbG1JQ2h3Y205MGIxQnliM0J6S1NCa1pXWnBibVZRY205d1pYSjBhV1Z6S0VOdmJuTjBjblZqZEc5eUxuQnliM1J2ZEhsd1pTd2djSEp2ZEc5UWNtOXdjeWs3SUdsbUlDaHpkR0YwYVdOUWNtOXdjeWtnWkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWhEYjI1emRISjFZM1J2Y2l3Z2MzUmhkR2xqVUhKdmNITXBPeUJ5WlhSMWNtNGdRMjl1YzNSeWRXTjBiM0k3SUgwN0lIMG9LVHRjYmx4dVpuVnVZM1JwYjI0Z1gyTnNZWE56UTJGc2JFTm9aV05yS0dsdWMzUmhibU5sTENCRGIyNXpkSEoxWTNSdmNpa2dleUJwWmlBb0lTaHBibk4wWVc1alpTQnBibk4wWVc1alpXOW1JRU52Ym5OMGNuVmpkRzl5S1NrZ2V5QjBhSEp2ZHlCdVpYY2dWSGx3WlVWeWNtOXlLRndpUTJGdWJtOTBJR05oYkd3Z1lTQmpiR0Z6Y3lCaGN5QmhJR1oxYm1OMGFXOXVYQ0lwT3lCOUlIMWNibHh1THlvcVhHNGdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDb2dRbTl2ZEhOMGNtRndJQ2gyTkM0d0xqQXRZV3h3YUdFdU5pazZJSFJ2YjJ4MGFYQXVhbk5jYmlBcUlFeHBZMlZ1YzJWa0lIVnVaR1Z5SUUxSlZDQW9hSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM1IzWW5NdlltOXZkSE4wY21Gd0wySnNiMkl2YldGemRHVnlMMHhKUTBWT1UwVXBYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ292WEc1Y2JuWmhjaUJVYjI5c2RHbHdJRDBnWm5WdVkzUnBiMjRnS0NRcElIdGNibHh1SUNBdktpcGNiaUFnSUNvZ1EyaGxZMnNnWm05eUlGUmxkR2hsY2lCa1pYQmxibVJsYm1ONVhHNGdJQ0FxSUZSbGRHaGxjaUF0SUdoMGRIQTZMeTkwWlhSb1pYSXVhVzh2WEc0Z0lDQXFMMXh1SUNCcFppQW9kSGx3Wlc5bUlGUmxkR2hsY2lBOVBUMGdKM1Z1WkdWbWFXNWxaQ2NwSUh0Y2JpQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9KMEp2YjNSemRISmhjQ0IwYjI5c2RHbHdjeUJ5WlhGMWFYSmxJRlJsZEdobGNpQW9hSFIwY0RvdkwzUmxkR2hsY2k1cGJ5OHBKeWs3WEc0Z0lIMWNibHh1SUNBdktpcGNiaUFnSUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdJQ0FxSUVOdmJuTjBZVzUwYzF4dUlDQWdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBZ0lDb3ZYRzVjYmlBZ2RtRnlJRTVCVFVVZ1BTQW5kRzl2YkhScGNDYzdYRzRnSUhaaGNpQldSVkpUU1U5T0lEMGdKelF1TUM0d0xXRnNjR2hoTGpZbk8xeHVJQ0IyWVhJZ1JFRlVRVjlMUlZrZ1BTQW5Zbk11ZEc5dmJIUnBjQ2M3WEc0Z0lIWmhjaUJGVmtWT1ZGOUxSVmtnUFNBbkxpY2dLeUJFUVZSQlgwdEZXVHRjYmlBZ2RtRnlJRXBSVlVWU1dWOU9UMTlEVDA1R1RFbERWQ0E5SUNRdVptNWJUa0ZOUlYwN1hHNGdJSFpoY2lCVVVrRk9VMGxVU1U5T1gwUlZVa0ZVU1U5T0lEMGdNVFV3TzF4dUlDQjJZWElnUTB4QlUxTmZVRkpGUmtsWUlEMGdKMkp6TFhSbGRHaGxjaWM3WEc1Y2JpQWdkbUZ5SUVSbFptRjFiSFFnUFNCN1hHNGdJQ0FnWVc1cGJXRjBhVzl1T2lCMGNuVmxMRnh1SUNBZ0lIUmxiWEJzWVhSbE9pQW5QR1JwZGlCamJHRnpjejFjSW5SdmIyeDBhWEJjSWlCeWIyeGxQVndpZEc5dmJIUnBjRndpUGljZ0t5QW5QR1JwZGlCamJHRnpjejFjSW5SdmIyeDBhWEF0YVc1dVpYSmNJajQ4TDJScGRqNDhMMlJwZGo0bkxGeHVJQ0FnSUhSeWFXZG5aWEk2SUNkb2IzWmxjaUJtYjJOMWN5Y3NYRzRnSUNBZ2RHbDBiR1U2SUNjbkxGeHVJQ0FnSUdSbGJHRjVPaUF3TEZ4dUlDQWdJR2gwYld3NklHWmhiSE5sTEZ4dUlDQWdJSE5sYkdWamRHOXlPaUJtWVd4elpTeGNiaUFnSUNCd2JHRmpaVzFsYm5RNklDZDBiM0FuTEZ4dUlDQWdJRzltWm5ObGREb2dKekFnTUNjc1hHNGdJQ0FnWTI5dWMzUnlZV2x1ZEhNNklGdGRMRnh1SUNBZ0lHTnZiblJoYVc1bGNqb2dabUZzYzJWY2JpQWdmVHRjYmx4dUlDQjJZWElnUkdWbVlYVnNkRlI1Y0dVZ1BTQjdYRzRnSUNBZ1lXNXBiV0YwYVc5dU9pQW5ZbTl2YkdWaGJpY3NYRzRnSUNBZ2RHVnRjR3hoZEdVNklDZHpkSEpwYm1jbkxGeHVJQ0FnSUhScGRHeGxPaUFuS0hOMGNtbHVaM3hsYkdWdFpXNTBmR1oxYm1OMGFXOXVLU2NzWEc0Z0lDQWdkSEpwWjJkbGNqb2dKM04wY21sdVp5Y3NYRzRnSUNBZ1pHVnNZWGs2SUNjb2JuVnRZbVZ5Zkc5aWFtVmpkQ2tuTEZ4dUlDQWdJR2gwYld3NklDZGliMjlzWldGdUp5eGNiaUFnSUNCelpXeGxZM1J2Y2pvZ0p5aHpkSEpwYm1kOFltOXZiR1ZoYmlrbkxGeHVJQ0FnSUhCc1lXTmxiV1Z1ZERvZ0p5aHpkSEpwYm1kOFpuVnVZM1JwYjI0cEp5eGNiaUFnSUNCdlptWnpaWFE2SUNkemRISnBibWNuTEZ4dUlDQWdJR052Ym5OMGNtRnBiblJ6T2lBbllYSnlZWGtuTEZ4dUlDQWdJR052Ym5SaGFXNWxjam9nSnloemRISnBibWQ4Wld4bGJXVnVkSHhpYjI5c1pXRnVLU2RjYmlBZ2ZUdGNibHh1SUNCMllYSWdRWFIwWVdOb2JXVnVkRTFoY0NBOUlIdGNiaUFnSUNCVVQxQTZJQ2RpYjNSMGIyMGdZMlZ1ZEdWeUp5eGNiaUFnSUNCU1NVZElWRG9nSjIxcFpHUnNaU0JzWldaMEp5eGNiaUFnSUNCQ1QxUlVUMDA2SUNkMGIzQWdZMlZ1ZEdWeUp5eGNiaUFnSUNCTVJVWlVPaUFuYldsa1pHeGxJSEpwWjJoMEoxeHVJQ0I5TzF4dVhHNGdJSFpoY2lCSWIzWmxjbE4wWVhSbElEMGdlMXh1SUNBZ0lGTklUMWM2SUNkemFHOTNKeXhjYmlBZ0lDQlBWVlE2SUNkdmRYUW5YRzRnSUgwN1hHNWNiaUFnZG1GeUlFVjJaVzUwSUQwZ2UxeHVJQ0FnSUVoSlJFVTZJQ2RvYVdSbEp5QXJJRVZXUlU1VVgwdEZXU3hjYmlBZ0lDQklTVVJFUlU0NklDZG9hV1JrWlc0bklDc2dSVlpGVGxSZlMwVlpMRnh1SUNBZ0lGTklUMWM2SUNkemFHOTNKeUFySUVWV1JVNVVYMHRGV1N4Y2JpQWdJQ0JUU0U5WFRqb2dKM05vYjNkdUp5QXJJRVZXUlU1VVgwdEZXU3hjYmlBZ0lDQkpUbE5GVWxSRlJEb2dKMmx1YzJWeWRHVmtKeUFySUVWV1JVNVVYMHRGV1N4Y2JpQWdJQ0JEVEVsRFN6b2dKMk5zYVdOckp5QXJJRVZXUlU1VVgwdEZXU3hjYmlBZ0lDQkdUME5WVTBsT09pQW5abTlqZFhOcGJpY2dLeUJGVmtWT1ZGOUxSVmtzWEc0Z0lDQWdSazlEVlZOUFZWUTZJQ2RtYjJOMWMyOTFkQ2NnS3lCRlZrVk9WRjlMUlZrc1hHNGdJQ0FnVFU5VlUwVkZUbFJGVWpvZ0oyMXZkWE5sWlc1MFpYSW5JQ3NnUlZaRlRsUmZTMFZaTEZ4dUlDQWdJRTFQVlZORlRFVkJWa1U2SUNkdGIzVnpaV3hsWVhabEp5QXJJRVZXUlU1VVgwdEZXVnh1SUNCOU8xeHVYRzRnSUhaaGNpQkRiR0Z6YzA1aGJXVWdQU0I3WEc0Z0lDQWdSa0ZFUlRvZ0oyWmhaR1VuTEZ4dUlDQWdJRk5JVDFjNklDZHphRzkzSjF4dUlDQjlPMXh1WEc0Z0lIWmhjaUJUWld4bFkzUnZjaUE5SUh0Y2JpQWdJQ0JVVDA5TVZFbFFPaUFuTG5SdmIyeDBhWEFuTEZ4dUlDQWdJRlJQVDB4VVNWQmZTVTVPUlZJNklDY3VkRzl2YkhScGNDMXBibTVsY2lkY2JpQWdmVHRjYmx4dUlDQjJZWElnVkdWMGFHVnlRMnhoYzNNZ1BTQjdYRzRnSUNBZ1pXeGxiV1Z1ZERvZ1ptRnNjMlVzWEc0Z0lDQWdaVzVoWW14bFpEb2dabUZzYzJWY2JpQWdmVHRjYmx4dUlDQjJZWElnVkhKcFoyZGxjaUE5SUh0Y2JpQWdJQ0JJVDFaRlVqb2dKMmh2ZG1WeUp5eGNiaUFnSUNCR1QwTlZVem9nSjJadlkzVnpKeXhjYmlBZ0lDQkRURWxEU3pvZ0oyTnNhV05ySnl4Y2JpQWdJQ0JOUVU1VlFVdzZJQ2R0WVc1MVlXd25YRzRnSUgwN1hHNWNiaUFnTHlvcVhHNGdJQ0FxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDQWdLaUJEYkdGemN5QkVaV1pwYm1sMGFXOXVYRzRnSUNBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0FnS2k5Y2JseHVJQ0IyWVhJZ1ZHOXZiSFJwY0NBOUlHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQm1kVzVqZEdsdmJpQlViMjlzZEdsd0tHVnNaVzFsYm5Rc0lHTnZibVpwWnlrZ2UxeHVJQ0FnSUNBZ1gyTnNZWE56UTJGc2JFTm9aV05yS0hSb2FYTXNJRlJ2YjJ4MGFYQXBPMXh1WEc0Z0lDQWdJQ0F2THlCd2NtbDJZWFJsWEc0Z0lDQWdJQ0IwYUdsekxsOXBjMFZ1WVdKc1pXUWdQU0IwY25WbE8xeHVJQ0FnSUNBZ2RHaHBjeTVmZEdsdFpXOTFkQ0E5SURBN1hHNGdJQ0FnSUNCMGFHbHpMbDlvYjNabGNsTjBZWFJsSUQwZ0p5YzdYRzRnSUNBZ0lDQjBhR2x6TGw5aFkzUnBkbVZVY21sbloyVnlJRDBnZTMwN1hHNGdJQ0FnSUNCMGFHbHpMbDlwYzFSeVlXNXphWFJwYjI1cGJtY2dQU0JtWVd4elpUdGNiaUFnSUNBZ0lIUm9hWE11WDNSbGRHaGxjaUE5SUc1MWJHdzdYRzVjYmlBZ0lDQWdJQzh2SUhCeWIzUmxZM1JsWkZ4dUlDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MElEMGdaV3hsYldWdWREdGNiaUFnSUNBZ0lIUm9hWE11WTI5dVptbG5JRDBnZEdocGN5NWZaMlYwUTI5dVptbG5LR052Ym1acFp5azdYRzRnSUNBZ0lDQjBhR2x6TG5ScGNDQTlJRzUxYkd3N1hHNWNiaUFnSUNBZ0lIUm9hWE11WDNObGRFeHBjM1JsYm1WeWN5Z3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJR2RsZEhSbGNuTmNibHh1SUNBZ0lDOHZJSEIxWW14cFkxeHVYRzRnSUNBZ1ZHOXZiSFJwY0M1d2NtOTBiM1I1Y0dVdVpXNWhZbXhsSUQwZ1puVnVZM1JwYjI0Z1pXNWhZbXhsS0NrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTVmYVhORmJtRmliR1ZrSUQwZ2RISjFaVHRjYmlBZ0lDQjlPMXh1WEc0Z0lDQWdWRzl2YkhScGNDNXdjbTkwYjNSNWNHVXVaR2x6WVdKc1pTQTlJR1oxYm1OMGFXOXVJR1JwYzJGaWJHVW9LU0I3WEc0Z0lDQWdJQ0IwYUdsekxsOXBjMFZ1WVdKc1pXUWdQU0JtWVd4elpUdGNiaUFnSUNCOU8xeHVYRzRnSUNBZ1ZHOXZiSFJwY0M1d2NtOTBiM1I1Y0dVdWRHOW5aMnhsUlc1aFlteGxaQ0E5SUdaMWJtTjBhVzl1SUhSdloyZHNaVVZ1WVdKc1pXUW9LU0I3WEc0Z0lDQWdJQ0IwYUdsekxsOXBjMFZ1WVdKc1pXUWdQU0FoZEdocGN5NWZhWE5GYm1GaWJHVmtPMXh1SUNBZ0lIMDdYRzVjYmlBZ0lDQlViMjlzZEdsd0xuQnliM1J2ZEhsd1pTNTBiMmRuYkdVZ1BTQm1kVzVqZEdsdmJpQjBiMmRuYkdVb1pYWmxiblFwSUh0Y2JpQWdJQ0FnSUdsbUlDaGxkbVZ1ZENrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnWkdGMFlVdGxlU0E5SUhSb2FYTXVZMjl1YzNSeWRXTjBiM0l1UkVGVVFWOUxSVms3WEc0Z0lDQWdJQ0FnSUhaaGNpQmpiMjUwWlhoMElEMGdKQ2hsZG1WdWRDNWpkWEp5Wlc1MFZHRnlaMlYwS1M1a1lYUmhLR1JoZEdGTFpYa3BPMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hZMjl1ZEdWNGRDa2dlMXh1SUNBZ0lDQWdJQ0FnSUdOdmJuUmxlSFFnUFNCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaGxkbVZ1ZEM1amRYSnlaVzUwVkdGeVoyVjBMQ0IwYUdsekxsOW5aWFJFWld4bFoyRjBaVU52Ym1acFp5Z3BLVHRjYmlBZ0lDQWdJQ0FnSUNBa0tHVjJaVzUwTG1OMWNuSmxiblJVWVhKblpYUXBMbVJoZEdFb1pHRjBZVXRsZVN3Z1kyOXVkR1Y0ZENrN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JqYjI1MFpYaDBMbDloWTNScGRtVlVjbWxuWjJWeUxtTnNhV05ySUQwZ0lXTnZiblJsZUhRdVgyRmpkR2wyWlZSeWFXZG5aWEl1WTJ4cFkyczdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tHTnZiblJsZUhRdVgybHpWMmwwYUVGamRHbDJaVlJ5YVdkblpYSW9LU2tnZTF4dUlDQWdJQ0FnSUNBZ0lHTnZiblJsZUhRdVgyVnVkR1Z5S0c1MWJHd3NJR052Ym5SbGVIUXBPMXh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUdOdmJuUmxlSFF1WDJ4bFlYWmxLRzUxYkd3c0lHTnZiblJsZUhRcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVYRzRnSUNBZ0lDQWdJR2xtSUNna0tIUm9hWE11WjJWMFZHbHdSV3hsYldWdWRDZ3BLUzVvWVhORGJHRnpjeWhEYkdGemMwNWhiV1V1VTBoUFZ5a3BJSHRjYmlBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlzWldGMlpTaHVkV3hzTENCMGFHbHpLVHRjYmlBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQjBhR2x6TGw5bGJuUmxjaWh1ZFd4c0xDQjBhR2x6S1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5TzF4dVhHNGdJQ0FnVkc5dmJIUnBjQzV3Y205MGIzUjVjR1V1WkdsemNHOXpaU0E5SUdaMWJtTjBhVzl1SUdScGMzQnZjMlVvS1NCN1hHNGdJQ0FnSUNCamJHVmhjbFJwYldWdmRYUW9kR2hwY3k1ZmRHbHRaVzkxZENrN1hHNWNiaUFnSUNBZ0lIUm9hWE11WTJ4bFlXNTFjRlJsZEdobGNpZ3BPMXh1WEc0Z0lDQWdJQ0FrTG5KbGJXOTJaVVJoZEdFb2RHaHBjeTVsYkdWdFpXNTBMQ0IwYUdsekxtTnZibk4wY25WamRHOXlMa1JCVkVGZlMwVlpLVHRjYmx4dUlDQWdJQ0FnSkNoMGFHbHpMbVZzWlcxbGJuUXBMbTltWmloMGFHbHpMbU52Ym5OMGNuVmpkRzl5TGtWV1JVNVVYMHRGV1NrN1hHNGdJQ0FnSUNBa0tIUm9hWE11Wld4bGJXVnVkQ2t1WTJ4dmMyVnpkQ2duTG0xdlpHRnNKeWt1YjJabUtDZG9hV1JsTG1KekxtMXZaR0ZzSnlrN1hHNWNiaUFnSUNBZ0lHbG1JQ2gwYUdsekxuUnBjQ2tnZTF4dUlDQWdJQ0FnSUNBa0tIUm9hWE11ZEdsd0tTNXlaVzF2ZG1Vb0tUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdkR2hwY3k1ZmFYTkZibUZpYkdWa0lEMGdiblZzYkR0Y2JpQWdJQ0FnSUhSb2FYTXVYM1JwYldWdmRYUWdQU0J1ZFd4c08xeHVJQ0FnSUNBZ2RHaHBjeTVmYUc5MlpYSlRkR0YwWlNBOUlHNTFiR3c3WEc0Z0lDQWdJQ0IwYUdsekxsOWhZM1JwZG1WVWNtbG5aMlZ5SUQwZ2JuVnNiRHRjYmlBZ0lDQWdJSFJvYVhNdVgzUmxkR2hsY2lBOUlHNTFiR3c3WEc1Y2JpQWdJQ0FnSUhSb2FYTXVaV3hsYldWdWRDQTlJRzUxYkd3N1hHNGdJQ0FnSUNCMGFHbHpMbU52Ym1acFp5QTlJRzUxYkd3N1hHNGdJQ0FnSUNCMGFHbHpMblJwY0NBOUlHNTFiR3c3WEc0Z0lDQWdmVHRjYmx4dUlDQWdJRlJ2YjJ4MGFYQXVjSEp2ZEc5MGVYQmxMbk5vYjNjZ1BTQm1kVzVqZEdsdmJpQnphRzkzS0NrZ2UxeHVJQ0FnSUNBZ2RtRnlJRjkwYUdseklEMGdkR2hwY3p0Y2JseHVJQ0FnSUNBZ2FXWWdLQ1FvZEdocGN5NWxiR1Z0Wlc1MEtTNWpjM01vSjJScGMzQnNZWGtuS1NBOVBUMGdKMjV2Ym1VbktTQjdYRzRnSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpZ25VR3hsWVhObElIVnpaU0J6YUc5M0lHOXVJSFpwYzJsaWJHVWdaV3hsYldWdWRITW5LVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnZG1GeUlITm9iM2RGZG1WdWRDQTlJQ1F1UlhabGJuUW9kR2hwY3k1amIyNXpkSEoxWTNSdmNpNUZkbVZ1ZEM1VFNFOVhLVHRjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbWx6VjJsMGFFTnZiblJsYm5Rb0tTQW1KaUIwYUdsekxsOXBjMFZ1WVdKc1pXUXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WDJselZISmhibk5wZEdsdmJtbHVaeWtnZTF4dUlDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnblZHOXZiSFJwY0NCcGN5QjBjbUZ1YzJsMGFXOXVhVzVuSnlrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdKQ2gwYUdsekxtVnNaVzFsYm5RcExuUnlhV2RuWlhJb2MyaHZkMFYyWlc1MEtUdGNibHh1SUNBZ0lDQWdJQ0IyWVhJZ2FYTkpibFJvWlVSdmJTQTlJQ1F1WTI5dWRHRnBibk1vZEdocGN5NWxiR1Z0Wlc1MExtOTNibVZ5Ukc5amRXMWxiblF1Wkc5amRXMWxiblJGYkdWdFpXNTBMQ0IwYUdsekxtVnNaVzFsYm5RcE8xeHVYRzRnSUNBZ0lDQWdJR2xtSUNoemFHOTNSWFpsYm5RdWFYTkVaV1poZFd4MFVISmxkbVZ1ZEdWa0tDa2dmSHdnSVdselNXNVVhR1ZFYjIwcElIdGNiaUFnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCMllYSWdkR2x3SUQwZ2RHaHBjeTVuWlhSVWFYQkZiR1Z0Wlc1MEtDazdYRzRnSUNBZ0lDQWdJSFpoY2lCMGFYQkpaQ0E5SUZWMGFXd3VaMlYwVlVsRUtIUm9hWE11WTI5dWMzUnlkV04wYjNJdVRrRk5SU2s3WEc1Y2JpQWdJQ0FnSUNBZ2RHbHdMbk5sZEVGMGRISnBZblYwWlNnbmFXUW5MQ0IwYVhCSlpDazdYRzRnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZEM1elpYUkJkSFJ5YVdKMWRHVW9KMkZ5YVdFdFpHVnpZM0pwWW1Wa1lua25MQ0IwYVhCSlpDazdYRzVjYmlBZ0lDQWdJQ0FnZEdocGN5NXpaWFJEYjI1MFpXNTBLQ2s3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVkyOXVabWxuTG1GdWFXMWhkR2x2YmlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ1FvZEdsd0tTNWhaR1JEYkdGemN5aERiR0Z6YzA1aGJXVXVSa0ZFUlNrN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0IyWVhJZ2NHeGhZMlZ0Wlc1MElEMGdkSGx3Wlc5bUlIUm9hWE11WTI5dVptbG5MbkJzWVdObGJXVnVkQ0E5UFQwZ0oyWjFibU4wYVc5dUp5QS9JSFJvYVhNdVkyOXVabWxuTG5Cc1lXTmxiV1Z1ZEM1allXeHNLSFJvYVhNc0lIUnBjQ3dnZEdocGN5NWxiR1Z0Wlc1MEtTQTZJSFJvYVhNdVkyOXVabWxuTG5Cc1lXTmxiV1Z1ZER0Y2JseHVJQ0FnSUNBZ0lDQjJZWElnWVhSMFlXTm9iV1Z1ZENBOUlIUm9hWE11WDJkbGRFRjBkR0ZqYUcxbGJuUW9jR3hoWTJWdFpXNTBLVHRjYmx4dUlDQWdJQ0FnSUNCMllYSWdZMjl1ZEdGcGJtVnlJRDBnZEdocGN5NWpiMjVtYVdjdVkyOXVkR0ZwYm1WeUlEMDlQU0JtWVd4elpTQS9JR1J2WTNWdFpXNTBMbUp2WkhrZ09pQWtLSFJvYVhNdVkyOXVabWxuTG1OdmJuUmhhVzVsY2lrN1hHNWNiaUFnSUNBZ0lDQWdKQ2gwYVhBcExtUmhkR0VvZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTVFUVZSQlgwdEZXU3dnZEdocGN5a3VZWEJ3Wlc1a1ZHOG9ZMjl1ZEdGcGJtVnlLVHRjYmx4dUlDQWdJQ0FnSUNBa0tIUm9hWE11Wld4bGJXVnVkQ2t1ZEhKcFoyZGxjaWgwYUdsekxtTnZibk4wY25WamRHOXlMa1YyWlc1MExrbE9VMFZTVkVWRUtUdGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxsOTBaWFJvWlhJZ1BTQnVaWGNnVkdWMGFHVnlLSHRjYmlBZ0lDQWdJQ0FnSUNCaGRIUmhZMmh0Wlc1ME9pQmhkSFJoWTJodFpXNTBMRnh1SUNBZ0lDQWdJQ0FnSUdWc1pXMWxiblE2SUhScGNDeGNiaUFnSUNBZ0lDQWdJQ0IwWVhKblpYUTZJSFJvYVhNdVpXeGxiV1Z1ZEN4Y2JpQWdJQ0FnSUNBZ0lDQmpiR0Z6YzJWek9pQlVaWFJvWlhKRGJHRnpjeXhjYmlBZ0lDQWdJQ0FnSUNCamJHRnpjMUJ5WldacGVEb2dRMHhCVTFOZlVGSkZSa2xZTEZ4dUlDQWdJQ0FnSUNBZ0lHOW1abk5sZERvZ2RHaHBjeTVqYjI1bWFXY3ViMlptYzJWMExGeHVJQ0FnSUNBZ0lDQWdJR052Ym5OMGNtRnBiblJ6T2lCMGFHbHpMbU52Ym1acFp5NWpiMjV6ZEhKaGFXNTBjeXhjYmlBZ0lDQWdJQ0FnSUNCaFpHUlVZWEpuWlhSRGJHRnpjMlZ6T2lCbVlXeHpaVnh1SUNBZ0lDQWdJQ0I5S1R0Y2JseHVJQ0FnSUNBZ0lDQlZkR2xzTG5KbFpteHZkeWgwYVhBcE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TGw5MFpYUm9aWEl1Y0c5emFYUnBiMjRvS1R0Y2JseHVJQ0FnSUNBZ0lDQWtLSFJwY0NrdVlXUmtRMnhoYzNNb1EyeGhjM05PWVcxbExsTklUMWNwTzF4dVhHNGdJQ0FnSUNBZ0lIWmhjaUJqYjIxd2JHVjBaU0E5SUdaMWJtTjBhVzl1SUdOdmJYQnNaWFJsS0NrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFpoY2lCd2NtVjJTRzkyWlhKVGRHRjBaU0E5SUY5MGFHbHpMbDlvYjNabGNsTjBZWFJsTzF4dUlDQWdJQ0FnSUNBZ0lGOTBhR2x6TGw5b2IzWmxjbE4wWVhSbElEMGdiblZzYkR0Y2JpQWdJQ0FnSUNBZ0lDQmZkR2hwY3k1ZmFYTlVjbUZ1YzJsMGFXOXVhVzVuSUQwZ1ptRnNjMlU3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWtLRjkwYUdsekxtVnNaVzFsYm5RcExuUnlhV2RuWlhJb1gzUm9hWE11WTI5dWMzUnlkV04wYjNJdVJYWmxiblF1VTBoUFYwNHBPMXh1WEc0Z0lDQWdJQ0FnSUNBZ2FXWWdLSEJ5WlhaSWIzWmxjbE4wWVhSbElEMDlQU0JJYjNabGNsTjBZWFJsTGs5VlZDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1gzUm9hWE11WDJ4bFlYWmxLRzUxYkd3c0lGOTBhR2x6S1R0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDA3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLRlYwYVd3dWMzVndjRzl5ZEhOVWNtRnVjMmwwYVc5dVJXNWtLQ2tnSmlZZ0pDaDBhR2x6TG5ScGNDa3VhR0Z6UTJ4aGMzTW9RMnhoYzNOT1lXMWxMa1pCUkVVcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnZEdocGN5NWZhWE5VY21GdWMybDBhVzl1YVc1bklEMGdkSEoxWlR0Y2JpQWdJQ0FnSUNBZ0lDQWtLSFJvYVhNdWRHbHdLUzV2Ym1Vb1ZYUnBiQzVVVWtGT1UwbFVTVTlPWDBWT1JDd2dZMjl0Y0d4bGRHVXBMbVZ0ZFd4aGRHVlVjbUZ1YzJsMGFXOXVSVzVrS0ZSdmIyeDBhWEF1WDFSU1FVNVRTVlJKVDA1ZlJGVlNRVlJKVDA0cE8xeHVJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUdOdmJYQnNaWFJsS0NrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlR0Y2JseHVJQ0FnSUZSdmIyeDBhWEF1Y0hKdmRHOTBlWEJsTG1ocFpHVWdQU0JtZFc1amRHbHZiaUJvYVdSbEtHTmhiR3hpWVdOcktTQjdYRzRnSUNBZ0lDQjJZWElnWDNSb2FYTXlJRDBnZEdocGN6dGNibHh1SUNBZ0lDQWdkbUZ5SUhScGNDQTlJSFJvYVhNdVoyVjBWR2x3Uld4bGJXVnVkQ2dwTzF4dUlDQWdJQ0FnZG1GeUlHaHBaR1ZGZG1WdWRDQTlJQ1F1UlhabGJuUW9kR2hwY3k1amIyNXpkSEoxWTNSdmNpNUZkbVZ1ZEM1SVNVUkZLVHRjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbDlwYzFSeVlXNXphWFJwYjI1cGJtY3BJSHRjYmlBZ0lDQWdJQ0FnZEdoeWIzY2dibVYzSUVWeWNtOXlLQ2RVYjI5c2RHbHdJR2x6SUhSeVlXNXphWFJwYjI1cGJtY25LVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJSFpoY2lCamIyMXdiR1YwWlNBOUlHWjFibU4wYVc5dUlHTnZiWEJzWlhSbEtDa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb1gzUm9hWE15TGw5b2IzWmxjbE4wWVhSbElDRTlQU0JJYjNabGNsTjBZWFJsTGxOSVQxY2dKaVlnZEdsd0xuQmhjbVZ1ZEU1dlpHVXBJSHRjYmlBZ0lDQWdJQ0FnSUNCMGFYQXVjR0Z5Wlc1MFRtOWtaUzV5WlcxdmRtVkRhR2xzWkNoMGFYQXBPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ1gzUm9hWE15TG1Wc1pXMWxiblF1Y21WdGIzWmxRWFIwY21saWRYUmxLQ2RoY21saExXUmxjMk55YVdKbFpHSjVKeWs3WEc0Z0lDQWdJQ0FnSUNRb1gzUm9hWE15TG1Wc1pXMWxiblFwTG5SeWFXZG5aWElvWDNSb2FYTXlMbU52Ym5OMGNuVmpkRzl5TGtWMlpXNTBMa2hKUkVSRlRpazdYRzRnSUNBZ0lDQWdJRjkwYUdsek1pNWZhWE5VY21GdWMybDBhVzl1YVc1bklEMGdabUZzYzJVN1hHNGdJQ0FnSUNBZ0lGOTBhR2x6TWk1amJHVmhiblZ3VkdWMGFHVnlLQ2s3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdJQ0FnSUNBZ1kyRnNiR0poWTJzb0tUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVHRjYmx4dUlDQWdJQ0FnSkNoMGFHbHpMbVZzWlcxbGJuUXBMblJ5YVdkblpYSW9hR2xrWlVWMlpXNTBLVHRjYmx4dUlDQWdJQ0FnYVdZZ0tHaHBaR1ZGZG1WdWRDNXBjMFJsWm1GMWJIUlFjbVYyWlc1MFpXUW9LU2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNRb2RHbHdLUzV5WlcxdmRtVkRiR0Z6Y3loRGJHRnpjMDVoYldVdVUwaFBWeWs3WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYMkZqZEdsMlpWUnlhV2RuWlhKYlZISnBaMmRsY2k1RFRFbERTMTBnUFNCbVlXeHpaVHRjYmlBZ0lDQWdJSFJvYVhNdVgyRmpkR2wyWlZSeWFXZG5aWEpiVkhKcFoyZGxjaTVHVDBOVlUxMGdQU0JtWVd4elpUdGNiaUFnSUNBZ0lIUm9hWE11WDJGamRHbDJaVlJ5YVdkblpYSmJWSEpwWjJkbGNpNUlUMVpGVWwwZ1BTQm1ZV3h6WlR0Y2JseHVJQ0FnSUNBZ2FXWWdLRlYwYVd3dWMzVndjRzl5ZEhOVWNtRnVjMmwwYVc5dVJXNWtLQ2tnSmlZZ0pDaDBhR2x6TG5ScGNDa3VhR0Z6UTJ4aGMzTW9RMnhoYzNOT1lXMWxMa1pCUkVVcEtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdVgybHpWSEpoYm5OcGRHbHZibWx1WnlBOUlIUnlkV1U3WEc0Z0lDQWdJQ0FnSUNRb2RHbHdLUzV2Ym1Vb1ZYUnBiQzVVVWtGT1UwbFVTVTlPWDBWT1JDd2dZMjl0Y0d4bGRHVXBMbVZ0ZFd4aGRHVlVjbUZ1YzJsMGFXOXVSVzVrS0ZSU1FVNVRTVlJKVDA1ZlJGVlNRVlJKVDA0cE8xeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ1kyOXRjR3hsZEdVb0tUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdkR2hwY3k1ZmFHOTJaWEpUZEdGMFpTQTlJQ2NuTzF4dUlDQWdJSDA3WEc1Y2JpQWdJQ0F2THlCd2NtOTBaV04wWldSY2JseHVJQ0FnSUZSdmIyeDBhWEF1Y0hKdmRHOTBlWEJsTG1selYybDBhRU52Ym5SbGJuUWdQU0JtZFc1amRHbHZiaUJwYzFkcGRHaERiMjUwWlc1MEtDa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlFSnZiMnhsWVc0b2RHaHBjeTVuWlhSVWFYUnNaU2dwS1R0Y2JpQWdJQ0I5TzF4dVhHNGdJQ0FnVkc5dmJIUnBjQzV3Y205MGIzUjVjR1V1WjJWMFZHbHdSV3hsYldWdWRDQTlJR1oxYm1OMGFXOXVJR2RsZEZScGNFVnNaVzFsYm5Rb0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUwYVhBZ1BTQjBhR2x6TG5ScGNDQjhmQ0FrS0hSb2FYTXVZMjl1Wm1sbkxuUmxiWEJzWVhSbEtWc3dYVHRjYmlBZ0lDQjlPMXh1WEc0Z0lDQWdWRzl2YkhScGNDNXdjbTkwYjNSNWNHVXVjMlYwUTI5dWRHVnVkQ0E5SUdaMWJtTjBhVzl1SUhObGRFTnZiblJsYm5Rb0tTQjdYRzRnSUNBZ0lDQjJZWElnSkhScGNDQTlJQ1FvZEdocGN5NW5aWFJVYVhCRmJHVnRaVzUwS0NrcE8xeHVYRzRnSUNBZ0lDQjBhR2x6TG5ObGRFVnNaVzFsYm5SRGIyNTBaVzUwS0NSMGFYQXVabWx1WkNoVFpXeGxZM1J2Y2k1VVQwOU1WRWxRWDBsT1RrVlNLU3dnZEdocGN5NW5aWFJVYVhSc1pTZ3BLVHRjYmx4dUlDQWdJQ0FnSkhScGNDNXlaVzF2ZG1WRGJHRnpjeWhEYkdGemMwNWhiV1V1UmtGRVJTQXJJQ2NnSnlBcklFTnNZWE56VG1GdFpTNVRTRTlYS1R0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVqYkdWaGJuVndWR1YwYUdWeUtDazdYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lGUnZiMngwYVhBdWNISnZkRzkwZVhCbExuTmxkRVZzWlcxbGJuUkRiMjUwWlc1MElEMGdablZ1WTNScGIyNGdjMlYwUld4bGJXVnVkRU52Ym5SbGJuUW9KR1ZzWlcxbGJuUXNJR052Ym5SbGJuUXBJSHRjYmlBZ0lDQWdJSFpoY2lCb2RHMXNJRDBnZEdocGN5NWpiMjVtYVdjdWFIUnRiRHRjYmlBZ0lDQWdJR2xtSUNnb2RIbHdaVzltSUdOdmJuUmxiblFnUFQwOUlDZDFibVJsWm1sdVpXUW5JRDhnSjNWdVpHVm1hVzVsWkNjZ09pQmZkSGx3Wlc5bUtHTnZiblJsYm5RcEtTQTlQVDBnSjI5aWFtVmpkQ2NnSmlZZ0tHTnZiblJsYm5RdWJtOWtaVlI1Y0dVZ2ZId2dZMjl1ZEdWdWRDNXFjWFZsY25rcEtTQjdYRzRnSUNBZ0lDQWdJQzh2SUdOdmJuUmxiblFnYVhNZ1lTQkVUMDBnYm05a1pTQnZjaUJoSUdwUmRXVnllVnh1SUNBZ0lDQWdJQ0JwWmlBb2FIUnRiQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2doSkNoamIyNTBaVzUwS1M1d1lYSmxiblFvS1M1cGN5Z2taV3hsYldWdWRDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDUmxiR1Z0Wlc1MExtVnRjSFI1S0NrdVlYQndaVzVrS0dOdmJuUmxiblFwTzF4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FrWld4bGJXVnVkQzUwWlhoMEtDUW9ZMjl1ZEdWdWRDa3VkR1Y0ZENncEtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdKR1ZzWlcxbGJuUmJhSFJ0YkNBL0lDZG9kRzFzSnlBNklDZDBaWGgwSjEwb1kyOXVkR1Z1ZENrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlR0Y2JseHVJQ0FnSUZSdmIyeDBhWEF1Y0hKdmRHOTBlWEJsTG1kbGRGUnBkR3hsSUQwZ1puVnVZM1JwYjI0Z1oyVjBWR2wwYkdVb0tTQjdYRzRnSUNBZ0lDQjJZWElnZEdsMGJHVWdQU0IwYUdsekxtVnNaVzFsYm5RdVoyVjBRWFIwY21saWRYUmxLQ2RrWVhSaExXOXlhV2RwYm1Gc0xYUnBkR3hsSnlrN1hHNWNiaUFnSUNBZ0lHbG1JQ2doZEdsMGJHVXBJSHRjYmlBZ0lDQWdJQ0FnZEdsMGJHVWdQU0IwZVhCbGIyWWdkR2hwY3k1amIyNW1hV2N1ZEdsMGJHVWdQVDA5SUNkbWRXNWpkR2x2YmljZ1B5QjBhR2x6TG1OdmJtWnBaeTUwYVhSc1pTNWpZV3hzS0hSb2FYTXVaV3hsYldWdWRDa2dPaUIwYUdsekxtTnZibVpwWnk1MGFYUnNaVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnY21WMGRYSnVJSFJwZEd4bE8xeHVJQ0FnSUgwN1hHNWNiaUFnSUNCVWIyOXNkR2x3TG5CeWIzUnZkSGx3WlM1amJHVmhiblZ3VkdWMGFHVnlJRDBnWm5WdVkzUnBiMjRnWTJ4bFlXNTFjRlJsZEdobGNpZ3BJSHRjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbDkwWlhSb1pYSXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWZkR1YwYUdWeUxtUmxjM1J5YjNrb0tUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOU8xeHVYRzRnSUNBZ0x5OGdjSEpwZG1GMFpWeHVYRzRnSUNBZ1ZHOXZiSFJwY0M1d2NtOTBiM1I1Y0dVdVgyZGxkRUYwZEdGamFHMWxiblFnUFNCbWRXNWpkR2x2YmlCZloyVjBRWFIwWVdOb2JXVnVkQ2h3YkdGalpXMWxiblFwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJCZEhSaFkyaHRaVzUwVFdGd1czQnNZV05sYldWdWRDNTBiMVZ3Y0dWeVEyRnpaU2dwWFR0Y2JpQWdJQ0I5TzF4dVhHNGdJQ0FnVkc5dmJIUnBjQzV3Y205MGIzUjVjR1V1WDNObGRFeHBjM1JsYm1WeWN5QTlJR1oxYm1OMGFXOXVJRjl6WlhSTWFYTjBaVzVsY25Nb0tTQjdYRzRnSUNBZ0lDQjJZWElnWDNSb2FYTXpJRDBnZEdocGN6dGNibHh1SUNBZ0lDQWdkbUZ5SUhSeWFXZG5aWEp6SUQwZ2RHaHBjeTVqYjI1bWFXY3VkSEpwWjJkbGNpNXpjR3hwZENnbklDY3BPMXh1WEc0Z0lDQWdJQ0IwY21sbloyVnljeTVtYjNKRllXTm9LR1oxYm1OMGFXOXVJQ2gwY21sbloyVnlLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaDBjbWxuWjJWeUlEMDlQU0FuWTJ4cFkyc25LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0pDaGZkR2hwY3pNdVpXeGxiV1Z1ZENrdWIyNG9YM1JvYVhNekxtTnZibk4wY25WamRHOXlMa1YyWlc1MExrTk1TVU5MTENCZmRHaHBjek11WTI5dVptbG5Mbk5sYkdWamRHOXlMQ0JtZFc1amRHbHZiaUFvWlhabGJuUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCZmRHaHBjek11ZEc5bloyeGxLR1YyWlc1MEtUdGNiaUFnSUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDBjbWxuWjJWeUlDRTlQU0JVY21sbloyVnlMazFCVGxWQlRDa2dlMXh1SUNBZ0lDQWdJQ0FnSUhaaGNpQmxkbVZ1ZEVsdUlEMGdkSEpwWjJkbGNpQTlQVDBnVkhKcFoyZGxjaTVJVDFaRlVpQS9JRjkwYUdsek15NWpiMjV6ZEhKMVkzUnZjaTVGZG1WdWRDNU5UMVZUUlVWT1ZFVlNJRG9nWDNSb2FYTXpMbU52Ym5OMGNuVmpkRzl5TGtWMlpXNTBMa1pQUTFWVFNVNDdYRzRnSUNBZ0lDQWdJQ0FnZG1GeUlHVjJaVzUwVDNWMElEMGdkSEpwWjJkbGNpQTlQVDBnVkhKcFoyZGxjaTVJVDFaRlVpQS9JRjkwYUdsek15NWpiMjV6ZEhKMVkzUnZjaTVGZG1WdWRDNU5UMVZUUlV4RlFWWkZJRG9nWDNSb2FYTXpMbU52Ym5OMGNuVmpkRzl5TGtWMlpXNTBMa1pQUTFWVFQxVlVPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0pDaGZkR2hwY3pNdVpXeGxiV1Z1ZENrdWIyNG9aWFpsYm5SSmJpd2dYM1JvYVhNekxtTnZibVpwWnk1elpXeGxZM1J2Y2l3Z1puVnVZM1JwYjI0Z0tHVjJaVzUwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdYM1JvYVhNekxsOWxiblJsY2lobGRtVnVkQ2s3WEc0Z0lDQWdJQ0FnSUNBZ2ZTa3ViMjRvWlhabGJuUlBkWFFzSUY5MGFHbHpNeTVqYjI1bWFXY3VjMlZzWldOMGIzSXNJR1oxYm1OMGFXOXVJQ2hsZG1WdWRDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUY5MGFHbHpNeTVmYkdWaGRtVW9aWFpsYm5RcE8xeHVJQ0FnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdKQ2hmZEdocGN6TXVaV3hsYldWdWRDa3VZMnh2YzJWemRDZ25MbTF2WkdGc0p5a3ViMjRvSjJocFpHVXVZbk11Ylc5a1lXd25MQ0JtZFc1amRHbHZiaUFvS1NCN1hHNGdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGOTBhR2x6TXk1b2FXUmxLQ2s3WEc0Z0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ2ZTazdYRzVjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbU52Ym1acFp5NXpaV3hsWTNSdmNpa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxtTnZibVpwWnlBOUlDUXVaWGgwWlc1a0tIdDlMQ0IwYUdsekxtTnZibVpwWnl3Z2UxeHVJQ0FnSUNBZ0lDQWdJSFJ5YVdkblpYSTZJQ2R0WVc1MVlXd25MRnh1SUNBZ0lDQWdJQ0FnSUhObGJHVmpkRzl5T2lBbkoxeHVJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdVgyWnBlRlJwZEd4bEtDazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lGUnZiMngwYVhBdWNISnZkRzkwZVhCbExsOW1hWGhVYVhSc1pTQTlJR1oxYm1OMGFXOXVJRjltYVhoVWFYUnNaU2dwSUh0Y2JpQWdJQ0FnSUhaaGNpQjBhWFJzWlZSNWNHVWdQU0JmZEhsd1pXOW1LSFJvYVhNdVpXeGxiV1Z1ZEM1blpYUkJkSFJ5YVdKMWRHVW9KMlJoZEdFdGIzSnBaMmx1WVd3dGRHbDBiR1VuS1NrN1hHNGdJQ0FnSUNCcFppQW9kR2hwY3k1bGJHVnRaVzUwTG1kbGRFRjBkSEpwWW5WMFpTZ25kR2wwYkdVbktTQjhmQ0IwYVhSc1pWUjVjR1VnSVQwOUlDZHpkSEpwYm1jbktTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZEM1elpYUkJkSFJ5YVdKMWRHVW9KMlJoZEdFdGIzSnBaMmx1WVd3dGRHbDBiR1VuTENCMGFHbHpMbVZzWlcxbGJuUXVaMlYwUVhSMGNtbGlkWFJsS0NkMGFYUnNaU2NwSUh4OElDY25LVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MExuTmxkRUYwZEhKcFluVjBaU2duZEdsMGJHVW5MQ0FuSnlrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlR0Y2JseHVJQ0FnSUZSdmIyeDBhWEF1Y0hKdmRHOTBlWEJsTGw5bGJuUmxjaUE5SUdaMWJtTjBhVzl1SUY5bGJuUmxjaWhsZG1WdWRDd2dZMjl1ZEdWNGRDa2dlMXh1SUNBZ0lDQWdkbUZ5SUdSaGRHRkxaWGtnUFNCMGFHbHpMbU52Ym5OMGNuVmpkRzl5TGtSQlZFRmZTMFZaTzF4dVhHNGdJQ0FnSUNCamIyNTBaWGgwSUQwZ1kyOXVkR1Y0ZENCOGZDQWtLR1YyWlc1MExtTjFjbkpsYm5SVVlYSm5aWFFwTG1SaGRHRW9aR0YwWVV0bGVTazdYRzVjYmlBZ0lDQWdJR2xtSUNnaFkyOXVkR1Y0ZENrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjUwWlhoMElEMGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvWlhabGJuUXVZM1Z5Y21WdWRGUmhjbWRsZEN3Z2RHaHBjeTVmWjJWMFJHVnNaV2RoZEdWRGIyNW1hV2NvS1NrN1hHNGdJQ0FnSUNBZ0lDUW9aWFpsYm5RdVkzVnljbVZ1ZEZSaGNtZGxkQ2t1WkdGMFlTaGtZWFJoUzJWNUxDQmpiMjUwWlhoMEtUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdhV1lnS0dWMlpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuUmxlSFF1WDJGamRHbDJaVlJ5YVdkblpYSmJaWFpsYm5RdWRIbHdaU0E5UFQwZ0oyWnZZM1Z6YVc0bklEOGdWSEpwWjJkbGNpNUdUME5WVXlBNklGUnlhV2RuWlhJdVNFOVdSVkpkSUQwZ2RISjFaVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYVdZZ0tDUW9ZMjl1ZEdWNGRDNW5aWFJVYVhCRmJHVnRaVzUwS0NrcExtaGhjME5zWVhOektFTnNZWE56VG1GdFpTNVRTRTlYS1NCOGZDQmpiMjUwWlhoMExsOW9iM1psY2xOMFlYUmxJRDA5UFNCSWIzWmxjbE4wWVhSbExsTklUMWNwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVkR1Y0ZEM1ZmFHOTJaWEpUZEdGMFpTQTlJRWh2ZG1WeVUzUmhkR1V1VTBoUFZ6dGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQmpiR1ZoY2xScGJXVnZkWFFvWTI5dWRHVjRkQzVmZEdsdFpXOTFkQ2s3WEc1Y2JpQWdJQ0FnSUdOdmJuUmxlSFF1WDJodmRtVnlVM1JoZEdVZ1BTQkliM1psY2xOMFlYUmxMbE5JVDFjN1hHNWNiaUFnSUNBZ0lHbG1JQ2doWTI5dWRHVjRkQzVqYjI1bWFXY3VaR1ZzWVhrZ2ZId2dJV052Ym5SbGVIUXVZMjl1Wm1sbkxtUmxiR0Y1TG5Ob2IzY3BJSHRjYmlBZ0lDQWdJQ0FnWTI5dWRHVjRkQzV6YUc5M0tDazdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdZMjl1ZEdWNGRDNWZkR2x0Wlc5MWRDQTlJSE5sZEZScGJXVnZkWFFvWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvWTI5dWRHVjRkQzVmYUc5MlpYSlRkR0YwWlNBOVBUMGdTRzkyWlhKVGRHRjBaUzVUU0U5WEtTQjdYRzRnSUNBZ0lDQWdJQ0FnWTI5dWRHVjRkQzV6YUc5M0tDazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDBzSUdOdmJuUmxlSFF1WTI5dVptbG5MbVJsYkdGNUxuTm9iM2NwTzF4dUlDQWdJSDA3WEc1Y2JpQWdJQ0JVYjI5c2RHbHdMbkJ5YjNSdmRIbHdaUzVmYkdWaGRtVWdQU0JtZFc1amRHbHZiaUJmYkdWaGRtVW9aWFpsYm5Rc0lHTnZiblJsZUhRcElIdGNiaUFnSUNBZ0lIWmhjaUJrWVhSaFMyVjVJRDBnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTVFUVZSQlgwdEZXVHRjYmx4dUlDQWdJQ0FnWTI5dWRHVjRkQ0E5SUdOdmJuUmxlSFFnZkh3Z0pDaGxkbVZ1ZEM1amRYSnlaVzUwVkdGeVoyVjBLUzVrWVhSaEtHUmhkR0ZMWlhrcE8xeHVYRzRnSUNBZ0lDQnBaaUFvSVdOdmJuUmxlSFFwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVkR1Y0ZENBOUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLR1YyWlc1MExtTjFjbkpsYm5SVVlYSm5aWFFzSUhSb2FYTXVYMmRsZEVSbGJHVm5ZWFJsUTI5dVptbG5LQ2twTzF4dUlDQWdJQ0FnSUNBa0tHVjJaVzUwTG1OMWNuSmxiblJVWVhKblpYUXBMbVJoZEdFb1pHRjBZVXRsZVN3Z1kyOXVkR1Y0ZENrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHbG1JQ2hsZG1WdWRDa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1MFpYaDBMbDloWTNScGRtVlVjbWxuWjJWeVcyVjJaVzUwTG5SNWNHVWdQVDA5SUNkbWIyTjFjMjkxZENjZ1B5QlVjbWxuWjJWeUxrWlBRMVZUSURvZ1ZISnBaMmRsY2k1SVQxWkZVbDBnUFNCbVlXeHpaVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYVdZZ0tHTnZiblJsZUhRdVgybHpWMmwwYUVGamRHbDJaVlJ5YVdkblpYSW9LU2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdOc1pXRnlWR2x0Wlc5MWRDaGpiMjUwWlhoMExsOTBhVzFsYjNWMEtUdGNibHh1SUNBZ0lDQWdZMjl1ZEdWNGRDNWZhRzkyWlhKVGRHRjBaU0E5SUVodmRtVnlVM1JoZEdVdVQxVlVPMXh1WEc0Z0lDQWdJQ0JwWmlBb0lXTnZiblJsZUhRdVkyOXVabWxuTG1SbGJHRjVJSHg4SUNGamIyNTBaWGgwTG1OdmJtWnBaeTVrWld4aGVTNW9hV1JsS1NCN1hHNGdJQ0FnSUNBZ0lHTnZiblJsZUhRdWFHbGtaU2dwTzF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdOdmJuUmxlSFF1WDNScGJXVnZkWFFnUFNCelpYUlVhVzFsYjNWMEtHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHTnZiblJsZUhRdVgyaHZkbVZ5VTNSaGRHVWdQVDA5SUVodmRtVnlVM1JoZEdVdVQxVlVLU0I3WEc0Z0lDQWdJQ0FnSUNBZ1kyOXVkR1Y0ZEM1b2FXUmxLQ2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgwc0lHTnZiblJsZUhRdVkyOXVabWxuTG1SbGJHRjVMbWhwWkdVcE8xeHVJQ0FnSUgwN1hHNWNiaUFnSUNCVWIyOXNkR2x3TG5CeWIzUnZkSGx3WlM1ZmFYTlhhWFJvUVdOMGFYWmxWSEpwWjJkbGNpQTlJR1oxYm1OMGFXOXVJRjlwYzFkcGRHaEJZM1JwZG1WVWNtbG5aMlZ5S0NrZ2UxeHVJQ0FnSUNBZ1ptOXlJQ2gyWVhJZ2RISnBaMmRsY2lCcGJpQjBhR2x6TGw5aFkzUnBkbVZVY21sbloyVnlLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TGw5aFkzUnBkbVZVY21sbloyVnlXM1J5YVdkblpYSmRLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnY21WMGRYSnVJR1poYkhObE8xeHVJQ0FnSUgwN1hHNWNiaUFnSUNCVWIyOXNkR2x3TG5CeWIzUnZkSGx3WlM1ZloyVjBRMjl1Wm1sbklEMGdablZ1WTNScGIyNGdYMmRsZEVOdmJtWnBaeWhqYjI1bWFXY3BJSHRjYmlBZ0lDQWdJR052Ym1acFp5QTlJQ1F1WlhoMFpXNWtLSHQ5TENCMGFHbHpMbU52Ym5OMGNuVmpkRzl5TGtSbFptRjFiSFFzSUNRb2RHaHBjeTVsYkdWdFpXNTBLUzVrWVhSaEtDa3NJR052Ym1acFp5azdYRzVjYmlBZ0lDQWdJR2xtSUNoamIyNW1hV2N1WkdWc1lYa2dKaVlnZEhsd1pXOW1JR052Ym1acFp5NWtaV3hoZVNBOVBUMGdKMjUxYldKbGNpY3BJSHRjYmlBZ0lDQWdJQ0FnWTI5dVptbG5MbVJsYkdGNUlEMGdlMXh1SUNBZ0lDQWdJQ0FnSUhOb2IzYzZJR052Ym1acFp5NWtaV3hoZVN4Y2JpQWdJQ0FnSUNBZ0lDQm9hV1JsT2lCamIyNW1hV2N1WkdWc1lYbGNiaUFnSUNBZ0lDQWdmVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnVlhScGJDNTBlWEJsUTJobFkydERiMjVtYVdjb1RrRk5SU3dnWTI5dVptbG5MQ0IwYUdsekxtTnZibk4wY25WamRHOXlMa1JsWm1GMWJIUlVlWEJsS1R0Y2JseHVJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJtWnBaenRjYmlBZ0lDQjlPMXh1WEc0Z0lDQWdWRzl2YkhScGNDNXdjbTkwYjNSNWNHVXVYMmRsZEVSbGJHVm5ZWFJsUTI5dVptbG5JRDBnWm5WdVkzUnBiMjRnWDJkbGRFUmxiR1ZuWVhSbFEyOXVabWxuS0NrZ2UxeHVJQ0FnSUNBZ2RtRnlJR052Ym1acFp5QTlJSHQ5TzF4dVhHNGdJQ0FnSUNCcFppQW9kR2hwY3k1amIyNW1hV2NwSUh0Y2JpQWdJQ0FnSUNBZ1ptOXlJQ2gyWVhJZ2EyVjVJR2x1SUhSb2FYTXVZMjl1Wm1sbktTQjdYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WTI5dWMzUnlkV04wYjNJdVJHVm1ZWFZzZEZ0clpYbGRJQ0U5UFNCMGFHbHpMbU52Ym1acFoxdHJaWGxkS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1bWFXZGJhMlY1WFNBOUlIUm9hWE11WTI5dVptbG5XMnRsZVYwN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUhKbGRIVnliaUJqYjI1bWFXYzdYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lDOHZJSE4wWVhScFkxeHVYRzRnSUNBZ1ZHOXZiSFJwY0M1ZmFsRjFaWEo1U1c1MFpYSm1ZV05sSUQwZ1puVnVZM1JwYjI0Z1gycFJkV1Z5ZVVsdWRHVnlabUZqWlNoamIyNW1hV2NwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtVmhZMmdvWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnWkdGMFlTQTlJQ1FvZEdocGN5a3VaR0YwWVNoRVFWUkJYMHRGV1NrN1hHNGdJQ0FnSUNBZ0lIWmhjaUJmWTI5dVptbG5JRDBnS0hSNWNHVnZaaUJqYjI1bWFXY2dQVDA5SUNkMWJtUmxabWx1WldRbklEOGdKM1Z1WkdWbWFXNWxaQ2NnT2lCZmRIbHdaVzltS0dOdmJtWnBaeWtwSUQwOVBTQW5iMkpxWldOMEp5QW1KaUJqYjI1bWFXYzdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tDRmtZWFJoSUNZbUlDOWthWE53YjNObGZHaHBaR1V2TG5SbGMzUW9ZMjl1Wm1sbktTa2dlMXh1SUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2doWkdGMFlTa2dlMXh1SUNBZ0lDQWdJQ0FnSUdSaGRHRWdQU0J1WlhjZ1ZHOXZiSFJwY0NoMGFHbHpMQ0JmWTI5dVptbG5LVHRjYmlBZ0lDQWdJQ0FnSUNBa0tIUm9hWE1wTG1SaGRHRW9SRUZVUVY5TFJWa3NJR1JoZEdFcE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCamIyNW1hV2NnUFQwOUlDZHpkSEpwYm1jbktTQjdYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tHUmhkR0ZiWTI5dVptbG5YU0E5UFQwZ2RXNWtaV1pwYm1Wa0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSjA1dklHMWxkR2h2WkNCdVlXMWxaQ0JjSWljZ0t5QmpiMjVtYVdjZ0t5QW5YQ0luS1R0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnWkdGMFlWdGpiMjVtYVdkZEtDazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDBwTzF4dUlDQWdJSDA3WEc1Y2JpQWdJQ0JmWTNKbFlYUmxRMnhoYzNNb1ZHOXZiSFJwY0N3Z2JuVnNiQ3dnVzN0Y2JpQWdJQ0FnSUd0bGVUb2dKMVpGVWxOSlQwNG5MRnh1SUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlCblpYUW9LU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJXUlZKVFNVOU9PMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMHNJSHRjYmlBZ0lDQWdJR3RsZVRvZ0owUmxabUYxYkhRbkxGeHVJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaUJuWlhRb0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQkVaV1poZFd4ME8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwc0lIdGNiaUFnSUNBZ0lHdGxlVG9nSjA1QlRVVW5MRnh1SUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlCblpYUW9LU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJPUVUxRk8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwc0lIdGNiaUFnSUNBZ0lHdGxlVG9nSjBSQlZFRmZTMFZaSnl4Y2JpQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNGdaMlYwS0NrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1JFRlVRVjlMUlZrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlN3Z2UxeHVJQ0FnSUNBZ2EyVjVPaUFuUlhabGJuUW5MRnh1SUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlCblpYUW9LU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJGZG1WdWREdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOUxDQjdYRzRnSUNBZ0lDQnJaWGs2SUNkRlZrVk9WRjlMUlZrbkxGeHVJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaUJuWlhRb0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQkZWa1ZPVkY5TFJWazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZTd2dlMXh1SUNBZ0lDQWdhMlY1T2lBblJHVm1ZWFZzZEZSNWNHVW5MRnh1SUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlCblpYUW9LU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJFWldaaGRXeDBWSGx3WlR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WFNrN1hHNWNiaUFnSUNCeVpYUjFjbTRnVkc5dmJIUnBjRHRjYmlBZ2ZTZ3BPMXh1WEc0Z0lDOHFLbHh1SUNBZ0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFnSUNvZ2FsRjFaWEo1WEc0Z0lDQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNBZ0tpOWNibHh1SUNBa0xtWnVXMDVCVFVWZElEMGdWRzl2YkhScGNDNWZhbEYxWlhKNVNXNTBaWEptWVdObE8xeHVJQ0FrTG1adVcwNUJUVVZkTGtOdmJuTjBjblZqZEc5eUlEMGdWRzl2YkhScGNEdGNiaUFnSkM1bWJsdE9RVTFGWFM1dWIwTnZibVpzYVdOMElEMGdablZ1WTNScGIyNGdLQ2tnZTF4dUlDQWdJQ1F1Wm01YlRrRk5SVjBnUFNCS1VWVkZVbGxmVGs5ZlEwOU9Sa3hKUTFRN1hHNGdJQ0FnY21WMGRYSnVJRlJ2YjJ4MGFYQXVYMnBSZFdWeWVVbHVkR1Z5Wm1GalpUdGNiaUFnZlR0Y2JseHVJQ0J5WlhSMWNtNGdWRzl2YkhScGNEdGNibjBvYWxGMVpYSjVLVHNnTHlvZ1oyeHZZbUZzSUZSbGRHaGxjaUFxTDF4dUx5OGpJSE52ZFhKalpVMWhjSEJwYm1kVlVrdzlkRzl2YkhScGNDNXFjeTV0WVhCY2JpSmRmUT09XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5kM2R5OXdZV05yY3k5aWIyOTBjM1J5WVhBdmFuTXZaR2x6ZEM5MGIyOXNkR2x3TG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRWxCUVVrc1QwRkJUeXhIUVVGSExFOUJRVThzVFVGQlRTeExRVUZMTEZWQlFWVXNTVUZCU1N4UFFVRlBMRTFCUVUwc1EwRkJReXhSUVVGUkxFdEJRVXNzVVVGQlVTeEhRVUZITEZWQlFWVXNSMEZCUnl4SlFVRkpMRTFCUVUwc1EwRkJReXhQUVVGUExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNSMEZCUnl4VlFVRlZMRWRCUVVjc1NVRkJTU3hOUVVGTkxFTkJRVU1zUjBGQlJ5eEpRVUZKTEU5QlFVOHNUVUZCVFN4TFFVRkxMRlZCUVZVc1NVRkJTU3hIUVVGSExFTkJRVU1zVjBGQlZ5eExRVUZMTEUxQlFVMHNTVUZCU1N4SFFVRkhMRXRCUVVzc1RVRkJUU3hEUVVGRExGTkJRVk1zUjBGQlJ5eFJRVUZSTEVkQlFVY3NUMEZCVHl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRE4xRXNTVUZCU1N4WlFVRlpMRWRCUVVjN1NVRkJZeXd3UWtGQk1FSXNUVUZCVFN4RlFVRkZMRXRCUVVzN1VVRkJTU3hIUVVGSExFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1EwRkJReXhIUVVGSExFdEJRVXNzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXl4RlFVRkZMRVZCUVVVc1EwRkJRenRaUVVOb1NDeEpRVUZKTEZWQlFWVXNSMEZCUnl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRE1VSXNWVUZCVlN4RFFVRkRMRlZCUVZVc1IwRkJSeXhWUVVGVkxFTkJRVU1zVlVGQlZTeEpRVUZKTEV0QlFVc3NRMEZCUXp0WlFVTjJSQ3hWUVVGVkxFTkJRVU1zV1VGQldTeEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVTXZRaXhGUVVGRkxFTkJRVU1zUTBGQlF5eFBRVUZQTEVsQlFVa3NWVUZCVlN4RFFVRkRPMmRDUVVOMFFpeFZRVUZWTEVOQlFVTXNVVUZCVVN4SFFVRkhMRWxCUVVrc1EwRkJRenRaUVVNdlFpeE5RVUZOTEVOQlFVTXNZMEZCWXl4RFFVRkRMRTFCUVUwc1JVRkJSU3hWUVVGVkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEZWQlFWVXNRMEZCUXl4RFFVRkRPMUZCUXpsRUxFTkJRVU03U1VGQlF5eERRVUZETzBsQlFVTXNUVUZCVFN4RFFVRkRMRlZCUVZVc1YwRkJWeXhGUVVGRkxGVkJRVlVzUlVGQlJTeFhRVUZYTzFGQlFVa3NSVUZCUlN4RFFVRkRMRU5CUVVNc1ZVRkJWU3hEUVVGRE8xbEJRM2hGTEdkQ1FVRm5RaXhEUVVGRExGZEJRVmNzUTBGQlF5eFRRVUZUTEVWQlFVVXNWVUZCVlN4RFFVRkRMRU5CUVVNN1VVRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eFhRVUZYTEVOQlFVTTdXVUZEY2tVc1owSkJRV2RDTEVOQlFVTXNWMEZCVnl4RlFVRkZMRmRCUVZjc1EwRkJReXhEUVVGRE8xRkJRVU1zVFVGQlRTeERRVUZETEZkQlFWY3NRMEZCUXp0SlFVRkRMRU5CUVVNc1EwRkJRenRCUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETzBGQlF6TkZMSGxDUVVGNVFpeFJRVUZSTEVWQlFVVXNWMEZCVnp0SlFVRkpMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eFJRVUZSTEZsQlFWa3NWMEZCVnl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xRkJRM1pHTEUxQlFVMHNTVUZCU1N4VFFVRlRMRU5CUVVNc2JVTkJRVzFETEVOQlFVTXNRMEZCUXp0SlFVTTNSQ3hEUVVGRE8wRkJRVU1zUTBGQlF6dEJRVU5JT3pzN096dEhRVXRITzBGQlEwZ3NTVUZCU1N4UFFVRlBMRWRCUVVjc1ZVRkJWU3hEUVVGRE8wbEJRM0pDT3pzN1QwRkhSenRKUVVOSUxFVkJRVVVzUTBGQlF5eERRVUZETEU5QlFVOHNUVUZCVFN4TFFVRkxMRmRCUVZjc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRGFFTXNUVUZCVFN4SlFVRkpMRXRCUVVzc1EwRkJReXgxUkVGQmRVUXNRMEZCUXl4RFFVRkRPMGxCUXpkRkxFTkJRVU03U1VGRFJEczdPenRQUVVsSE8wbEJRMGdzU1VGQlNTeEpRVUZKTEVkQlFVY3NVMEZCVXl4RFFVRkRPMGxCUTNKQ0xFbEJRVWtzVDBGQlR5eEhRVUZITEdWQlFXVXNRMEZCUXp0SlFVTTVRaXhKUVVGSkxGRkJRVkVzUjBGQlJ5eFpRVUZaTEVOQlFVTTdTVUZETlVJc1NVRkJTU3hUUVVGVExFZEJRVWNzUjBGQlJ5eEhRVUZITEZGQlFWRXNRMEZCUXp0SlFVTXZRaXhKUVVGSkxHdENRVUZyUWl4SFFVRkhMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdTVUZEY0VNc1NVRkJTU3h0UWtGQmJVSXNSMEZCUnl4SFFVRkhMRU5CUVVNN1NVRkRPVUlzU1VGQlNTeFpRVUZaTEVkQlFVY3NWMEZCVnl4RFFVRkRPMGxCUXk5Q0xFbEJRVWtzVDBGQlR5eEhRVUZITzFGQlExWXNVMEZCVXl4RlFVRkZMRWxCUVVrN1VVRkRaaXhSUVVGUkxFVkJRVVVzYzBOQlFYTkRMRWRCUVVjc2VVTkJRWGxETzFGQlF6VkdMRTlCUVU4c1JVRkJSU3hoUVVGaE8xRkJRM1JDTEV0QlFVc3NSVUZCUlN4RlFVRkZPMUZCUTFRc1MwRkJTeXhGUVVGRkxFTkJRVU03VVVGRFVpeEpRVUZKTEVWQlFVVXNTMEZCU3p0UlFVTllMRkZCUVZFc1JVRkJSU3hMUVVGTE8xRkJRMllzVTBGQlV5eEZRVUZGTEV0QlFVczdVVUZEYUVJc1RVRkJUU3hGUVVGRkxFdEJRVXM3VVVGRFlpeFhRVUZYTEVWQlFVVXNSVUZCUlR0UlFVTm1MRk5CUVZNc1JVRkJSU3hMUVVGTE8wdEJRMjVDTEVOQlFVTTdTVUZEUml4SlFVRkpMRmRCUVZjc1IwRkJSenRSUVVOa0xGTkJRVk1zUlVGQlJTeFRRVUZUTzFGQlEzQkNMRkZCUVZFc1JVRkJSU3hSUVVGUk8xRkJRMnhDTEV0QlFVc3NSVUZCUlN3eVFrRkJNa0k3VVVGRGJFTXNUMEZCVHl4RlFVRkZMRkZCUVZFN1VVRkRha0lzUzBGQlN5eEZRVUZGTEdsQ1FVRnBRanRSUVVONFFpeEpRVUZKTEVWQlFVVXNVMEZCVXp0UlFVTm1MRkZCUVZFc1JVRkJSU3hyUWtGQmEwSTdVVUZETlVJc1UwRkJVeXhGUVVGRkxHMUNRVUZ0UWp0UlFVTTVRaXhOUVVGTkxFVkJRVVVzVVVGQlVUdFJRVU5vUWl4WFFVRlhMRVZCUVVVc1QwRkJUenRSUVVOd1FpeFRRVUZUTEVWQlFVVXNNRUpCUVRCQ08wdEJRM2hETEVOQlFVTTdTVUZEUml4SlFVRkpMR0ZCUVdFc1IwRkJSenRSUVVOb1FpeEhRVUZITEVWQlFVVXNaVUZCWlR0UlFVTndRaXhMUVVGTExFVkJRVVVzWVVGQllUdFJRVU53UWl4TlFVRk5MRVZCUVVVc1dVRkJXVHRSUVVOd1FpeEpRVUZKTEVWQlFVVXNZMEZCWXp0TFFVTjJRaXhEUVVGRE8wbEJRMFlzU1VGQlNTeFZRVUZWTEVkQlFVYzdVVUZEWWl4SlFVRkpMRVZCUVVVc1RVRkJUVHRSUVVOYUxFZEJRVWNzUlVGQlJTeExRVUZMTzB0QlEySXNRMEZCUXp0SlFVTkdMRWxCUVVrc1MwRkJTeXhIUVVGSE8xRkJRMUlzU1VGQlNTeEZRVUZGTEUxQlFVMHNSMEZCUnl4VFFVRlRPMUZCUTNoQ0xFMUJRVTBzUlVGQlJTeFJRVUZSTEVkQlFVY3NVMEZCVXp0UlFVTTFRaXhKUVVGSkxFVkJRVVVzVFVGQlRTeEhRVUZITEZOQlFWTTdVVUZEZUVJc1MwRkJTeXhGUVVGRkxFOUJRVThzUjBGQlJ5eFRRVUZUTzFGQlF6RkNMRkZCUVZFc1JVRkJSU3hWUVVGVkxFZEJRVWNzVTBGQlV6dFJRVU5vUXl4TFFVRkxMRVZCUVVVc1QwRkJUeXhIUVVGSExGTkJRVk03VVVGRE1VSXNUMEZCVHl4RlFVRkZMRk5CUVZNc1IwRkJSeXhUUVVGVE8xRkJRemxDTEZGQlFWRXNSVUZCUlN4VlFVRlZMRWRCUVVjc1UwRkJVenRSUVVOb1F5eFZRVUZWTEVWQlFVVXNXVUZCV1N4SFFVRkhMRk5CUVZNN1VVRkRjRU1zVlVGQlZTeEZRVUZGTEZsQlFWa3NSMEZCUnl4VFFVRlRPMHRCUTNaRExFTkJRVU03U1VGRFJpeEpRVUZKTEZOQlFWTXNSMEZCUnp0UlFVTmFMRWxCUVVrc1JVRkJSU3hOUVVGTk8xRkJRMW9zU1VGQlNTeEZRVUZGTEUxQlFVMDdTMEZEWml4RFFVRkRPMGxCUTBZc1NVRkJTU3hSUVVGUkxFZEJRVWM3VVVGRFdDeFBRVUZQTEVWQlFVVXNWVUZCVlR0UlFVTnVRaXhoUVVGaExFVkJRVVVzWjBKQlFXZENPMHRCUTJ4RExFTkJRVU03U1VGRFJpeEpRVUZKTEZkQlFWY3NSMEZCUnp0UlFVTmtMRTlCUVU4c1JVRkJSU3hMUVVGTE8xRkJRMlFzVDBGQlR5eEZRVUZGTEV0QlFVczdTMEZEYWtJc1EwRkJRenRKUVVOR0xFbEJRVWtzVDBGQlR5eEhRVUZITzFGQlExWXNTMEZCU3l4RlFVRkZMRTlCUVU4N1VVRkRaQ3hMUVVGTExFVkJRVVVzVDBGQlR6dFJRVU5rTEV0QlFVc3NSVUZCUlN4UFFVRlBPMUZCUTJRc1RVRkJUU3hGUVVGRkxGRkJRVkU3UzBGRGJrSXNRMEZCUXp0SlFVTkdPenM3TzA5QlNVYzdTVUZEU0N4SlFVRkpMRTlCUVU4c1IwRkJSenRSUVVOV0xHbENRVUZwUWl4UFFVRlBMRVZCUVVVc1RVRkJUVHRaUVVNMVFpeGxRVUZsTEVOQlFVTXNTVUZCU1N4RlFVRkZMRTlCUVU4c1EwRkJReXhEUVVGRE8xbEJReTlDTEZWQlFWVTdXVUZEVml4SlFVRkpMRU5CUVVNc1ZVRkJWU3hIUVVGSExFbEJRVWtzUTBGQlF6dFpRVU4yUWl4SlFVRkpMRU5CUVVNc1VVRkJVU3hIUVVGSExFTkJRVU1zUTBGQlF6dFpRVU5zUWl4SlFVRkpMRU5CUVVNc1YwRkJWeXhIUVVGSExFVkJRVVVzUTBGQlF6dFpRVU4wUWl4SlFVRkpMRU5CUVVNc1kwRkJZeXhIUVVGSExFVkJRVVVzUTBGQlF6dFpRVU42UWl4SlFVRkpMRU5CUVVNc1owSkJRV2RDTEVkQlFVY3NTMEZCU3l4RFFVRkRPMWxCUXpsQ0xFbEJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NTVUZCU1N4RFFVRkRPMWxCUTNCQ0xGbEJRVms3V1VGRFdpeEpRVUZKTEVOQlFVTXNUMEZCVHl4SFFVRkhMRTlCUVU4c1EwRkJRenRaUVVOMlFpeEpRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTTdXVUZEZEVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUjBGQlJ5eEpRVUZKTEVOQlFVTTdXVUZEYUVJc1NVRkJTU3hEUVVGRExHRkJRV0VzUlVGQlJTeERRVUZETzFGQlEzcENMRU5CUVVNN1VVRkRSQ3hWUVVGVk8xRkJRMVlzVTBGQlV6dFJRVU5VTEU5QlFVOHNRMEZCUXl4VFFVRlRMRU5CUVVNc1RVRkJUU3hIUVVGSE8xbEJRM1pDTEVsQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1NVRkJTU3hEUVVGRE8xRkJRek5DTEVOQlFVTXNRMEZCUXp0UlFVTkdMRTlCUVU4c1EwRkJReXhUUVVGVExFTkJRVU1zVDBGQlR5eEhRVUZITzFsQlEzaENMRWxCUVVrc1EwRkJReXhWUVVGVkxFZEJRVWNzUzBGQlN5eERRVUZETzFGQlF6VkNMRU5CUVVNc1EwRkJRenRSUVVOR0xFOUJRVThzUTBGQlF5eFRRVUZUTEVOQlFVTXNZVUZCWVN4SFFVRkhPMWxCUXpsQ0xFbEJRVWtzUTBGQlF5eFZRVUZWTEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRE8xRkJRM1pETEVOQlFVTXNRMEZCUXp0UlFVTkdMRTlCUVU4c1EwRkJReXhUUVVGVExFTkJRVU1zVFVGQlRTeEhRVUZITEdkQ1FVRm5RaXhMUVVGTE8xbEJRelZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlExSXNTVUZCU1N4UFFVRlBMRWRCUVVjc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eFJRVUZSTEVOQlFVTTdaMEpCUTNoRExFbEJRVWtzVDBGQlR5eEhRVUZITEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRPMmRDUVVOdVJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU03YjBKQlExZ3NUMEZCVHl4SFFVRkhMRWxCUVVrc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eExRVUZMTEVOQlFVTXNZVUZCWVN4RlFVRkZMRWxCUVVrc1EwRkJReXhyUWtGQmEwSXNSVUZCUlN4RFFVRkRMRU5CUVVNN2IwSkJReTlGTEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNSVUZCUlN4UFFVRlBMRU5CUVVNc1EwRkJRenRuUWtGRGJFUXNRMEZCUXp0blFrRkRSQ3hQUVVGUExFTkJRVU1zWTBGQll5eERRVUZETEV0QlFVc3NSMEZCUnl4RFFVRkRMRTlCUVU4c1EwRkJReXhqUVVGakxFTkJRVU1zUzBGQlN5eERRVUZETzJkQ1FVTTNSQ3hGUVVGRkxFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNiMEpCUVc5Q0xFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTTdiMEpCUTJwRExFOUJRVThzUTBGQlF5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RlFVRkZMRTlCUVU4c1EwRkJReXhEUVVGRE8yZENRVU5zUXl4RFFVRkRPMmRDUVVORUxFbEJRVWtzUTBGQlF5eERRVUZETzI5Q1FVTkdMRTlCUVU4c1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeEZRVUZGTEU5QlFVOHNRMEZCUXl4RFFVRkRPMmRDUVVOc1F5eERRVUZETzFsQlEwd3NRMEZCUXp0WlFVTkVMRWxCUVVrc1EwRkJReXhEUVVGRE8yZENRVU5HTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zWVVGQllTeEZRVUZGTEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkRia1FzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU03YjBKQlEzaENMRTFCUVUwc1EwRkJRenRuUWtGRFdDeERRVUZETzJkQ1FVTkVMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRPMWxCUXpWQ0xFTkJRVU03VVVGRFRDeERRVUZETEVOQlFVTTdVVUZEUml4UFFVRlBMRU5CUVVNc1UwRkJVeXhEUVVGRExFOUJRVThzUjBGQlJ6dFpRVU40UWl4WlFVRlpMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETzFsQlF6VkNMRWxCUVVrc1EwRkJReXhoUVVGaExFVkJRVVVzUTBGQlF6dFpRVU55UWl4RFFVRkRMRU5CUVVNc1ZVRkJWU3hEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVWQlFVVXNTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF6dFpRVU4wUkN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETzFsQlEyaEVMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTXNUMEZCVHl4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eGxRVUZsTEVOQlFVTXNRMEZCUXp0WlFVTjJSQ3hGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRFdDeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETzFsQlEzcENMRU5CUVVNN1dVRkRSQ3hKUVVGSkxFTkJRVU1zVlVGQlZTeEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVTjJRaXhKUVVGSkxFTkJRVU1zVVVGQlVTeEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVTnlRaXhKUVVGSkxFTkJRVU1zVjBGQlZ5eEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVTjRRaXhKUVVGSkxFTkJRVU1zWTBGQll5eEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVTXpRaXhKUVVGSkxFTkJRVU1zVDBGQlR5eEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVTndRaXhKUVVGSkxFTkJRVU1zVDBGQlR5eEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVTndRaXhKUVVGSkxFTkJRVU1zVFVGQlRTeEhRVUZITEVsQlFVa3NRMEZCUXp0WlFVTnVRaXhKUVVGSkxFTkJRVU1zUjBGQlJ5eEhRVUZITEVsQlFVa3NRMEZCUXp0UlFVTndRaXhEUVVGRExFTkJRVU03VVVGRFJpeFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1IwRkJSenRaUVVOeVFpeEpRVUZKTEV0QlFVc3NSMEZCUnl4SlFVRkpMRU5CUVVNN1dVRkRha0lzUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNVMEZCVXl4RFFVRkRMRXRCUVVzc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF6dG5Ra0ZETlVNc1RVRkJUU3hKUVVGSkxFdEJRVXNzUTBGQlF5eHhRMEZCY1VNc1EwRkJReXhEUVVGRE8xbEJRek5FTEVOQlFVTTdXVUZEUkN4SlFVRkpMRk5CUVZNc1IwRkJSeXhEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzFsQlEzSkVMRVZCUVVVc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eGhRVUZoTEVWQlFVVXNTVUZCU1N4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU1zUTBGQlF6dG5Ra0ZETVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZEZUVJc1RVRkJUU3hKUVVGSkxFdEJRVXNzUTBGQlF5d3dRa0ZCTUVJc1EwRkJReXhEUVVGRE8yZENRVU5vUkN4RFFVRkRPMmRDUVVORUxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1QwRkJUeXhEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETzJkQ1FVTnVReXhKUVVGSkxGVkJRVlVzUjBGQlJ5eERRVUZETEVOQlFVTXNVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zWVVGQllTeERRVUZETEdWQlFXVXNSVUZCUlN4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU03WjBKQlEzUkdMRVZCUVVVc1EwRkJReXhEUVVGRExGTkJRVk1zUTBGQlF5eHJRa0ZCYTBJc1JVRkJSU3hKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkRhRVFzVFVGQlRTeERRVUZETzJkQ1FVTllMRU5CUVVNN1owSkJRMFFzU1VGQlNTeEhRVUZITEVkQlFVY3NTVUZCU1N4RFFVRkRMR0ZCUVdFc1JVRkJSU3hEUVVGRE8yZENRVU12UWl4SlFVRkpMRXRCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03WjBKQlF5OURMRWRCUVVjc1EwRkJReXhaUVVGWkxFTkJRVU1zU1VGQlNTeEZRVUZGTEV0QlFVc3NRMEZCUXl4RFFVRkRPMmRDUVVNNVFpeEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRmxCUVZrc1EwRkJReXhyUWtGQmEwSXNSVUZCUlN4TFFVRkxMRU5CUVVNc1EwRkJRenRuUWtGRGNrUXNTVUZCU1N4RFFVRkRMRlZCUVZVc1JVRkJSU3hEUVVGRE8yZENRVU5zUWl4RlFVRkZMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRMRU5CUVVNN2IwSkJRM2hDTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhSUVVGUkxFTkJRVU1zVTBGQlV5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMmRDUVVOd1F5eERRVUZETzJkQ1FVTkVMRWxCUVVrc1UwRkJVeXhIUVVGSExFOUJRVThzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4VFFVRlRMRXRCUVVzc1ZVRkJWU3hIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFVkJRVVVzUjBGQlJ5eEZRVUZGTEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZOQlFWTXNRMEZCUXp0blFrRkRNVWtzU1VGQlNTeFZRVUZWTEVkQlFVY3NTVUZCU1N4RFFVRkRMR05CUVdNc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF6dG5Ra0ZEYUVRc1NVRkJTU3hUUVVGVExFZEJRVWNzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4VFFVRlRMRXRCUVVzc1MwRkJTeXhIUVVGSExGRkJRVkVzUTBGQlF5eEpRVUZKTEVkQlFVY3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTTdaMEpCUXpOR0xFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eFJRVUZSTEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNc1VVRkJVU3hEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETzJkQ1FVTnFSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJRenRuUWtGRGVrUXNTVUZCU1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhKUVVGSkxFMUJRVTBzUTBGQlF6dHZRa0ZEZEVJc1ZVRkJWU3hGUVVGRkxGVkJRVlU3YjBKQlEzUkNMRTlCUVU4c1JVRkJSU3hIUVVGSE8yOUNRVU5hTEUxQlFVMHNSVUZCUlN4SlFVRkpMRU5CUVVNc1QwRkJUenR2UWtGRGNFSXNUMEZCVHl4RlFVRkZMRmRCUVZjN2IwSkJRM0JDTEZkQlFWY3NSVUZCUlN4WlFVRlpPMjlDUVVONlFpeE5RVUZOTEVWQlFVVXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhOUVVGTk8yOUNRVU14UWl4WFFVRlhMRVZCUVVVc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFhRVUZYTzI5Q1FVTndReXhuUWtGQlowSXNSVUZCUlN4TFFVRkxPMmxDUVVNeFFpeERRVUZETEVOQlFVTTdaMEpCUTBnc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0blFrRkRha0lzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4UlFVRlJMRVZCUVVVc1EwRkJRenRuUWtGRGVFSXNRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExGRkJRVkVzUTBGQlF5eFRRVUZUTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1owSkJRMmhETEVsQlFVa3NVVUZCVVN4SFFVRkhPMjlDUVVOWUxFbEJRVWtzWTBGQll5eEhRVUZITEV0QlFVc3NRMEZCUXl4WFFVRlhMRU5CUVVNN2IwSkJRM1pETEV0QlFVc3NRMEZCUXl4WFFVRlhMRWRCUVVjc1NVRkJTU3hEUVVGRE8yOUNRVU42UWl4TFFVRkxMRU5CUVVNc1owSkJRV2RDTEVkQlFVY3NTMEZCU3l4RFFVRkRPMjlDUVVNdlFpeERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eExRVUZMTEVOQlFVTXNWMEZCVnl4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dHZRa0ZEZUVRc1JVRkJSU3hEUVVGRExFTkJRVU1zWTBGQll5eExRVUZMTEZWQlFWVXNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRE8zZENRVU53UXl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRExFbEJRVWtzUlVGQlJTeExRVUZMTEVOQlFVTXNRMEZCUXp0dlFrRkRPVUlzUTBGQlF6dG5Ra0ZEVEN4RFFVRkRMRU5CUVVNN1owSkJRMFlzUlVGQlJTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMSEZDUVVGeFFpeEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZEZGtVc1NVRkJTU3hEUVVGRExHZENRVUZuUWl4SFFVRkhMRWxCUVVrc1EwRkJRenR2UWtGRE4wSXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNTVUZCU1N4RFFVRkRMR05CUVdNc1JVRkJSU3hSUVVGUkxFTkJRVU1zUTBGQlF5eHZRa0ZCYjBJc1EwRkJReXhQUVVGUExFTkJRVU1zYjBKQlFXOUNMRU5CUVVNc1EwRkJRenR2UWtGRGJFY3NUVUZCVFN4RFFVRkRPMmRDUVVOWUxFTkJRVU03WjBKQlEwUXNVVUZCVVN4RlFVRkZMRU5CUVVNN1dVRkRaaXhEUVVGRE8xRkJRMHdzUTBGQlF5eERRVUZETzFGQlEwWXNUMEZCVHl4RFFVRkRMRk5CUVZNc1EwRkJReXhKUVVGSkxFZEJRVWNzWTBGQll5eFJRVUZSTzFsQlF6TkRMRWxCUVVrc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF6dFpRVU5zUWl4SlFVRkpMRWRCUVVjc1IwRkJSeXhKUVVGSkxFTkJRVU1zWVVGQllTeEZRVUZGTEVOQlFVTTdXVUZETDBJc1NVRkJTU3hUUVVGVExFZEJRVWNzUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0WlFVTnlSQ3hGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTjRRaXhOUVVGTkxFbEJRVWtzUzBGQlN5eERRVUZETERCQ1FVRXdRaXhEUVVGRExFTkJRVU03V1VGRGFFUXNRMEZCUXp0WlFVTkVMRWxCUVVrc1VVRkJVU3hIUVVGSE8yZENRVU5ZTEVWQlFVVXNRMEZCUXl4RFFVRkRMRTFCUVUwc1EwRkJReXhYUVVGWExFdEJRVXNzVlVGQlZTeERRVUZETEVsQlFVa3NTVUZCU1N4SFFVRkhMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZETTBRc1IwRkJSeXhEUVVGRExGVkJRVlVzUTBGQlF5eFhRVUZYTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1owSkJRM0JETEVOQlFVTTdaMEpCUTBRc1RVRkJUU3hEUVVGRExFOUJRVThzUTBGQlF5eGxRVUZsTEVOQlFVTXNhMEpCUVd0Q0xFTkJRVU1zUTBGQlF6dG5Ra0ZEYmtRc1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4UFFVRlBMRU5CUVVNc1RVRkJUU3hEUVVGRExGZEJRVmNzUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNN1owSkJRek5FTEUxQlFVMHNRMEZCUXl4blFrRkJaMElzUjBGQlJ5eExRVUZMTEVOQlFVTTdaMEpCUTJoRExFMUJRVTBzUTBGQlF5eGhRVUZoTEVWQlFVVXNRMEZCUXp0blFrRkRka0lzUlVGQlJTeERRVUZETEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJRenR2UWtGRFdDeFJRVUZSTEVWQlFVVXNRMEZCUXp0blFrRkRaaXhEUVVGRE8xbEJRMHdzUTBGQlF5eERRVUZETzFsQlEwWXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN1dVRkRia01zUlVGQlJTeERRVUZETEVOQlFVTXNVMEZCVXl4RFFVRkRMR3RDUVVGclFpeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVOcVF5eE5RVUZOTEVOQlFVTTdXVUZEV0N4RFFVRkRPMWxCUTBRc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEZkQlFWY3NRMEZCUXl4VFFVRlRMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03V1VGRGJrTXNTVUZCU1N4RFFVRkRMR05CUVdNc1EwRkJReXhQUVVGUExFTkJRVU1zUzBGQlN5eERRVUZETEVkQlFVY3NTMEZCU3l4RFFVRkRPMWxCUXpORExFbEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFdEJRVXNzUTBGQlF6dFpRVU16UXl4SlFVRkpMRU5CUVVNc1kwRkJZeXhEUVVGRExFOUJRVThzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNN1dVRkRNME1zUlVGQlJTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMSEZDUVVGeFFpeEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dG5Ra0ZEZGtVc1NVRkJTU3hEUVVGRExHZENRVUZuUWl4SFFVRkhMRWxCUVVrc1EwRkJRenRuUWtGRE4wSXNRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eEpRVUZKTEVOQlFVTXNZMEZCWXl4RlFVRkZMRkZCUVZFc1EwRkJReXhEUVVGRExHOUNRVUZ2UWl4RFFVRkRMRzFDUVVGdFFpeERRVUZETEVOQlFVTTdXVUZEZUVZc1EwRkJRenRaUVVORUxFbEJRVWtzUTBGQlF5eERRVUZETzJkQ1FVTkdMRkZCUVZFc1JVRkJSU3hEUVVGRE8xbEJRMllzUTBGQlF6dFpRVU5FTEVsQlFVa3NRMEZCUXl4WFFVRlhMRWRCUVVjc1JVRkJSU3hEUVVGRE8xRkJRekZDTEVOQlFVTXNRMEZCUXp0UlFVTkdMRmxCUVZrN1VVRkRXaXhQUVVGUExFTkJRVU1zVTBGQlV5eERRVUZETEdGQlFXRXNSMEZCUnp0WlFVTTVRaXhOUVVGTkxFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRVZCUVVVc1EwRkJReXhEUVVGRE8xRkJRM0JETEVOQlFVTXNRMEZCUXp0UlFVTkdMRTlCUVU4c1EwRkJReXhUUVVGVExFTkJRVU1zWVVGQllTeEhRVUZITzFsQlF6bENMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eEhRVUZITEVsQlFVa3NRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRE4wUXNRMEZCUXl4RFFVRkRPMUZCUTBZc1QwRkJUeXhEUVVGRExGTkJRVk1zUTBGQlF5eFZRVUZWTEVkQlFVYzdXVUZETTBJc1NVRkJTU3hKUVVGSkxFZEJRVWNzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4aFFVRmhMRVZCUVVVc1EwRkJReXhEUVVGRE8xbEJRMjVETEVsQlFVa3NRMEZCUXl4cFFrRkJhVUlzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zUlVGQlJTeEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZMRU5CUVVNc1EwRkJRenRaUVVNelJTeEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMRk5CUVZNc1EwRkJReXhKUVVGSkxFZEJRVWNzUjBGQlJ5eEhRVUZITEZOQlFWTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRaUVVONFJDeEpRVUZKTEVOQlFVTXNZVUZCWVN4RlFVRkZMRU5CUVVNN1VVRkRla0lzUTBGQlF5eERRVUZETzFGQlEwWXNUMEZCVHl4RFFVRkRMRk5CUVZNc1EwRkJReXhwUWtGQmFVSXNSMEZCUnl3eVFrRkJNa0lzVVVGQlVTeEZRVUZGTEU5QlFVODdXVUZET1VVc1NVRkJTU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNN1dVRkROVUlzUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXl4UFFVRlBMRTlCUVU4c1MwRkJTeXhYUVVGWExFZEJRVWNzVjBGQlZ5eEhRVUZITEU5QlFVOHNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhMUVVGTExGRkJRVkVzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4UlFVRlJMRWxCUVVrc1QwRkJUeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRla2dzYjBOQlFXOURPMmRDUVVOd1F5eEZRVUZGTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRE8yOUNRVU5RTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEUxQlFVMHNSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdkMEpCUTNCRExGRkJRVkVzUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXl4TlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU03YjBKQlEzSkRMRU5CUVVNN1owSkJRMHdzUTBGQlF6dG5Ra0ZEUkN4SlFVRkpMRU5CUVVNc1EwRkJRenR2UWtGRFJpeFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXl4RFFVRkRPMmRDUVVOeVF5eERRVUZETzFsQlEwd3NRMEZCUXp0WlFVTkVMRWxCUVVrc1EwRkJReXhEUVVGRE8yZENRVU5HTEZGQlFWRXNRMEZCUXl4SlFVRkpMRWRCUVVjc1RVRkJUU3hIUVVGSExFMUJRVTBzUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRPMWxCUXpsRExFTkJRVU03VVVGRFRDeERRVUZETEVOQlFVTTdVVUZEUml4UFFVRlBMRU5CUVVNc1UwRkJVeXhEUVVGRExGRkJRVkVzUjBGQlJ6dFpRVU42UWl4SlFVRkpMRXRCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEZsQlFWa3NRMEZCUXl4eFFrRkJjVUlzUTBGQlF5eERRVUZETzFsQlF6ZEVMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRWQ3hMUVVGTExFZEJRVWNzVDBGQlR5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRXRCUVVzc1MwRkJTeXhWUVVGVkxFZEJRVWNzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFdEJRVXNzUTBGQlF6dFpRVU12Unl4RFFVRkRPMWxCUTBRc1RVRkJUU3hEUVVGRExFdEJRVXNzUTBGQlF6dFJRVU5xUWl4RFFVRkRMRU5CUVVNN1VVRkRSaXhQUVVGUExFTkJRVU1zVTBGQlV5eERRVUZETEdGQlFXRXNSMEZCUnp0WlFVTTVRaXhGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRFppeEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRTlCUVU4c1JVRkJSU3hEUVVGRE8xbEJRek5DTEVOQlFVTTdVVUZEVEN4RFFVRkRMRU5CUVVNN1VVRkRSaXhWUVVGVk8xRkJRMVlzVDBGQlR5eERRVUZETEZOQlFWTXNRMEZCUXl4alFVRmpMRWRCUVVjc2QwSkJRWGRDTEZOQlFWTTdXVUZEYUVVc1RVRkJUU3hEUVVGRExHRkJRV0VzUTBGQlF5eFRRVUZUTEVOQlFVTXNWMEZCVnl4RlFVRkZMRU5CUVVNc1EwRkJRenRSUVVOc1JDeERRVUZETEVOQlFVTTdVVUZEUml4UFFVRlBMRU5CUVVNc1UwRkJVeXhEUVVGRExHRkJRV0VzUjBGQlJ6dFpRVU01UWl4SlFVRkpMRTFCUVUwc1IwRkJSeXhKUVVGSkxFTkJRVU03V1VGRGJFSXNTVUZCU1N4UlFVRlJMRWRCUVVjc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRE8xbEJRemxETEZGQlFWRXNRMEZCUXl4UFFVRlBMRU5CUVVNc1ZVRkJWU3hQUVVGUE8yZENRVU01UWl4RlFVRkZMRU5CUVVNc1EwRkJReXhQUVVGUExFdEJRVXNzVDBGQlR5eERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkRkRUlzUTBGQlF5eERRVUZETEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zVFVGQlRTeERRVUZETEZkQlFWY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1MwRkJTeXhGUVVGRkxFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNVVUZCVVN4RlFVRkZMRlZCUVZVc1MwRkJTenQzUWtGRGVFWXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdiMEpCUTJoRExFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTlFMRU5CUVVNN1owSkJRMFFzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRTlCUVU4c1MwRkJTeXhQUVVGUExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkRiRU1zU1VGQlNTeFBRVUZQTEVkQlFVY3NUMEZCVHl4TFFVRkxMRTlCUVU4c1EwRkJReXhMUVVGTExFZEJRVWNzVFVGQlRTeERRVUZETEZkQlFWY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1ZVRkJWU3hIUVVGSExFMUJRVTBzUTBGQlF5eFhRVUZYTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTlCUVU4c1EwRkJRenR2UWtGRGFrZ3NTVUZCU1N4UlFVRlJMRWRCUVVjc1QwRkJUeXhMUVVGTExFOUJRVThzUTBGQlF5eExRVUZMTEVkQlFVY3NUVUZCVFN4RFFVRkRMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zVlVGQlZTeEhRVUZITEUxQlFVMHNRMEZCUXl4WFFVRlhMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkVzUTBGQlF6dHZRa0ZEYmtnc1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1QwRkJUeXhGUVVGRkxFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNVVUZCVVN4RlFVRkZMRlZCUVZVc1MwRkJTenQzUWtGRGFrVXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdiMEpCUTJoRExFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4UlFVRlJMRVZCUVVVc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eFJRVUZSTEVWQlFVVXNWVUZCVlN4TFFVRkxPM2RDUVVOdVJDeE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dHZRa0ZEYUVNc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlExQXNRMEZCUXp0blFrRkRSQ3hEUVVGRExFTkJRVU1zVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNaVUZCWlN4RlFVRkZPMjlDUVVOd1JDeE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWxCUVVrc1JVRkJSU3hEUVVGRE8yZENRVU42UWl4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVOUUxFTkJRVU1zUTBGQlF5eERRVUZETzFsQlEwZ3NSVUZCUlN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVOMlFpeEpRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1EwRkJReXhOUVVGTkxFTkJRVU1zUlVGQlJTeEZRVUZGTEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVN2IwSkJRM0JETEU5QlFVOHNSVUZCUlN4UlFVRlJPMjlDUVVOcVFpeFJRVUZSTEVWQlFVVXNSVUZCUlR0cFFrRkRaaXhEUVVGRExFTkJRVU03V1VGRFVDeERRVUZETzFsQlEwUXNTVUZCU1N4RFFVRkRMRU5CUVVNN1owSkJRMFlzU1VGQlNTeERRVUZETEZOQlFWTXNSVUZCUlN4RFFVRkRPMWxCUTNKQ0xFTkJRVU03VVVGRFRDeERRVUZETEVOQlFVTTdVVUZEUml4UFFVRlBMRU5CUVVNc1UwRkJVeXhEUVVGRExGTkJRVk1zUjBGQlJ6dFpRVU14UWl4SlFVRkpMRk5CUVZNc1IwRkJSeXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4WlFVRlpMRU5CUVVNc2NVSkJRWEZDTEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUXpGRkxFVkJRVVVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1dVRkJXU3hEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEZOQlFWTXNTMEZCU3l4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU12UkN4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExGbEJRVmtzUTBGQlF5eHhRa0ZCY1VJc1JVRkJSU3hKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEZsQlFWa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU1zUTBGQlF6dG5Ra0ZETTBZc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eFpRVUZaTEVOQlFVTXNUMEZCVHl4RlFVRkZMRVZCUVVVc1EwRkJReXhEUVVGRE8xbEJRek5ETEVOQlFVTTdVVUZEVEN4RFFVRkRMRU5CUVVNN1VVRkRSaXhQUVVGUExFTkJRVU1zVTBGQlV5eERRVUZETEUxQlFVMHNSMEZCUnl4blFrRkJaMElzUzBGQlN5eEZRVUZGTEU5QlFVODdXVUZEY2tRc1NVRkJTU3hQUVVGUExFZEJRVWNzU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4UlFVRlJMRU5CUVVNN1dVRkRlRU1zVDBGQlR5eEhRVUZITEU5QlFVOHNTVUZCU1N4RFFVRkRMRU5CUVVNc1MwRkJTeXhEUVVGRExHRkJRV0VzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRenRaUVVNeFJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlExZ3NUMEZCVHl4SFFVRkhMRWxCUVVrc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eExRVUZMTEVOQlFVTXNZVUZCWVN4RlFVRkZMRWxCUVVrc1EwRkJReXhyUWtGQmEwSXNSVUZCUlN4RFFVRkRMRU5CUVVNN1owSkJReTlGTEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNSVUZCUlN4UFFVRlBMRU5CUVVNc1EwRkJRenRaUVVOc1JDeERRVUZETzFsQlEwUXNSVUZCUlN4RFFVRkRMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF6dG5Ra0ZEVWl4UFFVRlBMRU5CUVVNc1kwRkJZeXhEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEV0QlFVc3NVMEZCVXl4SFFVRkhMRTlCUVU4c1EwRkJReXhMUVVGTExFZEJRVWNzVDBGQlR5eERRVUZETEV0QlFVc3NRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJRenRaUVVNMVJpeERRVUZETzFsQlEwUXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eGhRVUZoTEVWQlFVVXNRMEZCUXl4RFFVRkRMRkZCUVZFc1EwRkJReXhUUVVGVExFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NUMEZCVHl4RFFVRkRMRmRCUVZjc1MwRkJTeXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRha2NzVDBGQlR5eERRVUZETEZkQlFWY3NSMEZCUnl4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVGRE8yZENRVU4wUXl4TlFVRk5MRU5CUVVNN1dVRkRXQ3hEUVVGRE8xbEJRMFFzV1VGQldTeERRVUZETEU5QlFVOHNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJRenRaUVVNdlFpeFBRVUZQTEVOQlFVTXNWMEZCVnl4SFFVRkhMRlZCUVZVc1EwRkJReXhKUVVGSkxFTkJRVU03V1VGRGRFTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhQUVVGUExFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRM1JFTEU5QlFVOHNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRuUWtGRFppeE5RVUZOTEVOQlFVTTdXVUZEV0N4RFFVRkRPMWxCUTBRc1QwRkJUeXhEUVVGRExGRkJRVkVzUjBGQlJ5eFZRVUZWTEVOQlFVTTdaMEpCUXpGQ0xFVkJRVVVzUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4WFFVRlhMRXRCUVVzc1ZVRkJWU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTTdiMEpCUXpGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0blFrRkRia0lzUTBGQlF6dFpRVU5NTEVOQlFVTXNSVUZCUlN4UFFVRlBMRU5CUVVNc1RVRkJUU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0UlFVTnNReXhEUVVGRExFTkJRVU03VVVGRFJpeFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRMRTFCUVUwc1IwRkJSeXhuUWtGQlowSXNTMEZCU3l4RlFVRkZMRTlCUVU4N1dVRkRja1FzU1VGQlNTeFBRVUZQTEVkQlFVY3NTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhSUVVGUkxFTkJRVU03V1VGRGVFTXNUMEZCVHl4SFFVRkhMRTlCUVU4c1NVRkJTU3hEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEdGQlFXRXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6dFpRVU14UkN4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTTdaMEpCUTFnc1QwRkJUeXhIUVVGSExFbEJRVWtzU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1lVRkJZU3hGUVVGRkxFbEJRVWtzUTBGQlF5eHJRa0ZCYTBJc1JVRkJSU3hEUVVGRExFTkJRVU03WjBKQlF5OUZMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6dFpRVU5zUkN4RFFVRkRPMWxCUTBRc1JVRkJSU3hEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRVaXhQUVVGUExFTkJRVU1zWTBGQll5eERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRXRCUVVzc1ZVRkJWU3hIUVVGSExFOUJRVThzUTBGQlF5eExRVUZMTEVkQlFVY3NUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFdEJRVXNzUTBGQlF6dFpRVU01Uml4RFFVRkRPMWxCUTBRc1JVRkJSU3hEUVVGRExFTkJRVU1zVDBGQlR5eERRVUZETEc5Q1FVRnZRaXhGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTnFReXhOUVVGTkxFTkJRVU03V1VGRFdDeERRVUZETzFsQlEwUXNXVUZCV1N4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF6dFpRVU12UWl4UFFVRlBMRU5CUVVNc1YwRkJWeXhIUVVGSExGVkJRVlVzUTBGQlF5eEhRVUZITEVOQlFVTTdXVUZEY2tNc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNUVUZCVFN4RFFVRkRMRXRCUVVzc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlEzUkVMRTlCUVU4c1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlF6dG5Ra0ZEWml4TlFVRk5MRU5CUVVNN1dVRkRXQ3hEUVVGRE8xbEJRMFFzVDBGQlR5eERRVUZETEZGQlFWRXNSMEZCUnl4VlFVRlZMRU5CUVVNN1owSkJRekZDTEVWQlFVVXNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhYUVVGWExFdEJRVXNzVlVGQlZTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNN2IwSkJRM3BETEU5QlFVOHNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRuUWtGRGJrSXNRMEZCUXp0WlFVTk1MRU5CUVVNc1JVRkJSU3hQUVVGUExFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRSUVVOc1F5eERRVUZETEVOQlFVTTdVVUZEUml4UFFVRlBMRU5CUVVNc1UwRkJVeXhEUVVGRExHOUNRVUZ2UWl4SFFVRkhPMWxCUTNKRExFZEJRVWNzUTBGQlF5eERRVUZETEVsQlFVa3NUMEZCVHl4SlFVRkpMRWxCUVVrc1EwRkJReXhqUVVGakxFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTjBReXhGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNZMEZCWXl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZETDBJc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF6dG5Ra0ZEYUVJc1EwRkJRenRaUVVOTUxFTkJRVU03V1VGRFJDeE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRPMUZCUTJwQ0xFTkJRVU1zUTBGQlF6dFJRVU5HTEU5QlFVOHNRMEZCUXl4VFFVRlRMRU5CUVVNc1ZVRkJWU3hIUVVGSExHOUNRVUZ2UWl4TlFVRk5PMWxCUTNKRUxFMUJRVTBzUjBGQlJ5eERRVUZETEVOQlFVTXNUVUZCVFN4RFFVRkRMRVZCUVVVc1JVRkJSU3hKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEU5QlFVOHNSVUZCUlN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVsQlFVa3NSVUZCUlN4RlFVRkZMRTFCUVUwc1EwRkJReXhEUVVGRE8xbEJRMmhHTEVWQlFVVXNRMEZCUXl4RFFVRkRMRTFCUVUwc1EwRkJReXhMUVVGTExFbEJRVWtzVDBGQlR5eE5RVUZOTEVOQlFVTXNTMEZCU3l4TFFVRkxMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlEyNUVMRTFCUVUwc1EwRkJReXhMUVVGTExFZEJRVWM3YjBKQlExZ3NTVUZCU1N4RlFVRkZMRTFCUVUwc1EwRkJReXhMUVVGTE8yOUNRVU5zUWl4SlFVRkpMRVZCUVVVc1RVRkJUU3hEUVVGRExFdEJRVXM3YVVKQlEzSkNMRU5CUVVNN1dVRkRUaXhEUVVGRE8xbEJRMFFzU1VGQlNTeERRVUZETEdWQlFXVXNRMEZCUXl4SlFVRkpMRVZCUVVVc1RVRkJUU3hGUVVGRkxFbEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNWMEZCVnl4RFFVRkRMRU5CUVVNN1dVRkRha1VzVFVGQlRTeERRVUZETEUxQlFVMHNRMEZCUXp0UlFVTnNRaXhEUVVGRExFTkJRVU03VVVGRFJpeFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRMR3RDUVVGclFpeEhRVUZITzFsQlEyNURMRWxCUVVrc1RVRkJUU3hIUVVGSExFVkJRVVVzUTBGQlF6dFpRVU5vUWl4RlFVRkZMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRaQ3hIUVVGSExFTkJRVU1zUTBGQlF5eEpRVUZKTEVkQlFVY3NTVUZCU1N4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZETVVJc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4UFFVRlBMRU5CUVVNc1IwRkJSeXhEUVVGRExFdEJRVXNzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03ZDBKQlEzSkVMRTFCUVUwc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRE8yOUNRVU51UXl4RFFVRkRPMmRDUVVOTUxFTkJRVU03V1VGRFRDeERRVUZETzFsQlEwUXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJRenRSUVVOc1FpeERRVUZETEVOQlFVTTdVVUZEUml4VFFVRlRPMUZCUTFRc1QwRkJUeXhEUVVGRExHZENRVUZuUWl4SFFVRkhMREJDUVVFd1FpeE5RVUZOTzFsQlEzWkVMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETzJkQ1FVTmlMRWxCUVVrc1NVRkJTU3hIUVVGSExFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU03WjBKQlEyeERMRWxCUVVrc1QwRkJUeXhIUVVGSExFTkJRVU1zVDBGQlR5eE5RVUZOTEV0QlFVc3NWMEZCVnl4SFFVRkhMRmRCUVZjc1IwRkJSeXhQUVVGUExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNTMEZCU3l4UlFVRlJMRWxCUVVrc1RVRkJUU3hEUVVGRE8yZENRVU55Unl4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFbEJRVWtzU1VGQlNTeGpRVUZqTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZEZGtNc1RVRkJUU3hEUVVGRE8yZENRVU5ZTEVOQlFVTTdaMEpCUTBRc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRPMjlDUVVOU0xFbEJRVWtzUjBGQlJ5eEpRVUZKTEU5QlFVOHNRMEZCUXl4SlFVRkpMRVZCUVVVc1QwRkJUeXhEUVVGRExFTkJRVU03YjBKQlEyeERMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRE8yZENRVU5xUXl4RFFVRkRPMmRDUVVORUxFVkJRVVVzUTBGQlF5eERRVUZETEU5QlFVOHNUVUZCVFN4TFFVRkxMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU03YjBKQlF6ZENMRVZCUVVVc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4VFFVRlRMRU5CUVVNc1EwRkJReXhEUVVGRE8zZENRVU0zUWl4TlFVRk5MRWxCUVVrc1MwRkJTeXhEUVVGRExHMUNRVUZ0UWl4SFFVRkhMRTFCUVUwc1IwRkJSeXhIUVVGSExFTkJRVU1zUTBGQlF6dHZRa0ZEZUVRc1EwRkJRenR2UWtGRFJDeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRVZCUVVVc1EwRkJRenRuUWtGRGJrSXNRMEZCUXp0WlFVTk1MRU5CUVVNc1EwRkJReXhEUVVGRE8xRkJRMUFzUTBGQlF5eERRVUZETzFGQlEwWXNXVUZCV1N4RFFVRkRMRTlCUVU4c1JVRkJSU3hKUVVGSkxFVkJRVVVzUTBGQlF6dG5Ra0ZEY2tJc1IwRkJSeXhGUVVGRkxGTkJRVk03WjBKQlEyUXNSMEZCUnl4RlFVRkZPMjlDUVVORUxFMUJRVTBzUTBGQlF5eFBRVUZQTEVOQlFVTTdaMEpCUTI1Q0xFTkJRVU03WVVGRFNpeEZRVUZGTzJkQ1FVTkRMRWRCUVVjc1JVRkJSU3hUUVVGVE8yZENRVU5rTEVkQlFVY3NSVUZCUlR0dlFrRkRSQ3hOUVVGTkxFTkJRVU1zVDBGQlR5eERRVUZETzJkQ1FVTnVRaXhEUVVGRE8yRkJRMG9zUlVGQlJUdG5Ra0ZEUXl4SFFVRkhMRVZCUVVVc1RVRkJUVHRuUWtGRFdDeEhRVUZITEVWQlFVVTdiMEpCUTBRc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF6dG5Ra0ZEYUVJc1EwRkJRenRoUVVOS0xFVkJRVVU3WjBKQlEwTXNSMEZCUnl4RlFVRkZMRlZCUVZVN1owSkJRMllzUjBGQlJ5eEZRVUZGTzI5Q1FVTkVMRTFCUVUwc1EwRkJReXhSUVVGUkxFTkJRVU03WjBKQlEzQkNMRU5CUVVNN1lVRkRTaXhGUVVGRk8yZENRVU5ETEVkQlFVY3NSVUZCUlN4UFFVRlBPMmRDUVVOYUxFZEJRVWNzUlVGQlJUdHZRa0ZEUkN4TlFVRk5MRU5CUVVNc1MwRkJTeXhEUVVGRE8yZENRVU5xUWl4RFFVRkRPMkZCUTBvc1JVRkJSVHRuUWtGRFF5eEhRVUZITEVWQlFVVXNWMEZCVnp0blFrRkRhRUlzUjBGQlJ5eEZRVUZGTzI5Q1FVTkVMRTFCUVUwc1EwRkJReXhUUVVGVExFTkJRVU03WjBKQlEzSkNMRU5CUVVNN1lVRkRTaXhGUVVGRk8yZENRVU5ETEVkQlFVY3NSVUZCUlN4aFFVRmhPMmRDUVVOc1FpeEhRVUZITEVWQlFVVTdiMEpCUTBRc1RVRkJUU3hEUVVGRExGZEJRVmNzUTBGQlF6dG5Ra0ZEZGtJc1EwRkJRenRoUVVOS0xFTkJRVU1zUTBGQlF5eERRVUZETzFGQlExSXNUVUZCVFN4RFFVRkRMRTlCUVU4c1EwRkJRenRKUVVOdVFpeERRVUZETEVWQlFVVXNRMEZCUXp0SlFVTktPenM3TzA5QlNVYzdTVUZEU0N4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEU5QlFVOHNRMEZCUXl4blFrRkJaMElzUTBGQlF6dEpRVU4wUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEZkQlFWY3NSMEZCUnl4UFFVRlBMRU5CUVVNN1NVRkRha01zUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhWUVVGVkxFZEJRVWM3VVVGRGNFSXNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eHJRa0ZCYTBJc1EwRkJRenRSUVVOb1F5eE5RVUZOTEVOQlFVTXNUMEZCVHl4RFFVRkRMR2RDUVVGblFpeERRVUZETzBsQlEzQkRMRU5CUVVNc1EwRkJRenRKUVVOR0xFMUJRVTBzUTBGQlF5eFBRVUZQTEVOQlFVTTdRVUZEYmtJc1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEVOQlFVTXNiVUpCUVcxQ08wRkJRemxDTEcxRFFVRnRRenRCUVVWdVF5d3lOV3BFUVVFeU5XcEVJaXdpWm1sc1pTSTZJbmQzZHk5d1lXTnJjeTlpYjI5MGMzUnlZWEF2YW5NdlpHbHpkQzkwYjI5c2RHbHdMbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWRtRnlJRjkwZVhCbGIyWWdQU0IwZVhCbGIyWWdVM2x0WW05c0lEMDlQU0JjSW1aMWJtTjBhVzl1WENJZ0ppWWdkSGx3Wlc5bUlGTjViV0p2YkM1cGRHVnlZWFJ2Y2lBOVBUMGdYQ0p6ZVcxaWIyeGNJaUEvSUdaMWJtTjBhVzl1SUNodlltb3BJSHNnY21WMGRYSnVJSFI1Y0dWdlppQnZZbW83SUgwZ09pQm1kVzVqZEdsdmJpQW9iMkpxS1NCN0lISmxkSFZ5YmlCdlltb2dKaVlnZEhsd1pXOW1JRk41YldKdmJDQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUlDWW1JRzlpYWk1amIyNXpkSEoxWTNSdmNpQTlQVDBnVTNsdFltOXNJQ1ltSUc5aWFpQWhQVDBnVTNsdFltOXNMbkJ5YjNSdmRIbHdaU0EvSUZ3aWMzbHRZbTlzWENJZ09pQjBlWEJsYjJZZ2IySnFPeUI5TzF4dWRtRnlJRjlqY21WaGRHVkRiR0Z6Y3lBOUlHWjFibU4wYVc5dUlDZ3BJSHNnWm5WdVkzUnBiMjRnWkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWgwWVhKblpYUXNJSEJ5YjNCektTQjdJR1p2Y2lBb2RtRnlJR2tnUFNBd095QnBJRHdnY0hKdmNITXViR1Z1WjNSb095QnBLeXNwSUh0Y2JpQWdJQ0IyWVhJZ1pHVnpZM0pwY0hSdmNpQTlJSEJ5YjNCelcybGRPMXh1SUNBZ0lHUmxjMk55YVhCMGIzSXVaVzUxYldWeVlXSnNaU0E5SUdSbGMyTnlhWEIwYjNJdVpXNTFiV1Z5WVdKc1pTQjhmQ0JtWVd4elpUdGNiaUFnSUNCa1pYTmpjbWx3ZEc5eUxtTnZibVpwWjNWeVlXSnNaU0E5SUhSeWRXVTdYRzRnSUNBZ2FXWWdLRndpZG1Gc2RXVmNJaUJwYmlCa1pYTmpjbWx3ZEc5eUtWeHVJQ0FnSUNBZ0lDQmtaWE5qY21sd2RHOXlMbmR5YVhSaFlteGxJRDBnZEhKMVpUdGNiaUFnSUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29kR0Z5WjJWMExDQmtaWE5qY21sd2RHOXlMbXRsZVN3Z1pHVnpZM0pwY0hSdmNpazdYRzU5SUgwZ2NtVjBkWEp1SUdaMWJtTjBhVzl1SUNoRGIyNXpkSEoxWTNSdmNpd2djSEp2ZEc5UWNtOXdjeXdnYzNSaGRHbGpVSEp2Y0hNcElIc2dhV1lnS0hCeWIzUnZVSEp2Y0hNcFhHNGdJQ0FnWkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWhEYjI1emRISjFZM1J2Y2k1d2NtOTBiM1I1Y0dVc0lIQnliM1J2VUhKdmNITXBPeUJwWmlBb2MzUmhkR2xqVUhKdmNITXBYRzRnSUNBZ1pHVm1hVzVsVUhKdmNHVnlkR2xsY3loRGIyNXpkSEoxWTNSdmNpd2djM1JoZEdsalVISnZjSE1wT3lCeVpYUjFjbTRnUTI5dWMzUnlkV04wYjNJN0lIMDdJSDBvS1R0Y2JtWjFibU4wYVc5dUlGOWpiR0Z6YzBOaGJHeERhR1ZqYXlocGJuTjBZVzVqWlN3Z1EyOXVjM1J5ZFdOMGIzSXBJSHNnYVdZZ0tDRW9hVzV6ZEdGdVkyVWdhVzV6ZEdGdVkyVnZaaUJEYjI1emRISjFZM1J2Y2lrcElIdGNiaUFnSUNCMGFISnZkeUJ1WlhjZ1ZIbHdaVVZ5Y205eUtGd2lRMkZ1Ym05MElHTmhiR3dnWVNCamJHRnpjeUJoY3lCaElHWjFibU4wYVc5dVhDSXBPMXh1ZlNCOVhHNHZLaXBjYmlBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnS2lCQ2IyOTBjM1J5WVhBZ0tIWTBMakF1TUMxaGJIQm9ZUzQyS1RvZ2RHOXZiSFJwY0M1cWMxeHVJQ29nVEdsalpXNXpaV1FnZFc1a1pYSWdUVWxVSUNob2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmRIZGljeTlpYjI5MGMzUnlZWEF2WW14dllpOXRZWE4wWlhJdlRFbERSVTVUUlNsY2JpQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tpOWNiblpoY2lCVWIyOXNkR2x3SUQwZ1puVnVZM1JwYjI0Z0tDUXBJSHRjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJEYUdWamF5Qm1iM0lnVkdWMGFHVnlJR1JsY0dWdVpHVnVZM2xjYmlBZ0lDQWdLaUJVWlhSb1pYSWdMU0JvZEhSd09pOHZkR1YwYUdWeUxtbHZMMXh1SUNBZ0lDQXFMMXh1SUNBZ0lHbG1JQ2gwZVhCbGIyWWdWR1YwYUdWeUlEMDlQU0FuZFc1a1pXWnBibVZrSnlrZ2UxeHVJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0owSnZiM1J6ZEhKaGNDQjBiMjlzZEdsd2N5QnlaWEYxYVhKbElGUmxkR2hsY2lBb2FIUjBjRG92TDNSbGRHaGxjaTVwYnk4cEp5azdYRzRnSUNBZ2ZWeHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0FnSUNBcUlFTnZibk4wWVc1MGMxeHVJQ0FnSUNBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0FnSUNBcUwxeHVJQ0FnSUhaaGNpQk9RVTFGSUQwZ0ozUnZiMngwYVhBbk8xeHVJQ0FnSUhaaGNpQldSVkpUU1U5T0lEMGdKelF1TUM0d0xXRnNjR2hoTGpZbk8xeHVJQ0FnSUhaaGNpQkVRVlJCWDB0RldTQTlJQ2RpY3k1MGIyOXNkR2x3Snp0Y2JpQWdJQ0IyWVhJZ1JWWkZUbFJmUzBWWklEMGdKeTRuSUNzZ1JFRlVRVjlMUlZrN1hHNGdJQ0FnZG1GeUlFcFJWVVZTV1Y5T1QxOURUMDVHVEVsRFZDQTlJQ1F1Wm01YlRrRk5SVjA3WEc0Z0lDQWdkbUZ5SUZSU1FVNVRTVlJKVDA1ZlJGVlNRVlJKVDA0Z1BTQXhOVEE3WEc0Z0lDQWdkbUZ5SUVOTVFWTlRYMUJTUlVaSldDQTlJQ2RpY3kxMFpYUm9aWEluTzF4dUlDQWdJSFpoY2lCRVpXWmhkV3gwSUQwZ2UxeHVJQ0FnSUNBZ0lDQmhibWx0WVhScGIyNDZJSFJ5ZFdVc1hHNGdJQ0FnSUNBZ0lIUmxiWEJzWVhSbE9pQW5QR1JwZGlCamJHRnpjejFjSW5SdmIyeDBhWEJjSWlCeWIyeGxQVndpZEc5dmJIUnBjRndpUGljZ0t5QW5QR1JwZGlCamJHRnpjejFjSW5SdmIyeDBhWEF0YVc1dVpYSmNJajQ4TDJScGRqNDhMMlJwZGo0bkxGeHVJQ0FnSUNBZ0lDQjBjbWxuWjJWeU9pQW5hRzkyWlhJZ1ptOWpkWE1uTEZ4dUlDQWdJQ0FnSUNCMGFYUnNaVG9nSnljc1hHNGdJQ0FnSUNBZ0lHUmxiR0Y1T2lBd0xGeHVJQ0FnSUNBZ0lDQm9kRzFzT2lCbVlXeHpaU3hjYmlBZ0lDQWdJQ0FnYzJWc1pXTjBiM0k2SUdaaGJITmxMRnh1SUNBZ0lDQWdJQ0J3YkdGalpXMWxiblE2SUNkMGIzQW5MRnh1SUNBZ0lDQWdJQ0J2Wm1aelpYUTZJQ2N3SURBbkxGeHVJQ0FnSUNBZ0lDQmpiMjV6ZEhKaGFXNTBjem9nVzEwc1hHNGdJQ0FnSUNBZ0lHTnZiblJoYVc1bGNqb2dabUZzYzJWY2JpQWdJQ0I5TzF4dUlDQWdJSFpoY2lCRVpXWmhkV3gwVkhsd1pTQTlJSHRjYmlBZ0lDQWdJQ0FnWVc1cGJXRjBhVzl1T2lBblltOXZiR1ZoYmljc1hHNGdJQ0FnSUNBZ0lIUmxiWEJzWVhSbE9pQW5jM1J5YVc1bkp5eGNiaUFnSUNBZ0lDQWdkR2wwYkdVNklDY29jM1J5YVc1bmZHVnNaVzFsYm5SOFpuVnVZM1JwYjI0cEp5eGNiaUFnSUNBZ0lDQWdkSEpwWjJkbGNqb2dKM04wY21sdVp5Y3NYRzRnSUNBZ0lDQWdJR1JsYkdGNU9pQW5LRzUxYldKbGNueHZZbXBsWTNRcEp5eGNiaUFnSUNBZ0lDQWdhSFJ0YkRvZ0oySnZiMnhsWVc0bkxGeHVJQ0FnSUNBZ0lDQnpaV3hsWTNSdmNqb2dKeWh6ZEhKcGJtZDhZbTl2YkdWaGJpa25MRnh1SUNBZ0lDQWdJQ0J3YkdGalpXMWxiblE2SUNjb2MzUnlhVzVuZkdaMWJtTjBhVzl1S1Njc1hHNGdJQ0FnSUNBZ0lHOW1abk5sZERvZ0ozTjBjbWx1Wnljc1hHNGdJQ0FnSUNBZ0lHTnZibk4wY21GcGJuUnpPaUFuWVhKeVlYa25MRnh1SUNBZ0lDQWdJQ0JqYjI1MFlXbHVaWEk2SUNjb2MzUnlhVzVuZkdWc1pXMWxiblI4WW05dmJHVmhiaWtuWEc0Z0lDQWdmVHRjYmlBZ0lDQjJZWElnUVhSMFlXTm9iV1Z1ZEUxaGNDQTlJSHRjYmlBZ0lDQWdJQ0FnVkU5UU9pQW5ZbTkwZEc5dElHTmxiblJsY2ljc1hHNGdJQ0FnSUNBZ0lGSkpSMGhVT2lBbmJXbGtaR3hsSUd4bFpuUW5MRnh1SUNBZ0lDQWdJQ0JDVDFSVVQwMDZJQ2QwYjNBZ1kyVnVkR1Z5Snl4Y2JpQWdJQ0FnSUNBZ1RFVkdWRG9nSjIxcFpHUnNaU0J5YVdkb2RDZGNiaUFnSUNCOU8xeHVJQ0FnSUhaaGNpQkliM1psY2xOMFlYUmxJRDBnZTF4dUlDQWdJQ0FnSUNCVFNFOVhPaUFuYzJodmR5Y3NYRzRnSUNBZ0lDQWdJRTlWVkRvZ0oyOTFkQ2RjYmlBZ0lDQjlPMXh1SUNBZ0lIWmhjaUJGZG1WdWRDQTlJSHRjYmlBZ0lDQWdJQ0FnU0VsRVJUb2dKMmhwWkdVbklDc2dSVlpGVGxSZlMwVlpMRnh1SUNBZ0lDQWdJQ0JJU1VSRVJVNDZJQ2RvYVdSa1pXNG5JQ3NnUlZaRlRsUmZTMFZaTEZ4dUlDQWdJQ0FnSUNCVFNFOVhPaUFuYzJodmR5Y2dLeUJGVmtWT1ZGOUxSVmtzWEc0Z0lDQWdJQ0FnSUZOSVQxZE9PaUFuYzJodmQyNG5JQ3NnUlZaRlRsUmZTMFZaTEZ4dUlDQWdJQ0FnSUNCSlRsTkZVbFJGUkRvZ0oybHVjMlZ5ZEdWa0p5QXJJRVZXUlU1VVgwdEZXU3hjYmlBZ0lDQWdJQ0FnUTB4SlEwczZJQ2RqYkdsamF5Y2dLeUJGVmtWT1ZGOUxSVmtzWEc0Z0lDQWdJQ0FnSUVaUFExVlRTVTQ2SUNkbWIyTjFjMmx1SnlBcklFVldSVTVVWDB0RldTeGNiaUFnSUNBZ0lDQWdSazlEVlZOUFZWUTZJQ2RtYjJOMWMyOTFkQ2NnS3lCRlZrVk9WRjlMUlZrc1hHNGdJQ0FnSUNBZ0lFMVBWVk5GUlU1VVJWSTZJQ2R0YjNWelpXVnVkR1Z5SnlBcklFVldSVTVVWDB0RldTeGNiaUFnSUNBZ0lDQWdUVTlWVTBWTVJVRldSVG9nSjIxdmRYTmxiR1ZoZG1VbklDc2dSVlpGVGxSZlMwVlpYRzRnSUNBZ2ZUdGNiaUFnSUNCMllYSWdRMnhoYzNOT1lXMWxJRDBnZTF4dUlDQWdJQ0FnSUNCR1FVUkZPaUFuWm1Ga1pTY3NYRzRnSUNBZ0lDQWdJRk5JVDFjNklDZHphRzkzSjF4dUlDQWdJSDA3WEc0Z0lDQWdkbUZ5SUZObGJHVmpkRzl5SUQwZ2UxeHVJQ0FnSUNBZ0lDQlVUMDlNVkVsUU9pQW5MblJ2YjJ4MGFYQW5MRnh1SUNBZ0lDQWdJQ0JVVDA5TVZFbFFYMGxPVGtWU09pQW5MblJ2YjJ4MGFYQXRhVzV1WlhJblhHNGdJQ0FnZlR0Y2JpQWdJQ0IyWVhJZ1ZHVjBhR1Z5UTJ4aGMzTWdQU0I3WEc0Z0lDQWdJQ0FnSUdWc1pXMWxiblE2SUdaaGJITmxMRnh1SUNBZ0lDQWdJQ0JsYm1GaWJHVmtPaUJtWVd4elpWeHVJQ0FnSUgwN1hHNGdJQ0FnZG1GeUlGUnlhV2RuWlhJZ1BTQjdYRzRnSUNBZ0lDQWdJRWhQVmtWU09pQW5hRzkyWlhJbkxGeHVJQ0FnSUNBZ0lDQkdUME5WVXpvZ0oyWnZZM1Z6Snl4Y2JpQWdJQ0FnSUNBZ1EweEpRMHM2SUNkamJHbGpheWNzWEc0Z0lDQWdJQ0FnSUUxQlRsVkJURG9nSjIxaGJuVmhiQ2RjYmlBZ0lDQjlPMXh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNBZ0lDQXFJRU5zWVhOeklFUmxabWx1YVhScGIyNWNiaUFnSUNBZ0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFnSUNBZ0tpOWNiaUFnSUNCMllYSWdWRzl2YkhScGNDQTlJR1oxYm1OMGFXOXVJQ2dwSUh0Y2JpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1ZHOXZiSFJwY0NobGJHVnRaVzUwTENCamIyNW1hV2NwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRjlqYkdGemMwTmhiR3hEYUdWamF5aDBhR2x6TENCVWIyOXNkR2x3S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUhCeWFYWmhkR1ZjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJselJXNWhZbXhsWkNBOUlIUnlkV1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5MGFXMWxiM1YwSUQwZ01EdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMmh2ZG1WeVUzUmhkR1VnUFNBbkp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMkZqZEdsMlpWUnlhV2RuWlhJZ1BTQjdmVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJselZISmhibk5wZEdsdmJtbHVaeUE5SUdaaGJITmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZEdWMGFHVnlJRDBnYm5Wc2JEdGNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklIQnliM1JsWTNSbFpGeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MElEMGdaV3hsYldWdWREdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZMjl1Wm1sbklEMGdkR2hwY3k1ZloyVjBRMjl1Wm1sbktHTnZibVpwWnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuUnBjQ0E5SUc1MWJHdzdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDl6WlhSTWFYTjBaVzVsY25Nb0tUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0F2THlCblpYUjBaWEp6WEc0Z0lDQWdJQ0FnSUM4dklIQjFZbXhwWTF4dUlDQWdJQ0FnSUNCVWIyOXNkR2x3TG5CeWIzUnZkSGx3WlM1bGJtRmliR1VnUFNCbWRXNWpkR2x2YmlCbGJtRmliR1VvS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXBjMFZ1WVdKc1pXUWdQU0IwY25WbE8xeHVJQ0FnSUNBZ0lDQjlPMXh1SUNBZ0lDQWdJQ0JVYjI5c2RHbHdMbkJ5YjNSdmRIbHdaUzVrYVhOaFlteGxJRDBnWm5WdVkzUnBiMjRnWkdsellXSnNaU2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgybHpSVzVoWW14bFpDQTlJR1poYkhObE8xeHVJQ0FnSUNBZ0lDQjlPMXh1SUNBZ0lDQWdJQ0JVYjI5c2RHbHdMbkJ5YjNSdmRIbHdaUzUwYjJkbmJHVkZibUZpYkdWa0lEMGdablZ1WTNScGIyNGdkRzluWjJ4bFJXNWhZbXhsWkNncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMmx6Ulc1aFlteGxaQ0E5SUNGMGFHbHpMbDlwYzBWdVlXSnNaV1E3WEc0Z0lDQWdJQ0FnSUgwN1hHNGdJQ0FnSUNBZ0lGUnZiMngwYVhBdWNISnZkRzkwZVhCbExuUnZaMmRzWlNBOUlHWjFibU4wYVc5dUlIUnZaMmRzWlNobGRtVnVkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dWMlpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHUmhkR0ZMWlhrZ1BTQjBhR2x6TG1OdmJuTjBjblZqZEc5eUxrUkJWRUZmUzBWWk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJqYjI1MFpYaDBJRDBnSkNobGRtVnVkQzVqZFhKeVpXNTBWR0Z5WjJWMEtTNWtZWFJoS0dSaGRHRkxaWGtwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hZMjl1ZEdWNGRDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNTBaWGgwSUQwZ2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9aWFpsYm5RdVkzVnljbVZ1ZEZSaGNtZGxkQ3dnZEdocGN5NWZaMlYwUkdWc1pXZGhkR1ZEYjI1bWFXY29LU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUW9aWFpsYm5RdVkzVnljbVZ1ZEZSaGNtZGxkQ2t1WkdGMFlTaGtZWFJoUzJWNUxDQmpiMjUwWlhoMEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdWNGRDNWZZV04wYVhabFZISnBaMmRsY2k1amJHbGpheUE5SUNGamIyNTBaWGgwTGw5aFkzUnBkbVZVY21sbloyVnlMbU5zYVdOck8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqYjI1MFpYaDBMbDlwYzFkcGRHaEJZM1JwZG1WVWNtbG5aMlZ5S0NrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHVjRkQzVmWlc1MFpYSW9iblZzYkN3Z1kyOXVkR1Y0ZENrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWlhoMExsOXNaV0YyWlNodWRXeHNMQ0JqYjI1MFpYaDBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0pDaDBhR2x6TG1kbGRGUnBjRVZzWlcxbGJuUW9LU2t1YUdGelEyeGhjM01vUTJ4aGMzTk9ZVzFsTGxOSVQxY3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJ4bFlYWmxLRzUxYkd3c0lIUm9hWE1wTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJWdWRHVnlLRzUxYkd3c0lIUm9hWE1wTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNCVWIyOXNkR2x3TG5CeWIzUnZkSGx3WlM1a2FYTndiM05sSUQwZ1puVnVZM1JwYjI0Z1pHbHpjRzl6WlNncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOc1pXRnlWR2x0Wlc5MWRDaDBhR2x6TGw5MGFXMWxiM1YwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyeGxZVzUxY0ZSbGRHaGxjaWdwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdKQzV5WlcxdmRtVkVZWFJoS0hSb2FYTXVaV3hsYldWdWRDd2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpNUVRVlJCWDB0RldTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBa0tIUm9hWE11Wld4bGJXVnVkQ2t1YjJabUtIUm9hWE11WTI5dWMzUnlkV04wYjNJdVJWWkZUbFJmUzBWWktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNRb2RHaHBjeTVsYkdWdFpXNTBLUzVqYkc5elpYTjBLQ2N1Ylc5a1lXd25LUzV2Wm1Zb0oyaHBaR1V1WW5NdWJXOWtZV3duS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGFHbHpMblJwY0NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUW9kR2hwY3k1MGFYQXBMbkpsYlc5MlpTZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZhWE5GYm1GaWJHVmtJRDBnYm5Wc2JEdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM1JwYldWdmRYUWdQU0J1ZFd4c08xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZhRzkyWlhKVGRHRjBaU0E5SUc1MWJHdzdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDloWTNScGRtVlVjbWxuWjJWeUlEMGdiblZzYkR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzUmxkR2hsY2lBOUlHNTFiR3c3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblFnUFNCdWRXeHNPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqYjI1bWFXY2dQU0J1ZFd4c08xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTBhWEFnUFNCdWRXeHNPMXh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNCVWIyOXNkR2x3TG5CeWIzUnZkSGx3WlM1emFHOTNJRDBnWm5WdVkzUnBiMjRnYzJodmR5Z3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJmZEdocGN5QTlJSFJvYVhNN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0pDaDBhR2x6TG1Wc1pXMWxiblFwTG1OemN5Z25aR2x6Y0d4aGVTY3BJRDA5UFNBbmJtOXVaU2NwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSjFCc1pXRnpaU0IxYzJVZ2MyaHZkeUJ2YmlCMmFYTnBZbXhsSUdWc1pXMWxiblJ6SnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYzJodmQwVjJaVzUwSUQwZ0pDNUZkbVZ1ZENoMGFHbHpMbU52Ym5OMGNuVmpkRzl5TGtWMlpXNTBMbE5JVDFjcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YVhOWGFYUm9RMjl1ZEdWdWRDZ3BJQ1ltSUhSb2FYTXVYMmx6Ulc1aFlteGxaQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TGw5cGMxUnlZVzV6YVhScGIyNXBibWNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2h5YjNjZ2JtVjNJRVZ5Y205eUtDZFViMjlzZEdsd0lHbHpJSFJ5WVc1emFYUnBiMjVwYm1jbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKQ2gwYUdsekxtVnNaVzFsYm5RcExuUnlhV2RuWlhJb2MyaHZkMFYyWlc1MEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVhOSmJsUm9aVVJ2YlNBOUlDUXVZMjl1ZEdGcGJuTW9kR2hwY3k1bGJHVnRaVzUwTG05M2JtVnlSRzlqZFcxbGJuUXVaRzlqZFcxbGJuUkZiR1Z0Wlc1MExDQjBhR2x6TG1Wc1pXMWxiblFwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHphRzkzUlhabGJuUXVhWE5FWldaaGRXeDBVSEpsZG1WdWRHVmtLQ2tnZkh3Z0lXbHpTVzVVYUdWRWIyMHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdkR2x3SUQwZ2RHaHBjeTVuWlhSVWFYQkZiR1Z0Wlc1MEtDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhScGNFbGtJRDBnVlhScGJDNW5aWFJWU1VRb2RHaHBjeTVqYjI1emRISjFZM1J2Y2k1T1FVMUZLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYVhBdWMyVjBRWFIwY21saWRYUmxLQ2RwWkNjc0lIUnBjRWxrS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVZzWlcxbGJuUXVjMlYwUVhSMGNtbGlkWFJsS0NkaGNtbGhMV1JsYzJOeWFXSmxaR0o1Snl3Z2RHbHdTV1FwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjMlYwUTI5dWRHVnVkQ2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1OdmJtWnBaeTVoYm1sdFlYUnBiMjRwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKQ2gwYVhBcExtRmtaRU5zWVhOektFTnNZWE56VG1GdFpTNUdRVVJGS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSEJzWVdObGJXVnVkQ0E5SUhSNWNHVnZaaUIwYUdsekxtTnZibVpwWnk1d2JHRmpaVzFsYm5RZ1BUMDlJQ2RtZFc1amRHbHZiaWNnUHlCMGFHbHpMbU52Ym1acFp5NXdiR0ZqWlcxbGJuUXVZMkZzYkNoMGFHbHpMQ0IwYVhBc0lIUm9hWE11Wld4bGJXVnVkQ2tnT2lCMGFHbHpMbU52Ym1acFp5NXdiR0ZqWlcxbGJuUTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdGMGRHRmphRzFsYm5RZ1BTQjBhR2x6TGw5blpYUkJkSFJoWTJodFpXNTBLSEJzWVdObGJXVnVkQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHTnZiblJoYVc1bGNpQTlJSFJvYVhNdVkyOXVabWxuTG1OdmJuUmhhVzVsY2lBOVBUMGdabUZzYzJVZ1B5QmtiMk4xYldWdWRDNWliMlI1SURvZ0pDaDBhR2x6TG1OdmJtWnBaeTVqYjI1MFlXbHVaWElwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNRb2RHbHdLUzVrWVhSaEtIUm9hWE11WTI5dWMzUnlkV04wYjNJdVJFRlVRVjlMUlZrc0lIUm9hWE1wTG1Gd2NHVnVaRlJ2S0dOdmJuUmhhVzVsY2lrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pDaDBhR2x6TG1Wc1pXMWxiblFwTG5SeWFXZG5aWElvZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTVGZG1WdWRDNUpUbE5GVWxSRlJDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmRHVjBhR1Z5SUQwZ2JtVjNJRlJsZEdobGNpaDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGMGRHRmphRzFsYm5RNklHRjBkR0ZqYUcxbGJuUXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWc1pXMWxiblE2SUhScGNDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdGeVoyVjBPaUIwYUdsekxtVnNaVzFsYm5Rc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05zWVhOelpYTTZJRlJsZEdobGNrTnNZWE56TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiR0Z6YzFCeVpXWnBlRG9nUTB4QlUxTmZVRkpGUmtsWUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2Wm1aelpYUTZJSFJvYVhNdVkyOXVabWxuTG05bVpuTmxkQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1J5WVdsdWRITTZJSFJvYVhNdVkyOXVabWxuTG1OdmJuTjBjbUZwYm5SekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoWkdSVVlYSm5aWFJEYkdGemMyVnpPaUJtWVd4elpWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRlYwYVd3dWNtVm1iRzkzS0hScGNDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmRHVjBhR1Z5TG5CdmMybDBhVzl1S0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pDaDBhWEFwTG1Ga1pFTnNZWE56S0VOc1lYTnpUbUZ0WlM1VFNFOVhLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1kyOXRjR3hsZEdVZ1BTQm1kVzVqZEdsdmJpQmpiMjF3YkdWMFpTZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSEJ5WlhaSWIzWmxjbE4wWVhSbElEMGdYM1JvYVhNdVgyaHZkbVZ5VTNSaGRHVTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUY5MGFHbHpMbDlvYjNabGNsTjBZWFJsSUQwZ2JuVnNiRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1gzUm9hWE11WDJselZISmhibk5wZEdsdmJtbHVaeUE5SUdaaGJITmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa0tGOTBhR2x6TG1Wc1pXMWxiblFwTG5SeWFXZG5aWElvWDNSb2FYTXVZMjl1YzNSeWRXTjBiM0l1UlhabGJuUXVVMGhQVjA0cE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NISmxka2h2ZG1WeVUzUmhkR1VnUFQwOUlFaHZkbVZ5VTNSaGRHVXVUMVZVS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCZmRHaHBjeTVmYkdWaGRtVW9iblZzYkN3Z1gzUm9hWE1wTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1ZYUnBiQzV6ZFhCd2IzSjBjMVJ5WVc1emFYUnBiMjVGYm1Rb0tTQW1KaUFrS0hSb2FYTXVkR2x3S1M1b1lYTkRiR0Z6Y3loRGJHRnpjMDVoYldVdVJrRkVSU2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmFYTlVjbUZ1YzJsMGFXOXVhVzVuSUQwZ2RISjFaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pDaDBhR2x6TG5ScGNDa3ViMjVsS0ZWMGFXd3VWRkpCVGxOSlZFbFBUbDlGVGtRc0lHTnZiWEJzWlhSbEtTNWxiWFZzWVhSbFZISmhibk5wZEdsdmJrVnVaQ2hVYjI5c2RHbHdMbDlVVWtGT1UwbFVTVTlPWDBSVlVrRlVTVTlPS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjF3YkdWMFpTZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlPMXh1SUNBZ0lDQWdJQ0JVYjI5c2RHbHdMbkJ5YjNSdmRIbHdaUzVvYVdSbElEMGdablZ1WTNScGIyNGdhR2xrWlNoallXeHNZbUZqYXlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlGOTBhR2x6TWlBOUlIUm9hWE03WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnZEdsd0lEMGdkR2hwY3k1blpYUlVhWEJGYkdWdFpXNTBLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYUdsa1pVVjJaVzUwSUQwZ0pDNUZkbVZ1ZENoMGFHbHpMbU52Ym5OMGNuVmpkRzl5TGtWMlpXNTBMa2hKUkVVcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WDJselZISmhibk5wZEdsdmJtbHVaeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWduVkc5dmJIUnBjQ0JwY3lCMGNtRnVjMmwwYVc5dWFXNW5KeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdZMjl0Y0d4bGRHVWdQU0JtZFc1amRHbHZiaUJqYjIxd2JHVjBaU2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9YM1JvYVhNeUxsOW9iM1psY2xOMFlYUmxJQ0U5UFNCSWIzWmxjbE4wWVhSbExsTklUMWNnSmlZZ2RHbHdMbkJoY21WdWRFNXZaR1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2x3TG5CaGNtVnVkRTV2WkdVdWNtVnRiM1psUTJocGJHUW9kR2x3S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1gzUm9hWE15TG1Wc1pXMWxiblF1Y21WdGIzWmxRWFIwY21saWRYUmxLQ2RoY21saExXUmxjMk55YVdKbFpHSjVKeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkNoZmRHaHBjekl1Wld4bGJXVnVkQ2t1ZEhKcFoyZGxjaWhmZEdocGN6SXVZMjl1YzNSeWRXTjBiM0l1UlhabGJuUXVTRWxFUkVWT0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmZkR2hwY3pJdVgybHpWSEpoYm5OcGRHbHZibWx1WnlBOUlHWmhiSE5sTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUY5MGFHbHpNaTVqYkdWaGJuVndWR1YwYUdWeUtDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dOaGJHeGlZV05yS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYkd4aVlXTnJLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDUW9kR2hwY3k1bGJHVnRaVzUwS1M1MGNtbG5aMlZ5S0docFpHVkZkbVZ1ZENrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FHbGtaVVYyWlc1MExtbHpSR1ZtWVhWc2RGQnlaWFpsYm5SbFpDZ3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSkNoMGFYQXBMbkpsYlc5MlpVTnNZWE56S0VOc1lYTnpUbUZ0WlM1VFNFOVhLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJGamRHbDJaVlJ5YVdkblpYSmJWSEpwWjJkbGNpNURURWxEUzEwZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyRmpkR2wyWlZSeWFXZG5aWEpiVkhKcFoyZGxjaTVHVDBOVlUxMGdQU0JtWVd4elpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMkZqZEdsMlpWUnlhV2RuWlhKYlZISnBaMmRsY2k1SVQxWkZVbDBnUFNCbVlXeHpaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hWZEdsc0xuTjFjSEJ2Y25SelZISmhibk5wZEdsdmJrVnVaQ2dwSUNZbUlDUW9kR2hwY3k1MGFYQXBMbWhoYzBOc1lYTnpLRU5zWVhOelRtRnRaUzVHUVVSRktTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgybHpWSEpoYm5OcGRHbHZibWx1WnlBOUlIUnlkV1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkNoMGFYQXBMbTl1WlNoVmRHbHNMbFJTUVU1VFNWUkpUMDVmUlU1RUxDQmpiMjF3YkdWMFpTa3VaVzExYkdGMFpWUnlZVzV6YVhScGIyNUZibVFvVkZKQlRsTkpWRWxQVGw5RVZWSkJWRWxQVGlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyMXdiR1YwWlNncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmFHOTJaWEpUZEdGMFpTQTlJQ2NuTzF4dUlDQWdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ0lDQXZMeUJ3Y205MFpXTjBaV1JjYmlBZ0lDQWdJQ0FnVkc5dmJIUnBjQzV3Y205MGIzUjVjR1V1YVhOWGFYUm9RMjl1ZEdWdWRDQTlJR1oxYm1OMGFXOXVJR2x6VjJsMGFFTnZiblJsYm5Rb0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUW05dmJHVmhiaWgwYUdsekxtZGxkRlJwZEd4bEtDa3BPMXh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNCVWIyOXNkR2x3TG5CeWIzUnZkSGx3WlM1blpYUlVhWEJGYkdWdFpXNTBJRDBnWm5WdVkzUnBiMjRnWjJWMFZHbHdSV3hsYldWdWRDZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblJwY0NBOUlIUm9hWE11ZEdsd0lIeDhJQ1FvZEdocGN5NWpiMjVtYVdjdWRHVnRjR3hoZEdVcFd6QmRPMXh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNCVWIyOXNkR2x3TG5CeWIzUnZkSGx3WlM1elpYUkRiMjUwWlc1MElEMGdablZ1WTNScGIyNGdjMlYwUTI5dWRHVnVkQ2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lBa2RHbHdJRDBnSkNoMGFHbHpMbWRsZEZScGNFVnNaVzFsYm5Rb0tTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVWc1pXMWxiblJEYjI1MFpXNTBLQ1IwYVhBdVptbHVaQ2hUWld4bFkzUnZjaTVVVDA5TVZFbFFYMGxPVGtWU0tTd2dkR2hwY3k1blpYUlVhWFJzWlNncEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNSMGFYQXVjbVZ0YjNabFEyeGhjM01vUTJ4aGMzTk9ZVzFsTGtaQlJFVWdLeUFuSUNjZ0t5QkRiR0Z6YzA1aGJXVXVVMGhQVnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTnNaV0Z1ZFhCVVpYUm9aWElvS1R0Y2JpQWdJQ0FnSUNBZ2ZUdGNiaUFnSUNBZ0lDQWdWRzl2YkhScGNDNXdjbTkwYjNSNWNHVXVjMlYwUld4bGJXVnVkRU52Ym5SbGJuUWdQU0JtZFc1amRHbHZiaUJ6WlhSRmJHVnRaVzUwUTI5dWRHVnVkQ2drWld4bGJXVnVkQ3dnWTI5dWRHVnVkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdoMGJXd2dQU0IwYUdsekxtTnZibVpwWnk1b2RHMXNPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ2gwZVhCbGIyWWdZMjl1ZEdWdWRDQTlQVDBnSjNWdVpHVm1hVzVsWkNjZ1B5QW5kVzVrWldacGJtVmtKeUE2SUY5MGVYQmxiMllvWTI5dWRHVnVkQ2twSUQwOVBTQW5iMkpxWldOMEp5QW1KaUFvWTI5dWRHVnVkQzV1YjJSbFZIbHdaU0I4ZkNCamIyNTBaVzUwTG1weGRXVnllU2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkx5QmpiMjUwWlc1MElHbHpJR0VnUkU5TklHNXZaR1VnYjNJZ1lTQnFVWFZsY25sY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hSFJ0YkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lTUW9ZMjl1ZEdWdWRDa3VjR0Z5Wlc1MEtDa3VhWE1vSkdWc1pXMWxiblFwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa1pXeGxiV1Z1ZEM1bGJYQjBlU2dwTG1Gd2NHVnVaQ2hqYjI1MFpXNTBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKR1ZzWlcxbGJuUXVkR1Y0ZENna0tHTnZiblJsYm5RcExuUmxlSFFvS1NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pHVnNaVzFsYm5SYmFIUnRiQ0EvSUNkb2RHMXNKeUE2SUNkMFpYaDBKMTBvWTI5dWRHVnVkQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDA3WEc0Z0lDQWdJQ0FnSUZSdmIyeDBhWEF1Y0hKdmRHOTBlWEJsTG1kbGRGUnBkR3hsSUQwZ1puVnVZM1JwYjI0Z1oyVjBWR2wwYkdVb0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdkR2wwYkdVZ1BTQjBhR2x6TG1Wc1pXMWxiblF1WjJWMFFYUjBjbWxpZFhSbEtDZGtZWFJoTFc5eWFXZHBibUZzTFhScGRHeGxKeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVhScGRHeGxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdsMGJHVWdQU0IwZVhCbGIyWWdkR2hwY3k1amIyNW1hV2N1ZEdsMGJHVWdQVDA5SUNkbWRXNWpkR2x2YmljZ1B5QjBhR2x6TG1OdmJtWnBaeTUwYVhSc1pTNWpZV3hzS0hSb2FYTXVaV3hsYldWdWRDa2dPaUIwYUdsekxtTnZibVpwWnk1MGFYUnNaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYVhSc1pUdGNiaUFnSUNBZ0lDQWdmVHRjYmlBZ0lDQWdJQ0FnVkc5dmJIUnBjQzV3Y205MGIzUjVjR1V1WTJ4bFlXNTFjRlJsZEdobGNpQTlJR1oxYm1OMGFXOXVJR05zWldGdWRYQlVaWFJvWlhJb0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZmRHVjBhR1Z5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZEdWMGFHVnlMbVJsYzNSeWIza29LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVHRjYmlBZ0lDQWdJQ0FnTHk4Z2NISnBkbUYwWlZ4dUlDQWdJQ0FnSUNCVWIyOXNkR2x3TG5CeWIzUnZkSGx3WlM1ZloyVjBRWFIwWVdOb2JXVnVkQ0E5SUdaMWJtTjBhVzl1SUY5blpYUkJkSFJoWTJodFpXNTBLSEJzWVdObGJXVnVkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFRjBkR0ZqYUcxbGJuUk5ZWEJiY0d4aFkyVnRaVzUwTG5SdlZYQndaWEpEWVhObEtDbGRPMXh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNCVWIyOXNkR2x3TG5CeWIzUnZkSGx3WlM1ZmMyVjBUR2x6ZEdWdVpYSnpJRDBnWm5WdVkzUnBiMjRnWDNObGRFeHBjM1JsYm1WeWN5Z3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJmZEdocGN6TWdQU0IwYUdsek8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIUnlhV2RuWlhKeklEMGdkR2hwY3k1amIyNW1hV2N1ZEhKcFoyZGxjaTV6Y0d4cGRDZ25JQ2NwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkSEpwWjJkbGNuTXVabTl5UldGamFDaG1kVzVqZEdsdmJpQW9kSEpwWjJkbGNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGNtbG5aMlZ5SUQwOVBTQW5ZMnhwWTJzbktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNRb1gzUm9hWE16TG1Wc1pXMWxiblFwTG05dUtGOTBhR2x6TXk1amIyNXpkSEoxWTNSdmNpNUZkbVZ1ZEM1RFRFbERTeXdnWDNSb2FYTXpMbU52Ym1acFp5NXpaV3hsWTNSdmNpd2dablZ1WTNScGIyNGdLR1YyWlc1MEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1gzUm9hWE16TG5SdloyZHNaU2hsZG1WdWRDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaDBjbWxuWjJWeUlDRTlQU0JVY21sbloyVnlMazFCVGxWQlRDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaWFpsYm5SSmJpQTlJSFJ5YVdkblpYSWdQVDA5SUZSeWFXZG5aWEl1U0U5V1JWSWdQeUJmZEdocGN6TXVZMjl1YzNSeWRXTjBiM0l1UlhabGJuUXVUVTlWVTBWRlRsUkZVaUE2SUY5MGFHbHpNeTVqYjI1emRISjFZM1J2Y2k1RmRtVnVkQzVHVDBOVlUwbE9PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaWFpsYm5SUGRYUWdQU0IwY21sbloyVnlJRDA5UFNCVWNtbG5aMlZ5TGtoUFZrVlNJRDhnWDNSb2FYTXpMbU52Ym5OMGNuVmpkRzl5TGtWMlpXNTBMazFQVlZORlRFVkJWa1VnT2lCZmRHaHBjek11WTI5dWMzUnlkV04wYjNJdVJYWmxiblF1Ums5RFZWTlBWVlE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUW9YM1JvYVhNekxtVnNaVzFsYm5RcExtOXVLR1YyWlc1MFNXNHNJRjkwYUdsek15NWpiMjVtYVdjdWMyVnNaV04wYjNJc0lHWjFibU4wYVc5dUlDaGxkbVZ1ZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUY5MGFHbHpNeTVmWlc1MFpYSW9aWFpsYm5RcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1M1dmJpaGxkbVZ1ZEU5MWRDd2dYM1JvYVhNekxtTnZibVpwWnk1elpXeGxZM1J2Y2l3Z1puVnVZM1JwYjI0Z0tHVjJaVzUwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWDNSb2FYTXpMbDlzWldGMlpTaGxkbVZ1ZENrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa0tGOTBhR2x6TXk1bGJHVnRaVzUwS1M1amJHOXpaWE4wS0NjdWJXOWtZV3duS1M1dmJpZ25hR2xrWlM1aWN5NXRiMlJoYkNjc0lHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUY5MGFHbHpNeTVvYVdSbEtDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtTnZibVpwWnk1elpXeGxZM1J2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTI5dVptbG5JRDBnSkM1bGVIUmxibVFvZTMwc0lIUm9hWE11WTI5dVptbG5MQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnlhV2RuWlhJNklDZHRZVzUxWVd3bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6Wld4bFkzUnZjam9nSnlkY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJacGVGUnBkR3hsS0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgwN1hHNGdJQ0FnSUNBZ0lGUnZiMngwYVhBdWNISnZkRzkwZVhCbExsOW1hWGhVYVhSc1pTQTlJR1oxYm1OMGFXOXVJRjltYVhoVWFYUnNaU2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCMGFYUnNaVlI1Y0dVZ1BTQmZkSGx3Wlc5bUtIUm9hWE11Wld4bGJXVnVkQzVuWlhSQmRIUnlhV0oxZEdVb0oyUmhkR0V0YjNKcFoybHVZV3d0ZEdsMGJHVW5LU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWxiR1Z0Wlc1MExtZGxkRUYwZEhKcFluVjBaU2duZEdsMGJHVW5LU0I4ZkNCMGFYUnNaVlI1Y0dVZ0lUMDlJQ2R6ZEhKcGJtY25LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MExuTmxkRUYwZEhKcFluVjBaU2duWkdGMFlTMXZjbWxuYVc1aGJDMTBhWFJzWlNjc0lIUm9hWE11Wld4bGJXVnVkQzVuWlhSQmRIUnlhV0oxZEdVb0ozUnBkR3hsSnlrZ2ZId2dKeWNwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaV3hsYldWdWRDNXpaWFJCZEhSeWFXSjFkR1VvSjNScGRHeGxKeXdnSnljcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ0lDQlViMjlzZEdsd0xuQnliM1J2ZEhsd1pTNWZaVzUwWlhJZ1BTQm1kVzVqZEdsdmJpQmZaVzUwWlhJb1pYWmxiblFzSUdOdmJuUmxlSFFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCa1lYUmhTMlY1SUQwZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2k1RVFWUkJYMHRGV1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5SbGVIUWdQU0JqYjI1MFpYaDBJSHg4SUNRb1pYWmxiblF1WTNWeWNtVnVkRlJoY21kbGRDa3VaR0YwWVNoa1lYUmhTMlY1S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaFkyOXVkR1Y0ZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJsZUhRZ1BTQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWhsZG1WdWRDNWpkWEp5Wlc1MFZHRnlaMlYwTENCMGFHbHpMbDluWlhSRVpXeGxaMkYwWlVOdmJtWnBaeWdwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa0tHVjJaVzUwTG1OMWNuSmxiblJVWVhKblpYUXBMbVJoZEdFb1pHRjBZVXRsZVN3Z1kyOXVkR1Y0ZENrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWlhabGJuUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MFpYaDBMbDloWTNScGRtVlVjbWxuWjJWeVcyVjJaVzUwTG5SNWNHVWdQVDA5SUNkbWIyTjFjMmx1SnlBL0lGUnlhV2RuWlhJdVJrOURWVk1nT2lCVWNtbG5aMlZ5TGtoUFZrVlNYU0E5SUhSeWRXVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0pDaGpiMjUwWlhoMExtZGxkRlJwY0VWc1pXMWxiblFvS1NrdWFHRnpRMnhoYzNNb1EyeGhjM05PWVcxbExsTklUMWNwSUh4OElHTnZiblJsZUhRdVgyaHZkbVZ5VTNSaGRHVWdQVDA5SUVodmRtVnlVM1JoZEdVdVUwaFBWeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuUmxlSFF1WDJodmRtVnlVM1JoZEdVZ1BTQkliM1psY2xOMFlYUmxMbE5JVDFjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZWEpVYVcxbGIzVjBLR052Ym5SbGVIUXVYM1JwYldWdmRYUXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR1Y0ZEM1ZmFHOTJaWEpUZEdGMFpTQTlJRWh2ZG1WeVUzUmhkR1V1VTBoUFZ6dGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hZMjl1ZEdWNGRDNWpiMjVtYVdjdVpHVnNZWGtnZkh3Z0lXTnZiblJsZUhRdVkyOXVabWxuTG1SbGJHRjVMbk5vYjNjcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWlhoMExuTm9iM2NvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBaWGgwTGw5MGFXMWxiM1YwSUQwZ2MyVjBWR2x0Wlc5MWRDaG1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHTnZiblJsZUhRdVgyaHZkbVZ5VTNSaGRHVWdQVDA5SUVodmRtVnlVM1JoZEdVdVUwaFBWeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWlhoMExuTm9iM2NvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5TENCamIyNTBaWGgwTG1OdmJtWnBaeTVrWld4aGVTNXphRzkzS1R0Y2JpQWdJQ0FnSUNBZ2ZUdGNiaUFnSUNBZ0lDQWdWRzl2YkhScGNDNXdjbTkwYjNSNWNHVXVYMnhsWVhabElEMGdablZ1WTNScGIyNGdYMnhsWVhabEtHVjJaVzUwTENCamIyNTBaWGgwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1pHRjBZVXRsZVNBOUlIUm9hWE11WTI5dWMzUnlkV04wYjNJdVJFRlVRVjlMUlZrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MFpYaDBJRDBnWTI5dWRHVjRkQ0I4ZkNBa0tHVjJaVzUwTG1OMWNuSmxiblJVWVhKblpYUXBMbVJoZEdFb1pHRjBZVXRsZVNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXTnZiblJsZUhRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWlhoMElEMGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvWlhabGJuUXVZM1Z5Y21WdWRGUmhjbWRsZEN3Z2RHaHBjeTVmWjJWMFJHVnNaV2RoZEdWRGIyNW1hV2NvS1NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pDaGxkbVZ1ZEM1amRYSnlaVzUwVkdGeVoyVjBLUzVrWVhSaEtHUmhkR0ZMWlhrc0lHTnZiblJsZUhRcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dWMlpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHVjRkQzVmWVdOMGFYWmxWSEpwWjJkbGNsdGxkbVZ1ZEM1MGVYQmxJRDA5UFNBblptOWpkWE52ZFhRbklEOGdWSEpwWjJkbGNpNUdUME5WVXlBNklGUnlhV2RuWlhJdVNFOVdSVkpkSUQwZ1ptRnNjMlU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZMjl1ZEdWNGRDNWZhWE5YYVhSb1FXTjBhWFpsVkhKcFoyZGxjaWdwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZWEpVYVcxbGIzVjBLR052Ym5SbGVIUXVYM1JwYldWdmRYUXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR1Y0ZEM1ZmFHOTJaWEpUZEdGMFpTQTlJRWh2ZG1WeVUzUmhkR1V1VDFWVU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRmpiMjUwWlhoMExtTnZibVpwWnk1a1pXeGhlU0I4ZkNBaFkyOXVkR1Y0ZEM1amIyNW1hV2N1WkdWc1lYa3VhR2xrWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJsZUhRdWFHbGtaU2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuUmxlSFF1WDNScGJXVnZkWFFnUFNCelpYUlVhVzFsYjNWMEtHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1kyOXVkR1Y0ZEM1ZmFHOTJaWEpUZEdGMFpTQTlQVDBnU0c5MlpYSlRkR0YwWlM1UFZWUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR1Y0ZEM1b2FXUmxLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmU3dnWTI5dWRHVjRkQzVqYjI1bWFXY3VaR1ZzWVhrdWFHbGtaU2s3WEc0Z0lDQWdJQ0FnSUgwN1hHNGdJQ0FnSUNBZ0lGUnZiMngwYVhBdWNISnZkRzkwZVhCbExsOXBjMWRwZEdoQlkzUnBkbVZVY21sbloyVnlJRDBnWm5WdVkzUnBiMjRnWDJselYybDBhRUZqZEdsMlpWUnlhV2RuWlhJb0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLSFpoY2lCMGNtbG5aMlZ5SUdsdUlIUm9hWE11WDJGamRHbDJaVlJ5YVdkblpYSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVmWVdOMGFYWmxWSEpwWjJkbGNsdDBjbWxuWjJWeVhTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEhKMVpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdabUZzYzJVN1hHNGdJQ0FnSUNBZ0lIMDdYRzRnSUNBZ0lDQWdJRlJ2YjJ4MGFYQXVjSEp2ZEc5MGVYQmxMbDluWlhSRGIyNW1hV2NnUFNCbWRXNWpkR2x2YmlCZloyVjBRMjl1Wm1sbktHTnZibVpwWnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dVptbG5JRDBnSkM1bGVIUmxibVFvZTMwc0lIUm9hWE11WTI5dWMzUnlkV04wYjNJdVJHVm1ZWFZzZEN3Z0pDaDBhR2x6TG1Wc1pXMWxiblFwTG1SaGRHRW9LU3dnWTI5dVptbG5LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqYjI1bWFXY3VaR1ZzWVhrZ0ppWWdkSGx3Wlc5bUlHTnZibVpwWnk1a1pXeGhlU0E5UFQwZ0oyNTFiV0psY2ljcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjVtYVdjdVpHVnNZWGtnUFNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vYjNjNklHTnZibVpwWnk1a1pXeGhlU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHbGtaVG9nWTI5dVptbG5MbVJsYkdGNVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJRlYwYVd3dWRIbHdaVU5vWldOclEyOXVabWxuS0U1QlRVVXNJR052Ym1acFp5d2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpNUVaV1poZFd4MFZIbHdaU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVabWxuTzF4dUlDQWdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ0lDQlViMjlzZEdsd0xuQnliM1J2ZEhsd1pTNWZaMlYwUkdWc1pXZGhkR1ZEYjI1bWFXY2dQU0JtZFc1amRHbHZiaUJmWjJWMFJHVnNaV2RoZEdWRGIyNW1hV2NvS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1kyOXVabWxuSUQwZ2UzMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1amIyNW1hV2NwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLSFpoY2lCclpYa2dhVzRnZEdocGN5NWpiMjVtYVdjcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WTI5dWMzUnlkV04wYjNJdVJHVm1ZWFZzZEZ0clpYbGRJQ0U5UFNCMGFHbHpMbU52Ym1acFoxdHJaWGxkS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNW1hV2RiYTJWNVhTQTlJSFJvYVhNdVkyOXVabWxuVzJ0bGVWMDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVabWxuTzF4dUlDQWdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ0lDQXZMeUJ6ZEdGMGFXTmNiaUFnSUNBZ0lDQWdWRzl2YkhScGNDNWZhbEYxWlhKNVNXNTBaWEptWVdObElEMGdablZ1WTNScGIyNGdYMnBSZFdWeWVVbHVkR1Z5Wm1GalpTaGpiMjVtYVdjcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtVmhZMmdvWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJrWVhSaElEMGdKQ2gwYUdsektTNWtZWFJoS0VSQlZFRmZTMFZaS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdYMk52Ym1acFp5QTlJQ2gwZVhCbGIyWWdZMjl1Wm1sbklEMDlQU0FuZFc1a1pXWnBibVZrSnlBL0lDZDFibVJsWm1sdVpXUW5JRG9nWDNSNWNHVnZaaWhqYjI1bWFXY3BLU0E5UFQwZ0oyOWlhbVZqZENjZ0ppWWdZMjl1Wm1sbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doWkdGMFlTQW1KaUF2WkdsemNHOXpaWHhvYVdSbEx5NTBaWE4wS0dOdmJtWnBaeWtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdSaGRHRXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZU0E5SUc1bGR5QlViMjlzZEdsd0tIUm9hWE1zSUY5amIyNW1hV2NwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtLSFJvYVhNcExtUmhkR0VvUkVGVVFWOUxSVmtzSUdSaGRHRXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUdOdmJtWnBaeUE5UFQwZ0ozTjBjbWx1WnljcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHUmhkR0ZiWTI5dVptbG5YU0E5UFQwZ2RXNWtaV1pwYm1Wa0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0owNXZJRzFsZEdodlpDQnVZVzFsWkNCY0lpY2dLeUJqYjI1bWFXY2dLeUFuWENJbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtZWFJoVzJOdmJtWnBaMTBvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ2ZUdGNiaUFnSUNBZ0lDQWdYMk55WldGMFpVTnNZWE56S0ZSdmIyeDBhWEFzSUc1MWJHd3NJRnQ3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYTJWNU9pQW5Wa1ZTVTBsUFRpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlCblpYUW9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCV1JWSlRTVTlPTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDBzSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCclpYazZJQ2RFWldaaGRXeDBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUlHZGxkQ2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFUmxabUYxYkhRN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlN3Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHdGxlVG9nSjA1QlRVVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0Z1oyVjBLQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1RrRk5SVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlMQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYTJWNU9pQW5SRUZVUVY5TFJWa25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0Z1oyVjBLQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1JFRlVRVjlMUlZrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlN3Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHdGxlVG9nSjBWMlpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUlHZGxkQ2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFVjJaVzUwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDBzSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCclpYazZJQ2RGVmtWT1ZGOUxSVmtuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNGdaMlYwS0NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdSVlpGVGxSZlMwVlpPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHNJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JyWlhrNklDZEVaV1poZFd4MFZIbHdaU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpQm5aWFFvS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkVaV1poZFd4MFZIbHdaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYU2s3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJVYjI5c2RHbHdPMXh1SUNBZ0lIMG9LVHRjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBZ0lDQWdLaUJxVVhWbGNubGNiaUFnSUNBZ0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFnSUNBZ0tpOWNiaUFnSUNBa0xtWnVXMDVCVFVWZElEMGdWRzl2YkhScGNDNWZhbEYxWlhKNVNXNTBaWEptWVdObE8xeHVJQ0FnSUNRdVptNWJUa0ZOUlYwdVEyOXVjM1J5ZFdOMGIzSWdQU0JVYjI5c2RHbHdPMXh1SUNBZ0lDUXVabTViVGtGTlJWMHVibTlEYjI1bWJHbGpkQ0E5SUdaMWJtTjBhVzl1SUNncElIdGNiaUFnSUNBZ0lDQWdKQzVtYmx0T1FVMUZYU0E5SUVwUlZVVlNXVjlPVDE5RFQwNUdURWxEVkR0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZSdmIyeDBhWEF1WDJwUmRXVnllVWx1ZEdWeVptRmpaVHRjYmlBZ0lDQjlPMXh1SUNBZ0lISmxkSFZ5YmlCVWIyOXNkR2x3TzF4dWZTaHFVWFZsY25rcE95QXZLaUJuYkc5aVlXd2dWR1YwYUdWeUlDb3ZYRzR2THlNZ2MyOTFjbU5sVFdGd2NHbHVaMVZTVEQxMGIyOXNkR2x3TG1wekxtMWhjRnh1WEc0dkx5TWdjMjkxY21ObFRXRndjR2x1WjFWU1REMWtZWFJoT21Gd2NHeHBZMkYwYVc5dUwycHpiMjQ3WTJoaGNuTmxkRDExZEdZNE8ySmhjMlUyTkN4bGVVb3lXbGhLZW1GWE9YVkphbTk2VEVOS2VtSXpWbmxaTWxaNlNXcHdZa2x1WkROa2VUbDNXVmRPY21ONU9XbGlNamt3WXpOU2VWbFlRWFpoYmsxMldrZHNlbVJET1RCaU1qbHpaRWRzZDB4dGNIcEpiREJ6U1cwMWFHSlhWbnBKYW5CaVdGTjNhV0pYUm5kalIyeDFXak5OYVU5cFNrSlJWVVpDVEVWc1FsRlZhM05VTUVaQ1ZIbDRTRkZWUmtoTVJUbENVVlU0YzFSVlJrSlVVM2hNVVZWR1RFeEdWa0pSVmxWelUxVkdRbE5UZUZCUlZVWlFURVV4UWxGVk1ITlJNRVpDVVhsNFVsRlZSbEpNUlhSQ1VWVnpjMVZWUmtKVlUzaElVVlZHU0V4R1ZrSlJWbFZ6VWpCR1FsSjVlRXBSVlVaS1RFVXhRbEZWTUhOUk1FWkNVWGw0VUZGVlJsQk1SV1JDVVZWamMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMXpVakJHUWxKNWVGWlJWVVpXVEVWa1FsRlZZM05UVlVaQ1UxTjRUbEZWUms1TVJVNUNVVlZOYzFJd1JrSlNlWGhLVVZWR1NreEZPVUpSVlRoelZGVkdRbFJUZUV4UlZVWk1URVpXUWxGV1ZYTlRWVVpDVTFONFNGRlZSa2hNUlU1Q1VWVk5jMVl3UmtKV2VYaE1VVlZHVEV4Rk1VSlJWVEJ6VTFWR1FsTlRlRWhSVlVaSVRFVjBRbEZWYzNOVVZVWkNWRk40UkZGVlJrUk1SazVDVVZaTmMxSXdSa0pTZVhoU1VWVkdVa3hGWkVKUlZXTnpWREJHUWxSNWVFaFJWVVpJVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFGVlJrWk9NVVZ6VTFWR1FsTlRlRnBSVlVaYVRFVmtRbEZWWTNOWk1FWkNXWGwzZDFGclJrSk5SVWx6VkZWR1FsUlRlRVpSVlVaR1RFVjBRbEZWYzNOVFZVWkNVMU40U0ZGVlJraE1SVTVDVVZWTmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVakJHUWxKNWVFUlJWVVpFVEVWV1FsRlZWWE5STUVaQ1VYbDRTRkZWUmtoTVJYUkNVVlZ6YzFFd1JrSlJlWGhPVVZWR1RreEZWa0pSVlZWelVUQkdRbEY1ZUVaUlZVWkdURVZXUWxGVlZYTlJNRVpDVVhwMFNsRlZSa1JNUld4Q1VWVnJjMVpWUmtKV1UzaElVVlZHU0V4RmRFSlJWWE56VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwU2xGVlJrUk1SbFpDVVZaVmMxRXdSa0pSZVhoV1VWVkdWa3hGWkVKUlZXTnpWbFZHUWxaVGVFUlJWVVpFVEVaV1FsRldWWE5UVlVaQ1UxTjRURkZWUmt4TVJVNUNVVlZOTjFOVlJrSlJlWGhXVVZWR1ZreEZUa0pSVlUxelYxVkdRbGRUZUVoUlZVWklURVZzUWxGVmEzTlJNRVpDVVhwMFNsRlZSa1JNUlZaQ1VWVlZjMUV3UmtKUmVYaEVVVlZHUkV4Rk9VSlJWVGh6VTFWR1FsTlRlRlpSVlVaV1RFVk9RbEZWVFRkVlZVWkNVWGw0VmxGVlJsWk1SVTVDVVZWTmMxVlZSa0pWVTNoSVVWVkdTRXhGYkVKUlZXdHpVVEJHUWxGNmRFcFJWVVpFVEVVeFFsRlZNSE5STUVaQ1VYbDRhbEZWUm1wTVJVNUNVVlZOYzFSVlJrSlVVM2hHVVZWR1JreEdWa0pSVmxWelVUQkdRbEY1ZUVoUlZVWklURVZXUWxGVlZYTldWVVpDVmxONFJGRlZSa1JNUlU1Q1VWVk5OMUZWUmtKUmVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVRFVXhRbEZWTUhOUk1FWkNVWGw0VmxGVlJsWk1SbVJDVVZaamMxSlZSa0pTVTNoV1VWVkdWa3hGVmtKUlZWVnpWakJHUWxaNWVFcFJWVVpLVEVWV1FsRlZWWE5STUVaQ1VYbDRSRkZWUmtSTVJsWkNVVlpWYzFFd1JrSlJlblJLVVZWR1JFeEhaRU5SVlVadVVXbDRSRkZWUmtSTVJtUkNVVlpqYzFFd1JrSlJlWGhVVVZWR1ZFeEZWa0pSVlZWelZsVkdRbFpUZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJsRlZSa1pNUlU1Q1VWVk5jMUV3UmtKUmVYaFlVVlZHV0V4RlRrSlJWVTAzVTFWR1FsRjVlRzVSYTBaQ1dqQkpjMUV3UmtKUmVYaFlVVlZHV0V4RlZrSlJWVlZ6VmpCR1FsWjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWTmMxWXdSa0pXZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSbEZWUmtaTVJVNUNVVlZOTjFGVlJrWmpSM0JEVEVoc1ExRlZSalZSYVhoU1VWVkdVa3hGVmtKUlZWVnpWakJHUWxaNWVFcFJWVVpLVEVWV1FsRlZWWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlWGhTVVZWR1VreEdiRUpSVm10elZqQkdRbFo1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTUd4Q1VWVk5jMVJWUmtKVVUzaEtVVlZHU2t4R1RrSlJWazF6VVRCR1FsRjVlSFJSTUVaQ1lsVk5jMUV3UmtKUmVYaEVVVlZHUkU4d1JrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkUlZVWkdaV3R2TjA5NmN6ZFBNR1JDVXpCak4xRlZSa1pUUTNoS1VWVkdTa3hGT1VKUlZUaHpVakJHUWxKNWVGWlJWVVpXVEVWT1FsRlZUVGRUVlVaR1pHdEpOMDk2ZEZCUlZXUklUekJzUWxFd1ozTlNWVVpDVWxONFJGRlZSa1JNUlU1Q1VWVk5jMVF3UmtKVWVYaE9VVlZHVGt4RmRFSlJWWE56VmpCR1FsWjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwVWxGVlRuTlJlWGhPVVZWR1RreEZiRUpSVld0elV6QkdRbE41ZUVSUlZVWkVURWhXUlZGVlJqRlNRM2hFVVZWR1JFeEZUa0pSVlUwM1UxVkdSRTB3VlhOUk1FWkNVWHAwU2xGVlZrVlBlbk0zVHpBNVFsTlZZemRUVlVaR1UwTjRTbEZWUmtwTVJXeENVVlZyYzFJd1JrSlNlWGhVVVZWR1ZFeEZUa0pSVlUwM1UxVkdSR05yU1hOVFZVWkNVMU40VUZGVlJsQk1SV1JDVVZWamMxcFZSa0phVTNoRVVWVkdSRTh3YkVKUmVteERURVZzUWxGVmEzTlZWVVpDVlZONFNGRlZSa2hNUm14Q1VWWnJjMUV3UmtKUmVuUktVVlZOTVZGcGVFcFJWVVpLVEVaT1FsRldUWE5TTUVaQ1VubDRTRkZWUmtoTVJXUkNVVlZqYzFWVlJrSlZVM2hFVVZWR1JFOHdiRUpSZVRsRFRFVnNRbEZWYTNOaE1FcENVVmQwUTB4RlpFSlJWV056VVRCR1FsRjVlRVJSVlVaRVRFVldRbEZWVlhOUk1FWkNVWGw0U2xGVlJrcE1SVTVDVVZWTmMxRXdSa0pSZW5SS1VWVk9kMUY1ZUVwUlZVWktURWN4UTFGVlJuUlJhWGhJVVZWR1NFeEZaRUpSVldOelVUQkdRbEY2ZEVwUlZVMDFVV2w0U2xGVlJrcE1SbXhDVVZacmMxSXdSa0pTZVhoWVVWVkdXRXhGVGtKUlZVMDNVMVZHUmt3d1NYTlRWVVpDVTFONFVGRlZSbEJNUldSQ1VWVmpOMVZWUmtSWGFYaFVVVlZHVkV4RlZrSlJWVlZ6VTFWR1FsTlVkRkpSVlU1dFRFWkdRbEZXUlhOU1ZVWkNVbE40ZWxFd1JrSmpNRTF6VWpCR1FsSjVlRFZSTUVaQ1pWVk5OMVZWUmtST1ZWbHpWREJHUWxSNWVFWlJWVVpHVEVkR1FsRlhSVGRWVlVaRVpFVkpjMU13UmtKVGVYaEdVVlZHUmt4RlZrSlJWVlUzVlZWR1JGWkRlRXhSVlVaTVRFVldRbEZWVlhOUk1FWkNVWHAwVWxGVlRsTk1SV3hDVVZWcmMxSlZSa0pTVTNoTVVWVkdURTh4UmtKUk1XZHpWVlZHUWxWVGVFWlJWVVpHVEVWMFFsRlZjemRWVlVaRVdtbDRWRkZWUmxSTVJWWkNVVlZWYzFNd1JrSlRlblJTVVZWT2IxRnBlRTVSVlVaT1RFVldRbEZWVlhOVE1FWkNVM3AwVWxGVlRtbE1SbVJDVVZaamMxSlZSa0pTVTNoR1VWVkdSazh4UmtKUk1sbHpWVEJHUWxWNWVFWlJWVVpHVEVWMFFsRlZjemRUTUVaRVlXdEpjMUV3UmtKUmVuUktVVlZXUjB4RmJFSlJWV3R6VmpCR1FsWjVlRWhSVlVaSVR6RkdRbEV5YUVOTVJrNUNVVlpOYzFKVlJrSlNVM2hVVVZWR1ZFOHhSa0pSTTBKRFRFWkdRbEZXUlhOU1ZVWkNVbE40VWxGVlJsSlBNVVpDVVRKNFEweEZkRUpSVlhOelVsVkdRbEpUZDNsUmEwWkNUV3RKTjFWVlJrUmlSVTF6VkRCR1FsUjVlRVpSVlVaR1RFWkdRbEZXUlRkVlZVWkVZV3RKYzFNd1JrSlRlWGhHVVZWR1JreEhiRU5SVlVad1VXcDBVbEZWVGpSUmFYaEtVVlZHU2t4RlZrSlJWVlZ6VlRCR1FsVjZkRkpSVlU1dFRFWkdRbEZXUlhOU1ZVWkNVbE40Y2xGclJrSmhNRWszVlZWR1JFNVZTWE5WTUVaQ1ZYbDRSbEZWUmtaTVJ6RkRVVlZHZEZGcWRGSlJWVTAxVVdsNFRsRlZSazVNUlZaQ1VWVlZjMVZWUmtKVlZIUlNVVlZPYjFGcGVGaFJWVVpZVEVWV1FsRlZWWE5VTUVaQ1ZIcDBVbEZWVG5kUmFYaFVVVlZHVkV4RlZrSlJWVlZ6VFVWS1FsRlVRa05QTUhSQ1VUTlNSRXhGVGtKUlZVMDNVMVZHUmxKcGVFcFJWVVpLVEVkR1FsRlhSWE5TTUVaQ1VucDBVbEZWVG5OUmFYaElVVlZHU0V4RlZrSlJWVlZ6V2xWR1FscFVkRkpSVlU1M1VXbDRURkZWUmt4TVJWWkNVVlZWYzFsVlJrSlpWSFJTVVZWT2QxRnBlRTVSVlVaT1RFVldRbEZWVlhOWFZVWkNWMVIwVWxGVlRuZFJhWGhLVVZWR1NreEZWa0pSVlZWeldUQkdRbGw2ZEV4UlZVNTVVV2w0UkZGVlJrUlBNR3hDVWxWWmMxTlZSa0pUVTNoV1VWVkdWa3hGWkVKUlZXTTNWVlZHUkZwcGVFcFJWVVpLVEVWV1FsRlZWWE5VVlVaQ1ZGUjBVbEZWVG1GTVJXUkNVVlZqYzFKVlJrSlNVM2hNVVZWR1RFOHdkRUpSTVdkelVUQkdRbEY2ZEVwUlZWWkhURVZzUWxGVmEzTlRNRVpDVTNsNFNGRlZSa2hQTVVaQ1VURlpjMU5WUmtKVFUzaEdVVlZHUmt4Rk1VSlJWVEJ6VWpCR1FsSjVlRlJSVlVaVVR6RkdRbEV6YUVOTVJURkNVVlV3YzFKVlJrSlNVM2hTVVZWR1VreEZaRUpSVldOelZUQkdRbFY2ZEZKUlZVMHhVV2w0U2xGVlJrcE1SVlpDVVZWVmMxUlZSa0pVVTNoSVVWVkdTRXhHVGtKUlZrMDNWVlZHUkdWRlNYTlRNRVpDVTNsNFJsRlZSa1pNUlRsQ1VWVTRjMUl3UmtKU2VYaFVVVlZHVkU4eFJrSlJla1pEVEVaR1FsRldSWE5TVlVaQ1VsTjRWbEZWUmxaTVJXUkNVVlZqYzFVd1JrSlZlblJTVVZWT2IxRjVlRXhSVlVaTVRFVldRbEZWVlhOVU1FWkNWSGw0U0ZGVlJraE1SazVDVVZaTk4xVlZSa1JOVlVselZEQkdRbFI1ZUVaUlZVWkdURVpPUWxGV1RYTlNNRVpDVW5sNFZGRlZSbFJQTVVaQ1VYcHNRMHhHUmtKUlZrVnpVbFZHUWxKVGVGWlJWVVpXVEVWa1FsRlZZM05WTUVaQ1ZYcDBVbEZWVG05UmVYaFdVVlZHVmt4RlZrSlJWVlZ6VjFWR1FsZFRlRWhSVlVaSVRFWk9RbEZXVFRkVlZVWkVZMFZOYzFaVlJrSldVM2hHVVZWR1JreEdiRUpSVm10elVqQkdRbEo1ZUZSUlZVWlVUekIwUWxFelNrUk1SVTVDVVZWTk4xTlZSa1pTYVhoS1VWVkdTa3hHVGtKUlZrMXpVakJHUWxKNmRGSlJWVTVyVEVWc1FsRlZhM05TVlVaQ1VsTjRUbEZWUms1UE1VWkNVVEZ2YzFOVlJrSlRVM2hHVVZWR1JreEZNVUpSVlRBM1V6QkdSRmxwZUVSUlZVWkVUekJzUWxKVldYTlRWVVpDVTFONFVsRlZSbEpNUldSQ1VWVmpOMVZWUmtSWmFYaFFVVlZHVUV4RlZrSlJWVlZ6VmxWR1FsWlVkRkpSVlU1MVVXbDRhRkZWUm1oTVJWWkNVVlZWYzFvd1NrSlJWMlJEVHpCMFFsRXlhRVJNUlU1Q1VWVk5OMU5WUmtaU2FYaEtVVlZHU2t4R1pFSlJWbU56VWpCR1FsSjZkRkpSVlU1dlVXbDRVRkZWUmxCTVJWWkNVVlZWYzFNd1JrSlRlblJTVVZWT2EweEZPVUpSVlRoelVsVkdRbEpUZUV4UlZVWk1UekIwUWxFeVdYTlJNRVpDVVhwMFNsRlZWa2RNUld4Q1VWVnJjMVF3UmtKVWVYaElVVlZHU0U4eFJrSlJNVzl6VXpCR1FsTjVlRVpSVlVaR1RFVTVRbEZWT0RkVlZVWkVXa040VEZGVlJreE1SVlpDVVZWVmMxUXdSa0pVZW5SU1VWVk9hMHhGZEVKUlZYTnpVbFZHUWxKVGVGQlJWVVpRVHpGR1FsRXlVWE5VVlVaQ1ZGTjRSbEZWUmtaTVJrWkNVVlpGTjFNd1JrUmhhMGx6VVRCR1FsRjZkRXBSVlZaSFQzcHpOMDh3T1VKVFZXTTNVMVZHUmxORGVFcFJWVVpLVEVVNVFsRlZPSE5TTUVaQ1VucDBVbEZWVG1GTVIyeERVVlZHY0ZGcGVGQlJWVVpRVEVWV1FsRlZWWE5VVlVaQ1ZGUjBXbEZWVFRWUmFYaHNVVlZHYkV4RlRrSlJWVTF6VTFWR1FsTlRlRVpSVlVaR1RFVTVRbEZWT0hOUk1FWkNVWGw0UkZGVlJrUlBNV3hDVWxNNVEweEdWa0pSVmxVM1YxVkdSRlpwZUVwUlZVWktURVZPUWxGVlRYTldWVVpDVmxONFNGRlZSa2hNUld4Q1VWVnJjMUV3UmtKUmVuUmFVVlZPTWxGcGVFcFJWVVpLVEVWT1FsRlZUWE5WVlVaQ1ZWTjRTRkZWUmtoTVJVNUNVVlZOYzFFd1JrSlJlblJhVVZWT2MxRnBlRXBSVlVaS1RFVk9RbEZWVFhOV01FWkNWbmw0U0ZGVlJraE1SVlpDVVZWVmMxRXdSa0pSZW5SYVVWVk9NRkZwZUVwUlZVWktURVZPUWxGVlRYTlpNRVpDV1hsNFNGRlZSa2hNUlZaQ1VWVlZjMUV3UmtKUmVuUmFVVlZPTmxGcGVFcFJWVVpLVEVWT1FsRlZUWE5hTUVwQ1VWZGtRMHhGWkVKUlZXTnpVekJHUWxONWVFUlJWVVpFVHpGc1FsRjZiRU5NUld4Q1VWVnJjMUV3UmtKUmVYaFFVVlZHVUV4RlpFSlJWV056VTFWR1FsTlRlRVJSVlVaRVR6RnNRbEpZUWtOTVJteENVVlpyTjFkVlJrUlhhWGhLVVZWR1NreEZUa0pSVlUxelZEQkdRbFI1ZUVoUlZVWklURVU1UWxGVk9ITlJNRVpDVVhwMFdsRlZUakpSYVhoS1VWVkdTa3hGVGtKUlZVMXpWRlZHUWxSVGVFaFJWVVpJVEVWc1FsRlZhM05STUVaQ1VYbDRWbEZWUmxaTVJVNUNVVlZOYzFSVlJrSlVVM2hFVVZWR1JFeEZUa0pSVlUwM1YxVkdSR1JGVFhOVFZVWkNVMU40UkZGVlJrUk1SV1JDVVZWamMxSXdSa0pTZVhoS1VWVkdTa3hGVGtKUlZVMDNWMVZHUm1GRlNYTlRWVVpDVTFONFJGRlZSa1JNUjBaQ1VWZEZjMUpWUmtKU1UzaEVVVlZHUkU4eFJrSlJNMXBEVEVWT1FsRlZUVGRWVlVaR1VrTjRWbEZWUmxaUE1VWkNVbFpaYzFVd1JrSlZlblJTVVZWV1ZVeEZPVUpSVlRoelVUQkdRbEY1ZUZSUlZVWlVURVZPUWxGVlRYTlVWVVpDVkZONFNGRlZSa2hQTVd4Q1VUTndRMHhGYkVKUlZXdHpVVEJHUWxGNWVGWlJWVVpXVEVWa1FsRlZZM05UVlVaQ1UxTjRSRkZWUmtSUE1VWkNVVE53UTB4RlRrSlJWVTF6VVRCR1FsRjZkRkpSVlZaSFRFVTVRbEZWT0hOUk1FWkNVWGw0VkZGVlJsUk1SVTVDVVZWTmMxUXdSa0pVZVhoSVVWVkdTRTh4YkVKUmVrWkRURVZzUWxGVmEzTlJNRVpDVVhsNFZsRlZSbFpNUldSQ1VWVmpjMU13UmtKVGVYaEVVVlZHUkU4eFJrSlJla1pEVEVWT1FsRlZUWE5STUVaQ1VYcDBVbEZWVmtkTVJUbENVVlU0YzFFd1JrSlJlWGhVVVZWR1ZFeEZUa0pSVlUxeldWVkdRbGxUZUVoUlZVWklUekZzUWxFeWFFUk1SV3hDVVZWcmMxRXdSa0pSZVhoV1VWVkdWa3hGWkVKUlZXTnpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5XVlVaQ1ZsTjRSRkZWUmtSUE1VWkNVVE5LUkV4RlRrSlJWVTF6VVRCR1FsRjZkRkpSVlZaSFRFVTVRbEZWT0hOUk1FWkNVWGw0VkZGVlJsUk1SVTVDVVZWTmMxUlZSa0pVVTNoSVVWVkdTRXhIWkVOUlZVWnVVV2w0VEZGVlJreFBNV3hDVVhwc1JFeEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkVURVYwUWxGVmMzTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5OMW93U2tKUk1WbHpVMVZHUWxOVGVGQlJWVVpRVEVWa1FsRlZZM05UVlVaQ1UxTjRSRkZWUmtSTVJtUkNVVlpqYzFFd1JrSlJlWGhTVVZWR1VreEZUa0pSVlUwM1dqQktRbEV6YUVSTVJXeENVVlZyYzFRd1JrSlVlWGhJVVZWR1NFeEZUa0pSVlUxelVUQkdRbEY1ZUV4UlZVWk1URVZPUWxGVlRYTlpWVVpDV1ZONFJGRlZSa1JNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4Rk9VSlJWVGh6VVRCR1FsRjVlRVJSVlVaRVR6SmtRMUZWVm5WU1EzaEdVVlZHUmt4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVRFVTVRbEZWT0hOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4ySXdTa0pSTWtselZEQkdRbFI1ZUVoUlZVWklURVZzUWxGVmEzTlRWVVpDVTFONFJGRlZSa1JNUm1SQ1VWWmpjMUV3UmtKUmVYaE1VVlZHVEV4RlRrSlJWVTF6V1ZWR1FsbFRlRVpSVlVaR1RFVnNRbEZWYTNOUk1FWkNVWGw0Y2xGclJrSmhNRWx6VWxWR1FsSlRlRVJSVlVaRVRFVk9RbEZWVFRkaU1FcENVWGs1Umt4RlRrSlJWVTF6VVRCR1FsRjVlRXhSVlVaTVRFVk9RbEZWVFhOWlZVWkNXVk40UkZGVlJrUk1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGT1VKUlZUaHpVbFZHUWxKVGVGQlJWVVpRVEVWT1FsRlZUWE5STUVaQ1VYcDBibEZyUmtSaFJWRnpVVEJHUWxGNmRHNVJhMFpHVWtONFVGRlZSbEJNUlU1Q1VWVk5jMWt3UmtKWmVYaEVVVlZHUkV4RmRFSlJWWE56VWpCR1FsSjVlRVJSVlVaRVRFVTVRbEZWT0hOUk1FWkNVWGw0YWxGVlJtcE1SVTVDVVZWTmMxTXdSa0pUZVhoRVVWVkdSRTh5WkVOUlZWVXpVa040UmxGVlJrWk1SVTVDVVZWTmMxRXdSa0pSZVhoUVVWVkdVRXhGVGtKUlZVMXpZakJLUWxGWE9VTk1SVlpDVVZWVmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMDNZakJLUWxFeU5VUk1SVGxDVVZVNGMxRXdSa0pSZVhoT1VWVkdUa3hGVGtKUlZVMXpVMVZHUWxOVGVFWlJWVVpHVEVVNVFsRlZPSE5STUVaQ1VYbDRSRkZWUmtSUE1tUkRVVlZPYjFGNWVFUlJWVVpFVHpKa1ExRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaEVVVlZHUkU4eU9VTlJWVTVQVEVVNVFsRlZPSE5STUVaQ1VYbDRUbEZWUms1TVJVNUNVVlZOYzFOVlJrSlRVM2hHVVZWR1JreEZPVUpSVlRoelVUQkdRbEY1ZUVSUlZVWkVUekprUTFGVlRtOVJlWGhFVVZWR1JFOHhiRUpSTUdkelVUQkdRbEY2ZEZwUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFJGRlZSa1JQTW1SRFVWVldUMHhGVmtKUlZWVnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFsVlJrSlpVM2hHVVZWR1JreEZUa0pSVlUxelVUQkdRbEY1ZUZKUlZVWlNURVZPUWxGVlRYTlZNRVpDVlhsNFJGRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjZkSFpSYTBaRVkydFJjMU5WUmtKVFUzaEVVVlZHUkV4Rk1VSlJWVEJ6VVRCR1FsRjVlRXBSVlVaS1RFVldRbEZWVlhOVFZVWkNVMU40UkZGVlJrUk1SVTVDVVZWTk4ySXdTa0pSTTJoRFRFVXhRbEZWTUhOUk1FWkNVWHAwYmxGclJrUldRM2hFVVZWR1JFOHlaRU5SVlZaRlRFVnNRbEZWYTNOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWTmMxTlZSa0pUVTNoR1VWVkdSa3hGYkVKUlZXdHpVVEJHUWxGNWVFUlJWVVpFVHpGc1FsRjZSa05NUlU1Q1VWVk5OMVZWUmtSVFEzaEVVVlZHUkV4RlRrSlJWVTAzVlZWR1JsSnBlRkJSVlVaUVRFVk9RbEZWVFhOVk1FWkNWWGw0UkZGVlJrUk1SVGxDVVZVNGMxSXdSa0pTZW5SYVVWVk5lRkZwZUZwUlZVWmFURVZPUWxGVlRYTlRWVVpDVTFONFJGRlZSa1JNUmtaQ1VWWkZjMUV3UmtKUmVYaEVVVlZHUkU4eGJFSlNWRlpEVEVWc1FsRlZhM05STUVaQ1VYbDRhRkZWUm1oTVJWWkNVVlZWYzFFd1JrSlJlblJhVVZWV2VWRnBlRVJSVlVaRVRFVk9RbEZWVFhOV1ZVWkNWbE40UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoUVVWVkdVRXhGVmtKUlZWVnpVMVZHUWxOVGVFUlJWVVpFVEVaa1FsRldZM05STUVaQ1VYbDRVbEZWUmxKTVJVNUNVVlZOYzFFd1JrSlJlblJhVVZWV01GSkRlRVJSVlVaRVRFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SVGxDVVZVNGMxRXdSa0pSZVhoRVVWVkdSRXhGWkVKUlZXTnpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5XTUVaQ1ZubDRSRkZWUmtSTVJrNUNVVlpOYzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpSTW1oRlRFVk9RbEZWVFhOUk1FWkNVWGw0U2xGVlJrcE1SVTVDVVZWTmMxUXdSa0pVZVhoRVVWVkdSRXhGVGtKUlZVMXpWREJHUWxSNWVFUlJWVVpFVEVaR1FsRldSWE5STUVaQ1VYbDRSRkZWUmtSTVJXUkNVVlZqYzFFd1JrSlJlWGhzVVZWR2JFeEZUa0pSVlUxelVUQkdRbEY2ZEZwUlZWWXlVa040UmxGVlJrWk1SVTVDVVZWTmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVakJHUWxKNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBibEZyUmtSWmFYaEVVVlZHUkV4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFVmtRbEZWWTNOUk1FWkNVWGw0UkZGVlJrUk1SVEZDVVZVd2MxSlZSa0pTVTNoRVVWVkdSRTh4YkVKUk0xcERURVZPUWxGVlRUZFhWVVpHVWtONFNsRlZSa3BNUlU1Q1VWVk5jMVpWUmtKV1UzaElVVlZHU0V4RmJFSlJWV3R6VVRCR1FsRjZkRnBSVlU0eVVXbDRTbEZWUmtwTVJVNUNVVlZOYzFWVlJrSlZVM2hJVVZWR1NFeEZiRUpSVld0elVUQkdRbEY2ZEZwUlZVNTVVV2w0U2xGVlJrcE1SVTVDVVZWTmMxWXdSa0pXZVhoSVVWVkdTRXhGYkVKUlZXdHpVVEJHUWxGNmRGcFJWVTQwVVdsNFNsRlZSa3BNUlU1Q1VWVk5jMWt3UmtKWmVYaElVVlZHU0V4RmJFSlJWV3R6VVRCR1FsRjZkRnBSVlUxNlVXbDRTbEZWUmtwTVJVNUNVVlZOYzFRd1JrSlVlWGhJVVZWR1NFeEZiRUpSVld0elVUQkdRbEY2ZEZwUlZWWjNVV2w0U2xGVlJrcE1SVTVDVVZWTmMxUXdSa0pVZVhoSVVWVkdTRXhGYkVKUlZXdHpVVEJHUWxGNmRGcFJWVTUzVVdsNFNsRlZSa3BNUlU1Q1VWVk5jMVJWUmtKVVUzaElVVlZHU0V4RmJFSlJWV3R6VVRCR1FsRjZkRnBSVlU1MVVXbDRTbEZWUmtwTVJVNUNVVlZOYzFJd1JrSlNlWGhJVVZWR1NFeEZiRUpSVld0elVUQkdRbEY2ZEZKUlZVNXpVV2w0UkZGVlJrUk1SVTVDVVZWTk4xVlZSa1pTYVhoUVVWVkdVRXhGVGtKUlZVMXpWVEJHUWxWNWVFUlJWVVpFVEVWc1FsRlZhM05TTUVaQ1VucDBXbEZWVGpKUmFYaEtVVlZHU2t4RmRFSlJWWE56VWpCR1FsSjVlRXBSVlVaS1RFVk9RbEZWVFRkWFZVWkdZV3RKYzFKVlJrSlNVM2hFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFVGRlZSbEJNUlU1Q1VWVk5jMUV3UmtKUmVYaElVVlZHU0V4RlRrSlJWVTF6VlRCR1FsVjVlRVJSVlVaRVRFVjBRbEZWYzNOVVZVWkNWRk40UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZW5SdVVXdEdSRTlWVFhOVVZVWkNWRk40U2xGVlJrcE1SWFJDVVZWemMxRXdSa0pSZVhoNFVUQkdRbU5WVFhOUk1FWkNVWGw0UkZGVlJrUlBNV3hDVVROd1JVeEZUa0pSVlUwM1YxVkdSbEpEZUVwUlZVWktURVpPUWxGV1RYTlNNRVpDVW5sNFJGRlZSa1JNUlU1Q1VWVk5jMU13UmtKVGVYaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRmhSVlVaWVRFVk9RbEZWVFhOVE1FWkNVM2w0UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoRVVWVkdSRTh4YkVKUk0wcEZURVZXUWxGVlZYTlJNRVpDVVhsNFJGRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaG9VVlZHYUV4RlZrSlJWVlZ6VTFWR1FsTlRlRXBSVlVaS1RFVk9RbEZWVFhOV1ZVWkNWbE40UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZW5SdVVXdEdSRTVWVFhOU1ZVWkNVbE40UkZGVlJrUk1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhIWkVOUlZVWnVVV2w0UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZW5SMlVXdEdSRTFWU1hOVVZVWkNWRk40U2xGVlJrcE1SWFJDVVZWemMxRXdSa0pSZVhkM1VXdEdRazFGU1hOUk1FWkNVWGw0UkZGVlJrUlBNbVJEVVZWTk5WRjVlRVJSVlVaRVR6SmtRMUZWVGtWTVJVNUNVVlZOYzFFd1JrSlJlWGhLVVZWR1NreEZUa0pSVlUxelZEQkdRbFI1ZUVSUlZVWkVURVZPUWxGVlRYTlVNRVpDVkhsNFJGRlZSa1JNUms1Q1VWWk5jMUV3UmtKUmVYaEVVVlZHUkU4eVpFTlJWVloxVVhsNFNsRlZSa3BNUmxaQ1VWWlZjMUl3UmtKU2VYaEVVVlZHUkV4RlRrSlJWVTF6VlZWR1FsVlRlRVJSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWGw0VUZGVlJsQk1SVTVDVVZWTmMxbFZSa0paVTNoRVVWVkdSRXhIVmtKUlYxVnpVbFZHUWxKVGVFcFJWVVpLVEVWT1FsRlZUWE5VTUVaQ1ZIbDRSRkZWUmtSTVJVNUNVVlZOTjFvd1NrSlNXRkpIVEVWV1FsRlZWWE5STUVaQ1VYbDRSRkZWUmtSTVJrNUNVVlpOYzFFd1JrSlJlWGh5VVd0R1FtRXdTWE5TVlVaQ1VsTjRTbEZWUmtwTVJVNUNVVlZOYzFaVlJrSldVM2hFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEhaUmEwWkVZa1ZSYzFSVlJrSlVVM2hFVVZWR1JFOHlaRU5SVlU1VlRFVk9RbEZWVFRkYU1FcENVbFZSYzFOVlJrSlRVM2hJVVZWR1NFeEZaRUpSVldOelUxVkdRbE5UZUVSUlZVWkVURWRHUWxGWFJYTlNWVVpDVWxONFJGRlZSa1JQTW1SRFVWVk5kbEZwZUVwUlZVWktURVYwUWxGVmMzTlNNRVpDVW5sNFNsRlZSa3BNUlU1Q1VWVk5jMVJWUmtKVVUzaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRmhSVlVaWVRFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SVTVDVVZWTk4xb3dTa0pTVXpsRVRFVmtRbEZWWTNOUk1FWkNVWGw0V2xGVlJscE1SVTVDVVZWTmMxTlZSa0pUVTNoR1VWVkdSa3hGZEVKUlZYTnpVVEJHUWxGNWVFUlJWVVpFVHpKa1ExRlZUVFZSYVhoS1VWVkdTa3hGVGtKUlZVMXpWREJHUWxSNWVFUlJWVVpFVEVac1FsRldhM05STUVaQ1VYbDRjbEZyUmtKaE1FbHpVbFZHUWxKVGVFeFJWVVpNVEVWT1FsRlZUWE5STUVaQ1VYcDBibEZyUmtaamExRnpVMVZHUWxOVGVFUlJWVVpFVEVaV1FsRldWWE5TVlVaQ1VsTjRSRkZWUmtSUE1tUkRVVlZXYzFGcGVFWlJWVVpHVEVWT1FsRlZUWE5STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFSVlJrSlVVM2hFVVZWR1JFeEdUa0pSVmsxelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRUZGlNRXBDVVhwR1EweEZUa0pSVlUxelVUQkdRbEY1ZUVoUlZVWklURVZPUWxGVlRYTlJNRVpDVVhsNFVsRlZSbEpNUlU1Q1VWVk5jMVV3UmtKVmVYaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRVJSVlVaRVR6SmtRMUZWVG5OUmVYaEVVVlZHUkU4eVpFTlJWVlpGVEVWc1FsRlZhM05WTUVaQ1ZYbDRTRkZWUmtoTVJUbENVVlU0YzFOVlJrSlRVM2hFVVZWR1JFeEZNVUpSVlRCelVUQkdRbEY1ZUZSUlZVWlVURVYwUWxGVmMzTldWVVpDVmxONFNGRlZSa2hNUld4Q1VWVnJjMUV3UmtKUmVYaE9VVlZHVGt4RlRrSlJWVTF6VlRCR1FsVjVlRVJSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWGw0U2xGVlJrcE1SVlpDVVZWVmMxSXdSa0pTZVhoR1VWVkdSa3hGYkVKUlZXdHpVVEJHUWxGNWVGQlJWVVpRVEVWT1FsRlZUWE5TTUVaQ1VubDRTbEZWUmtwTVJVNUNVVlZOYzFSVlJrSlVVM2hFVVZWR1JFeEdUa0pSVmsxelVUQkdRbEY2ZEc1UmEwWkdUVlZyYzFOVlJrSlRVM2hXVVZWR1ZreEZaRUpSVldOelUxVkdRbE5UZUVSUlZVWkVURWRPUWxGWFRYTlJNRVpDVVhsNFZGRlZSbFJNUlU1Q1VWVk5jMUV3UmtKUmVuUnVVV3RHUm1GRlVYTlRWVVpDVTFONFZGRlZSbFJNUldSQ1VWVmpjMU5WUmtKVFUzaEVVVlZHUkV4Rk1VSlJWVEJ6VVRCR1FsRjVlRlJSVlVaVVRFVjBRbEZWYzNOVE1FWkNVM2w0U0ZGVlJraE1Sa1pDVVZaRmMxRXdSa0pSZVhoS1VWVkdTa3hGWkVKUlZXTnpVVEJHUWxGNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRUbEZWUms1TVJVNUNVVlZOYzFVd1JrSlZlWGhFVVZWR1JFeEZUa0pSVlUwM1dqQktRbEpVVGtkTVJVNUNVVlZOYzFFd1JrSlJlWGhJVVZWR1NFeEZUa0pSVlUxelVUQkdRbEY1ZUVwUlZVWktURVZPUWxGVlRYTlRWVVpDVTFONFJGRlZSa1JNUm1SQ1VWWmpjMUV3UmtKUmVYaFNVVlZHVWt4RlZrSlJWVlZ6VTFWR1FsTlRlRVJSVlVaRVRFVk9RbEZWVFhOVlZVWkNWVk40UkZGVlJrUk1SazVDVVZaTmMxRXdSa0pSZVhoRVVWVkdSRTh5WkVOUlZWWnhVbE40UkZGVlJrUk1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGT1VKUlZUaHpVVEJHUWxGNWVFUlJWVVpFVEVVNVFsRlZPSE5STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFZd1JrSldlWGhFVVZWR1JFeEZkRUpSVlhOelVUQkdRbEY1ZUZKUlZVWlNURVZPUWxGVlRYTlJNRVpDVVhwMGJsRnJSa1psYTFGelUxVkdRbE5UZUVSUlZVWkVURVU1UWxGVk9ITlNNRVpDVW5sNFNsRlZSa3BNUlRGQ1VWVXdjMUV3UmtKUmVuUjJVV3RHUkdWRlNYTldWVVpDVmxONFJsRlZSa1pNUmxaQ1VWWlZOMkl3U2tKUk0xSkRURVU1UWxGVk9ITlNWVVpDVWxONFNGRlZSa2hQTWpsRFVWVk9ZVXhGTVVKUlZUQnpVbFZHUWxKVGVFcFJWVVpLVEVWT1FsRlZUWE5VTUVaQ1ZIcDBkbEZyUmtSalJVbHpWREJHUWxSNWVFWlJWVVpHVEVaa1FsRldZemRpTUVwQ1VUTkNRMHhHWkVKUlZtTnpVbFZHUWxKVGVGcFJWVVphVHpJNVExRlZUalpSYVhoT1VWVkdUa3hGVmtKUlZWVnpVMVZHUWxOVGVFUlJWVVpFVEVVeFFsRlZNSE5STUVaQ1VYbDRUbEZWUms1UE1qbERVVlZOZUZGcGVGaFJWVVpZVEVWV1FsRlZWWE5UVlVaQ1UxTjRSRkZWUmtSTVJURkNVVlV3YzFFd1JrSlJlWGhZVVZWR1dFOHlPVU5SVlU1M1VYbDRibEZyUmtKYU1FbHpVbFZHUWxKVGVFeFJWVVpNVHpKc1ExRlZUalJSYVhoRVVWVkdSRXhGVGtKUlZVMDNXakJLUWxKVlozTlRWVVpDVTFONFJGRlZSa1JNUlRGQ1VWVXdjMUV3UmtKUmVYaElVVlZHU0V4RlRrSlJWVTF6VVRCR1FsRjZkRzVSYTBaRVlXdEpjMU5WUmtKVFUzaEVVVlZHUkV4Rk9VSlJWVGh6VVRCR1FsRjVlRkpSVlVaU1RFVldRbEZWVlhOUk1FWkNVWHAwYmxGclJrWmxSVWx6VVRCR1FsRjVlRVJSVlVaRVRFVmtRbEZWWTNOUk1FWkNVWGw0UkZGVlJrUk1Sa1pDVVZaRmMxRXdSa0pSZVhoVVVWVkdWRXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVWT1FsRlZUVGRhTUVwQ1VsZG9SRXhGYkVKUlZXdHpWVlZHUWxWVGVFaFJWVVpJVHpJNVExRlZUbWxNUld4Q1VWVnJjMWt3UmtKWmVYaElVVlZHU0V4RmRFSlJWWE56VVRCR1FsRjVlRmhSVlVaWVRFVk9RbEZWVFRkaU1FcENVVE5hUkV4RmRFSlJWWE56VVRCR1FsRjVlRmhSVlVaWVRFVmtRbEZWWTNOVFZVWkNVMU40UkZGVlJrUlBNamxEVVZWT05sRnBlRXhSVlVaTVRFVk9RbEZWVFhOYU1FcENVVmRrUTB4RlpFSlJWV056VXpCR1FsTjVlRVJSVlVaRVR6STVRMUZWVlhaUmFYaEVVVlZHUkV4RlRrSlJWVTF6VXpCR1FsTjVlRVJSVlVaRVRFVTVRbEZWT0hOUk1FWkNVWGw0UkZGVlJrUk1SVGxDVVZVNGMxRXdSa0pSZVhoTVVWVkdURXhGVGtKUlZVMXpWakJHUWxaNWVFUlJWVVpFVEVWMFFsRlZjM05STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFFd1JrSlJlblIyVVd0R1JtVkZVWE5TVlVaQ1VsTjRSRkZWUmtSTVJVNUNVVlZOYzFrd1JrSlplWGhNVVZWR1RFeEdWa0pSVmxWelVUQkdRbEY1ZUVoUlZVWklURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTTJSRFVWVk9NRkY1ZUV4UlZVWk1URVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JNUld4Q1VWVnJjMUpWUmtKU1UzaE1VVlZHVEV4RlRrSlJWVTF6VVRCR1FsRjZkSFpSYTBaRVRsVkpjMUV3UmtKUmVuUnVVV3RHUkZORGVFUlJWVVpFVEVWT1FsRlZUVGRhTUVwQ1VsVlpjMUpWUmtKU1UzaEVVVlZHUkV4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFaEdRMUZWUm5oUmFYaEdVVlZHUmt4RmJFSlJWV3R6VVRCR1FsRjVlRVJSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWGw0U0ZGVlJraE1SVTVDVVZWTmMxRXdSa0pSZVhoU1VWVkdVa3hGVGtKUlZVMXpWVEJHUWxWNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlblIyVVd0R1JHVnJWWE5UVlVaQ1UxTjRSRkZWUmtSTVIyUkRVVlZHYmxGcGVFaFJWVVpJVEVWc1FsRlZhM05STUVaQ1VYcDBkbEZyUmtST01FbHpVVEJHUWxGNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRTRkZWUmtoTVJVNUNVVlZOYzFFd1JrSlJlWGhJVVZWR1NFeEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURWRPUWxGWFRYTlNWVVpDVWxONFVsRlZSbEpNUlU1Q1VWVk5jMUV3UmtKUmVYaDJVV3RHUW1Jd1NYTlJNRVpDVVhsNFVGRlZSbEJNUlU1Q1VWVk5jMkl3U2tKUlZ6bERURVZPUWxGVlRYTlJNRVpDVVhwMGRsRnJSa1JpUldOelZGVkdRbFJUZUVSUlZVWkVUekprUTFGVlRsVk1SVTVDVVZWTk4xb3dTa0pTVlZGelZWVkdRbFZUZUVaUlZVWkdURVZPUWxGVlRUZFhWVVpFV1dsNFJGRlZSa1JQTVVaQ1VUQm5jMUV3UmtKUmVYaEVVVlZHUkU4eFJrSlNWVmx6VkRCR1FsUjVlRVJSVlVaRVRFWk9RbEZXVFhOUk1FWkNVWGw0U2xGVlJrcE1SV1JDVVZWamMxa3dSa0paZVhoU1VWVkdVazh4YkVKUmVtUkVURVZzUWxGVmEzTlVWVVpDVkZONFNGRlZSa2hNUld4Q1VWVnJjMUV3UmtKUmVuUmFVVlZXYzFGcGVFcFJWVVpLVEVWa1FsRlZZM05TTUVaQ1VubDRTbEZWUmtwTVJVNUNVVlZOYzFsVlJrSlpVM2hHVVZWR1JreEZUa0pSVlUwM1YxVkdSRXd3U1hOVFZVWkNVMU40VkZGVlJsUk1SV1JDVVZWamMxRXdSa0pSZVhoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5XTUVaQ1ZubDRSRkZWUmtSTVJYUkNVVlZ6YzFFd1JrSlJlWGhLVVZWR1NreEZUa0pSVlUxelVUQkdRbEY2ZEZwUlZVNTVVa040UmxGVlJrWk1SVTVDVVZWTmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpXakJLUWxGWFpFTk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRTh5WkVOUlZVMTRVV2w0VGxGVlJrNU1SV3hDVVZWcmMxTXdSa0pUZVhoRVVWVkdSRXhFUWtOUlZVVjNVV2w0UkZGVlJrUk1SVTVDVVZWTk4xZFZSa1JQVlUxelVUQkdRbEY2ZEZwUlZVNUZURVZzUWxGVmEzTlZWVVpDVlZONFNGRlZSa2hQTW1SRFVWVk9hVXhGVmtKUlZWVnpVVEJHUWxGNWVFUlJWVVpFVEVVeFFsRlZNSE5STUVaQ1VYbDRXRkZWUmxoTVJYUkNVVlZ6YzFaVlJrSldVM2hFVVZWR1JFeEZiRUpSVld0elUxVkdRbE5UZUVoUlZVWklURVZPUWxGVlRYTldWVVpDVmxONFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVuUjJVV3RHUkU0d1VYTlNNRVpDVW5sNFJGRlZSa1JNUmxaQ1VWWlZjMUV3UmtKUmVYaFlVVlZHV0V4RlRrSlJWVTF6VWpCR1FsSjVlRVJSVlVaRVRFVk9RbEZWVFRkYU1FcENVVEo0UkV4RlRrSlJWVTAzV2pCS1FsSlZVWE5VVlVaQ1ZGTjRSRkZWUmtSTVJUbENVVlU0YzFFd1JrSlJlWGhzVVZWR2JFeEZUa0pSVlUxellUQktRbEZYZEVOTVJVNUNVVlZOYzFFd1JrSlJlblJ1VVd0R1JHSnJVWE5STUVaQ1VYbDRSRkZWUmtSTVJURkNVVlV3YzFFd1JrSlJlWGhRVVZWR1VFeEZUa0pSVlUxelVUQkdRbEY1ZUZCUlZVWlFURVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JNUm1SQ1VWWmpjMUV3UmtKUmVYaE1VVlZHVEV4RlRrSlJWVTF6VkZWR1FsUlRlRVJSVlVaRVRFVk9RbEZWVFRkYU1FcENVWHBPUlV4Rk1VSlJWVEJ6VVRCR1FsRjVlRzVSYTBaQ1dqQkpjMUl3UmtKU2VYaE1VVlZHVEV4RlRrSlJWVTAzV2pCS1FsRXlhRVJNUlRGQ1VWVXdjMUV3UmtKUmVYaG9VVlZHYUV4RlZrSlJWVlZ6VVRCR1FsRjZkRzVSYTBaR1pHdEpjMUpWUmtKU1UzaEVVVlZHUkV4RlRrSlJWVTF6VlZWR1FsVlRlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwZGxGclJrUlphWGhTVVZWR1VreEZWa0pSVlZWelVUQkdRbEY2ZEc1UmEwWkVXV2w0UkZGVlJrUlBNV3hDVVRCbmMxRXdSa0pSZVhoRVVWVkdSRTh4YkVKU1ZWbHpVVEJHUWxGNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRVRkZWUmxCTVJVNUNVVlZOYzFFd1JrSlJlWGhRVVZWR1VFeEZUa0pSVlUxelZUQkdRbFY1ZUVSUlZVWkVURVZPUWxGVlRUZFhWVVpHWW10TmMxSlZSa0pTVTNoRVVWVkdSRXhGVGtKUlZVMXpWVEJHUWxWNWVFUlJWVVpFVEVkMFExRlZSbkpSYVhoR1VWVkdSa3hGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVHpKa1ExRlZUblZSZVhoT1VWVkdUa3hGVGtKUlZVMDNWMVZHUkZaRGVFUlJWVVpFVHpGc1FsSlZVWE5STUVaQ1VYbDRSRkZWUmtSTVJXUkNVVlZqYzFFd1JrSlJlWGhFVVZWR1JFeEdaRUpSVm1OelVUQkdRbEY1ZUZSUlZVWlVURVZPUWxGVlRYTlRWVVpDVTFONFJGRlZSa1JNUlU1Q1VWVk5OMWRWUmtaaWEwMXpVMVZHUWxOVGVFUlJWVVpFVEVkT1FsRlhUWE5STUVaQ1VYbDRVRkZWUmxCTVJVNUNVVlZOYzFNd1JrSlRlWGhFVVZWR1JFeEZaRUpSVldOelV6QkdRbE41ZUVSUlZVWkVUekZzUWxGNlRrUk1SV3hDVVZWcmMxRXdSa0pSZVhocVVWVkdha3hGVGtKUlZVMXpWREJHUWxSNWVFUlJWVVpFVEVWMFFsRlZjM05STUVaQ1VYbDRTRkZWUmtoTVJYUkNVVlZ6YzFFd1JrSlJlblJhVVZWTmVsRjVlRXBSVlVaS1RFVk9RbEZWVFhOWk1FWkNXWGw0UkZGVlJrUk1SVGxDVVZVNGMxRXdSa0pSZVhoTVVWVkdURXhGVGtKUlZVMXpVakJHUWxKNWVFeFJWVVpNVEVWT1FsRlZUVGRYVlVaR1RUQk5jMUpWUmtKU1UzaEVVVlZHUkV4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFaEdRMUZWUm5oUmFYaEdVVlZHUmt4RmJFSlJWV3R6VVRCR1FsRjVlRVJSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWGw0U0ZGVlJraE1SVTVDVVZWTmMxRXdSa0pSZVhoU1VWVkdVa3hGVGtKUlZVMXpWVEJHUWxWNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlblJ1VVd0R1JHVnJWWE5UVlVaQ1UxTjRSRkZWUmtSTVIyUkRVVlZHYmxGcGVFaFJWVVpJVEVWc1FsRlZhM05STUVaQ1VYcDBibEZyUmtST01FbHpVVEJHUWxGNWVFUlJWVVpFVEVWa1FsRlZZM05STUVaQ1VYbDRSRkZWUmtSTVJXUkNVVlZqYzFFd1JrSlJlWGhLVVZWR1NreEZUa0pSVlUxeldUQkdRbGw1ZUVaUlZVWkdURVpHUWxGV1JYTlJNRVpDVVhsNFJGRlZSa1JNUnpsRFVWVkdkbEZwZUVSUlZVWkVURWN4UTFGVlJuUlJhWGhFVVZWR1JFeEZUa0pSVlUwM1YxVkdSR1JGV1hOUk1FWkNVWHAwV2xGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoRVVWVkdSRTh5WkVOUlZVNVBURVpHUWxGV1JYTlNWVVpDVWxONFJGRlZSa1JQTVd4Q1VUSkpjMUV3UmtKUmVuUmFVVlZXUlV4RmJFSlJWV3R6VVRCR1FsRjVlRmhSVlVaWVRFVmtRbEZWWTNOU1ZVWkNVbE40UkZGVlJrUlBNVVpDVVROb1EweEZUa0pSVlUxelVUQkdRbEY2ZEZKUlZWWkhURVpzUWxGV2F6ZFZWVVpHVjJsNFVGRlZSbEJNUlU1Q1VWVk5jMVV3UmtKVmVYaEVVVlZHUkV4SFJrSlJWMFZ6VWpCR1FsSjZkRnBSVlU1dlVYbDRUbEZWUms1TVJVNUNVVlZOYzFRd1JrSlVlWGhFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY1ZUZKUlZVWlNURVZXUWxGVlZYTlJNRVpDVVhsNFJGRlZSa1JQTVVaQ1VUSjRSRXhGVGtKUlZVMXpVVEJHUWxGNmRGSlJWVlpIVEVVNVFsRlZPSE5STUVaQ1VYbDRWRkZWUmxSTVJVNUNVVlZOYzFsVlJrSlpVM2hJVVZWR1NFOHhiRUpSTW1oRVRFVXhRbEZWTUhOUk1FWkNVWGw0U2xGVlJrcE1SVTVDVVZWTmMxSXdSa0pTZVhoSVVWVkdTRXhGYkVKUlZXdHpVVEJHUWxGNWVFaFJWVVpJVEVWc1FsRlZhM05STUVaQ1VYbDRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlWGhPVVZWR1RreEZUa0pSVlUxelZWVkdRbFZUZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5OMVZWUmtSTk1GRnpVVEJHUWxGNWVFUlJWVVpFVHpGR1FsSlZXWE5VTUVaQ1ZIbDRSRkZWUmtSTVJrNUNVVlpOYzFFd1JrSlJlWGhXVVZWR1ZreEZaRUpSVldNM1YxVkdSRTR3U1hOVFZVWkNVMU40U2xGVlJrcE1SV1JDVVZWamMxRXdSa0pSZVhoRVVWVkdSRXhGYkVKUlZXdHpVVEJHUWxGNWVHaFJWVVpvVEVWV1FsRlZWWE5STUVaQ1VYbDRSRkZWUmtSUE1XeENVbGMxUkV4RmJFSlJWV3R6VVRCR1FsRjVlSEJSYTBaQ1lWVkpjMUV3UmtKUmVYaEtVVlZHU2t4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFWkdRbEZXUlhOUk1FWkNVWGw0YUZGVlJtaE1SVTVDVVZWTmMxSlZSa0pTVTNoS1VWVkdTa3hGVGtKUlZVMXpWVlZHUWxWVGVFWlJWVVpHVEVWT1FsRlZUWE5STUVaQ1VYcDBXbEZWVlhwU1UzaEtVVlZHU2t4RlRrSlJWVTF6VmpCR1FsWjVlRVJSVlVaRVRFWk9RbEZXVFhOUk1FWkNVWGw0U2xGVlJrcE1SV1JDVVZWamMxSXdSa0pTZVhoSVVWVkdTRXhHVGtKUlZrMXpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5STUVaQ1VYcDBXbEZWVmpSU1EzaEtVVlZHU2t4RlRrSlJWVTF6V1ZWR1FsbFRlRVpSVlVaR1RFVk9RbEZWVFRkVlZVWkVaR3RKYzFFd1JrSlJlWGhFVVZWR1JFOHhSa0pTVlZselZEQkdRbFI1ZUVSUlZVWkVURVpPUWxGV1RYTlJNRVpDVVhsNGNGRnJSa0poVlVselVqQkdRbEo1ZDNsUmEwWkNUV3RKYzFWVlJrSlZVM2hHVVZWR1JreEZPVUpSVlRnM1YxVkdSR0ZGV1hOVFZVWkNVMU40U2xGVlJrcE1SV1JDVVZWamMxTlZSa0pUVTNoRVVWVkdSRXhGTVVKUlZUQnpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUVGRYVlVaRVRsVkpjMUpWUmtKU1UzaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjVlRkJSVlVaUVRFVTVRbEZWT0hOVE1FWkNVM2w0V0ZGVlJsaE1SV1JDVVZWamMxWXdSa0pXZVhoSVVWVkdTRXhGT1VKUlZUaHpVVEJHUWxGNWVGQlJWVVpRVEVWT1FsRlZUWE5STUVaQ1VYbDRURkZWUmt4TVJrWkNVVlpGYzFOVlJrSlRVM2hFVVZWR1JFeEZPVUpSVlRoelVUQkdRbEY1ZUZKUlZVWlNURVZzUWxGVmEzTlVNRVpDVkhsNFJGRlZSa1JNUlRGQ1VWVXdjMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjZkRzVSYTBaRVRUQm5jMkl3VGtKUlZ6bEVUekprUTFGVlRuZFJlWGhHVVZWR1JreEZUa0pSVlUxelVUQkdRbEY1ZUVwUlZVWktURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTWpsRFVWVk9WVXhGVmtKUlZWVnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJUbENVVlU0YzFFd1JrSlJlWGhFVVZWR1JFeEZNVUpSVlRCelVsVkdRbEpUZUVSUlZVWkVURVZXUWxGVlZYTlJNRVpDVVhsNFVsRlZSbEpNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTAzWkRCS1FsRXpVa1JNUmtaQ1VWWkZjMUV3UmtKUmVYaE1VVlZHVEV4RlZrSlJWVlZ6VVRCR1FsRjVlRTVSVlVaT1RFVk9RbEZWVFhOVU1FWkNWSGw0UkZGVlJrUk1SVTVDVVZWTk4ySXdTa0pSTWpWRVRFVk9RbEZWVFRkYU1FcENVVEJuYzFFd1JrSlJlblJ1VVd0R1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOUk1FWkNVWHAwZGxGclJrUlVhWGhTVVZWR1VreEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFVGRlZSbEJNUlU1Q1VWVk5jMUV3UmtKUmVYaEtVVlZHU2t4RlZrSlJWVlZ6VVRCR1FsRjVlRVJSVlVaRVR6SmtRMUZWVG5WUmVYaEVVVlZHUkU4eGJFSlJNR2R6VVRCR1FsRjZkRnBSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWGw0UkZGVlJrUlBNbVJEVVZWT1QweEdSa0pSVmtWelVUQkdRbEY1ZUVwUlZVWktURVZrUWxGVlkzTlVWVVpDVkZONFNGRlZSa2hNUlRGQ1VWVXdjMUV3UmtKUmVYaEVVVlZHUkV4Rk9VSlJWVGh6VVRCR1FsRjVlRVJSVlVaRVR6RnNRbEY2VmtSTVJVNUNVVlZOTjFWVlJrUlRRM2hFVVZWR1JFeEZUa0pSVlUwM1ZWVkdSbEpwZUZCUlZVWlFURVZPUWxGVlRYTlZNRVpDVlhsNFJGRlZSa1JNUmtaQ1VWWkZjMUl3UmtKU2VuUmFVVlZOZWxGcGVFcFJWVVpLVEVWMFFsRlZjM05TTUVaQ1VubDRTbEZWUmtwTVJVNUNVVlZOYzFRd1JrSlVlWGhFVVZWR1JFeEdiRUpSVm10elVUQkdRbEY1ZUhoUmEwWkNZMVZKYzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpTVkdSRlRFVldRbEZWVlhOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTmMxTXdSa0pUZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNmRHNVJhMFpFVjBONFRGRlZSa3hNUldSQ1VWVmpjMVF3UmtKVWVYaEtVVlZHU2t4RlRrSlJWVTF6VkZWR1FsUlRlRVJSVlVaRVRFVjBRbEZWYzNOVE1FWkNVM2w0VmxGVlJsWk1SV1JDVVZWamMxTlZSa0pUVTNoRVVWVkdSRXhGTVVKUlZUQnpVVEJHUWxGNWVFeFJWVVpNVEVWT1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlWGhRVVZWR1VFeEZUa0pSVlUxelVqQkdRbEo1ZUVwUlZVWktURVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JNUlhSQ1VWVnpjMUV3UmtKUmVuUmFVVlZOTTFKNWVFUlJWVVpFVHpGc1FsSlZVWE5VVlVaQ1ZGTjRSRkZWUmtSTVJYUkNVVlZ6YzFFd1JrSlJlblJTVVZWT2JVeEZUa0pSVlUxelVUQkdRbEY2ZEZKUlZWWkhURVU1UWxGVk9ITlJNRVpDVVhsNFZGRlZSbFJNUlU1Q1VWVk5jMWxWUmtKWlUzaElVVlZHU0U4eGJFSlJNbWhFVEVWV1FsRlZWWE5STUVaQ1VYbDRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlWGhRVVZWR1VFeEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVUekprUTFGVlRuRlJhWGhLVVZWR1NreEZUa0pSVlUxelZEQkdRbFI1ZUVSUlZVWkVURVU1UWxGVk9ITlNWVVpDVWxONFJGRlZSa1JQTVd4Q1VUTndRMHhGVGtKUlZVMDNWVlZHUkZORGVFUlJWVVpFVEVWT1FsRlZUVGRWVlVaR1VtbDRWbEZWUmxaUE1VWkNVbFpaYzFRd1JrSlVlWGhFVVZWR1JFeEdUa0pSVmsxelVUQkdRbEY1ZUdwUlZVWnFURVZrUWxGVlkzTmtNRXBDVVZoa1EweEdUa0pSVmswM1YxVkdSR0pGVlhOVVZVWkNWRk40UkZGVlJrUk1SMFpDVVZkRmMxRXdSa0pSZVhoVVVWVkdWRXhGVGtKUlZVMXpWakJHUWxaNWVFWlJWVVpHVEVWT1FsRlZUWE5STUVaQ1VYcDBVbEZWVG05U1EzaEVVVlZHUkV4RlRrSlJWVTAzVlZWR1JsSnBlRkJSVlVaUVRFVk9RbEZWVFhOVk1FWkNWWGw0UkZGVlJrUk1SMFpDVVZkRmMxSXdSa0pTZW5SYVVWVk9iMUY1ZUVwUlZVWktURVV4UWxGVk1ITlNNRVpDVW5sNFNsRlZSa3BNUlU1Q1VWVk5OMWRWUmtaaVJVbHpVMVZHUWxOVGVGSlJWVVpTVEVWa1FsRlZZM05UVlVaQ1UxTjRSRkZWUmtSTVJURkNVVlV3YzFFd1JrSlJlWGhRVVZWR1VFeEZUa0pSVlUxelV6QkdRbE41ZUVSUlZVWkVURVZrUWxGVlkzTlJNRVpDVVhsNFJGRlZSa1JQTVd4Q1VsUnNSRXhHUmtKUlZrVnpVVEJHUWxGNWVGQlJWVVpRVEVWT1FsRlZUWE5XVlVaQ1ZsTjRVRkZWUmxCUE1tUkRVVlZPYjFGNWVFWlJWVVpHVEVWT1FsRlZUWE5STUVaQ1VYbDRVRkZWUmxCTVJYUkNVVlZ6YzFRd1JrSlVlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEhaUmEwWkVaVVZKYzFFd1JrSlJlWGhFVVZWR1JFeEZNVUpSVlRCelVUQkdRbEY1ZUZCUlZVWlFURVZPUWxGVlRYTlJNRVpDVVhsNFJsRlZSa1pNUlU1Q1VWVk5jMVJWUmtKVVUzaEVVVlZHUkV4R1pFSlJWbU56VVRCR1FsRjVlRXhSVlVaTVRFVk9RbEZWVFhOVE1FWkNVM2w0UmxGVlJrWk1SVEZDVVZVd2MxRXdSa0pSZVhoT1VWVkdUa3hGVGtKUlZVMXpWVlZHUWxWVGVFWlJWVVpHVEVaV1FsRldWWE5UTUVaQ1UzcDBNMUZyUmtSTlZWbHpWRlZHUWxSVGVFUlJWVVpFVEVVeFFsRlZNSE5STUVaQ1VYbDRUbEZWUms1TVJVNUNVVlZOYzFNd1JrSlRlWGhFVVZWR1JFeEZUa0pSVlUwM1lqQktRbEY2YkVOTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFOHlaRU5SVlU1TlRFVk9RbEZWVFRkYU1FcENVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkVURVU1UWxGVk9ITlRNRVpDVTNsNFVGRlZSbEJNUlU1Q1VWVk5jMVJWUmtKVVUzaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjZkSFpSYTBaRVpFVk5jMU5WUmtKVFUzaFFVVlZHVUV4RlpFSlJWV056VkRCR1FsUjVlRXhSVlVaTVRFVTVRbEZWT0hOUk1FWkNVWGw0VEZGVlJreE1SV1JDVVZWamMxUlZSa0pVVTNoRVVWVkdSRXhHWkVKUlZtTnpVVEJHUWxGNWVFeFJWVVpNVEVWT1FsRlZUWE5XVlVaQ1ZsTjRTRkZWUmtoTVJURkNVVlV3YzFFd1JrSlJlWGhZVVZWR1dFeEZUa0pSVlUxelV6QkdRbE41ZUVSUlZVWkVURVU1UWxGVk9ITlJNRVpDVVhwMGRsRnJSa1JoYTJkelUxVkdRbE5UZUZKUlZVWlNURVZrUWxGVlkzTlVNRVpDVkhsNFRGRlZSa3hNUlRsQ1VWVTRjMUV3UmtKUmVYaE1VVlZHVEV4RlpFSlJWV056VkZWR1FsUlRlRVJSVlVaRVRFWmtRbEZXWTNOUk1FWkNVWGw0VEZGVlJreE1SVTVDVVZWTmMxWlZSa0pXVTNoSVVWVkdTRXhGTVVKUlZUQnpVVEJHUWxGNWVGaFJWVVpZVEVWT1FsRlZUWE5UTUVaQ1UzbDRSRkZWUmtSTVJrWkNVVlpGYzFFd1JrSlJlblIyVVd0R1JtSnJaM05STUVaQ1VYbDRSRkZWUmtSTVJURkNVVlV3YzFFd1JrSlJlWGhRVVZWR1VFeEZUa0pSVlUxelVUQkdRbEY1ZUVaUlZVWkdURVZPUWxGVlRYTlVNRVpDVkhsNFJsRlZSa1pNUlRGQ1VWVXdjMUV3UmtKUmVYaE9VVlZHVGt4RlRrSlJWVTF6VlZWR1FsVlRlRVpSVlVaR1RFWldRbEZXVlhOVE1FWkNVM3AwTTFGclJrUmlhMVZ6VkZWR1FsUlRlRVJSVlVaRVRFVXhRbEZWTUhOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWTmMxTXdSa0pUZVhoRVVWVkdSRXhGVGtKUlZVMDNZakJLUWxGNmJFTk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhGVmtKUlZWVnpVVEJHUWxGNWVGSlJWVVpTVEVWV1FsRlZWWE5VVlVaQ1ZGTjRSRkZWUmtSTVJURkNVVlV3YzFFd1JrSlJlWGhTVVZWR1VreEZWa0pSVlZWelZsVkdRbFpUZUV4UlZVWk1Uek5rUTFGVlRubFNRM2hPVVZWR1RreEZUa0pSVlUxelZGVkdRbFJUZUVSUlZVWkVURVV4UWxGVk1ITlJNRVpDVVhsNFRGRlZSa3hNUlU1Q1VWVk5jMUV3UmtKUmVuUjJVV3RHUkU5VlNYTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5OMW93U2tKUk1IZHpVVEJHUWxGNmRHNVJhMFpHVWtONFJGRlZSa1JNUlU1Q1VWVk5jMVJWUmtKVVUzaEVVVlZHUkV4Rk9VSlJWVGh6VVRCR1FsRjVlRVJSVlVaRVRFVTVRbEZWT0hOUk1FWkNVWGw0VWxGVlJsSk1SVTVDVVZWTmMxRXdSa0pSZVhoR1VWVkdSa3hGVGtKUlZVMXpXbFZHUWxwVGVFWlJWVVpHVHpJNVExRlZUakJTUTNoT1VWVkdUa3hGVGtKUlZVMXpWRlZHUWxSVGVFUlJWVVpFVEVWc1FsRlZhM05TVlVaQ1VsTjRSRkZWUmtSUE1tUkRVVlZPTWxGcGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBXbEZWVGsxTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpTVldkelVsVkdRbEpUZUVSUlZVWkVURVZPUWxGVlRYTlRWVVpDVTFONFJGRlZSa1JNUlRGQ1VWVXdjMUV3UmtKUmVYaFNVVlZHVWt4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVR6SmtRMUZWVGpaUmFYaEtVVlZHU2t4RlRrSlJWVTF6VkZWR1FsUlRlRWhSVlVaSVRFVk9RbEZWVFhOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWTmMxSlZSa0pTVTNoR1VWVkdSa3hGYkVKUlZXdHpVVEJHUWxGNWVFNVJWVVpPVEVWV1FsRlZWVGRpTUVwQ1VUTlNSRXhGT1VKUlZUaHpVbFZHUWxKVGVGSlJWVVpTVHpJNVExRlZUbkZSYVhoU1VWVkdVa3hGVmtKUlZWVnpVbFZHUWxKVWRIQlJhMFpFV1dsNFJGRlZSa1JNUlU1Q1VWVk5OMWRWUmtSVVEzaEVVVlZHUkU4eGJFSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFVk9RbEZWVFRkYU1FcENVVEEwYzFOVlJrSlRVM2hFVVZWR1JFeEdUa0pSVmsxelVsVkdRbEpUZUVSUlZVWkVUekZzUWxFeU5VTk1SVTVDVVZWTk4xVlZSa1JUUTNoRVVWVkdSRXhGVGtKUlZVMDNWVlZHUmxKcGVGQlJWVVpRVEVWT1FsRlZUWE5WTUVaQ1ZYbDRSRkZWUmtSTVJrNUNVVlpOYzFJd1JrSlNlblJhVVZWTk1WRnBlRXBSVlVaS1RFWk9RbEZXVFhOU01FWkNVbmw0VUZGVlJsQk1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGT1VKUlZUaHpVVEJHUWxGNWVGcFJWVVphVEVWT1FsRlZUWE5qVlVwQ1VWaEdRMHhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVHpGc1FsRjZSa1pNUlZaQ1VWVlZjMUV3UmtKUmVYaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRkJSVlVaUVRFVk9RbEZWVFhOWFZVWkNWMU40UkZGVlJrUk1SVGxDVVZVNGMxRXdSa0pSZVhoS1VWVkdTa3hHVGtKUlZrMXpVekJHUWxONWVGSlJWVVpTVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1tUkRVVlZPY1ZKVGVFcFJWVVpLVEVWT1FsRlZUWE5VTUVaQ1ZIbDRSRkZWUmtSTVJteENVVlpyYzFFd1JrSlJlWGg0VVd0R1FtTlZTWE5TVlVaQ1VsTjRTbEZWUmtwTVJVNUNVVlZOYzFRd1JrSlVlWGhFVVZWR1JFeEdiRUpSVm10elVUQkdRbEY1ZUZCUlZVWlFURVZPUWxGVlRYTlRWVVpDVTFONFJsRlZSa1pNUlU1Q1VWVk5jMUV3UmtKUmVuUnVVV3RHUkUwd1dYTlRWVVpDVTFONFJGRlZSa1JNUlRsQ1VWVTRjMUV3UmtKUmVYaGFVVlZHV2t4RlRrSlJWVTF6VkRCR1FsUjVlRVpSVlVaR1RFVldRbEZWVlhOUk1FWkNVWGw0UkZGVlJrUlBNV3hDVVROd1JFeEZUa0pSVlUwM1ZWVkdSRk5EZUVSUlZVWkVURVZPUWxGVlRUZFZWVVpHVW1sNFVGRlZSbEJNUlU1Q1VWVk5jMVV3UmtKVmVYaEVVVlZHUkV4Rk1VSlJWVEJ6VWpCR1FsSjVlRzVSYTBaQ1dqQkpjMU13UmtKVGVYaEdVVlZHUmt4Rk9VSlJWVGczVjFWR1JHUnJVWE5UVlVaQ1UxTjRVRkZWUmxCTVJXUkNVVlZqYzFOVlJrSlRVM2hFVVZWR1JFeEdaRUpSVm1OelVUQkdRbEY1ZUZKUlZVWlNURVZPUWxGVlRUZFhWVVpHWlVWTmMxUXdSa0pVZVhoSVVWVkdTRXhGT1VKUlZUaHpVMVZHUWxOVGVFUlJWVVpFVEVWT1FsRlZUWE5UTUVaQ1UzbDRSRkZWUmtSTVIwWkNVVmRGYzFFd1JrSlJlWGhFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY1ZUZCUlZVWlFURVZPUWxGVlRYTlJNRVpDVVhwMFdsRlZWWGhTUTNoR1VWVkdSa3hGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVEVVNVFsRlZPSE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFvd1NrSlJNa2x6VkRCR1FsUjVlRWhSVlVaSVRFVnNRbEZWYTNOVFZVWkNVMU40UkZGVlJrUk1SbVJDVVZaamMxRXdSa0pSZVhoTVVWVkdURXhGVGtKUlZVMXpXVlZHUWxsVGVFWlJWVVpHVEVWc1FsRlZhM05STUVaQ1VYbDRjbEZyUmtKaE1FbHpVbFZHUWxKVGVFUlJWVVpFVEVWT1FsRlZUVGRhTUVwQ1VYazVSa3hGVGtKUlZVMXpVVEJHUWxGNWVFeFJWVVpNVEVWT1FsRlZUWE5aVlVaQ1dWTjRSRkZWUmtSTVJVNUNVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEZPVUpSVlRoelVsVkdRbEpUZUZCUlZVWlFURVZPUWxGVlRYTlJNRVpDVVhwMFdsRlZUbTlTUTNoRVVWVkdSRTh4YkVKU1ZWRnpVbFZHUWxKVGVFUlJWVVpFVEVWT1FsRlZUWE5UTUVaQ1UzbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlblJ1VVd0R1JGWnBlRkJSVlVaUVRFVk9RbEZWVFhOWk1FWkNXWGw0UkZGVlJrUk1SWFJDVVZWemMxRXdSa0pSZVhoS1VWVkdTa3hGZEVKUlZYTnpWVEJHUWxWNWVFaFJWVVpJVEVVNVFsRlZPSE5STUVaQ1VYbDRURkZWUmt4TVJXUkNVVlZqYzFRd1JrSlVlWGhFVVZWR1JFeEZkRUpSVlhOelVUQkdRbEY1ZUVoUlZVWklURVZzUWxGVmEzTlJNRVpDVVhwMFdsRlZUWGhTYVhoRVVWVkdSRTh4YkVKU1ZWRnpVbFZHUWxKVGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJUbENVVlU0YzFFd1JrSlJlWGhvVVZWR2FFeEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkVURVpHUWxGV1JYTlJNRVpDVVhsNFZGRlZSbFJNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RmJFSlJWV3R6VkRCR1FsUjVlRVJSVlVaRVRFWmtRbEZXWTNOVE1FWkNVM2w0VmxGVlJsWk1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNmRHNVJhMFpFWW10amMxUXdSa0pVZVhoRVVWVkdSRXhHWkVKUlZtTnpVakJHUWxKNWVGWlJWVVpXVEVWT1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSUE1tUkRVVlZPTUZGNWVFNVJWVVpPVEVWT1FsRlZUVGRYVlVaRVZrTjRSRkZWUmtSUE1XeENVbFZSYzFkVlJrSlhVM2hFVVZWR1JFeEZPVUpSVlRoelVUQkdRbEY1ZUZKUlZVWlNURVZPUWxGVlRYTlJNRVpDVVhwMFdsRlZWWFpSYVhoUVVWVkdVRXhGVGtKUlZVMXpWakJHUWxaNWVFaFJWVVpJVEVaV1FsRldWWE5STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOTjFkVlJrWmtSVTF6VWxWR1FsSlRlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0VUZGVlJsQk1SVTVDVVZWTmMxUlZSa0pVVTNoRVVWVkdSRXhGZEVKUlZYTnpVMVZHUWxOVGVFUlJWVVpFVEVVNVFsRlZPSE5STUVaQ1VYbDRUbEZWUms1TVJVNUNVVlZOYzFNd1JrSlRlWGhFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRUZGFNRXBDVVROb1JVeEZPVUpSVlRoelVUQkdRbEY1ZUVwUlZVWktURVZXUWxGVlZYTlJNRVpDVVhwMGJsRnJSa1JhYVhoT1VWVkdUa3hGVGtKUlZVMDNWMVZHUkZaRGVFUlJWVVpFVHpGc1FsSlZVWE5VTUVaQ1ZIbDRSRkZWUmtSTVJrWkNVVlpGYzFJd1JrSlNlWGhXVVZWR1ZreEZUa0pSVlUwM1dqQktRbEY2VmtOTVJWWkNVVlZWYzFFd1JrSlJlWGhFVVZWR1JFeEZPVUpSVlRoelVUQkdRbEY1ZUZoUlZVWllURVYwUWxGVmMzTldWVVpDVmxONFJGRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTAzWWpCS1FsRjZWa1JNUlRsQ1VWVTRjMUV3UmtKUmVYaEtVVlZHU2t4RlZrSlJWVlZ6VVRCR1FsRjZkRzVSYTBaRVlXdEpjMUV3UmtKUmVuUmFVVlZPU1V4RlRrSlJWVTF6VWxWR1FsSlRlRkJSVlVaUVRFVk9RbEZWVFhOVVZVWkNWRk40UkZGVlJrUk1SWFJDVVZWemMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVVEJHUWxGNmRGSlJWVTV2VVhsNFJGRlZSa1JNUlU1Q1VWVk5OMVZWUmtaU2FYaFFVVlZHVUV4RlRrSlJWVTF6VlRCR1FsVjVlRVJSVlVaRVRFVXhRbEZWTUhOU01FWkNVbmw0YmxGclJrSmFNRWx6VXpCR1FsTjVlRVpSVlVaR1RFVTVRbEZWT0RkWFZVWkVaR3RSYzFOVlJrSlRVM2hRVVZWR1VFeEZaRUpSVldOelUxVkdRbE5UZUVSUlZVWkVURVprUWxGV1kzTlJNRVpDVVhsNFVsRlZSbEpNUlU1Q1VWVk5OMWRWUmtabFJVMXpWREJHUWxSNWVFaFJWVVpJVEVVNVFsRlZPSE5UVlVaQ1UxTjRSRkZWUmtSTVJVNUNVVlZOYzFNd1JrSlRlWGhFVVZWR1JFeEhSa0pSVjBWelVUQkdRbEY1ZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFVGRlZSbEJNUlU1Q1VWVk5jMUV3UmtKUmVuUmFVVlZWZUZKRGVFWlJWVVpHVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJUbENVVlU0YzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUwM1dqQktRbEV5U1hOVU1FWkNWSGw0U0ZGVlJraE1SV3hDVVZWcmMxTlZSa0pUVTNoRVVWVkdSRXhHWkVKUlZtTnpVVEJHUWxGNWVFeFJWVVpNVEVWT1FsRlZUWE5aVlVaQ1dWTjRSbEZWUmtaTVJXeENVVlZyYzFFd1JrSlJlWGh5VVd0R1FtRXdTWE5TVlVaQ1VsTjRSRkZWUmtSTVJVNUNVVlZOTjFvd1NrSlJlVGxHVEVWT1FsRlZUWE5STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFsVlJrSlpVM2hFVVZWR1JFeEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVU1UWxGVk9ITlNWVVpDVWxONFVGRlZSbEJNUlU1Q1VWVk5jMUV3UmtKUmVuUmFVVlZPYjFKRGVFUlJWVVpFVHpGc1FsSlZVWE5TVlVaQ1VsTjRSRkZWUmtSTVJVNUNVVlZOYzFNd1JrSlRlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEc1UmEwWkVWbWw0VUZGVlJsQk1SVTVDVVZWTmMxa3dSa0paZVhoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVFcFJWVVpLVEVWMFFsRlZjM05XVlVaQ1ZsTjRTRkZWUmtoTVJUbENVVlU0YzFFd1JrSlJlWGhNVVZWR1RFeEZaRUpSVldOelZEQkdRbFI1ZUVSUlZVWkVURVYwUWxGVmMzTlJNRVpDVVhsNFNGRlZSa2hNUlhSQ1VWVnpjMUV3UmtKUmVuUmFVVlZOTVZKcGVFUlJWVVpFVHpGc1FsSlZVWE5TVlVaQ1VsTjRSRkZWUmtSTVJVNUNVVlZOYzFRd1JrSlVlWGhFVVZWR1JFeEhPVU5SVlVaMlVXbDRSbEZWUmtaTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFOHlaRU5SVlU1MVVYbDRUbEZWUms1TVJVNUNVVlZOTjFkVlJrUldRM2hFVVZWR1JFOHhiRUpTVlZGelYxVkdRbGRUZUVSUlZVWkVURVU1UWxGVk9ITlJNRVpDVVhsNFVsRlZSbEpNUlU1Q1VWVk5jMUV3UmtKUmVuUmFVVlZWZGxGcGVGQlJWVVpRVEVWT1FsRlZUWE5XTUVaQ1ZubDRTRkZWUmtoTVJsWkNVVlpWYzFFd1JrSlJlWGhJVVZWR1NFeEZUa0pSVlUwM1YxVkdSbU5yVFhOU1ZVWkNVbE40UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZVhoUVVWVkdVRXhGVGtKUlZVMXpWRlZHUWxSVGVFUlJWVVpFVEVWMFFsRlZjM05UVlVaQ1UxTjRSRkZWUmtSTVJUbENVVlU0YzFFd1JrSlJlWGhPVVZWR1RreEZUa0pSVlUxelV6QkdRbE41ZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5OMW93U2tKUk0yaEZURVU1UWxGVk9ITlJNRVpDVVhsNFNsRlZSa3BNUlZaQ1VWVlZjMUV3UmtKUmVuUnVVV3RHUkZwcGVFNVJWVVpPVEVWT1FsRlZUVGRYVlVaRVZrTjRSRkZWUmtSUE1XeENVbFZSYzFRd1JrSlVlWGhFVVZWR1JFeEdSa0pSVmtWelVqQkdRbEo1ZUZaUlZVWldURVZPUWxGVlRUZGFNRXBDVVhwV1EweEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkVURVU1UWxGVk9ITlJNRVpDVVhsNFdGRlZSbGhNUlhSQ1VWVnpjMVpWUmtKV1UzaEVVVlZHUkV4RlpFSlJWV056VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkaU1FcENVWHBPUkV4Rk9VSlJWVGh6VVRCR1FsRjVlRXBSVlVaS1RFVldRbEZWVlhOUk1FWkNVWHAwYmxGclJrUmhhMGx6VVRCR1FsRjZkRnBSVlU1SlRFVk9RbEZWVFhOU1ZVWkNVbE40VUZGVlJsQk1SVTVDVVZWTmMxUlZSa0pVVTNoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5STUVaQ1VYcDBVbEZWVG05UmVYaEVVVlZHUkV4RlRrSlJWVTAzVlZWR1JsSnBlRkJSVlVaUVRFVk9RbEZWVFhOVk1FWkNWWGw0UkZGVlJrUk1SemxEVVZWR2RsRnBlRWhSVlVaSVR6RnNRbEV6V2tSTVJXUkNVVlZqYzFFd1JrSlJlWGhFVVZWR1JFeEZiRUpSVld0elZEQkdRbFI1ZUVwUlZVWktURVZzUWxGVmEzTlJNRVpDVVhsNGFsRlZSbXBNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkU4eVpFTlJWVTQwVVhsNFJsRlZSa1pNUlU1Q1VWVk5jMUV3UmtKUmVYaEtVVlZHU2t4RlRrSlJWVTF6V1RCR1FsbDVlRVJSVlVaRVRFVTVRbEZWT0hOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZW5SMlVXdEdSR0ZyVFhOVVZVWkNWRk40UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZW5SdVVXdEdSRnBEZUVSUlZVWkVUekZzUWxFd1ozTlJNRVpDVVhwMFdsRlZWa1ZNUlRGQ1VWVXdjMUV3UmtKUmVYaE1VVlZHVEV4RlRrSlJWVTAzVlZWR1JGcHBlRVJSVlVaRVRFVk9RbEZWVFRkVlZVWkdVbWw0VUZGVlJsQk1SVTVDVVZWTmMxVXdSa0pWZVhoRVVWVkdSRXhHVmtKUlZsVnpVakJHUWxKNWVIWlJhMFpDWWpCSmMxUlZSa0pVVkhSYVVWVk9NbEpEZUU1UlZVWk9URVZrUWxGVlkzTlJNRVpDVVhsNFJGRlZSa1JNUlRGQ1VWVXdjMUV3UmtKUmVYaEdVVlZHUmt4RlZrSlJWVlZ6VTFWR1FsTlRlRVJSVlVaRVRFWmtRbEZXWTNOUk1FWkNVWGw0VUZGVlJsQk1SVlpDVVZWVmMxRXdSa0pSZVhoRVVWVkdSRXhGYkVKUlZXdHpVVEJHUWxGNWVGQlJWVVpRVEVWT1FsRlZUWE5STUVaQ1VYbDRTbEZWUmtwTVJWWkNVVlZWYzFKVlJrSlNVM2hPVVZWR1RreEZUa0pSVlUxelVUQkdRbEY2ZEZwUlZWWnZVbWw0UmxGVlJrWk1SVTVDVVZWTmMxRXdSa0pSZVhoT1VWVkdUa3hGVGtKUlZVMXpVekJHUWxONWVFcFJWVVpLVEVVNVFsRlZPSE5VVlVaQ1ZGTjRSRkZWUmtSTVJYUkNVVlZ6YzFNd1JrSlRlWGhTVVZWR1VreEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVUekprUTFGVlRubFNRM2hPVVZWR1RreEZUa0pSVlUxelV6QkdRbE41ZUVoUlZVWklUekk1UTFGVlRtbE1SV3hDVVZWcmMxSlZSa0pTVTNoT1VWVkdUa3hGVGtKUlZVMXpVekJHUWxONmRIWlJhMFpFWWtWSmMxTlZSa0pUVTNoR1VWVkdSa3hGTVVKUlZUQnpVVEJHUWxGNWVFeFJWVVpNVHpKc1ExRlZUblZSYVhoRVVWVkdSRTh4YkVKUk1HOXpVVEJHUWxGNmRGcFJWVlpGVEVWc1FsRlZhM05STUVaQ1VYbDRiRkZWUm14TVJVNUNVVlZOYzFOVlJrSlRVM2hHVVZWR1JreEZNVUpSVlRCelVsVkdRbEpUZUVwUlZVWktURVZPUWxGVlRYTldNRVpDVm5sNFJGRlZSa1JNUm1SQ1VWWmpjMUV3UmtKUmVYaEVVVlZHUkU4eGJFSlNWM0JHVEVVeFFsRlZNSE5STUVaQ1VYbDRUbEZWUms1TVJVNUNVVlZOTjFWVlJrUmhSVWx6VVRCR1FsRjVlRVJSVlVaRVR6RkdRbEpWV1hOVU1FWkNWSGw0UkZGVlJrUk1SazVDVVZaTmMxRXdSa0pSZVhoeVVXdEdRbUV3U1hOU01FWkNVbnAwV2xGVlRubFJlWGhLVVZWR1NreEZNVUpSVlRCelVqQkdRbEo1ZUVaUlZVWkdURVZPUWxGVlRUZFhWVVpHWVVWSmMxSlZSa0pTVTNoRVVWVkdSRXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVVeFFsRlZNSE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFvd1NrSlJNbWhEVEVWa1FsRlZZM05STUVaQ1VYbDRSRkZWUmtSTVJXeENVVlZyYzFJd1JrSlNlWGhLVVZWR1NreEZiRUpSVld0elVUQkdRbEY1ZUU1UlZVWk9URVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTWpsRFVWVk5NVkZwZUVaUlZVWkdURVZPUWxGVlRYTlJNRVpDVVhsNFNsRlZSa3BNUlU1Q1VWVk5jMVl3UmtKV2VYaEVVVlZHUkV4Rk9VSlJWVGh6VVRCR1FsRjVlRWhSVlVaSVRFVk9RbEZWVFhOVE1FWkNVM2w0U2xGVlJrcE1SVTVDVVZWTmMxUlZSa0pVVTNoRVVWVkdSRXhGWkVKUlZXTnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBNMUZyUmtSa2ExRnpWRlZHUWxSVGVFUlJWVVpFVEVWa1FsRlZZM05STUVaQ1VYbDRTRkZWUmtoTVJXeENVVlZyYzFFd1JrSlJlWGhPVVZWR1RreEZUa0pSVlUxelVqQkdRbEo1ZUVSUlZVWkVURVZPUWxGVlRUZGlNRXBDVVRKd1JFeEZUa0pSVlUwM1dqQktRbEV3WjNOUk1FWkNVWHAwV2xGVlRrbE1SVTVDVVZWTk4xZFZSa1pTUTNoT1VWVkdUa3hGVGtKUlZVMXpWRlZHUWxSVGVFUlJWVVpFVHpGR1FsRXlhRU5NUlU1Q1VWVk5jMUV3UmtKUmVuUlNVVlZXUjB4R1RrSlJWazAzVlZWR1JsWkRlRkJSVlVaUVRFVk9RbEZWVFhOYU1FcENVVmRrUTB4RlpFSlJWV056VFVWS1FsRlVRa05NUlRGQ1VWVXdOMWRWUmtSbGExRnpWRlZHUWxSVGVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOTjFvd1NrSlJNbGx6VTFWR1FsTlRlRXBSVlVaS1RFVmtRbEZWWTNOUk1FWkNVWGw0UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoRVVWVkdSRXhGYkVKUlZXdHpVVEJHUWxGNWVGSlJWVVpTVEVWT1FsRlZUWE5STUVaQ1VYcDBibEZyUmtSaVJVMXpVMVZHUWxOVGVGQlJWVVpRVEVWa1FsRlZZM05STUVaQ1VYbDRVRkZWUmxCTVJURkNVVlV3YzFNd1JrSlRlWGhZVVZWR1dFeEZaRUpSVldOelZqQkdRbFo1ZUVoUlZVWklURVU1UWxGVk9ITlJNRVpDVVhsNFRsRlZSazVNUlU1Q1VWVk5jMUV3UmtKUmVYaE1VVlZHVEV4R1JrSlJWa1Z6VTFWR1FsTlRlRTVSVlVaT1RFVk9RbEZWVFRkYU1FcENVbGhLU0V4RlZrSlJWVlZ6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOVFZVWkNVMU40U2xGVlJrcE1SMDVDVVZkTmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpWRlZHUWxSVGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1qbERVVlZPTmxGNWVFNVJWVVpPVEVWT1FsRlZUVGRhTUVwQ1VURlJjMUV3UmtKUmVuUnVVV3RHUmxKRGVFWlJWVVpHVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUwM1lqQktRbEV4V1hOVFZVWkNVMU40U0ZGVlJraE1SV3hDVVZWcmMxUXdSa0pVZVhoRVVWVkdSRXhGYkVKUlZXdHpVbFZHUWxKVGVGQlJWVVpRVEVWT1FsRlZUWE5STUVaQ1VYcDBkbEZyUmtSaVJVMXpVVEJHUWxGNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlWGhTVVZWR1VreEZWa0pSVlZWelUxVkdRbE5UZUVSUlZVWkVURVZPUWxGVlRUZGFNRXBDVVhrNVEweEZUa0pSVlUwM1dqQktRbEpWVVhOU1ZVWkNVbE40UkZGVlJrUk1SVTVDVVZWTmMxUXdSa0pVZVhoT1VWVkdUa3hGZEVKUlZYTnpWVlZHUWxWVGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBkbEZyUmtSTU1FbHpVbFZHUWxKVGVFUlJWVVpFVEVWT1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSTVJURkNVVlV3YzFFd1JrSlJlWGhNVVZWR1RFeEdUa0pSVmsxelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRUZGtNRXBDVVhrNVEweEZNVUpSVlRCelUxVkdRbE5UZUV4UlZVWk1URVZPUWxGVlRYTmlWVXBDVVZjeFEweEZaRUpSVldOelZGVkdRbFJUZUVoUlZVWklURVZrUWxGVlkzTlJNRVpDVVhsNFJGRlZSa1JQTWpsRFVWVk9NRkpEZUVSUlZVWkVUekk1UTFGVlRrVk1SV3hDVVZWcmMxRXdSa0pSZVhoT1VWVkdUa3hGVGtKUlZVMXpVbFZHUWxKVGVFUlJWVVpFVHpKa1ExRlZUbkZSYVhoRVVWVkdSRTh4YkVKUk1HZHpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUVGRWVlVaRVZFTjRSRkZWUmtSTVJVNUNVVlZOTjFWVlJrWlNhWGhhVVZWR1dreEZUa0pSVlUxelZEQkdRbFI1ZUVaUlZVWkdURVZzUWxGVmEzTlNWVVpDVWxONFJGRlZSa1JQTW1SRFVWVk5lbEZwZUVoUlZVWklURVZXUWxGVlZYTlZNRVpDVlhwMGJsRnJSa1JhUTNoSVVWVkdTRXhGVmtKUlZWVTNZakJLUWxFd1ozTlVWVVpDVkZONFJGRlZSa1JNUlRsQ1VWVTRjMUV3UmtKUmVuUnVVV3RHUkdGclNYTlJNRVpDVVhwMGFGRlZUa2RNUlZaQ1VWVlZOMW93U2tKUk1GRnpVakJHUWxKNWVFWlJWVVpHVEVaT1FsRldUVGRhTUVwQ1VUSlJjMUl3UmtKU2VYaEdVVlZHUms4eU9VTlJWVTVKVEVVeFFsRlZNSE5STUVaQ1VYbDRVRkZWUmxCTVJVNUNVVlZOTjFvd1NrSlJNbkJEVEVWT1FsRlZUVGRaVlVaRVVtbDRSbEZWUmtaUE1tUkRVVlZPUlV4RlpFSlJWV056VWxWR1FsSlRlRTVSVlVaT1R6SmtRMUZWVGxsTVJXUkNVVlZqYzFKVlJrSlNWSFIyVVd0R1JGTkRlRTVSVlVaT1RFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUlBNbVJEVVZWT2EweEZUa0pSVlUwM1dWVkdSRkpwZUVaUlZVWkdUekprUTFGVlRrVk1SV1JDVVZWamMxSlZSa0pTVTNoV1VWVkdWazh5WkVOUlZVNXRURVZrUWxGVlkzTlNWVVpDVWxSMGRsRnJSa1JUUTNoT1VWVkdUa3hGVGtKUlZVMXpWVlZHUWxWVGVFUlJWVVpFVHpKa1ExRlZUbk5SYVhoRVVWVkdSRTh5UmtKUk1GbHpVbFZHUWxKVWRHNVJhMFpFVWtONFNGRlZSa2hNUlZaQ1VWVlZjMVF3UmtKVWVuUnVVV3RHUkZkcGVFaFJWVVpJVEVWV1FsRlZWVGRpTUVwQ1VUQm5jMVJWUmtKVVUzaEVVVlZHUkV4RmRFSlJWWE56VVRCR1FsRjZkRzVSYTBaRVdtbDRSRkZWUmtSUE1rWkNVVEJaYzFKVlJrSlNWSFJ1VVd0R1JGSkRlRWhSVlVaSVRFVldRbEZWVlhOV01FWkNWbnAwYmxGclJrUmhSVWx6VWpCR1FsSjVlRVpSVlVaR1R6STVRMUZWVGtsTVJURkNVVlV3YzFFd1JrSlJlWGhVVVZWR1ZFeEZUa0pSVlUwM1dqQktRbEV5TlVOTVJVNUNVVlZOTjFsVlJrUlNhWGhHVVZWR1JrOHlaRU5SVlU1RlRFVmtRbEZWWTNOU1ZVWkNVbE40YUZGVlJtaFBNbVJEVVZWT2MxRnBlRWhSVlVaSVRFVldRbEZWVlRkaU1FcENVVEJuYzFSVlJrSlVVM2hFVVZWR1JFeEdaRUpSVm1OelVUQkdRbEY2ZEc1UmEwWkVZMnRKYzFFd1JrSlJlblJvVVZWT1IweEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVUekZHUWxKVmIzTlVWVVpDVkZONFJGRlZSa1JNUlRsQ1VWVTRjMUV3UmtKUmVuUktVVlZPY1ZGcGVFUlJWVVpFVEVWV1FsRlZWWE5STUVaQ1VYcDBTbEZWVmt0UGVuTTNUekE1UWxOVll6ZFRWVVpHVTBONFJGRlZSa1JNUlU1Q1VWVk5jMUpWUmtKU1UzaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRWhSVlVaSVRFVTVRbEZWT0hOUk1FWkNVWGw0YmxGclJrSmFNRWx6VVRCR1FsRjZkRXBSVlU0d1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFKVlJrSlNVM2hFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY1ZUVSUlZVWkVURVprUWxGV1kzTlNNRVpDVW5sNFVGRlZSbEJNUlU1Q1VWVk5OMU5WUmtSaGEwMXpVVEJHUWxGNWVFUlJWVVpFVEVWV1FsRlZWWE5STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFFd1JrSlJlWGhXVVZWR1ZreEZaRUpSVldNM1ZWVkdSR1JGU1hOUk1FWkNVWGw0UkZGVlJrUk1SVlpDVVZWVmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVakJHUWxKNWVISlJhMFpDWVRCSmMxRXdSa0pSZW5SU1VWVk9iMUY1ZUU1UlZVWk9URVZPUWxGVlRYTlVNRVpDVkhsNFJGRlZSa1JNUjJSRFVWVkdibEZwZUVSUlZVWkVUekJzUWxFeWVFUk1SVTVDVVZWTmMxRXdSa0pSZW5SS1VWVldSMHhGTVVKUlZUQnpVVEJHUWxGNWVGQlJWVVpRVEVWT1FsRlZUVGRSVlVaRVlXdEpjMUV3UmtKUmVYaEVVVlZHUkV4Rk1VSlJWVEJ6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOaVZVcENVVmN4UTA4d1JrSlJlbXhEVEVjeFJGRlZSblJSZVVselNXMWFjR0pIVldsUGFVb3paRE5qZG1OSFJtcGhNMDEyV1cwNWRtUklUakJqYlVaM1RESndla3d5VW5Cak0xRjJaRWM1ZG1KSVVuQmpRelZ4WTNsSmMwbHVUblprV0VwcVdsaE9SR0l5TlRCYVZ6VXdTV3B3WWtsdVdtaGphVUptWkVoc2QxcFhPVzFKUkRCblpFaHNkMXBYT1cxSlJrNDFZbGRLZG1KRFFUbFFWREJuV0VOS2JXUlhOV3BrUjJ4MllteDNhVWxEV1cxSlNGSTFZMGRXZGxwcFFsUmxWekZwWWpKM2RXRllVbXhqYlVZd1lqTkpaMUJVTURsSlJuZHBZek5zZEZsdE9YTllRMGxuVUhsQ2JXUlhOV3BrUjJ4MlltbEJiMkl5U25GTFUwSTNTVWhLYkdSSVZubGlhVUl3WlZoQ2JHSXlXV2RpTWtweFQzbENPVWxFYjJkYWJsWjFXVE5TY0dJeU5HZExSemxwWVdscloyVjVRbmxhV0ZJeFkyMDBaMkl5U25GSlExbHRTVWhTTldOSFZuWmFhVUpVWlZjeGFXSXlkMmRRVkRBNVNVWjNhVnB1Vm5WWk0xSndZakkxWTBscFFXMUthVUoyV1cxdmRWa3lPWFZqTTFKNVpGZE9NR0l6U1dkUVZEQTVTVVpPTldKWFNuWmlRMEZ0U21sQ2RsbHRiMmRKVkRBNVNVWk9OV0pYU25aaVF6VjNZMjA1TUdJelVqVmpSMVZuVUhsQ1kwbHVUalZpVjBwMllrWjNhVWxFYjJka1NHeDNXbGM1YlVsSE9XbGhhbk5uWmxSMFkySnNlSFZrYlVaNVNVWTVhbU50Vm1oa1IxWkVZa2RHZW1ONVFUbEpSMW94WW0xT01HRlhPWFZKUTJkd1NVaHpaMXB1Vm5WWk0xSndZakkwWjFwSFZtMWhWelZzVlVoS2RtTkhWbmxrUjJ4c1kzbG9NRmxZU201YVdGRnpTVWhDZVdJelFucExVMEkzU1VkYWRtTnBRVzlrYlVaNVNVZHJaMUJUUVhkUGVVSndTVVIzWjJOSVNuWmpTRTExWWtkV2RWb3pVbTlQZVVKd1MzbHpjRWxJYzJka2JVWjVTVWRTYkdNeVRubGhXRUl3WWpOSloxQlRRbmRqYlRsM1l6RjBjRmhVYzJkYVIxWjZXVE5LY0dOSVVuWmphVFZzWW01V2RGcFlTbWhaYlhoc1NVUXdaMXBIVm5wWk0wcHdZMGhTZG1OcE5XeGlibFowV2xoS2FGbHRlR3hKU0hnNFNVZGFhR0pJVG14UGVVSnJXbGhPYW1OdGJIZGtSemw1VEcxT2RtSnRXbkJhTTFaNVdWZEtjMXBUUVRsSlNGSjVaRmRWTjBsSGJHMUpRMmhqU1c1YWFHSklWbXhZUTBsbllWYzBaMXBIVm5wWk0wcHdZMGhTZG1OcGEyZGFSMVo2V1ROS2NHTklVblpqYVRVelkyMXNNRmxYU25OYVUwRTVTVWhTZVdSWFZUZEpSVGxwWVcxV2FtUkROV3RhVjFwd1ltMVdVV050T1hkYVdFb3daVk5vTUZsWVNtNWFXRkZ6U1VkU2JHTXlUbmxoV0VJd1lqTkpkV0V5VmpWTVEwSnJXbGhPYW1OdGJIZGtSemw1UzFSeloyWlRRamxKU0Vwc1pFaFdlV0pwUW0xa1Z6VnFaRWRzZG1KcFFXOVJNamwxWXpOU2VXUlhUakJpTTBselNVaENlV0l6VW5aVlNFcDJZMGhOYzBsSVRqQlpXRkp3V1RGQ2VXSXpRbnBMVTBJM1NVZHNiVWxEYUhkamJUa3dZakZDZVdJelFucExVMEpyV2xkYWNHSnRWbEZqYlRsM1dsaEtNR0ZYVm5wTFJVNTJZbTVPTUdOdVZtcGtSemw1VEc1Q2VXSXpVblprU0d4M1dsTjNaMk5JU25aa1J6bFJZMjA1ZDJONWF6ZEpSMnh0U1VOb2VtUkhSakJoVjA1UlkyMDVkMk41YTJkYVIxWnRZVmMxYkZWSVNuWmpSMVo1WkVkc2JHTjVhRVJpTWpWNlpFaEtNVmt6VW5aamFYZG5Zek5TYUdSSGJHcFZTRXAyWTBoTmNFOTVRbmxhV0ZJeFkyMDBaMUV5T1hWak0xSjVaRmRPTUdJelNUZEpTREEzU1Vnd2IwdFVkR05pYkhoMVdtNVdkVmt6VW5CaU1qUm5XREpPYzFsWVRucFJNa1p6WWtWT2IxcFhUbkpMUjJ4MVl6TlNhR0p0VG14TVEwSkVZakkxZW1SSVNqRlpNMUoyWTJscloyVjVRbkJhYVVGdlNWTm9jR0p1VGpCWlZ6VnFXbE5DY0dKdVRqQlpWelZxV2xjNWJVbEZUblppYms0d1kyNVdhbVJIT1hsTFUydG5aWGxDTUdGSVNuWmtlVUoxV2xoaloxWkliSGRhVlZaNVkyMDVlVXRHZDJsUk1rWjFZbTA1TUVsSFRtaGlSM2RuV1ZOQ2FtSkhSbnBqZVVKb1kzbENhRWxIV2pGaWJVNHdZVmM1ZFZoRFNYQlBlVUk1U1VneFkySnNlSFZNZVc5eFdFYzBaMHRwUVhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVm5oMVNVTnZaMUZ0T1haa1NFNHdZMjFHZDBsRGFESk9RelIzVEdwQmRGbFhlSGRoUjBWMVRtbHJOa2xJVW5aaU1uZ3dZVmhCZFdGdVRtTmlhVUZ4U1VWNGNGa3lWblZqTWxaclNVaFdkVnBIVm5sSlJURktWa05CYjJGSVVqQmpTRTAyVEhrNWJtRllVbTlrVjBsMVdUSTVkRXd6VWpOWmJrMTJXVzA1ZG1SSVRqQmpiVVozVERKS2MySXlTWFppVjBaNlpFZFdlVXd3ZUVwUk1GWlBWVEJWY0ZoSE5HZExhVUYwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURlo0ZFVsRGIzWllSelZqWW01YWFHTnBRbFZpTWpselpFZHNkMGxFTUdkYWJsWjFXVE5TY0dJeU5HZExRMUZ3U1VoMFkySnNlSFZKUTBGMlMybHdZMkpwUVdkSlEyOW5VVEpvYkZreWMyZGFiVGw1U1VaU2JHUkhhR3hqYVVKcldsaENiR0p0VW14aWJVNDFXRWMwWjBsRFFYRkpSbEpzWkVkb2JHTnBRWFJKUjJnd1pFaEJOa3g1T1RCYVdGSnZXbGhKZFdGWE9IWllSelJuU1VOQmNVd3hlSFZKUTBKd1dtbEJiMlJJYkhkYVZ6bHRTVVpTYkdSSGFHeGphVUU1VUZRd1owb3pWblZhUjFadFlWYzFiRnBEWTNCSlNIUmpZbWxCWjBsRFFqQmhTRXAyWkhsQ2RWcFlZMmRTV0VwNVlqTkpiMG93U25aaU0xSjZaRWhLYUdORFFqQmlNamx6WkVkc2QyTjVRbmxhV0VZeFlWaEtiRWxHVW14a1IyaHNZMmxCYjJGSVVqQmpSRzkyVEROU2JHUkhhR3hqYVRWd1luazRjRXA1YXpkWVJ6Um5TVWd4WTJKc2VIVkpRMEYyUzJsd1kySnBRV2RKUTI5blRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwV0VjMFowbERRWEZKUlU1MlltNU9NRmxYTlRCak1YaDFTVU5CWjB0cFFYUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTVdOaWFVRm5TVU52ZGxoSE5XTmlhVUZuWkcxR2VVbEZOVUpVVlZWblVGTkJibVJIT1haaVNGSndZME5qTjFoSE5HZEpTRnBvWTJsQ1YxSldTbFJUVlRsUFNVUXdaMHA2VVhWTlF6UjNURmRHYzJOSGFHaE1hbGx1VHpGNGRVbERRakpaV0VsblVrVkdWVkZXT1V4U1ZtdG5VRk5CYmxsdVRYVmtSemwyWWtoU2NHTkRZemRZUnpSblNVaGFhR05wUWtaV2ExWlBWa1k1VEZKV2EyZFFVMEZ1VEdsalowdDVRa1ZSVmxKQ1dEQjBSbGRVZEdOaWFVRm5aRzFHZVVsRmNGSldWVlpUVjFZNVQxUXhPVVJVTURWSFZFVnNSRlpEUVRsSlExRjFXbTAxWWxSclJrNVNWakEzV0VjMFowbElXbWhqYVVKVlZXdEdUMVV3YkZWVFZUbFBXREJTVmxWclJsVlRWVGxQU1VRd1owMVVWWGRQTVhoMVNVTkNNbGxZU1dkUk1IaENWVEZPWmxWR1NrWlNhMnhaU1VRd1owb3lTbnBNV0ZKc1pFZG9iR05wWXpkWVJ6VmpZbWxCWjJSdFJubEpSVkpzV20xR01XSklVV2RRVTBJM1dFYzBaMGxEUVdkWlZ6VndZbGRHTUdGWE9YVlBhVUl3WTI1V2JFeEdlSFZKUTBGblNVaFNiR0pZUW5OWldGSnNUMmxCYmxCSFVuQmthVUpxWWtkR2VtTjZNV05KYmxKMllqSjRNR0ZZUW1OSmFVSjVZako0YkZCV2QybGtSemwyWWtoU2NHTkdkMmxRYVdOblMzbEJibEJIVW5Ca2FVSnFZa2RHZW1ONk1XTkpibEoyWWpKNE1HRllRWFJoVnpWMVdsaEtZMGxxTkRoTU1sSndaR28wT0V3eVVuQmthalJ1VEVaNGRVbERRV2RKU0ZKNVlWZGtibHBZU1RaSlEyUnZZak5hYkdOcFFtMWlNazR4WTNsamMxaEhOR2RKUTBGblpFZHNNR0pIVlRaSlEyTnVURVo0ZFVsRFFXZEpSMUpzWWtkR05VOXBRWGRNUm5oMVNVTkJaMGxIYURCaVYzYzJTVWRhYUdKSVRteE1SbmgxU1VOQlowbElUbXhpUjFacVpFYzVlVTlwUW0xWlYzaDZXbE40WTJKcFFXZEpRMEozWWtkR2FscFhNV3hpYmxFMlNVTmtNR0l6UVc1TVJuaDFTVU5CWjBsSE9XMWFiazVzWkVSdlowcDZRV2ROUTJOeldFYzBaMGxEUVdkWk1qbDFZek5TZVZsWGJIVmtTRTAyU1VaMFpFeEdlSFZKUTBGblNVZE9kbUp1VW1oaFZ6VnNZMnB2WjFwdFJuTmpNbFpqWW1sQloyWlVkR05pYkhoMVNVTkNNbGxZU1dkU1IxWnRXVmhXYzJSR1VqVmpSMVZuVUZOQ04xaEhOR2RKUTBGbldWYzFjR0pYUmpCaFZ6bDFUMmxCYmxsdE9YWmlSMVpvWW1samMxaEhOR2RKUTBGblpFZFdkR05IZUdoa1IxVTJTVU5rZW1SSVNuQmliV051VEVaNGRVbERRV2RKU0ZKd1pFZDRiRTlwUVc1TFNFNHdZMjFzZFZvemVHeGlSMVowV2xjMU1HWkhXakZpYlU0d1lWYzVkVXRUWTNOWVJ6Um5TVU5CWjJSSVNuQmFNbVJzWTJwdlowb3pUakJqYld4MVdubGpjMWhITkdkSlEwRm5Xa2RXYzFsWWF6WkpRMk52WW01V2RGbHRWbmxtUnpscFlXMVdhbVJEYTI1TVJuaDFTVU5CWjBsSGFEQmlWM2MyU1VOa2FXSXlPWE5hVjBaMVNubDRZMkpwUVdkSlEwSjZXbGQ0YkZrelVuWmphbTluU25sb2VtUklTbkJpYldRNFdXMDVkbUpIVm1oaWFXdHVURVo0ZFVsRFFXZEpTRUp6V1ZkT2JHSlhWblZrUkc5blNubG9lbVJJU25CaWJXUTRXbTVXZFZrelVuQmlNalJ3U25sNFkySnBRV2RKUTBKMldtMWFlbHBZVVRaSlEyUjZaRWhLY0dKdFkyNU1SbmgxU1VOQlowbEhUblppYms0d1kyMUdjR0p1VW5wUGFVRnVXVmhLZVZsWWEyNU1SbmgxU1VOQlowbEhUblppYmxKb1lWYzFiR05xYjJkS2VXaDZaRWhLY0dKdFpEaGFWM2hzWWxkV2RXUkllR2xpTWpseldsZEdkVXRUWkdOaWFVRm5abFIwWTJKc2VIVkpRMEl5V1ZoSloxRllVakJaVjA1dllsZFdkV1JGTVdoalEwRTVTVWgwWTJKcFFXZEpRMEpWVkRGQk5rbERaR2xpTTFJd1lqSXdaMWt5Vm5Wa1IxWjVTbmw0WTJKcFFXZEpRMEpUVTFWa1NWWkViMmRLTWpGd1drZFNjMXBUUW5OYVYxb3dTbmw0WTJKcFFXZEpRMEpEVkRGU1ZWUXdNRFpKUTJRd1lqTkJaMWt5Vm5Wa1IxWjVTbmw0WTJKcFFXZEpRMEpOVWxWYVZVOXBRVzVpVjJ4cldrZDRiRWxJU25CYU1tZ3dTakY0ZFVsRFFqbFBNWGgxV0VjMFowbElXbWhqYVVKSllqTmFiR05zVGpCWldGSnNTVVF3WjJVeGVIVkpRMEZuU1VaT1NWUXhZelpKUTJSNllVYzVNMHA1ZUdOaWFVRm5TVU5DVUZaV1VUWkpRMlIyWkZoUmJsaEhOR2RKU0RBM1dFYzFZMkpwUVdka2JVWjVTVVZXTWxwWE5UQkpSREJuWlRGNGRVbERRV2RKUldoS1VrVlZOa2xEWkc5aFYxSnNTbmxCY2tsRlZsZFNWVFZWV0RCMFJsZFRlR05pYVVGblNVTkNTVk5WVWtWU1ZUUTJTVU5rYjJGWFVtdGFWelJ1U1VOeloxSldXa1pVYkZKbVV6QldXa3hHZUhWSlEwRm5TVVpPU1ZReFl6WkpRMlI2WVVjNU0wcDVRWEpKUlZaWFVsVTFWVmd3ZEVaWFUzaGpZbWxCWjBsRFFsUlRSVGxZVkdwdlowb3pUbTlpTTJSMVNubEJja2xGVmxkU1ZUVlZXREIwUmxkVGVHTmlhVUZuU1VOQ1NsUnNUa1pWYkZKR1VrUnZaMG95YkhWak1sWjVaRWRXYTBwNVFYSkpSVlpYVWxVMVZWZ3dkRVpYVTNoalltbEJaMGxEUWtSVVJXeEVVM3B2WjBveVRuTmhWMDV5U25sQmNrbEZWbGRTVlRWVldEQjBSbGRUZUdOaWFVRm5TVU5DUjFRd1RsWlZNR3hQVDJsQmJscHRPV3BrV0U1d1ltbGpaMHQ1UWtaV2ExWlBWa1k1VEZKV2EzTllSelJuU1VOQloxSnJPVVJXVms1UVZsWlJOa2xEWkcxaU1rNHhZekk1TVdSRFkyZExlVUpHVm10V1QxWkdPVXhTVm10eldFYzBaMGxEUVdkVVZUbFdWVEJXUmxSc1VrWlZhbTluU2pJeGRtUllUbXhhVnpVd1dsaEpia2xEYzJkU1ZscEdWR3hTWmxNd1ZscE1SbmgxU1VOQlowbEZNVkJXVms1R1ZFVldRbFpyVlRaSlEyUjBZak5XZWxwWGVHeFpXRnBzU25sQmNrbEZWbGRTVlRWVldEQjBSbGRXZUhWSlEwSTVUekY0ZFZoSE5HZEpTRnBvWTJsQ1JHSkhSbnBqTURWb1lsZFZaMUJUUWpkWVJ6Um5TVU5CWjFKclJrVlNWRzluU2pKYWFGcEhWVzVNUm5oMVNVTkJaMGxHVGtsVU1XTTJTVU5rZW1GSE9UTktNWGgxU1VOQ09VOHhlSFZZUnpSblNVaGFhR05wUWxSYVYzaHNXVE5TZG1OcFFUbEpTSFJqWW1sQlowbERRbFZVTURsTlZrVnNVVTlwUVc1TWJsSjJZako0TUdGWVFXNU1SbmgxU1VOQlowbEdVbEJVTUhoVlUxWkNabE5WTlU5U1ZrazJTVU5qZFdSSE9YWmlTRkp3WTBNeGNHSnROV3hqYVdSalltbEJaMlpVZEdOaWJIaDFTVU5DTWxsWVNXZFdSMVl3WVVkV2VWRXllR2hqTTAxblVGTkNOMWhITkdkSlEwRm5XbGQ0YkdKWFZuVmtSRzluV20xR2MyTXlWWE5ZUnpSblNVTkJaMXBYTldoWmJYaHNXa1J2WjFwdFJuTmpNbFpqWW1sQloyWlVkR05pYkhoMVNVTkNNbGxZU1dkV1NFcHdXakprYkdOcFFUbEpTSFJqWW1sQlowbERRa2xVTVZwR1ZXcHZaMG95YUhaa2JWWjVTbmw0WTJKcFFXZEpRMEpIVkRCT1ZsVjZiMmRLTWxwMldUTldla3A1ZUdOaWFVRm5TVU5DUkZSRmJFUlRlbTluU2pKT2MyRlhUbkpLZVhoalltbEJaMGxEUWs1UlZUVldVVlYzTmtsRFpIUlpWelV4V1ZkM2JsaEhOR2RKU0RBM1dFYzFZMkpwUVdkTWVXOXhXRWMwWjBsRFFYRkpRekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVZuaDFTVU5CWjB0cFFrUmlSMFo2WTNsQ1JWcFhXbkJpYld3d1lWYzVkVmhITkdkSlEwRnhTVU13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGWjRkVWxEUVdkTGFUbGpZbXg0ZFVsRFFqSlpXRWxuVmtjNWRtSklVbkJqUTBFNVNVZGFNV0p0VGpCaFZ6bDFTVU5uY0VsSWRHTmlhVUZuU1VOQ2JXUlhOV3BrUjJ4MlltbENWV0l5T1hOa1IyeDNTMGRXYzFwWE1XeGlibEZ6U1VkT2RtSnRXbkJhZVd0blpURjRkVWxEUVdkSlEwRm5XREpPYzFsWVRucFJNa1p6WWtWT2IxcFhUbkpMU0ZKdllWaE5jMGxHVW5aaU1uZ3dZVmhCY0U4eGVIVllSelJuU1VOQlowbERRWFpNZVVKM1kyMXNNbGxZVW14WVJ6Um5TVU5CWjBsRFFqQmhSMng2VEd3NWNHTXdWblZaVjBweldsZFJaMUJUUWpCamJsWnNUekY0ZFVsRFFXZEpRMEZuWkVkb2NHTjVOV1prUjJ4MFdsYzVNV1JEUVRsSlJFRTNXRWMwWjBsRFFXZEpRMEl3WVVkc2VreHNPVzlpTTFwc1kyeE9NRmxZVW14SlJEQm5TbmxqTjFoSE5HZEpRMEZuU1VOQ01HRkhiSHBNYkRsb1dUTlNjR1J0VmxWamJXeHVXakpXZVVsRU1HZGxNekEzV0VjMFowbERRV2RKUTBJd1lVZHNla3hzT1hCak1WSjVXVmMxZW1GWVVuQmlNalZ3WW0xaloxQlRRbTFaVjNoNldsUjBZMkpwUVdkSlEwRm5TVWhTYjJGWVRYVllNMUpzWkVkb2JHTnBRVGxKUnpVeFlrZDNOMWhITldOaWFVRm5TVU5CWjBsRE9IWkpTRUo1WWpOU2JGa3pVbXhhUm5oMVNVTkJaMGxEUVdka1IyaHdZM2sxYkdKSFZuUmFWelV3U1VRd1oxcFhlR3hpVjFaMVpFUjBZMkpwUVdkSlEwRm5TVWhTYjJGWVRYVlpNamwxV20xc2JrbEVNR2RrUjJod1kzazFabG95VmpCUk1qbDFXbTFzYmt0SFRuWmliVnB3V25sck4xaEhOR2RKUTBGblNVTkNNR0ZIYkhwTWJsSndZME5CT1VsSE5URmlSM2MzV0VjMVkySnBRV2RKUTBGblNVaFNiMkZZVFhWWU0wNXNaRVY0Y0dNelVteGliVlo1WTNsbmNFOHhlSFZKUTBGblNVZ3hZMkpzZUhWSlEwRm5TVU00ZGtsSFpHeGtTRkpzWTI1T1kySnNlSFZKUTBGblNVTTRka2xJUWpGWmJYaHdXVEY0ZFZoSE5HZEpRMEZuVmtjNWRtSklVbkJqUXpWM1kyMDVNR0l6VWpWalIxVjFXbGMxYUZsdGVHeEpSREJuV201V2RWa3pVbkJpTWpSbldsYzFhRmx0ZUd4TFEydG5aVEY0ZFVsRFFXZEpRMEZuWkVkb2NHTjVOV1poV0U1R1ltMUdhV0pIVm10SlJEQm5aRWhLTVZwVWRHTmlhVUZuU1VOQ09VOHhlSFZZUnpSblNVTkJaMVpIT1haaVNGSndZME0xZDJOdE9UQmlNMUkxWTBkVmRWcEhiSHBaVjBweldsTkJPVWxIV2pGaWJVNHdZVmM1ZFVsSFVuQmpNa1pwWWtkVmIwdFRRamRZUnpSblNVTkJaMGxEUWpCaFIyeDZUR3c1Y0dNd1ZuVlpWMHB6V2xkUloxQlRRbTFaVjNoNldsUjBZMkpwUVdkSlEwSTVUekY0ZFZoSE5HZEpRMEZuVmtjNWRtSklVbkJqUXpWM1kyMDVNR0l6VWpWalIxVjFaRWM1YmxveWVHeFNWelZvV1cxNGJGcERRVGxKUjFveFltMU9NR0ZYT1hWSlNGSjJXakprYzFwVlZuVlpWMHB6V2xkUmIwdFRRamRZUnpSblNVTkJaMGxEUWpCaFIyeDZUR3c1Y0dNd1ZuVlpWMHB6V2xkUloxQlRRV2hrUjJod1kzazFabUZZVGtaaWJVWnBZa2RXYTA4eGVIVkpRMEZuU1Vnd04xaEhOV05pYVVGblNVTkNWV0l5T1hOa1IyeDNURzVDZVdJelVuWmtTR3gzV2xNMU1HSXlaRzVpUjFWblVGTkNiV1JYTldwa1IyeDJZbWxDTUdJeVpHNWlSMVZ2V2xoYWJHSnVVWEJKU0hSalltbEJaMGxEUVdkSlIyeHRTVU5vYkdSdFZuVmtRMnRuWlRGNGRVbERRV2RKUTBGblNVTkNNbGxZU1dkYVIwWXdXVlYwYkdWVFFUbEpTRkp2WVZoTmRWa3lPWFZqTTFKNVpGZE9NR0l6U1hWU1JVWlZVVlk1VEZKV2F6ZFlSelJuU1VOQlowbERRV2RKU0Zwb1kybENhbUl5TlRCYVdHZ3dTVVF3WjBwRGFHeGtiVloxWkVNMWFtUllTbmxhVnpVd1ZrZEdlVm95VmpCTFV6VnJXVmhTYUV0SFVtaGtSMFpNV2xocmNFOHhlSFZZUnpSblNVTkJaMGxEUVdkSlIyeHRTVU5uYUZreU9YVmtSMVkwWkVOcloyVXhlSFZKUTBGblNVTkJaMGxEUVdkSlIwNTJZbTVTYkdWSVVXZFFVMEoxV2xoaloyUkhhSEJqZVRWcVlqSTFlbVJJU2pGWk0xSjJZMmxvYkdSdFZuVmtRelZxWkZoS2VWcFhOVEJXUjBaNVdqSldNRXhEUWpCaFIyeDZUR3c1YmxwWVVrVmFWM2hzV2pKR01GcFZUblppYlZwd1dubG5jRXRVZEdOaWFVRm5TVU5CWjBsRFFXZEpRMEZyUzBkV01scFhOVEJNYlU0eFkyNUtiR0p1VWxWWldFcHVXbGhSY0V4dFVtaGtSMFZ2V2tkR01GbFZkR3hsVTNkbldUSTVkV1JIVmpSa1EyczNXRWMwWjBsRFFXZEpRMEZuU1VneFkySnNlSFZKUTBGblNVTkJaMGxEUW1waU1qVXdXbGhvTUV4c09XaFpNMUp3WkcxV1ZXTnRiRzVhTWxaNVRHMU9jMkZYVG5KSlJEQm5TVmRPZG1KdVVteGxTRkYxV0RKR2FtUkhiREphVmxKNVlWZGtibHBZU1hWWk1uaHdXVEp6TjFoSE5XTmlhVUZuU1VOQlowbERRV2RoVjFsblMwZE9kbUp1VW14bFNGRjFXREpzZWxZeWJEQmhSVVpxWkVkc01scFdVbmxoVjJSdVdsaEpiMHRUYTJkbE1YaDFTVU5CWjBsRFFXZEpRMEZuU1VkT2RtSnVVbXhsU0ZGMVdESldkV1JIVm5sTFJ6VXhZa2QzYzBsSFRuWmlibEpzWlVoUmNFOHhlSFZKUTBGblNVTkJaMGxEUWpsSlIxWnpZekpWWjJVeGVIVkpRMEZuU1VOQlowbERRV2RKUjA1MlltNVNiR1ZJVVhWWU1uaHNXVmhhYkV0SE5URmlSM2R6U1VkT2RtSnVVbXhsU0ZGd1R6RjRkVWxEUVdkSlEwRm5TVU5DT1ZoSE5HZEpRMEZuU1VOQ09VbEhWbk5qTWxWblpURjRkVmhITkdkSlEwRm5TVU5CWjBsSGJHMUpRMmRyUzBoU2IyRllUWFZhTWxZd1ZrZHNkMUpYZUd4aVYxWjFaRU5uY0V0VE5XOVpXRTVFWWtkR2VtTjVhRVJpUjBaNll6QTFhR0pYVlhWVk1HaFFWbmxyY0VsSWRHTmlhVUZuU1VOQlowbERRV2RKUTBJd1lVZHNla3hzT1hOYVYwWXlXbE5vZFdSWGVITk1RMEl3WVVkc2VrdFVkR05pYVVGblNVTkJaMGxEUVdkSlEwSjVXbGhTTVdOdE5EZFlSelJuU1VOQlowbERRV2RKU0RGallteDRkVWxEUVdkSlEwRm5TVU5DTUdGSGJIcE1iRGxzWW01U2JHTnBhSFZrVjNoelRFTkNNR0ZIYkhwTFZIUmpZbWxCWjBsRFFXZEpTREZqWW1sQlowbERRamxQTVhoMVdFYzBaMGxEUVdkV1J6bDJZa2hTY0dORE5YZGpiVGt3WWpOU05XTkhWWFZhUjJ4NlkwYzVlbHBUUVRsSlIxb3hZbTFPTUdGWE9YVkpSMUp3WXpOQ2RtTXlWVzlMVTBJM1dFYzBaMGxEUVdkSlEwSnFZa2RXYUdOc1VuQmlWMVoyWkZoUmIyUkhhSEJqZVRWbVpFZHNkRnBYT1RGa1EyczNXRWMxWTJKcFFXZEpRMEZuU1VoU2IyRllUWFZaTW5oc1dWYzFNV05HVW14a1IyaHNZMmxuY0U4eGVIVllSelJuU1VOQlowbERRV3RNYmtwc1lsYzVNbHBWVW1oa1IwVnZaRWRvY0dONU5XeGlSMVowV2xjMU1FeERRakJoUjJ4NlRHMU9kbUp1VGpCamJsWnFaRWM1ZVV4clVrSldSVVptVXpCV1drdFVkR05pYkhoMVNVTkJaMGxEUVdkS1EyZ3dZVWRzZWt4dFZuTmFWekZzWW01UmNFeHRPVzFhYVdnd1lVZHNla3h0VG5aaWJrNHdZMjVXYW1SSE9YbE1hMVpYVWxVMVZWZ3dkRVpYVTJzM1dFYzBaMGxEUVdkSlEwRnJTMGhTYjJGWVRYVmFWM2hzWWxkV2RXUkRhM1ZaTW5oMll6SldlbVJEWjI1TWJURjJXa2RHYzBwNWEzVmlNbHB0UzBOa2IyRlhVbXhNYlVwNlRHMHhkbHBIUm5OS2VXczNXRWMxWTJKcFFXZEpRMEZuU1Vkc2JVbERhREJoUjJ4NlRHNVNjR05EYTJkbE1YaDFTVU5CWjBsRFFXZEpRMEZyUzBoU2IyRllUWFZrUjJ4M1MxTTFlVnBYTVhaa2JWVnZTMVIwWTJKcFFXZEpRMEZuU1VneFkySnNlSFZKUTBGblNVTkJaMlJIYUhCamVUVm1ZVmhPUm1KdFJtbGlSMVpyU1VRd1oySnVWbk5pUkhSalltbEJaMGxEUVdkSlNGSnZZVmhOZFZnelVuQmlWMVoyWkZoUloxQlRRblZrVjNoelR6RjRkVWxEUVdkSlEwRm5aRWRvY0dONU5XWmhSemt5V2xoS1ZHUkhSakJhVTBFNVNVYzFNV0pIZHpkWVJ6Um5TVU5CWjBsRFFqQmhSMng2VEd3NWFGa3pVbkJrYlZaVlkyMXNibG95Vm5sSlJEQm5ZbTVXYzJKRWRHTmlhVUZuU1VOQlowbElVbTloV0UxMVdETlNiR1JIYUd4amFVRTVTVWMxTVdKSGR6ZFlSelZqWW1sQlowbERRV2RKU0ZKdllWaE5kVnBYZUd4aVYxWjFaRU5CT1VsSE5URmlSM2MzV0VjMFowbERRV2RKUTBJd1lVZHNla3h0VG5aaWJWcHdXbmxCT1VsSE5URmlSM2MzV0VjMFowbERRV2RKUTBJd1lVZHNla3h1VW5CalEwRTVTVWMxTVdKSGR6ZFlSelJuU1VOQloyWlVkR05pYkhoMVNVTkJaMGxHVW5aaU1uZ3dZVmhCZFdOSVNuWmtSemt3WlZoQ2JFeHVUbTlpTTJOblVGTkNiV1JYTldwa1IyeDJZbWxDZW1GSE9UTkxRMnRuWlRGNGRVbERRV2RKUTBGblpHMUdlVWxHT1RCaFIyeDZTVVF3WjJSSGFIQmplblJqWW14NGRVbERRV2RKUTBGbllWZFpaMHREVVc5a1IyaHdZM2sxYkdKSFZuUmFWelV3UzFNMWFtTXpUVzlLTWxKd1l6TkNjMWxZYTI1TFUwRTVVRlF3WjBveU5YWmliVlZ1UzFOQ04xaEhOR2RKUTBGblNVTkJaMGxJVW05amJUa3pTVWMxYkdSNVFrWmpia3AyWTJsbmJsVkhlR3haV0U1c1NVaFdlbHBUUW5waFJ6a3pTVWM1ZFVsSVduQmpNbXhwWWtkVloxcFhlR3hpVjFaMVpFaE5ia3RVZEdOaWFVRm5TVU5CWjBsSU1XTmliSGgxU1VOQlowbERRV2RrYlVaNVNVaE9iMkl6WkVaa2JWWjFaRU5CT1VsRFVYVlNXRnBzWW01UmIyUkhhSEJqZVRWcVlqSTFlbVJJU2pGWk0xSjJZMmsxUm1SdFZuVmtRelZVVTBVNVdFdFVkR05pYVVGblNVTkJaMGxIYkcxSlEyZ3dZVWRzZWt4dGJIcFdNbXd3WVVWT2RtSnVVbXhpYmxGdlMxTkJiVXBwUWpCaFIyeDZUR3c1Y0dNd1ZuVlpWMHB6V2xkUmNFbElkR05pYVVGblNVTkJaMGxEUVdkaFYxbG5TMGhTYjJGWVRYVllNbXg2VmtoS2FHSnVUbkJrUjJ4MlltMXNkVnA1YTJkbE1YaDFTVU5CWjBsRFFXZEpRMEZuU1VoU2IyTnRPVE5KUnpWc1pIbENSbU51U25aamFXZHVWa2M1ZG1KSVVuQmpRMEp3WTNsQ01HTnRSblZqTW13d1lWYzVkV0ZYTlc1S2VXczNXRWMwWjBsRFFXZEpRMEZuU1VneFkySnBRV2RKUTBGblNVTkJaMHBEYURCaFIyeDZURzFXYzFwWE1XeGlibEZ3VEc1U2VXRlhaRzVhV0Vsdll6Sm9kbVF3VmpKYVZ6VXdTMVIwWTJKc2VIVkpRMEZuU1VOQlowbERRakpaV0VsbllWaE9TbUpzVW05YVZWSjJZbE5CT1VsRFVYVlpNamwxWkVkR2NHSnVUVzlrUjJod1kzazFiR0pIVm5SYVZ6VXdURzA1TTJKdFZubFNSemxxWkZjeGJHSnVVWFZhUnpscVpGY3hiR0p1VWtaaVIxWjBXbGMxTUV4RFFqQmhSMng2VEcxV2MxcFhNV3hpYmxGd1R6RjRkVmhITkdkSlEwRm5TVU5CWjBsSGJHMUpRMmg2WVVjNU0xSllXbXhpYmxGMVlWaE9SVnBYV21oa1YzZ3dWVWhLYkdSdFZuVmtSMVpyUzBOcloyWklkMmRKVjJ4NlUxYzFWV0ZIVmtWaU1qQndTVWgwWTJKcFFXZEpRMEZuU1VOQlowbERRbmxhV0ZJeFkyMDBOMWhITkdkSlEwRm5TVU5CWjBsSU1XTmliSGgxU1VOQlowbERRV2RKUTBJeVdWaEpaMlJIYkhkSlJEQm5aRWRvY0dONU5XNWFXRkpWWVZoQ1JtSkhWblJhVnpVd1MwTnJOMWhITkdkSlEwRm5TVU5CWjBsSVdtaGphVUl3WVZoQ1NscERRVGxKUmxZd1lWZDNkVm95VmpCV1ZXeEZTMGhTYjJGWVRYVlpNamwxWXpOU2VXUlhUakJpTTBsMVZHdEdUbEpUYXpkWVJ6VmpZbWxCWjBsRFFXZEpRMEZuWkVkc2QweHVUbXhrUlVZd1pFaEtjRmx1VmpCYVUyZHVZVmRSYmt4RFFqQmhXRUpLV2tOck4xaEhOR2RKUTBGblNVTkJaMGxJVW05aFdFMTFXbGQ0YkdKWFZuVmtRelY2V2xoU1FtUklVbmxoVjBveFpFZFZiMG95Um5saFYwVjBXa2RXZWxrelNuQlpiVlpyV1c1cmJreERRakJoV0VKS1drTnJOMWhITldOaWFVRm5TVU5CWjBsRFFXZGtSMmh3WTNrMWVscFlVa1JpTWpVd1dsYzFNRXREYXpkWVJ6VmpZbWxCWjBsRFFXZEpRMEZuWVZkWlowdElVbTloV0UxMVdUSTVkVnB0Ykc1TWJVWjFZVmN4YUdSSGJIWmlhV3RuWlRGNGRVbERRV2RKUTBGblNVTkJaMGxEVVc5a1IyeDNTMU0xYUZwSFVrUmlSMFo2WTNsb1JHSkhSbnBqTURWb1lsZFZkVkpyUmtWU1UyczNXRWMwWjBsRFFXZEpRMEZuU1VneFkySnNlSFZKUTBGblNVTkJaMGxEUWpKWldFbG5ZMGQ0YUZreVZuUmFWelV3U1VRd1oyUkliSGRhVnpsdFNVaFNiMkZZVFhWWk1qbDFXbTFzYmt4dVFuTlpWMDVzWWxkV2RXUkRRVGxRVkRCblNqSmFNV0p0VGpCaFZ6bDFTbmxCTDBsSVVtOWhXRTExV1RJNWRWcHRiRzVNYmtKeldWZE9iR0pYVm5Wa1F6VnFXVmQ0YzB0SVVtOWhXRTF6U1VoU2NHTkRkMmRrUjJod1kzazFiR0pIVm5SYVZ6VXdTMU5CTmtsSVVtOWhXRTExV1RJNWRWcHRiRzVNYmtKeldWZE9iR0pYVm5Wa1JIUmpZbXg0ZFVsRFFXZEpRMEZuU1VOQ01sbFlTV2RaV0ZJd1dWZE9iMkpYVm5Wa1EwRTVTVWhTYjJGWVRYVllNbVJzWkVWR01HUkhSbXBoUnpGc1ltNVJiMk5IZUdoWk1sWjBXbGMxTUV0VWRHTmliSGgxU1VOQlowbERRV2RKUTBJeVdWaEpaMWt5T1hWa1IwWndZbTFXZVVsRU1HZGtSMmh3WTNrMWFtSXlOVzFoVjJOMVdUSTVkV1JIUm5CaWJWWjVTVVF3T1ZCVFFtMVpWM2g2V2xOQkwwbEhVblpaTTFaMFdsYzFNRXh0U25aYVNHdG5UMmxCYTB0SVVtOWhXRTExV1RJNWRWcHRiRzVNYlU1MlltNVNhR0ZYTld4amFXczNXRWMxWTJKcFFXZEpRMEZuU1VOQlowcERhREJoV0VGd1RHMVNhR1JIUlc5a1IyaHdZM2sxYW1JeU5YcGtTRW94V1ROU2RtTnBOVVZSVmxKQ1dEQjBSbGRUZDJka1IyaHdZM2xyZFZsWVFuZGFWelZyVmtjNGIxa3lPWFZrUjBad1ltMVdlVXRVZEdOaWJIaDFTVU5CWjBsRFFXZEpRMEZyUzBoU2IyRllUWFZhVjNoc1lsZFdkV1JEYTNWa1NFcHdXakprYkdOcGFEQmhSMng2VEcxT2RtSnVUakJqYmxacVpFYzVlVXhyVmpKYVZ6VXdUR3RzVDFVd1ZsTldSVlpGUzFSMFkySnNlSFZKUTBGblNVTkJaMGxEUWpCaFIyeDZUR3c1TUZwWVVtOWFXRWxuVUZOQ2RWcFlZMmRXUjFZd1lVZFdlVXRJZEdOaWFVRm5TVU5CWjBsRFFXZEpRMEpvWkVoU2FGa3lhSFJhVnpVd1QybENhR1JJVW1oWk1taDBXbGMxTUV4R2VIVkpRMEZuU1VOQlowbERRV2RKUjFaeldsY3hiR0p1VVRaSlNGSndZME40WTJKcFFXZEpRMEZuU1VOQlowbERRakJaV0VwdVdsaFJOa2xJVW05aFdFMTFXbGQ0YkdKWFZuVmtRM2hqWW1sQlowbERRV2RKUTBGblNVTkNhbUpIUm5wak1sWjZUMmxDVlZwWVVtOWFXRXBFWWtkR2VtTjVlR05pYVVGblNVTkJaMGxEUVdkSlEwSnFZa2RHZW1NeFFubGFWMXB3WlVSdloxRXdlRUpWTVU1bVZVWktSbEpyYkZsTVJuaDFTVU5CWjBsRFFXZEpRMEZuU1VjNWJWcHVUbXhrUkc5blpFZG9jR041TldwaU1qVnRZVmRqZFdJeVdtMWpNbFl3VEVaNGRVbERRV2RKUTBGblNVTkJaMGxIVG5aaWJrNHdZMjFHY0dKdVVucFBhVUl3WVVkc2VreHRUblppYlZwd1duazFhbUl5Tlhwa1NFcG9ZVmMxTUdONWVHTmlhVUZuU1VOQlowbERRV2RKUTBKb1drZFNWVmxZU201YVdGSkVZa2RHZW1NeVZucFBhVUp0V1ZkNGVscFdlSFZKUTBGblNVTkJaMGxEUWpsTFZIUmpZbXg0ZFVsRFFXZEpRMEZuU1VOQ1ZtUkhiSE5NYmtwc1dtMTRkbVI1YURCaFdFRndUekY0ZFVsRFFXZEpRMEZuU1VOQ01HRkhiSHBNYkRrd1dsaFNiMXBZU1hWalJ6bDZZVmhTY0dJeU5HOUxWSFJqWW14NGRVbERRV2RKUTBGblNVTkJhMHRJVW5CalEydDFXVmRTYTFFeWVHaGpNMDF2VVRKNGFHTXpUazlaVnpGc1RHeE9TVlF4WTNCUE1YaDFXRWMwWjBsRFFXZEpRMEZuU1VoYWFHTnBRbXBpTWpGM1lrZFdNRnBUUVRsSlIxb3hZbTFPTUdGWE9YVkpSMDUyWWxoQ2MxcFlVbXhMUTJ0blpURjRkVWxEUVdkSlEwRm5TVU5CWjBsSVdtaGphVUozWTIxV01sTkhPVEphV0VwVVpFZEdNRnBUUVRsSlJqa3dZVWRzZWt4c09XOWlNMXBzWTJ4T01GbFlVbXhQTVhoMVNVTkJaMGxEUVdkSlEwRm5TVVk1TUdGSGJIcE1iRGx2WWpOYWJHTnNUakJaV0ZKc1NVUXdaMkp1Vm5OaVJIUmpZbWxCWjBsRFFXZEpRMEZuU1VOQ1ptUkhhSEJqZVRWbVlWaE9WV050Um5Wak1td3dZVmM1ZFdGWE5XNUpSREJuV20xR2MyTXlWVGRZUnpWalltbEJaMGxEUVdkSlEwRm5TVU5CYTB0R09UQmhSMng2VEcxV2MxcFhNV3hpYmxGd1RHNVNlV0ZYWkc1YVdFbHZXRE5TYjJGWVRYVlpNamwxWXpOU2VXUlhUakJpTTBsMVVsaGFiR0p1VVhWVk1HaFFWakEwY0U4eGVIVllSelJuU1VOQlowbERRV2RKUTBGbllWZFpaMHRJUW5sYVdGcEpZak5hYkdOc1RqQlpXRkpzU1VRd09WQlRRa2xpTTFwc1kyeE9NRmxZVW14TWF6bFdWa05yWjJVeGVIVkpRMEZuU1VOQlowbERRV2RKUTBGbldETlNiMkZZVFhWWU1uaHNXVmhhYkV0SE5URmlSM2R6U1VZNU1HRkhiSHBMVkhSalltbEJaMGxEUVdkSlEwRm5TVU5DT1ZoSE5HZEpRMEZuU1VOQlowbElNRGRZUnpWalltbEJaMGxEUVdkSlEwRm5ZVmRaWjB0R1ZqQmhWM2QxWXpOV2QyTkhPWGxrU0U1VlkyMUdkV015YkRCaFZ6bDFVbGMxYTB0RGEyZEthVmxuU2tOb01HRkhiSHBNYmxKd1kwTnJkV0ZIUm5wUk1uaG9Zek5OYjFFeWVHaGpNMDVQV1ZjeGJFeHJXa0pTUlZWd1MxTkNOMWhITkdkSlEwRm5TVU5CWjBsRFFXZGtSMmh3WTNrMVptRllUbFZqYlVaMVl6SnNNR0ZYT1hWaFZ6VnVTVVF3WjJSSVNqRmFWSFJqWW1sQlowbERRV2RKUTBGblNVTkJhMHRJVW05aFdFMTFaRWRzZDB0VE5YWmliVlZ2VmxoU2NHSkROVlZWYTBaUFZUQnNWVk5WT1U5WU1GWlBVa04zWjFreU9YUmpSM2hzWkVkVmNFeHRWblJrVjNob1pFZFdWV050Um5Wak1td3dZVmM1ZFZKWE5XdExSbEoyWWpKNE1HRllRWFZZTVZKVFVWVTFWRk5XVWtwVU1EVm1Va1pXVTFGV1VrcFVNRFJ3VHpGNGRVbERRV2RKUTBGblNVTkJaMGxJU214a1NGWjVZbXAwWTJKcFFXZEpRMEZuU1VOQloyWldlSFZZUnpSblNVTkJaMGxEUVdkSlIwNTJZbGhDYzFwWVVteExRMnMzV0VjMFowbERRV2RKUTBJNVdFYzBaMGxEUVdkbVZIUmpZbXg0ZFVsRFFXZEpSbEoyWWpKNE1HRllRWFZqU0VwMlpFYzVNR1ZZUW14TWJXaHdXa2RWWjFCVFFtMWtWelZxWkVkc2RtSnBRbTloVjFKc1MwZE9hR0pIZUdsWlYwNXlTMU5DTjFoSE5HZEpRMEZuU1VOQ01sbFlTV2RZTTFKdllWaE5lVWxFTUdka1IyaHdZM3AwWTJKc2VIVkpRMEZuU1VOQloyUnRSbmxKU0ZKd1kwTkJPVWxJVW05aFdFMTFXakpXTUZaSGJIZFNWM2hzWWxkV2RXUkRaM0JQTVhoMVNVTkJaMGxEUVdka2JVWjVTVWRvY0ZwSFZrWmtiVloxWkVOQk9VbERVWFZTV0Zwc1ltNVJiMlJIYUhCamVUVnFZakkxZW1SSVNqRlpNMUoyWTJrMVJtUnRWblZrUXpWSlUxVlNSa3RVZEdOaWFVRm5TVU5CWjBsSGJHMUpRMmd3WVVkc2VreHNPWEJqTVZKNVdWYzFlbUZZVW5CaU1qVndZbTFqY0VsSWRHTmlhVUZuU1VOQlowbERRV2RrUjJoNVlqTmpaMkp0VmpOSlJWWjVZMjA1ZVV0RFpGVmlNamx6WkVkc2QwbEhiSHBKU0ZKNVdWYzFlbUZZVW5CaU1qVndZbTFqYmt0VWRHTmlhVUZuU1VOQlowbElNV05pYVVGblNVTkJaMGxJV21oamFVSnFZakl4ZDJKSFZqQmFVMEU1U1VkYU1XSnRUakJoVnpsMVNVZE9kbUpZUW5OYVdGSnNTME5yWjJVeGVIVkpRMEZuU1VOQlowbERRbkJhYVVGdldETlNiMkZZVFhsTWJEbHZZak5hYkdOc1RqQlpXRkpzU1VORk9WQlRRa2xpTTFwc1kyeE9NRmxZVW14TWJFNUpWREZqWjBwcFdXZGtSMngzVEc1Q2FHTnRWblZrUlRWMldrZFZjRWxJZEdOaWFVRm5TVU5CWjBsRFFXZEpRMEl3WVZoQmRXTkhSbmxhVnpVd1ZHMDVhMXBUTlhsYVZ6RjJaRzFXUkdGSGJITmFRMmd3WVZoQmNFOHhlSFZKUTBGblNVTkJaMGxEUWpsWVJ6VmpZbWxCWjBsRFFXZEpRMEZuV0ROU2IyRllUWGxNYlZaeldsY3hiR0p1VVhWamJWWjBZak5hYkZGWVVqQmpiV3hwWkZoU2JFdERaR2hqYld4b1RGZFNiR015VG5saFYwcHNXa2RLTlVwNWF6ZFlSelJuU1VOQlowbERRV2RKUTFGdldETlNiMkZZVFhsTWJWWnpXbGN4YkdKdVVYQk1ibEo1WVZka2JscFlTVzlZTTFKdllWaE5lVXh0VG5aaWJrNHdZMjVXYW1SSE9YbE1hMVl5V2xjMU1FeHJhRXBTUlZKR1ZHbHJOMWhITkdkSlEwRm5TVU5CWjBsR09UQmhSMng2VFdrMVptRllUbFZqYlVaMVl6SnNNR0ZYT1hWaFZ6VnVTVVF3WjFwdFJuTmpNbFUzV0VjMFowbERRV2RKUTBGblNVWTVNR0ZIYkhwTmFUVnFZa2RXYUdKdVZuZFdSMVl3WVVkV2VVdERhemRZUnpWalltbEJaMGxEUVdkSlEwRm5ZVmRaWjB0SFRtaGlSM2hwV1ZkT2NrdFRRamRZUnpSblNVTkJaMGxEUVdkSlEwRm5XVEpHYzJKSFNtaFpNbk52UzFSMFkySnBRV2RKUTBGblNVTkJaMlpXZUhWSlEwRm5TVU5CWjJaVWRHTmliSGgxU1VOQlowbERRV2RLUTJnd1lVZHNla3h0Vm5OYVZ6RnNZbTVSY0V4dVVubGhWMlJ1V2xoSmIyRkhiR3RhVlZZeVdsYzFNRXRVZEdOaWJIaDFTVU5CWjBsRFFXZGhWMWxuUzBkb2NGcEhWa1prYlZaMVpFTTFjR013VW14YWJVWXhZa2hTVVdOdFZqSmFWelV3V2xkUmIwdFRhMmRsTVhoMVNVTkJaMGxEUVdkSlEwSjVXbGhTTVdOdE5EZFlSelJuU1VOQlowbERRamxZUnpWalltbEJaMGxEUVdkSlExRnZaRWRzZDB0VE5YbGFWekYyWkcxV1JHSkhSbnBqZVdoRVlrZEdlbU13TldoaVYxVjFWVEJvVUZaNWF6ZFlSelZqWW1sQlowbERRV2RKU0ZKdllWaE5kVmd5Um1wa1Iyd3lXbFpTZVdGWFpHNWFXRXBpVmtoS2NGb3laR3hqYVRWRVZFVnNSRk14TUdkUVUwSnRXVmQ0ZWxwVWRHTmlhVUZuU1VOQlowbElVbTloV0UxMVdESkdhbVJIYkRKYVZsSjVZVmRrYmxwWVNtSldTRXB3V2pKa2JHTnBOVWRVTUU1V1ZURXdaMUJUUW0xWlYzaDZXbFIwWTJKcFFXZEpRMEZuU1VoU2IyRllUWFZZTWtacVpFZHNNbHBXVW5saFYyUnVXbGhLWWxaSVNuQmFNbVJzWTJrMVNWUXhXa1pWYkRCblVGTkNiVmxYZUhwYVZIUmpZbXg0ZFVsRFFXZEpRMEZuWVZkWlowdEdWakJoVjNkMVl6TldkMk5IT1hsa1NFNVZZMjFHZFdNeWJEQmhWemwxVWxjMWEwdERhMmRLYVZsblNrTm9NR0ZIYkhwTWJsSndZME5yZFdGSFJucFJNbmhvWXpOTmIxRXllR2hqTTA1UFdWY3hiRXhyV2tKU1JWVndTMU5DTjFoSE5HZEpRMEZuU1VOQlowbElVbTloV0UxMVdESnNlbFpJU21oaWJrNXdaRWRzZG1KdGJIVmFlVUU1U1VoU2VXUlhWVGRZUnpSblNVTkJaMGxEUVdkSlExRnZaRWRzZDB0VE5YWmliVlZ2VmxoU2NHSkROVlZWYTBaUFZUQnNWVk5WT1U5WU1GWlBVa04zWjFreU9YUmpSM2hzWkVkVmNFeHRWblJrVjNob1pFZFdWV050Um5Wak1td3dZVmM1ZFZKWE5XdExSbEpUVVZVMVZGTldVa3BVTURWbVVrWldVMUZXVWtwVU1EUndUekY0ZFVsRFFXZEpRMEZuWmxOQ2JHSklUbXhKU0hSalltbEJaMGxEUVdkSlEwRm5XVEk1ZEdOSGVHeGtSMVZ2UzFSMFkySnBRV2RKUTBGblNVZ3hZMkpzZUhWSlEwRm5TVU5CWjJSSGFIQmplVFZtWVVjNU1scFlTbFJrUjBZd1dsTkJPVWxEWTI1UE1YaDFTVU5CWjBsSU1EZFlSelZqWW1sQlowbERRWFpNZVVKM1kyMDVNRnBYVGpCYVYxSmpZbXg0ZFVsRFFXZEpSbEoyWWpKNE1HRllRWFZqU0VwMlpFYzVNR1ZZUW14TWJXeDZWakpzTUdGRlRuWmlibEpzWW01UloxQlRRbTFrVnpWcVpFZHNkbUpwUW5Cak1XUndaRWRvUkdJeU5UQmFWelV3UzBOcloyVXhlSFZKUTBGblNVTkJaMk50VmpCa1dFcDFTVVZLZG1JeWVHeFpWelJ2WkVkb2NHTjVOVzVhV0ZKVllWaFNjMXBUWjNCTFZIUmpZbWxCWjBsRFFqbFBNWGgxV0VjMFowbERRV2RXUnpsMllraFNjR05ETlhkamJUa3dZak5TTldOSFZYVmFNbFl3Vmtkc2QxSlhlR3hpVjFaMVpFTkJPVWxIV2pGaWJVNHdZVmM1ZFVsSFpHeGtSbEp3WTBWV2MxcFhNV3hpYmxGdlMxTkNOMWhITkdkSlEwRm5TVU5DZVZwWVVqRmpiVFJuWkVkb2NHTjVOVEJoV0VGblVGTkNNR0ZIYkhwTWJsSndZME5DT0daRFFXdExTRkp2WVZoTmRWa3lPWFZhYld4dVRHNVNiR0pZUW5OWldGSnNTMVp6ZDFoVWRHTmlhVUZuU1VOQ09VOHhlSFZZUnpSblNVTkJaMVpIT1haaVNGSndZME0xZDJOdE9UQmlNMUkxWTBkVmRXTXlWakJSTWpsMVpFZFdkV1JEUVRsSlIxb3hZbTFPTUdGWE9YVkpTRTVzWkVWT2RtSnVVbXhpYmxGdlMxTkNOMWhITkdkSlEwRm5TVU5DTWxsWVNXZEtTRkp3WTBOQk9VbERVVzlrUjJod1kzazFibHBZVWxWaFdFSkdZa2RXZEZwWE5UQkxRMnR3VHpGNGRWaEhOR2RKUTBGblNVTkNNR0ZIYkhwTWJrNXNaRVZXYzFwWE1XeGlibEpFWWpJMU1GcFhOVEJMUTFJd1lWaEJkVnB0YkhWYVEyaFVXbGQ0YkZrelVuWmphVFZWVkRBNVRWWkZiRkZZTUd4UFZHdFdVMHRUZDJka1IyaHdZM2sxYmxwWVVsVmhXRkp6V2xObmNFdFVkR05pYkhoMVNVTkJaMGxEUVdkS1NGSndZME0xZVZwWE1YWmtiVlpFWWtkR2VtTjVhRVJpUjBaNll6QTFhR0pYVlhWU2EwWkZVbE5CY2tsRFkyZEtlVUZ5U1VWT2MxbFlUbnBVYlVaMFdsTTFWRk5GT1ZoTFZIUmpZbXg0ZFVsRFFXZEpRMEZuWkVkb2NHTjVOV3BpUjFab1ltNVdkMVpIVmpCaFIxWjVTME5yTjFoSE5HZEpRMEZuWmxSMFkySnNlSFZKUTBGblNVWlNkbUl5ZURCaFdFRjFZMGhLZG1SSE9UQmxXRUpzVEc1T2JHUkZWbk5hVnpGc1ltNVNSR0l5TlRCYVZ6VXdTVVF3WjFwdVZuVlpNMUp3WWpJMFoyTXlWakJTVjNoc1lsZFdkV1JGVG5aaWJsSnNZbTVSYjBwSFZuTmFWekZzWW01UmMwbEhUblppYmxKc1ltNVJjRWxJZEdOaWFVRm5TVU5CWjBsSVdtaGphVUp2WkVjeGMwbEVNR2RrUjJod1kzazFhbUl5TlcxaFYyTjFZVWhTZEdKRWRHTmlhVUZuU1VOQlowbEhiRzFKUTJkdlpFaHNkMXBYT1cxSlIwNTJZbTVTYkdKdVVXZFFWREE1U1VOa01XSnRVbXhhYld4MVdsZFJia2xFT0dkS00xWjFXa2RXYldGWE5XeGFRMk5uVDJsQ1ptUkliSGRhVnpsdFMwZE9kbUp1VW14aWJsRndTMU5CT1ZCVU1HZEtNamxwWVcxV2FtUkRZMmRLYVZsblMwZE9kbUp1VW14aWJsRjFZbTA1YTFwV1VqVmpSMVZuWmtoM1oxa3lPWFZrUjFaMVpFTTFjV05ZVm14amJtdHdTMU5DTjFoSE5HZEpRMEZuU1VOQlowbERPSFpKUjA1MlltNVNiR0p1VVdkaFdFMW5XVk5DUlZRd01HZGliVGxyV2xOQ2RtTnBRbWhKUjNCU1pGZFdlV1ZXZUhWSlEwRm5TVU5CWjBsRFFuQmFhVUZ2WVVoU2RHSkRhMmRsTVhoMVNVTkJaMGxEUVdkSlEwRm5TVWRzYlVsRFoyaEtRMmhxWWpJMU1GcFhOVEJMVXpWM1dWaEtiR0p1VVc5TFV6VndZM2xuYTFwWGVHeGlWMVoxWkVOcmNFbElkR05pYVVGblNVTkJaMGxEUVdkSlEwRm5TVU5TYkdKSFZuUmFWelV3VEcxV2RHTklValZMUTJ0MVdWaENkMXBYTld0TFIwNTJZbTVTYkdKdVVYQlBNWGgxU1VOQlowbERRV2RKUTBGblNVZ3hZMkpwUVdkSlEwRm5TVU5CWjJaVFFteGlTRTVzU1VoMFkySnBRV2RKUTBGblNVTkJaMGxEUVd0YVYzaHNZbGRXZFdSRE5UQmFXR2d3UzBOUmIxa3lPWFZrUjFaMVpFTnJkV1JIVmpSa1EyZHdTMVIwWTJKcFFXZEpRMEZuU1VOQloyWldlSFZKUTBGblNVTkJaMlpUUW14aVNFNXNTVWgwWTJKcFFXZEpRMEZuU1VOQlowcEhWbk5hVnpGc1ltNVNZbUZJVW5SaVEwRXZTVU5rYjJSSE1YTktlVUUyU1VOa01GcFlhREJLTVRCdldUSTVkV1JIVm5Wa1EyczNXRWMwWjBsRFFXZEpRMEk1V0VjMFowbERRV2RtVkhSallteDRkVWxEUVdkSlJsSjJZako0TUdGWVFYVmpTRXAyWkVjNU1HVllRbXhNYldSc1pFWlNjR1JIZUd4SlJEQm5XbTVXZFZrelVuQmlNalJuV2pKV01GWkhiREJpUjFWdlMxTkNOMWhITkdkSlEwRm5TVU5DTWxsWVNXZGtSMnd3WWtkVloxQlRRakJoUjJ4NlRHMVdjMXBYTVd4aWJsRjFXakpXTUZGWVVqQmpiV3hwWkZoU2JFdERaR3RaV0ZKb1RGYzVlV0ZYWkhCaWJVWnpURmhTY0dSSGVHeEtlV3MzV0VjMVkySnBRV2RKUTBGblNVZHNiVWxEWjJoa1Iyd3dZa2RWY0VsSWRHTmlhVUZuU1VOQlowbERRV2RrUjJ3d1lrZFZaMUJUUWpCbFdFSnNZakpaWjJSSGFIQmplVFZxWWpJMWJXRlhZM1ZrUjJ3d1lrZFZaMUJVTURsSlEyUnRaRmMxYW1SSGJIWmlhV05uVUhsQ01HRkhiSHBNYlU1MlltMWFjRnA1TlRCaFdGSnpXbE0xYWxsWGVITkxTRkp2WVZoTmRWcFhlR3hpVjFaMVpFTnJaMDlwUWpCaFIyeDZURzFPZG1KdFduQmFlVFV3WVZoU2MxcFVkR05pYVVGblNVTkJaMGxJTVdOaWJIaDFTVU5CWjBsRFFXZGpiVll3WkZoS2RVbElVbkJrUjNoc1R6RjRkVWxEUVdkSlNEQTNXRWMxWTJKcFFXZEpRMEpWWWpJNWMyUkhiSGRNYmtKNVlqTlNkbVJJYkhkYVV6VnFZa2RXYUdKdVZuZFdSMVl3WVVkV2VVbEVNR2RhYmxaMVdUTlNjR0l5TkdkWk1uaHNXVmMxTVdOR1VteGtSMmhzWTJsbmNFbElkR05pYVVGblNVTkJaMGxIYkcxSlEyZ3dZVWRzZWt4c09UQmFXRkp2V2xoSmNFbElkR05pYVVGblNVTkJaMGxEUVdka1IyaHdZM2sxWm1SSFZqQmhSMVo1VEcxU2JHTXpVbmxpTTJ0dlMxUjBZMkpwUVdkSlEwRm5TVWd4WTJKcFFXZEpRMEk1VHpGNGRWaEhOR2RKUTBGblRIazRaMk5JU25Ca2JVWXdXbFo0ZFZoSE5HZEpRMEZuVmtjNWRtSklVbkJqUXpWM1kyMDVNR0l6VWpWalIxVjFXREprYkdSRlJqQmtSMFpxWVVjeGJHSnVVV2RRVTBKdFpGYzFhbVJIYkhaaWFVSm1XakpXTUZGWVVqQlpWMDV2WWxkV2RXUkRhSGRpUjBacVdsY3hiR0p1VVhCSlNIUmpZbWxCWjBsRFFXZEpTRXBzWkVoV2VXSnBRa0prU0ZKb1dUSm9kRnBYTlRCVVYwWjNWek5DYzFsWFRteGlWMVoxWkVNMU1HSXhWbmRqUjFaNVVUSkdlbHBUWjNCWVZIUmpZbWxCWjBsRFFqbFBNWGgxV0VjMFowbERRV2RXUnpsMllraFNjR05ETlhkamJUa3dZak5TTldOSFZYVllNMDVzWkVWNGNHTXpVbXhpYlZaNVkzbEJPVWxIV2pGaWJVNHdZVmM1ZFVsR09YcGFXRkpOWVZoT01GcFhOV3hqYmsxdlMxTkNOMWhITkdkSlEwRm5TVU5DTWxsWVNXZFlNMUp2WVZoTmVrbEVNR2RrUjJod1kzcDBZMkpzZUhWSlEwRm5TVU5CWjJSdFJubEpTRko1WVZka2JscFlTbnBKUkRCblpFZG9jR041TldwaU1qVnRZVmRqZFdSSVNuQmFNbVJzWTJrMWVtTkhlSEJrUTJkdVNVTmpjRTh4ZUhWWVJ6Um5TVU5CWjBsRFFqQmpiV3h1V2pKV2VXTjVOVzFpTTBwR1dWZE9iMHRIV2pGaWJVNHdZVmM1ZFVsRGFEQmpiV3h1V2pKV2VVdFRRamRZUnpSblNVTkJaMGxEUVdkSlIyeHRTVU5vTUdOdGJHNWFNbFo1U1VRd09WQlRRVzVaTW5od1dUSnpia3RUUWpkWVJ6Um5TVU5CWjBsRFFXZEpRMEZuU2tOb1ptUkhhSEJqZWsxMVdsZDRiR0pYVm5Wa1EydDFZakkwYjFnelVtOWhXRTE2VEcxT2RtSnVUakJqYmxacVpFYzVlVXhyVmpKYVZ6VXdUR3RPVFZOVlRreE1RMEptWkVkb2NHTjZUWFZaTWpsMVdtMXNia3h1VG14aVIxWnFaRWM1ZVV4RFFtMWtWelZxWkVkc2RtSnBRVzlhV0Zwc1ltNVJjRWxJZEdOaWFVRm5TVU5CWjBsRFFXZEpRMEZuU1VoS2JHUklWbmxpYVVKbVpFZG9jR042VFhWa1J6bHVXako0YkV0SFZqSmFWelV3UzFSMFkySnBRV2RKUTBGblNVTkJaMGxEUWpsTFZIUmpZbWxCWjBsRFFXZEpRMEZuWmxOQ2JHSklUbXhKUjJ4dFNVTm9NR050Ykc1YU1sWjVTVU5GT1ZCVFFsVmpiV3h1V2pKV2VVeHJNVUpVYkZaQ1ZFTnJaMlV4ZUhWSlEwRm5TVU5CWjBsRFFXZEpTRnBvWTJsQ2JHUnRWblZrUld4MVNVUXdaMlJJU25CYU1tUnNZMmxCT1ZCVU1HZFdTRXB3V2pKa2JHTnBOVWxVTVZwR1ZXbEJMMGxHT1RCaFIyeDZUWGsxYW1JeU5YcGtTRW94V1ROU2RtTnBOVVprYlZaMVpFTTFUbFF4VmxSU1ZWWlBWa1ZXVTBsRWIyZFlNMUp2WVZoTmVreHRUblppYms0d1kyNVdhbVJIT1hsTWExWXlXbGMxTUV4cldsQlJNVlpVVTFVME4xaEhOR2RKUTBGblNVTkJaMGxEUVdka2JVWjVTVWRXTWxwWE5UQlVNMVl3U1VRd1oyUklTbkJhTW1Sc1kybEJPVkJVTUdkV1NFcHdXakprYkdOcE5VbFVNVnBHVldsQkwwbEdPVEJoUjJ4NlRYazFhbUl5Tlhwa1NFb3hXVE5TZG1OcE5VWmtiVloxWkVNMVRsUXhWbFJTVlhoR1VWWmFSa2xFYjJkWU0xSnZZVmhOZWt4dFRuWmliazR3WTI1V2FtUkhPWGxNYTFZeVdsYzFNRXhyV2xCUk1WWlVWREZXVlU4eGVIVllSelJuU1VOQlowbERRV2RKUTBGblNrTm9abVJIYUhCamVrMTFXbGQ0YkdKWFZuVmtRMnQxWWpJMGIxcFlXbXhpYmxKS1ltbDNaMWd6VW05aFdFMTZURzFPZG1KdFduQmFlVFY2V2xkNGJGa3pVblpqYVhkbldtNVdkVmt6VW5CaU1qUm5TMGRXTWxwWE5UQkxVMEkzV0VjMFowbERRV2RKUTBGblNVTkJaMGxEUW5sYVdGSXhZMjAwWjFnelVtOWhXRTE2VEd3NWJHSnVVbXhqYVdoc1pHMVdkV1JEYXpkWVJ6Um5TVU5CWjBsRFFXZEpRMEZuWmxOcmRXSXlORzlhV0Zwc1ltNVNVR1JZVVhOSlJqa3dZVWRzZWsxNU5XcGlNalZ0WVZkamRXTXlWbk5hVjA0d1lqTkpjMGxIV2pGaWJVNHdZVmM1ZFVsRGFHeGtiVloxWkVOcloyVXhlSFZKUTBGblNVTkJaMGxEUVdkSlEwRm5ZMjFXTUdSWVNuVkpSamt3WVVkc2VrMTVOV1ppUjFab1pHMVZiMXBZV214aWJsRndUekY0ZFVsRFFXZEpRMEZuU1VOQlowbElNSEJQTVhoMVNVTkJaMGxEUVdkSlEwSTVXRWMxWTJKcFFXZEpRMEZuU1VOQlowcERhR1prUjJod1kzcE5kVnBYZUd4aVYxWjFaRU5yZFZreWVIWmpNbFo2WkVObmJreHRNWFphUjBaelNubHJkV0l5Tkc5S01taHdXa2RWZFZsdVRYVmlWemxyV1ZkM2JreERRbTFrVnpWcVpFZHNkbUpwUVc5TFUwSTNXRWMwWjBsRFFXZEpRMEZuU1VOQloyTnRWakJrV0VwMVNVWTVNR0ZIYkhwTmVUVnZZVmRTYkV0RGF6ZFlSelJuU1VOQlowbERRV2RKU0RCd1R6RjRkVWxEUVdkSlEwRm5abE5yTjFoSE5XTmlhVUZuU1VOQlowbEhiRzFKUTJnd1lVZHNla3h0VG5aaWJWcHdXbmsxZWxwWGVHeFpNMUoyWTJscloyVXhlSFZKUTBGblNVTkJaMGxEUWpCaFIyeDZURzFPZG1KdFduQmFlVUU1U1VOUmRWcFlhREJhVnpWclMwaDBPVXhEUWpCaFIyeDZURzFPZG1KdFduQmFlWGRuWlRGNGRVbERRV2RKUTBGblNVTkJaMGxJVW5saFYyUnVXbGhKTmtsRFpIUlpWelV4V1ZkM2JreEdlSFZKUTBGblNVTkJaMGxEUVdkSlNFNXNZa2RXYW1SSE9YbFBhVUZ1U2pGNGRVbERRV2RKUTBGblNVTkNPVXRVZEdOaWFVRm5TVU5CWjBsSU1HZGFWM2g2V2xOQ04xaEhOR2RKUTBGblNVTkJaMGxJVW05aFdFMTFXREphY0dWR1VuQmtSM2hzUzBOck4xaEhOR2RKUTBGblNVTkNPVmhITkdkSlEwRm5abFIwWTJKc2VIVkpRMEZuU1VaU2RtSXllREJoV0VGMVkwaEtkbVJIT1RCbFdFSnNUR3c1YldGWWFGVmhXRkp6V2xOQk9VbEhXakZpYlU0d1lWYzVkVWxHT1cxaFdHaFZZVmhTYzFwVFozQkpTSFJqWW1sQlowbERRV2RKU0Zwb1kybENNR0ZZVW5OYVZsSTFZMGRWWjFCVFFtWmtTR3gzV2xjNWJVdElVbTloV0UxMVdsZDRiR0pYVm5Wa1F6VnVXbGhTUW1SSVVubGhWMG94WkVkVmIwb3lVbWhrUjBWMFlqTktjRm95YkhWWlYzZDBaRWRzTUdKSFZXNUxVMnMzV0VjMFowbERRV2RKUTBKd1dtbEJiMlJIYUhCamVUVnNZa2RXZEZwWE5UQk1iV1JzWkVWR01HUklTbkJaYmxZd1dsTm5ibVJIYkRCaVIxVnVTMU5DT0daRFFqQmhXRkp6V2xaU05XTkhWV2RKVkRBNVNVTmtlbVJJU25CaWJXTnVTMU5DTjFoSE5HZEpRMEZuU1VOQlowbElVbTloV0UxMVdsZDRiR0pYVm5Wa1F6VjZXbGhTUW1SSVVubGhWMG94WkVkVmIwb3lVbWhrUjBWMFlqTktjRm95YkhWWlYzZDBaRWRzTUdKSFZXNU1RMEl3WVVkc2VreHRWbk5hVnpGc1ltNVJkVm95VmpCUldGSXdZMjFzYVdSWVVteExRMlF3WVZoU2MxcFRZM0JKU0hnNFNVTmpia3RVZEdOaWFVRm5TVU5CWjBsRFFXZGtSMmh3WTNrMWJHSkhWblJhVnpVd1RHNU9iR1JGUmpCa1NFcHdXVzVXTUZwVFoyNWtSMnd3WWtkVmJreERRVzVLZVdzM1dFYzBaMGxEUVdkSlEwSTVXRWMwWjBsRFFXZG1WSFJqWW14NGRVbERRV2RKUmxKMllqSjRNR0ZZUVhWalNFcDJaRWM1TUdWWVFteE1iRGxzWW01U2JHTnBRVGxKUjFveFltMU9NR0ZYT1hWSlJqbHNZbTVTYkdOcGFHeGtiVloxWkVOM1oxa3lPWFZrUjFZMFpFTnJaMlV4ZUhWSlEwRm5TVU5CWjJSdFJubEpSMUpvWkVkR1RGcFlhMmRRVTBJd1lVZHNla3h0VG5aaWJrNHdZMjVXYW1SSE9YbE1hMUpDVmtWR1psTXdWbHBQTVhoMVdFYzBaMGxEUVdkSlEwSnFZakkxTUZwWWFEQkpSREJuV1RJNWRXUkhWalJrUTBJNFprTkJhMHRIVmpKYVZ6VXdURzFPTVdOdVNteGlibEpWV1ZoS2JscFlVWEJNYlZKb1pFZEZiMXBIUmpCWlZYUnNaVk5yTjFoSE5XTmlhVUZuU1VOQlowbEhiRzFKUTJkb1dUSTVkV1JIVmpSa1EydG5aVEY0ZFVsRFFXZEpRMEZuU1VOQ2FtSXlOVEJhV0dnd1NVUXdaMkp0VmpOSlNGSnZZVmhOZFZreU9YVmpNMUo1WkZkT01HSXpTVzlhV0Zwc1ltNVJkVmt6Vm5samJWWjFaRVpTYUdOdFpHeGtRM2RuWkVkb2NHTjVOV1phTWxZd1VrZFdjMXBYWkdoa1IxWkVZakkxYldGWFkyOUxVMnMzV0VjMFowbERRV2RKUTBGblNVTlJiMXBZV214aWJsRjFXVE5XZVdOdFZuVmtSbEpvWTIxa2JHUkRhM1ZhUjBZd1dWTm9hMWxZVW1oVE1sWTFURU5DYW1JeU5UQmFXR2d3UzFSMFkySnBRV2RKUTBGblNVZ3hZMkpzZUhWSlEwRm5TVU5CWjJGWFdXZExSMVl5V2xjMU1FdFRRamRZUnpSblNVTkJaMGxEUVdkSlIwNTJZbTVTYkdWSVVYVllNa1pxWkVkc01scFdVbmxoVjJSdVdsaEtZbHBZV214aWJsRjFaRWhzZDFwVFFUbFFWREJuU2pKYWRsa3pWbnBoVnpSdVNVUTRaMVpJU25CYU1tUnNZMmsxUjFRd1RsWlZlVUUyU1VaU2VXRlhaRzVhV0VsMVUwVTVWMUpXU21SSlJEQm5aRWhLTVZwVWRHTmlhVUZuU1VOQlowbElNV05pYkhoMVNVTkJaMGxEUVdkaFYxbG5TME5SYjFreU9YVmtSMVkwWkVNMWJscFlVbFZoV0VKR1lrZFdkRnBYTlRCTFEydHdURzFvYUdNd1RuTlpXRTU2UzBWT2MxbFlUbnBVYlVaMFdsTTFWRk5GT1ZoTFUwSTRaa05DYW1JeU5UQmFXR2d3VEd3NWIySXpXbXhqYkU0d1dWaFNiRWxFTURsUVUwSkpZak5hYkdOc1RqQlpXRkpzVEd4T1NWUXhZM0JKU0hSalltbEJaMGxEUVdkSlEwRm5XVEk1ZFdSSFZqUmtRelZtWVVjNU1scFlTbFJrUjBZd1dsTkJPVWxGYUhaa2JWWjVWVE5TYUdSSFZYVlZNR2hRVm5wMFkySnBRV2RKUTBGblNVTkJaMk50VmpCa1dFcDFUekY0ZFVsRFFXZEpRMEZuWmxaNGRWaEhOR2RKUTBGblNVTkNhbUpIVm1oamJGSndZbGRXZG1SWVVXOVpNamwxWkVkV05HUkROV1prUjJ4MFdsYzVNV1JEYXpkWVJ6VmpZbWxCWjBsRFFXZEpSMDUyWW01U2JHVklVWFZZTW1oMlpHMVdlVlV6VW1oa1IxVm5VRk5DU1dJeldteGpiRTR3V1ZoU2JFeHNUa2xVTVdNM1dFYzFZMkpwUVdkSlEwRm5TVWRzYlVsRFoyaFpNamwxWkVkV05HUkROV3BpTWpWdFlWZGpkVnBIVm5OWldHdG5aa2gzWjBsWFRuWmlibEpzWlVoUmRWa3lPWFZhYld4dVRHMVNiR0pIUmpWTWJrNXZZak5qY0VsSWRHTmlhVUZuU1VOQlowbERRV2RaTWpsMVpFZFdOR1JETlhwaFJ6a3pTME5yTjFoSE5HZEpRMEZuU1VOQlowbElTbXhrU0ZaNVltcDBZMkpwUVdkSlEwRm5TVWd4WTJKc2VIVkpRMEZuU1VOQloxa3lPWFZrUjFZMFpFTTFabVJIYkhSYVZ6a3haRU5CT1VsSVRteGtSbEp3WWxkV2RtUllVVzlhYmxaMVdUTlNjR0l5TkdkTFEydG5aVEY0ZFVsRFFXZEpRMEZuU1VOQ2NGcHBRVzlaTWpsMVpFZFdOR1JETldaaFJ6a3lXbGhLVkdSSFJqQmFVMEU1VUZRd1oxTkhPVEphV0VwVVpFZEdNRnBUTlZSVFJUbFlTMU5DTjFoSE5HZEpRMEZuU1VOQlowbERRV2RaTWpsMVpFZFdOR1JETlhwaFJ6a3pTME5yTjFoSE5HZEpRMEZuU1VOQlowbElNV05pYVVGblNVTkJaMGxJTUhOSlIwNTJZbTVTYkdWSVVYVlpNamwxV20xc2JreHRVbXhpUjBZMVRHNU9iMkl6WTNCUE1YaDFTVU5CWjBsSU1EZFlSelZqWW1sQlowbERRbFZpTWpselpFZHNkMHh1UW5saU0xSjJaRWhzZDFwVE5XWmlSMVpvWkcxVloxQlRRbTFrVnpWcVpFZHNkbUpwUW1aaVIxWm9aRzFWYjFwWVdteGlibEZ6U1VkT2RtSnVVbXhsU0ZGd1NVaDBZMkpwUVdkSlEwRm5TVWhhYUdOcFFtdFpXRkpvVXpKV05VbEVNR2RrUjJod1kzazFhbUl5Tlhwa1NFb3hXVE5TZG1OcE5VVlJWbEpDV0RCMFJsZFVkR05pYkhoMVNVTkJaMGxEUVdkWk1qbDFaRWRXTkdSRFFUbEpSMDUyWW01U2JHVklVV2RtU0hkblNrTm9iR1J0Vm5Wa1F6VnFaRmhLZVZwWE5UQldSMFo1V2pKV01FdFROV3RaV0ZKb1MwZFNhR1JIUmt4YVdHdHdUekY0ZFZoSE5HZEpRMEZuU1VOQ2NGcHBRVzlKVjA1MlltNVNiR1ZJVVhCSlNIUmpZbWxCWjBsRFFXZEpRMEZuV1RJNWRXUkhWalJrUTBFNVNVYzFiR1I1UWpCaFIyeDZURzFPZG1KdVRqQmpibFpxWkVjNWVVdEhWakphVnpVd1RHMU9NV051U214aWJsSlZXVmhLYmxwWVVYTkpTRkp2WVZoTmRWZ3laR3hrUlZKc1lrZFdibGxZVW14Uk1qbDFXbTFzYmt0RGEzQlBNWGgxU1VOQlowbERRV2RKUTBGclMwZFdNbHBYTlRCTWJVNHhZMjVLYkdKdVVsVlpXRXB1V2xoUmNFeHRVbWhrUjBWdldrZEdNRmxWZEd4bFUzZG5XVEk1ZFdSSFZqUmtRMnMzV0VjMFowbERRV2RKUTBJNVdFYzFZMkpwUVdkSlEwRm5TVWRzYlVsRGFHeGtiVloxWkVOcloyVXhlSFZKUTBGblNVTkJaMGxEUW1waU1qVXdXbGhvTUV4c09XaFpNMUp3WkcxV1ZXTnRiRzVhTWxaNVZ6SldNbHBYTlRCTWJsSTFZMGRWWjFCVU1EbEpRMlJ0WWpKT01XTXlPVEZrUTJOblVIbENWV050Ykc1YU1sWjVUR3RhVUZFeFZsUkpSRzluVmtoS2NGb3laR3hqYVRWSlZERmFSbFZzTUdkUVUwSnRXVmQ0ZWxwVWRHTmlhVUZuU1VOQlowbElNV05pYkhoMVNVTkJaMGxEUVdkaFYxbG5TMGRPZG1KdVVteGxTRkYxV0RKc2VsWXliREJoUlVacVpFZHNNbHBXVW5saFYyUnVXbGhKYjB0VGEyZGxNWGgxU1VOQlowbERRV2RKUTBKNVdsaFNNV050TkRkWVJ6Um5TVU5CWjBsRFFqbFlSelZqWW1sQlowbERRV2RKUjA1eldsZEdlVlpIYkhSYVZ6a3haRU5vYW1JeU5UQmFXR2d3VEd3NU1HRlhNV3hpTTFZd1MxUjBZMkpzZUhWSlEwRm5TVU5CWjFreU9YVmtSMVkwWkVNMVptRkhPVEphV0VwVVpFZEdNRnBUUVRsSlJXaDJaRzFXZVZVelVtaGtSMVYxVkRGV1ZVOHhlSFZZUnpSblNVTkJaMGxEUW5CYWFVRnZTVmRPZG1KdVVteGxTRkYxV1RJNWRWcHRiRzVNYlZKc1lrZEdOVWxJZURoSlEwWnFZakkxTUZwWWFEQk1iVTUyWW0xYWNGcDVOV3RhVjNob1pWTTFiMkZYVW14TFUwSTNXRWMwWjBsRFFXZEpRMEZuU1VkT2RtSnVVbXhsU0ZGMVlVZHNhMXBUWjNCUE1YaDFTVU5CWjBsRFFXZEpRMEo1V2xoU01XTnRORGRZUnpSblNVTkJaMGxEUWpsWVJ6VmpZbWxCWjBsRFFXZEpSMDUyWW01U2JHVklVWFZZTTFKd1lsZFdkbVJZVVdkUVUwSjZXbGhTVldGWE1XeGlNMVl3UzBkYU1XSnRUakJoVnpsMVNVTm5jRWxJZEdOaWFVRm5TVU5CWjBsRFFXZGhWMWxuUzBkT2RtSnVVbXhsU0ZGMVdESm9kbVJ0Vm5sVk0xSm9aRWRWWjFCVU1EbEpSV2gyWkcxV2VWVXpVbWhrUjFWMVZERldWVXRUUWpkWVJ6Um5TVU5CWjBsRFFXZEpRMEZuV1RJNWRXUkhWalJrUXpWdllWZFNiRXREYXpkWVJ6Um5TVU5CWjBsRFFXZEpTREZqWW1sQlowbERRV2RKU0RCelNVZE9kbUp1VW14bFNGRjFXVEk1ZFZwdGJHNU1iVkpzWWtkR05VeHRhSEJhUjFWd1R6RjRkVWxEUVdkSlNEQTNXRWMxWTJKcFFXZEpRMEpWWWpJNWMyUkhiSGRNYmtKNVlqTlNkbVJJYkhkYVV6Vm1ZVmhPV0dGWVVtOVJWMDR3WVZoYWJGWklTbkJhTW1Sc1kybEJPVWxIV2pGaWJVNHdZVmM1ZFVsR09YQmpNV1J3WkVkb1Fsa3pVbkJrYlZaVlkyMXNibG95Vm5sTFEydG5aVEY0ZFVsRFFXZEpRMEZuV20wNWVVbERhREpaV0VsblpFaEtjRm95Wkd4amFVSndZbWxDTUdGSGJIcE1iRGxvV1ROU2NHUnRWbFZqYld4dVdqSldlVXRUUWpkWVJ6Um5TVU5CWjBsRFFXZEpSMnh0U1VOb01HRkhiSHBNYkRsb1dUTlNjR1J0VmxWamJXeHVXakpXZVZjelVubGhWMlJ1V2xoS1pFdFRRamRZUnpSblNVTkJaMGxEUVdkSlEwRm5ZMjFXTUdSWVNuVkpTRko1WkZkVk4xaEhOR2RKUTBGblNVTkJaMGxJTVdOaWFVRm5TVU5CWjBsSU1XTmliSGgxU1VOQlowbERRV2RqYlZZd1pGaEtkVWxIV21oaVNFNXNUekY0ZFVsRFFXZEpTREEzV0VjMVkySnBRV2RKUTBKVllqSTVjMlJIYkhkTWJrSjVZak5TZG1SSWJIZGFVelZtV2pKV01GRXlPWFZhYld4dVNVUXdaMXB1Vm5WWk0xSndZakkwWjFneVpHeGtSVTUyWW0xYWNGcDVhR3BpTWpWdFlWZGpjRWxJZEdOaWFVRm5TVU5CWjBsSFRuWmliVnB3V25sQk9VbERVWFZhV0dnd1dsYzFhMHRJZERsTVEwSXdZVWRzZWt4dFRuWmliazR3WTI1V2FtUkhPWGxNYTFKc1dtMUdNV0pJVVhOSlExRnZaRWRvY0dONU5XeGlSMVowV2xjMU1FdFROV3RaV0ZKb1MwTnJjMGxIVG5aaWJWcHdXbmxyTjFoSE5XTmlhVUZuU1VOQlowbEhiRzFKUTJocVlqSTFiV0ZYWTNWYVIxWnpXVmhyWjBwcFdXZGtTR3gzV2xjNWJVbEhUblppYlZwd1duazFhMXBYZUdobFUwRTVVRlF3WjBveU5URmlWMHBzWTJsamNFbElkR05pYVVGblNVTkJaMGxEUVdkWk1qbDFXbTFzYmt4dFVteGlSMFkxU1VRd1oyVXhlSFZKUTBGblNVTkJaMGxEUVdkSlNFNXZZak5qTmtsSFRuWmliVnB3V25rMWExcFhlR2hsVTNoalltbEJaMGxEUVdkSlEwRm5TVU5DYjJGWFVteFBhVUpxWWpJMWJXRlhZM1ZhUjFaeldWaHNZMkpwUVdkSlEwRm5TVU5CWjJaVWRHTmlhVUZuU1VOQlowbElNV05pYkhoMVNVTkJaMGxEUVdkV1dGSndZa00xTUdWWVFteFJNbWhzV1RKMFJHSXlOVzFoVjJOdlZHdEdUbEpUZDJkWk1qbDFXbTFzYmt4RFFqQmhSMng2VEcxT2RtSnVUakJqYmxacVpFYzVlVXhyVW14YWJVWXhZa2hTVldWWVFteExWSFJqWW14NGRVbERRV2RKUTBGblkyMVdNR1JZU25WSlIwNTJZbTFhY0ZwNmRHTmlhVUZuU1VOQ09VOHhlSFZZUnpSblNVTkJaMVpIT1haaVNGSndZME0xZDJOdE9UQmlNMUkxWTBkVmRWZ3laR3hrUlZKc1lrZFdibGxZVW14Uk1qbDFXbTFzYmtsRU1HZGFibFoxV1ROU2NHSXlOR2RZTW1Sc1pFVlNiR0pIVm01WldGSnNVVEk1ZFZwdGJHNUxRMnRuWlRGNGRVbERRV2RKUTBGblpHMUdlVWxIVG5aaWJWcHdXbmxCT1VsSWREbFBNWGgxV0VjMFowbERRV2RKUTBKd1dtbEJiMlJIYUhCamVUVnFZakkxYldGWFkzQkpTSFJqWW1sQlowbERRV2RKUTBGbldtMDVlVWxEYURKWldFbG5ZVEpXTlVsSGJIVkpTRkp2WVZoTmRWa3lPWFZhYld4dVMxTkNOMWhITkdkSlEwRm5TVU5CWjBsRFFXZGhWMWxuUzBoU2IyRllUWFZaTWpsMVl6TlNlV1JYVGpCaU0wbDFVa2RXYlZsWVZuTmtSblJ5V2xoc1pFbERSVGxRVTBJd1lVZHNla3h0VG5aaWJWcHdXakYwY2xwWWJHUkxVMEkzV0VjMFowbERRV2RKUTBGblNVTkJaMGxEUW1waU1qVnRZVmRrWW1FeVZqVllVMEU1U1VoU2IyRllUWFZaTWpsMVdtMXNibGN5ZEd4bFZqQTNXRWMwWjBsRFFXZEpRMEZuU1VOQloyWldlSFZKUTBGblNVTkJaMGxEUWpsWVJ6Um5TVU5CWjBsRFFqbFlSelZqWW1sQlowbERRV2RKU0Vwc1pFaFdlV0pwUW1waU1qVnRZVmRqTjFoSE5HZEpRMEZuWmxSMFkySnNlSFZKUTBGblNVTTRka2xJVGpCWldGSndXVEY0ZFZoSE5HZEpRMEZuVmtjNWRtSklVbkJqUXpWbVlXeEdNVnBZU2pWVFZ6VXdXbGhLYlZsWFRteEpSREJuV201V2RWa3pVbkJpTWpSbldESndVbVJYVm5sbFZXeDFaRWRXZVZwdFJtcGFVMmhxWWpJMWJXRlhZM0JKU0hSalltbEJaMGxEUVdkSlNFcHNaRWhXZVdKcFFqQmhSMng2VEcxV2FGa3laMjlhYmxaMVdUTlNjR0l5TkdkTFEydG5aVEY0ZFVsRFFXZEpRMEZuU1VOQ01sbFlTV2RhUjBZd1dWTkJPVWxEVVc5a1IyaHdZM2xyZFZwSFJqQlpVMmhGVVZaU1FsZ3dkRVpYVTJzM1dFYzBaMGxEUVdkSlEwRm5TVWhhYUdOcFFtWlpNamwxV20xc2JrbEVNR2RMU0ZJMVkwZFdkbHBwUW1waU1qVnRZVmRqWjFCVU1EbEpRMlF4WW0xU2JGcHRiSFZhVjFGdVNVUTRaMG96Vm5WYVIxWnRZVmMxYkZwRFkyZFBhVUptWkVoc2QxcFhPVzFMUjA1MlltMWFjRnA1YTNCSlJEQTVVRk5CYm1JeVNuRmFWMDR3U25sQmJVcHBRbXBpTWpWdFlWZGpOMWhITldOaWFVRm5TVU5CWjBsRFFXZGhWMWxuUzBOR2ExbFlVbWhKUTFsdFNVTTVhMkZZVG5kaU0wNXNaa2RvY0ZwSFZYWk1ibEpzWXpOUmIxa3lPWFZhYld4dVMxTnJaMlV4ZUhWSlEwRm5TVU5CWjBsRFFXZEpTRXBzWkVoV2VXSnFkR05pYVVGblNVTkJaMGxEUVdkbVZuaDFXRWMwWjBsRFFXZEpRMEZuU1Vkc2JVbERaMmhhUjBZd1dWTnJaMlV4ZUhWSlEwRm5TVU5CWjBsRFFXZEpSMUpvWkVkRloxQlRRblZhV0dOblZrYzVkbUpJVW5CalEyZ3dZVWRzZWt4RFFtWlpNamwxV20xc2JrdFVkR05pYVVGblNVTkJaMGxEUVdkSlEwRnJTMGhTYjJGWVRYQk1iVkpvWkVkRmIxSkZSbFZSVmpsTVVsWnJjMGxIVW1oa1IwVndUekY0ZFVsRFFXZEpRMEZuU1VOQ09WaEhOV05pYVVGblNVTkJaMGxEUVdkaFYxbG5TMGhTTldOSFZuWmFhVUpxWWpJMWJXRlhZMmRRVkRBNVNVTmtlbVJJU25CaWJXTnVTMU5DTjFoSE5HZEpRMEZuU1VOQlowbERRV2RoVjFsblMwZFNhR1JIUm1KWk1qbDFXbTFzYmxoVFFUbFFWREJuWkZjMWExcFhXbkJpYlZaclMxTkNOMWhITkdkSlEwRm5TVU5CWjBsRFFXZEpRMEl3WVVoS2RtUjVRblZhV0dOblVsaEtlV0l6U1c5S01EVjJTVWN4YkdSSGFIWmFRMEoxV1ZjeGJGcERRbU5KYVdOblMzbENhbUl5TlcxaFYyTm5TM2xCYmxoRFNXNUxWSFJqWW1sQlowbERRV2RKUTBGblNVTkNPVmhITkdkSlEwRm5TVU5CWjBsRFFXZGFSMFl3V1ZaMGFtSXlOVzFoVjJSa1MwTnJOMWhITkdkSlEwRm5TVU5CWjBsSU1XTmlhVUZuU1VOQlowbElNSEJQTVhoMVNVTkJaMGxJTURkWVJ6VmpZbWxCWjBsRFFtWlpNMHBzV1ZoU2JGRXllR2hqTTAxdlZrYzVkbUpJVW5CalEzZG5ZbTVXYzJKRGQyZFhNM1JqWW1sQlowbERRV2RKUjNSc1pWUnZaMG94V2taVmJFNUtWREEwYmt4R2VIVkpRMEZuU1VOQloxb3lWakJQYVVKdFpGYzFhbVJIYkhaaWFVSnVXbGhSYjB0VFFqZFlSelJuU1VOQlowbERRV2RKU0Vwc1pFaFdlV0pwUWxkU1ZrcFVVMVU1VDA4eGVIVkpRMEZuU1VOQloyWldlSFZKUTBGblNVZ3djMGxJZEdOaWFVRm5TVU5CWjBsSGRHeGxWRzluU2pCU2JGcHRSakZpU0ZGdVRFWjRkVWxEUVdkSlEwRm5XakpXTUU5cFFtMWtWelZxWkVkc2RtSnBRbTVhV0ZGdlMxTkNOMWhITkdkSlEwRm5TVU5CWjBsSVNteGtTRlo1WW1sQ1JWcFhXbWhrVjNnd1R6RjRkVWxEUVdkSlEwRm5abFo0ZFVsRFFXZEpTREJ6U1VoMFkySnBRV2RKUTBGblNVZDBiR1ZVYjJkS01EVkNWRlZWYmt4R2VIVkpRMEZuU1VOQloxb3lWakJQYVVKdFpGYzFhbVJIYkhaaWFVSnVXbGhSYjB0VFFqZFlSelJuU1VOQlowbERRV2RKU0Vwc1pFaFdlV0pwUWs5UlZURkdUekY0ZFVsRFFXZEpRMEZuWmxaNGRVbERRV2RKU0RCelNVaDBZMkpwUVdkSlEwRm5TVWQwYkdWVWIyZEtNRkpDVmtWR1psTXdWbHBLZVhoalltbEJaMGxEUVdkSlIyUnNaRVJ2WjFwdVZuVlpNMUp3WWpJMFoxb3lWakJMUTJ0blpURjRkVWxEUVdkSlEwRm5TVU5DZVZwWVVqRmpiVFJuVWtWR1ZWRldPVXhTVm1zM1dFYzBaMGxEUVdkSlEwSTVXRWMwWjBsRFFXZG1VM2RuWlRGNGRVbERRV2RKUTBGbllUSldOVTlwUVc1U1dGcHNZbTVSYmt4R2VIVkpRMEZuU1VOQloxb3lWakJQYVVKdFpGYzFhbVJIYkhaaWFVSnVXbGhSYjB0VFFqZFlSelJuU1VOQlowbERRV2RKU0Vwc1pFaFdlV0pwUWtaa2JWWjFaRVIwWTJKcFFXZEpRMEZuU1VneFkySnBRV2RKUTBJNVRFTkNOMWhITkdkSlEwRm5TVU5DY2xwWWF6WkpRMlJHVm10V1QxWkdPVXhTVm10dVRFWjRkVWxEUVdkSlEwRm5XakpXTUU5cFFtMWtWelZxWkVkc2RtSnBRbTVhV0ZGdlMxTkNOMWhITkdkSlEwRm5TVU5CWjBsSVNteGtTRlo1WW1sQ1JsWnJWazlXUmpsTVVsWnJOMWhITkdkSlEwRm5TVU5DT1ZoSE5HZEpRMEZuWmxOM1oyVXhlSFZKUTBGblNVTkJaMkV5VmpWUGFVRnVVa2RXYlZsWVZuTmtSbEkxWTBkVmJreEdlSFZKUTBGblNVTkJaMW95VmpCUGFVSnRaRmMxYW1SSGJIWmlhVUp1V2xoUmIwdFRRamRZUnpSblNVTkJaMGxEUVdkSlNFcHNaRWhXZVdKcFFrVmFWMXBvWkZkNE1GWkliSGRhVkhSalltbEJaMGxEUVdkSlNERmpZbWxCWjBsRFFqbFlVMnMzV0VjMVkySnBRV2RKUTBKNVdsaFNNV050TkdkV1J6bDJZa2hTY0dORWRHTmlhVUZuWmxObmNFOHhlSFZZUnpSblNVTTRjVXRzZUhWSlEwRm5TMmxCZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXhZMkpwUVdkSlEyOW5ZV3hHTVZwWVNqVllSelJuU1VOQmNVbERNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBURk13ZEV4V2VIVkpRMEZuUzJrNVkySnNlSFZKUTBGclRHMWFkVmN3TlVKVVZWWmtTVVF3WjFaSE9YWmlTRkp3WTBNMVptRnNSakZhV0VvMVUxYzFNRnBZU20xWlYwNXNUekY0ZFVsRFFXdE1iVnAxVnpBMVFsUlZWbVJNYTA1MlltNU9NR051Vm1wa1J6bDVTVVF3WjFaSE9YWmlTRkp3WTBSMFkySnBRV2RLUXpWdFlteDBUMUZWTVVaWVV6VjFZakJPZG1KdFduTmhWMDR3U1VRd1oxcHVWblZaTTFKd1lqSTBaMHREYTJkbE1YaDFTVU5CWjBsRFVYVmFiVFZpVkd0R1RsSldNR2RRVTBKTFZWWldSbFZzYkdaVWF6bG1VVEE1VDFKcmVFcFJNVkUzV0VjMFowbERRV2RqYlZZd1pGaEtkVWxHVW5aaU1uZ3dZVmhCZFZneWNGSmtWMVo1WlZWc2RXUkhWbmxhYlVacVdsUjBZMkpwUVdkbVZIUmpZbXg0ZFVsRFFubGFXRkl4WTIwMFoxWkhPWFppU0ZKd1kwUjBZMkp1TUc5aGJFWXhXbGhLTlV0VWMyZE1lVzluV2pKNGRsbHRSbk5KUmxKc1pFZG9iR05wUVhGTU1YaDFUSGs0YWtsSVRuWmtXRXBxV2xVeGFHTklRbkJpYldSV1ZXdDNPV1JIT1haaVNGSndZME0xY1dONU5YUlpXRUpqWW1sS1pHWlJQVDFjYmlKZGZRPT1cbiJdfQ==
