var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
                descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function (Constructor, protoProps, staticProps) {
        if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
            defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): modal.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Modal = function ($) {
    /**
     * ------------------------------------------------------------------------
     * Constants
     * ------------------------------------------------------------------------
     */
    var NAME = 'modal';
    var VERSION = '4.0.0-alpha.6';
    var DATA_KEY = 'bs.modal';
    var EVENT_KEY = '.' + DATA_KEY;
    var DATA_API_KEY = '.data-api';
    var JQUERY_NO_CONFLICT = $.fn[NAME];
    var TRANSITION_DURATION = 300;
    var BACKDROP_TRANSITION_DURATION = 150;
    var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key
    var Default = {
        backdrop: true,
        keyboard: true,
        focus: true,
        show: true
    };
    var DefaultType = {
        backdrop: '(boolean|string)',
        keyboard: 'boolean',
        focus: 'boolean',
        show: 'boolean'
    };
    var Event = {
        HIDE: 'hide' + EVENT_KEY,
        HIDDEN: 'hidden' + EVENT_KEY,
        SHOW: 'show' + EVENT_KEY,
        SHOWN: 'shown' + EVENT_KEY,
        FOCUSIN: 'focusin' + EVENT_KEY,
        RESIZE: 'resize' + EVENT_KEY,
        CLICK_DISMISS: 'click.dismiss' + EVENT_KEY,
        KEYDOWN_DISMISS: 'keydown.dismiss' + EVENT_KEY,
        MOUSEUP_DISMISS: 'mouseup.dismiss' + EVENT_KEY,
        MOUSEDOWN_DISMISS: 'mousedown.dismiss' + EVENT_KEY,
        CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY
    };
    var ClassName = {
        SCROLLBAR_MEASURER: 'modal-scrollbar-measure',
        BACKDROP: 'modal-backdrop',
        OPEN: 'modal-open',
        FADE: 'fade',
        SHOW: 'show'
    };
    var Selector = {
        DIALOG: '.modal-dialog',
        DATA_TOGGLE: '[data-toggle="modal"]',
        DATA_DISMISS: '[data-dismiss="modal"]',
        FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'
    };
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */
    var Modal = function () {
        function Modal(element, config) {
            _classCallCheck(this, Modal);
            this._config = this._getConfig(config);
            this._element = element;
            this._dialog = $(element).find(Selector.DIALOG)[0];
            this._backdrop = null;
            this._isShown = false;
            this._isBodyOverflowing = false;
            this._ignoreBackdropClick = false;
            this._isTransitioning = false;
            this._originalBodyPadding = 0;
            this._scrollbarWidth = 0;
        }
        // getters
        // public
        Modal.prototype.toggle = function toggle(relatedTarget) {
            return this._isShown ? this.hide() : this.show(relatedTarget);
        };
        Modal.prototype.show = function show(relatedTarget) {
            var _this = this;
            if (this._isTransitioning) {
                throw new Error('Modal is transitioning');
            }
            if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {
                this._isTransitioning = true;
            }
            var showEvent = $.Event(Event.SHOW, {
                relatedTarget: relatedTarget
            });
            $(this._element).trigger(showEvent);
            if (this._isShown || showEvent.isDefaultPrevented()) {
                return;
            }
            this._isShown = true;
            this._checkScrollbar();
            this._setScrollbar();
            $(document.body).addClass(ClassName.OPEN);
            this._setEscapeEvent();
            this._setResizeEvent();
            $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, function (event) {
                return _this.hide(event);
            });
            $(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {
                $(_this._element).one(Event.MOUSEUP_DISMISS, function (event) {
                    if ($(event.target).is(_this._element)) {
                        _this._ignoreBackdropClick = true;
                    }
                });
            });
            this._showBackdrop(function () {
                return _this._showElement(relatedTarget);
            });
        };
        Modal.prototype.hide = function hide(event) {
            var _this2 = this;
            if (event) {
                event.preventDefault();
            }
            if (this._isTransitioning) {
                throw new Error('Modal is transitioning');
            }
            var transition = Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE);
            if (transition) {
                this._isTransitioning = true;
            }
            var hideEvent = $.Event(Event.HIDE);
            $(this._element).trigger(hideEvent);
            if (!this._isShown || hideEvent.isDefaultPrevented()) {
                return;
            }
            this._isShown = false;
            this._setEscapeEvent();
            this._setResizeEvent();
            $(document).off(Event.FOCUSIN);
            $(this._element).removeClass(ClassName.SHOW);
            $(this._element).off(Event.CLICK_DISMISS);
            $(this._dialog).off(Event.MOUSEDOWN_DISMISS);
            if (transition) {
                $(this._element).one(Util.TRANSITION_END, function (event) {
                    return _this2._hideModal(event);
                }).emulateTransitionEnd(TRANSITION_DURATION);
            }
            else {
                this._hideModal();
            }
        };
        Modal.prototype.dispose = function dispose() {
            $.removeData(this._element, DATA_KEY);
            $(window, document, this._element, this._backdrop).off(EVENT_KEY);
            this._config = null;
            this._element = null;
            this._dialog = null;
            this._backdrop = null;
            this._isShown = null;
            this._isBodyOverflowing = null;
            this._ignoreBackdropClick = null;
            this._originalBodyPadding = null;
            this._scrollbarWidth = null;
        };
        // private
        Modal.prototype._getConfig = function _getConfig(config) {
            config = $.extend({}, Default, config);
            Util.typeCheckConfig(NAME, config, DefaultType);
            return config;
        };
        Modal.prototype._showElement = function _showElement(relatedTarget) {
            var _this3 = this;
            var transition = Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE);
            if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
                // don't move modals dom position
                document.body.appendChild(this._element);
            }
            this._element.style.display = 'block';
            this._element.removeAttribute('aria-hidden');
            this._element.scrollTop = 0;
            if (transition) {
                Util.reflow(this._element);
            }
            $(this._element).addClass(ClassName.SHOW);
            if (this._config.focus) {
                this._enforceFocus();
            }
            var shownEvent = $.Event(Event.SHOWN, {
                relatedTarget: relatedTarget
            });
            var transitionComplete = function transitionComplete() {
                if (_this3._config.focus) {
                    _this3._element.focus();
                }
                _this3._isTransitioning = false;
                $(_this3._element).trigger(shownEvent);
            };
            if (transition) {
                $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(TRANSITION_DURATION);
            }
            else {
                transitionComplete();
            }
        };
        Modal.prototype._enforceFocus = function _enforceFocus() {
            var _this4 = this;
            $(document).off(Event.FOCUSIN) // guard against infinite focus loop
                .on(Event.FOCUSIN, function (event) {
                if (document !== event.target && _this4._element !== event.target && !$(_this4._element).has(event.target).length) {
                    _this4._element.focus();
                }
            });
        };
        Modal.prototype._setEscapeEvent = function _setEscapeEvent() {
            var _this5 = this;
            if (this._isShown && this._config.keyboard) {
                $(this._element).on(Event.KEYDOWN_DISMISS, function (event) {
                    if (event.which === ESCAPE_KEYCODE) {
                        _this5.hide();
                    }
                });
            }
            else if (!this._isShown) {
                $(this._element).off(Event.KEYDOWN_DISMISS);
            }
        };
        Modal.prototype._setResizeEvent = function _setResizeEvent() {
            var _this6 = this;
            if (this._isShown) {
                $(window).on(Event.RESIZE, function (event) {
                    return _this6._handleUpdate(event);
                });
            }
            else {
                $(window).off(Event.RESIZE);
            }
        };
        Modal.prototype._hideModal = function _hideModal() {
            var _this7 = this;
            this._element.style.display = 'none';
            this._element.setAttribute('aria-hidden', 'true');
            this._isTransitioning = false;
            this._showBackdrop(function () {
                $(document.body).removeClass(ClassName.OPEN);
                _this7._resetAdjustments();
                _this7._resetScrollbar();
                $(_this7._element).trigger(Event.HIDDEN);
            });
        };
        Modal.prototype._removeBackdrop = function _removeBackdrop() {
            if (this._backdrop) {
                $(this._backdrop).remove();
                this._backdrop = null;
            }
        };
        Modal.prototype._showBackdrop = function _showBackdrop(callback) {
            var _this8 = this;
            var animate = $(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';
            if (this._isShown && this._config.backdrop) {
                var doAnimate = Util.supportsTransitionEnd() && animate;
                this._backdrop = document.createElement('div');
                this._backdrop.className = ClassName.BACKDROP;
                if (animate) {
                    $(this._backdrop).addClass(animate);
                }
                $(this._backdrop).appendTo(document.body);
                $(this._element).on(Event.CLICK_DISMISS, function (event) {
                    if (_this8._ignoreBackdropClick) {
                        _this8._ignoreBackdropClick = false;
                        return;
                    }
                    if (event.target !== event.currentTarget) {
                        return;
                    }
                    if (_this8._config.backdrop === 'static') {
                        _this8._element.focus();
                    }
                    else {
                        _this8.hide();
                    }
                });
                if (doAnimate) {
                    Util.reflow(this._backdrop);
                }
                $(this._backdrop).addClass(ClassName.SHOW);
                if (!callback) {
                    return;
                }
                if (!doAnimate) {
                    callback();
                    return;
                }
                $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);
            }
            else if (!this._isShown && this._backdrop) {
                $(this._backdrop).removeClass(ClassName.SHOW);
                var callbackRemove = function callbackRemove() {
                    _this8._removeBackdrop();
                    if (callback) {
                        callback();
                    }
                };
                if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {
                    $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);
                }
                else {
                    callbackRemove();
                }
            }
            else if (callback) {
                callback();
            }
        };
        // ----------------------------------------------------------------------
        // the following methods are used to handle overflowing modals
        // todo (fat): these should probably be refactored out of modal.js
        // ----------------------------------------------------------------------
        Modal.prototype._handleUpdate = function _handleUpdate() {
            this._adjustDialog();
        };
        Modal.prototype._adjustDialog = function _adjustDialog() {
            var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;
            if (!this._isBodyOverflowing && isModalOverflowing) {
                this._element.style.paddingLeft = this._scrollbarWidth + 'px';
            }
            if (this._isBodyOverflowing && !isModalOverflowing) {
                this._element.style.paddingRight = this._scrollbarWidth + 'px';
            }
        };
        Modal.prototype._resetAdjustments = function _resetAdjustments() {
            this._element.style.paddingLeft = '';
            this._element.style.paddingRight = '';
        };
        Modal.prototype._checkScrollbar = function _checkScrollbar() {
            this._isBodyOverflowing = document.body.clientWidth < window.innerWidth;
            this._scrollbarWidth = this._getScrollbarWidth();
        };
        Modal.prototype._setScrollbar = function _setScrollbar() {
            var bodyPadding = parseInt($(Selector.FIXED_CONTENT).css('padding-right') || 0, 10);
            this._originalBodyPadding = document.body.style.paddingRight || '';
            if (this._isBodyOverflowing) {
                document.body.style.paddingRight = bodyPadding + this._scrollbarWidth + 'px';
            }
        };
        Modal.prototype._resetScrollbar = function _resetScrollbar() {
            document.body.style.paddingRight = this._originalBodyPadding;
        };
        Modal.prototype._getScrollbarWidth = function _getScrollbarWidth() {
            // thx d.walsh
            var scrollDiv = document.createElement('div');
            scrollDiv.className = ClassName.SCROLLBAR_MEASURER;
            document.body.appendChild(scrollDiv);
            var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
            document.body.removeChild(scrollDiv);
            return scrollbarWidth;
        };
        // static
        Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {
            return this.each(function () {
                var data = $(this).data(DATA_KEY);
                var _config = $.extend({}, Modal.Default, $(this).data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config);
                if (!data) {
                    data = new Modal(this, _config);
                    $(this).data(DATA_KEY, data);
                }
                if (typeof config === 'string') {
                    if (data[config] === undefined) {
                        throw new Error('No method named "' + config + '"');
                    }
                    data[config](relatedTarget);
                }
                else if (_config.show) {
                    data.show(relatedTarget);
                }
            });
        };
        _createClass(Modal, null, [{
                key: 'VERSION',
                get: function get() {
                    return VERSION;
                }
            }, {
                key: 'Default',
                get: function get() {
                    return Default;
                }
            }]);
        return Modal;
    }();
    /**
     * ------------------------------------------------------------------------
     * Data Api implementation
     * ------------------------------------------------------------------------
     */
    $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {
        var _this9 = this;
        var target = void 0;
        var selector = Util.getSelectorFromElement(this);
        if (selector) {
            target = $(selector)[0];
        }
        var config = $(target).data(DATA_KEY) ? 'toggle' : $.extend({}, $(target).data(), $(this).data());
        if (this.tagName === 'A' || this.tagName === 'AREA') {
            event.preventDefault();
        }
        var $target = $(target).one(Event.SHOW, function (showEvent) {
            if (showEvent.isDefaultPrevented()) {
                // only register focus restorer if modal will actually get shown
                return;
            }
            $target.one(Event.HIDDEN, function () {
                if ($(_this9).is(':visible')) {
                    _this9.focus();
                }
            });
        });
        Modal._jQueryInterface.call($(target), config, this);
    });
    /**
     * ------------------------------------------------------------------------
     * jQuery
     * ------------------------------------------------------------------------
     */
    $.fn[NAME] = Modal._jQueryInterface;
    $.fn[NAME].Constructor = Modal;
    $.fn[NAME].noConflict = function () {
        $.fn[NAME] = JQUERY_NO_CONFLICT;
        return Modal._jQueryInterface;
    };
    return Modal;
}(jQuery);
//# sourceMappingURL=modal.js.map
//# sourceMappingURL=data:application/json;charset=utf8;base64,
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
