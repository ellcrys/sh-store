"use strict";
/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): button.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Button = (function ($) {
    /**
     * ------------------------------------------------------------------------
     * Constants
     * ------------------------------------------------------------------------
     */
    var NAME = 'button';
    var VERSION = '4.0.0-alpha.6';
    var DATA_KEY = 'bs.button';
    var EVENT_KEY = "." + DATA_KEY;
    var DATA_API_KEY = '.data-api';
    var JQUERY_NO_CONFLICT = $.fn[NAME];
    var ClassName = {
        ACTIVE: 'active',
        BUTTON: 'btn',
        FOCUS: 'focus'
    };
    var Selector = {
        DATA_TOGGLE_CARROT: '[data-toggle^="button"]',
        DATA_TOGGLE: '[data-toggle="buttons"]',
        INPUT: 'input',
        ACTIVE: '.active',
        BUTTON: '.btn'
    };
    var Event = {
        CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY,
        FOCUS_BLUR_DATA_API: "focus" + EVENT_KEY + DATA_API_KEY + " "
            + ("blur" + EVENT_KEY + DATA_API_KEY)
    };
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */
    var Button = (function () {
        function Button(element) {
            this._element = element;
        }
        Object.defineProperty(Button, "VERSION", {
            // getters
            get: function () {
                return VERSION;
            },
            enumerable: true,
            configurable: true
        });
        // public
        Button.prototype.toggle = function () {
            var triggerChangeEvent = true;
            var rootElement = $(this._element).closest(Selector.DATA_TOGGLE)[0];
            if (rootElement) {
                var input = $(this._element).find(Selector.INPUT)[0];
                if (input) {
                    if (input.type === 'radio') {
                        if (input.checked &&
                            $(this._element).hasClass(ClassName.ACTIVE)) {
                            triggerChangeEvent = false;
                        }
                        else {
                            var activeElement = $(rootElement).find(Selector.ACTIVE)[0];
                            if (activeElement) {
                                $(activeElement).removeClass(ClassName.ACTIVE);
                            }
                        }
                    }
                    if (triggerChangeEvent) {
                        input.checked = !$(this._element).hasClass(ClassName.ACTIVE);
                        $(input).trigger('change');
                    }
                    input.focus();
                }
            }
            this._element.setAttribute('aria-pressed', !$(this._element).hasClass(ClassName.ACTIVE));
            if (triggerChangeEvent) {
                $(this._element).toggleClass(ClassName.ACTIVE);
            }
        };
        Button.prototype.dispose = function () {
            $.removeData(this._element, DATA_KEY);
            this._element = null;
        };
        // static
        Button._jQueryInterface = function (config) {
            return this.each(function () {
                var data = $(this).data(DATA_KEY);
                if (!data) {
                    data = new Button(this);
                    $(this).data(DATA_KEY, data);
                }
                if (config === 'toggle') {
                    data[config]();
                }
            });
        };
        return Button;
    }());
    /**
     * ------------------------------------------------------------------------
     * Data Api implementation
     * ------------------------------------------------------------------------
     */
    $(document)
        .on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {
        event.preventDefault();
        var button = event.target;
        if (!$(button).hasClass(ClassName.BUTTON)) {
            button = $(button).closest(Selector.BUTTON);
        }
        Button._jQueryInterface.call($(button), 'toggle');
    })
        .on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {
        var button = $(event.target).closest(Selector.BUTTON)[0];
        $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));
    });
    /**
     * ------------------------------------------------------------------------
     * jQuery
     * ------------------------------------------------------------------------
     */
    $.fn[NAME] = Button._jQueryInterface;
    $.fn[NAME].Constructor = Button;
    $.fn[NAME].noConflict = function () {
        $.fn[NAME] = JQUERY_NO_CONFLICT;
        return Button._jQueryInterface;
    };
    return Button;
})(jQuery);
exports.default = Button;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
