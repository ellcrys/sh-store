define([
    "../core"
], function (jQuery) {
    "use strict";
    // Cross-browser xml parsing
    jQuery.parseXML = function (data) {
        var xml;
        if (!data || typeof data !== "string") {
            return null;
        }
        // Support: IE 9 - 11 only
        // IE throws on parseFromString with invalid input.
        try {
            xml = (new window.DOMParser()).parseFromString(data, "text/xml");
        }
        catch (e) {
            xml = undefined;
        }
        if (!xml || xml.getElementsByTagName("parsererror").length) {
            jQuery.error("Invalid XML: " + data);
        }
        return xml;
    };
    return jQuery.parseXML;
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2FqYXgvcGFyc2VYTUwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFFO0lBQ1AsU0FBUztDQUNULEVBQUUsVUFBVSxNQUFNO0lBRW5CLFlBQVksQ0FBQztJQUViLDRCQUE0QjtJQUM1QixNQUFNLENBQUMsUUFBUSxHQUFHLFVBQVUsSUFBSTtRQUMvQixJQUFJLEdBQUcsQ0FBQztRQUNSLEVBQUUsQ0FBQyxDQUFFLENBQUMsSUFBSSxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVMsQ0FBQyxDQUFDLENBQUM7WUFDekMsTUFBTSxDQUFDLElBQUksQ0FBQztRQUNiLENBQUM7UUFFRCwwQkFBMEI7UUFDMUIsbURBQW1EO1FBQ25ELElBQUksQ0FBQztZQUNKLEdBQUcsR0FBRyxDQUFFLElBQUksTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFFLENBQUMsZUFBZSxDQUFFLElBQUksRUFBRSxVQUFVLENBQUUsQ0FBQztRQUN0RSxDQUFDO1FBQUMsS0FBSyxDQUFDLENBQUUsQ0FBRSxDQUFDLENBQUMsQ0FBQztZQUNkLEdBQUcsR0FBRyxTQUFTLENBQUM7UUFDakIsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFFLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBRSxhQUFhLENBQUUsQ0FBQyxNQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ2hFLE1BQU0sQ0FBQyxLQUFLLENBQUUsZUFBZSxHQUFHLElBQUksQ0FBRSxDQUFDO1FBQ3hDLENBQUM7UUFDRCxNQUFNLENBQUMsR0FBRyxDQUFDO0lBQ1osQ0FBQyxDQUFDO0lBRUYsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7QUFFdkIsQ0FBQyxDQUFFLENBQUMiLCJmaWxlIjoiYXNzZXRzL3BhY2tzL2pxdWVyeS9zcmMvYWpheC9wYXJzZVhNTC5qcyIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZSggW1xuXHRcIi4uL2NvcmVcIlxuXSwgZnVuY3Rpb24oIGpRdWVyeSApIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIENyb3NzLWJyb3dzZXIgeG1sIHBhcnNpbmdcbmpRdWVyeS5wYXJzZVhNTCA9IGZ1bmN0aW9uKCBkYXRhICkge1xuXHR2YXIgeG1sO1xuXHRpZiAoICFkYXRhIHx8IHR5cGVvZiBkYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHlcblx0Ly8gSUUgdGhyb3dzIG9uIHBhcnNlRnJvbVN0cmluZyB3aXRoIGludmFsaWQgaW5wdXQuXG5cdHRyeSB7XG5cdFx0eG1sID0gKCBuZXcgd2luZG93LkRPTVBhcnNlcigpICkucGFyc2VGcm9tU3RyaW5nKCBkYXRhLCBcInRleHQveG1sXCIgKTtcblx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0eG1sID0gdW5kZWZpbmVkO1xuXHR9XG5cblx0aWYgKCAheG1sIHx8IHhtbC5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCJwYXJzZXJlcnJvclwiICkubGVuZ3RoICkge1xuXHRcdGpRdWVyeS5lcnJvciggXCJJbnZhbGlkIFhNTDogXCIgKyBkYXRhICk7XG5cdH1cblx0cmV0dXJuIHhtbDtcbn07XG5cbnJldHVybiBqUXVlcnkucGFyc2VYTUw7XG5cbn0gKTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2FqYXgvcGFyc2VYTUwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDO0lBQ0gsU0FBUztDQUNaLEVBQUUsVUFBVSxNQUFNO0lBQ2YsWUFBWSxDQUFDO0lBQ2IsNEJBQTRCO0lBQzVCLE1BQU0sQ0FBQyxRQUFRLEdBQUcsVUFBVSxJQUFJO1FBQzVCLElBQUksR0FBRyxDQUFDO1FBQ1IsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNwQyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2hCLENBQUM7UUFDRCwwQkFBMEI7UUFDMUIsbURBQW1EO1FBQ25ELElBQUksQ0FBQztZQUNELEdBQUcsR0FBRyxDQUFDLElBQUksTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztRQUNyRSxDQUFDO1FBQ0QsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNQLEdBQUcsR0FBRyxTQUFTLENBQUM7UUFDcEIsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxhQUFhLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ3pELE1BQU0sQ0FBQyxLQUFLLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQ3pDLENBQUM7UUFDRCxNQUFNLENBQUMsR0FBRyxDQUFDO0lBQ2YsQ0FBQyxDQUFDO0lBQ0YsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7QUFDM0IsQ0FBQyxDQUFDLENBQUM7QUFFSCxtZ0VBQW1nRSIsImZpbGUiOiJhc3NldHMvcGFja3MvanF1ZXJ5L3NyYy9hamF4L3BhcnNlWE1MLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcbiAgICBcIi4uL2NvcmVcIlxuXSwgZnVuY3Rpb24gKGpRdWVyeSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIC8vIENyb3NzLWJyb3dzZXIgeG1sIHBhcnNpbmdcbiAgICBqUXVlcnkucGFyc2VYTUwgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICB2YXIgeG1sO1xuICAgICAgICBpZiAoIWRhdGEgfHwgdHlwZW9mIGRhdGEgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XG4gICAgICAgIC8vIElFIHRocm93cyBvbiBwYXJzZUZyb21TdHJpbmcgd2l0aCBpbnZhbGlkIGlucHV0LlxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgeG1sID0gKG5ldyB3aW5kb3cuRE9NUGFyc2VyKCkpLnBhcnNlRnJvbVN0cmluZyhkYXRhLCBcInRleHQveG1sXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB4bWwgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF4bWwgfHwgeG1sLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwicGFyc2VyZXJyb3JcIikubGVuZ3RoKSB7XG4gICAgICAgICAgICBqUXVlcnkuZXJyb3IoXCJJbnZhbGlkIFhNTDogXCIgKyBkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geG1sO1xuICAgIH07XG4gICAgcmV0dXJuIGpRdWVyeS5wYXJzZVhNTDtcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRnpjMlYwY3k5d1lXTnJjeTlxY1hWbGNua3ZjM0pqTDJGcVlYZ3ZjR0Z5YzJWWVRVd3Vhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1RVRkJUU3hEUVVGRk8wbEJRMUFzVTBGQlV6dERRVU5VTEVWQlFVVXNWVUZCVlN4TlFVRk5PMGxCUlc1Q0xGbEJRVmtzUTBGQlF6dEpRVVZpTERSQ1FVRTBRanRKUVVNMVFpeE5RVUZOTEVOQlFVTXNVVUZCVVN4SFFVRkhMRlZCUVZVc1NVRkJTVHRSUVVNdlFpeEpRVUZKTEVkQlFVY3NRMEZCUXp0UlFVTlNMRVZCUVVVc1EwRkJReXhEUVVGRkxFTkJRVU1zU1VGQlNTeEpRVUZKTEU5QlFVOHNTVUZCU1N4TFFVRkxMRkZCUVZNc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGVrTXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJRenRSUVVOaUxFTkJRVU03VVVGRlJDd3dRa0ZCTUVJN1VVRkRNVUlzYlVSQlFXMUVPMUZCUTI1RUxFbEJRVWtzUTBGQlF6dFpRVU5LTEVkQlFVY3NSMEZCUnl4RFFVRkZMRWxCUVVrc1RVRkJUU3hEUVVGRExGTkJRVk1zUlVGQlJTeERRVUZGTEVOQlFVTXNaVUZCWlN4RFFVRkZMRWxCUVVrc1JVRkJSU3hWUVVGVkxFTkJRVVVzUTBGQlF6dFJRVU4wUlN4RFFVRkRPMUZCUVVNc1MwRkJTeXhEUVVGRExFTkJRVVVzUTBGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTmtMRWRCUVVjc1IwRkJSeXhUUVVGVExFTkJRVU03VVVGRGFrSXNRMEZCUXp0UlFVVkVMRVZCUVVVc1EwRkJReXhEUVVGRkxFTkJRVU1zUjBGQlJ5eEpRVUZKTEVkQlFVY3NRMEZCUXl4dlFrRkJiMElzUTBGQlJTeGhRVUZoTEVOQlFVVXNRMEZCUXl4TlFVRlBMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRMmhGTEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVVc1pVRkJaU3hIUVVGSExFbEJRVWtzUTBGQlJTeERRVUZETzFGQlEzaERMRU5CUVVNN1VVRkRSQ3hOUVVGTkxFTkJRVU1zUjBGQlJ5eERRVUZETzBsQlExb3NRMEZCUXl4RFFVRkRPMGxCUlVZc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTTdRVUZGZGtJc1EwRkJReXhEUVVGRkxFTkJRVU1pTENKbWFXeGxJam9pWVhOelpYUnpMM0JoWTJ0ekwycHhkV1Z5ZVM5emNtTXZZV3BoZUM5d1lYSnpaVmhOVEM1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbVJsWm1sdVpTZ2dXMXh1WEhSY0lpNHVMMk52Y21WY0lseHVYU3dnWm5WdVkzUnBiMjRvSUdwUmRXVnllU0FwSUh0Y2JseHVYQ0oxYzJVZ2MzUnlhV04wWENJN1hHNWNiaTh2SUVOeWIzTnpMV0p5YjNkelpYSWdlRzFzSUhCaGNuTnBibWRjYm1wUmRXVnllUzV3WVhKelpWaE5UQ0E5SUdaMWJtTjBhVzl1S0NCa1lYUmhJQ2tnZTF4dVhIUjJZWElnZUcxc08xeHVYSFJwWmlBb0lDRmtZWFJoSUh4OElIUjVjR1Z2WmlCa1lYUmhJQ0U5UFNCY0luTjBjbWx1WjF3aUlDa2dlMXh1WEhSY2RISmxkSFZ5YmlCdWRXeHNPMXh1WEhSOVhHNWNibHgwTHk4Z1UzVndjRzl5ZERvZ1NVVWdPU0F0SURFeElHOXViSGxjYmx4MEx5OGdTVVVnZEdoeWIzZHpJRzl1SUhCaGNuTmxSbkp2YlZOMGNtbHVaeUIzYVhSb0lHbHVkbUZzYVdRZ2FXNXdkWFF1WEc1Y2RIUnllU0I3WEc1Y2RGeDBlRzFzSUQwZ0tDQnVaWGNnZDJsdVpHOTNMa1JQVFZCaGNuTmxjaWdwSUNrdWNHRnljMlZHY205dFUzUnlhVzVuS0NCa1lYUmhMQ0JjSW5SbGVIUXZlRzFzWENJZ0tUdGNibHgwZlNCallYUmphQ0FvSUdVZ0tTQjdYRzVjZEZ4MGVHMXNJRDBnZFc1a1pXWnBibVZrTzF4dVhIUjlYRzVjYmx4MGFXWWdLQ0FoZUcxc0lIeDhJSGh0YkM1blpYUkZiR1Z0Wlc1MGMwSjVWR0ZuVG1GdFpTZ2dYQ0p3WVhKelpYSmxjbkp2Y2x3aUlDa3ViR1Z1WjNSb0lDa2dlMXh1WEhSY2RHcFJkV1Z5ZVM1bGNuSnZjaWdnWENKSmJuWmhiR2xrSUZoTlREb2dYQ0lnS3lCa1lYUmhJQ2s3WEc1Y2RIMWNibHgwY21WMGRYSnVJSGh0YkR0Y2JuMDdYRzVjYm5KbGRIVnliaUJxVVhWbGNua3VjR0Z5YzJWWVRVdzdYRzVjYm4wZ0tUdGNiaUpkZlE9PVxuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2FqYXgvcGFyc2VYTUwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDO0lBQ0gsU0FBUztDQUNaLEVBQUUsVUFBVSxNQUFNO0lBQ2YsWUFBWSxDQUFDO0lBQ2IsNEJBQTRCO0lBQzVCLE1BQU0sQ0FBQyxRQUFRLEdBQUcsVUFBVSxJQUFJO1FBQzVCLElBQUksR0FBRyxDQUFDO1FBQ1IsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNwQyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2hCLENBQUM7UUFDRCwwQkFBMEI7UUFDMUIsbURBQW1EO1FBQ25ELElBQUksQ0FBQztZQUNELEdBQUcsR0FBRyxDQUFDLElBQUksTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztRQUNyRSxDQUFDO1FBQ0QsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNQLEdBQUcsR0FBRyxTQUFTLENBQUM7UUFDcEIsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxhQUFhLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ3pELE1BQU0sQ0FBQyxLQUFLLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQ3pDLENBQUM7UUFDRCxNQUFNLENBQUMsR0FBRyxDQUFDO0lBQ2YsQ0FBQyxDQUFDO0lBQ0YsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7QUFDM0IsQ0FBQyxDQUFDLENBQUM7QUFDSCxtZ0VBQW1nRTtBQUNuZ0UsMjBKQUEyMEo7QUFFMzBKLCt4V0FBK3hXIiwiZmlsZSI6ImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2FqYXgvcGFyc2VYTUwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1xuICAgIFwiLi4vY29yZVwiXG5dLCBmdW5jdGlvbiAoalF1ZXJ5KSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgLy8gQ3Jvc3MtYnJvd3NlciB4bWwgcGFyc2luZ1xuICAgIGpRdWVyeS5wYXJzZVhNTCA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIHZhciB4bWw7XG4gICAgICAgIGlmICghZGF0YSB8fCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgLy8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHlcbiAgICAgICAgLy8gSUUgdGhyb3dzIG9uIHBhcnNlRnJvbVN0cmluZyB3aXRoIGludmFsaWQgaW5wdXQuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB4bWwgPSAobmV3IHdpbmRvdy5ET01QYXJzZXIoKSkucGFyc2VGcm9tU3RyaW5nKGRhdGEsIFwidGV4dC94bWxcIik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHhtbCA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXhtbCB8fCB4bWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJwYXJzZXJlcnJvclwiKS5sZW5ndGgpIHtcbiAgICAgICAgICAgIGpRdWVyeS5lcnJvcihcIkludmFsaWQgWE1MOiBcIiArIGRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB4bWw7XG4gICAgfTtcbiAgICByZXR1cm4galF1ZXJ5LnBhcnNlWE1MO1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRnpjMlYwY3k5d1lXTnJjeTlxY1hWbGNua3ZjM0pqTDJGcVlYZ3ZjR0Z5YzJWWVRVd3Vhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1RVRkJUU3hEUVVGRk8wbEJRMUFzVTBGQlV6dERRVU5VTEVWQlFVVXNWVUZCVlN4TlFVRk5PMGxCUlc1Q0xGbEJRVmtzUTBGQlF6dEpRVVZpTERSQ1FVRTBRanRKUVVNMVFpeE5RVUZOTEVOQlFVTXNVVUZCVVN4SFFVRkhMRlZCUVZVc1NVRkJTVHRSUVVNdlFpeEpRVUZKTEVkQlFVY3NRMEZCUXp0UlFVTlNMRVZCUVVVc1EwRkJReXhEUVVGRkxFTkJRVU1zU1VGQlNTeEpRVUZKTEU5QlFVOHNTVUZCU1N4TFFVRkxMRkZCUVZNc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGVrTXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJRenRSUVVOaUxFTkJRVU03VVVGRlJDd3dRa0ZCTUVJN1VVRkRNVUlzYlVSQlFXMUVPMUZCUTI1RUxFbEJRVWtzUTBGQlF6dFpRVU5LTEVkQlFVY3NSMEZCUnl4RFFVRkZMRWxCUVVrc1RVRkJUU3hEUVVGRExGTkJRVk1zUlVGQlJTeERRVUZGTEVOQlFVTXNaVUZCWlN4RFFVRkZMRWxCUVVrc1JVRkJSU3hWUVVGVkxFTkJRVVVzUTBGQlF6dFJRVU4wUlN4RFFVRkRPMUZCUVVNc1MwRkJTeXhEUVVGRExFTkJRVVVzUTBGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTmtMRWRCUVVjc1IwRkJSeXhUUVVGVExFTkJRVU03VVVGRGFrSXNRMEZCUXp0UlFVVkVMRVZCUVVVc1EwRkJReXhEUVVGRkxFTkJRVU1zUjBGQlJ5eEpRVUZKTEVkQlFVY3NRMEZCUXl4dlFrRkJiMElzUTBGQlJTeGhRVUZoTEVOQlFVVXNRMEZCUXl4TlFVRlBMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRMmhGTEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVVc1pVRkJaU3hIUVVGSExFbEJRVWtzUTBGQlJTeERRVUZETzFGQlEzaERMRU5CUVVNN1VVRkRSQ3hOUVVGTkxFTkJRVU1zUjBGQlJ5eERRVUZETzBsQlExb3NRMEZCUXl4RFFVRkRPMGxCUlVZc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTTdRVUZGZGtJc1EwRkJReXhEUVVGRkxFTkJRVU1pTENKbWFXeGxJam9pWVhOelpYUnpMM0JoWTJ0ekwycHhkV1Z5ZVM5emNtTXZZV3BoZUM5d1lYSnpaVmhOVEM1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbVJsWm1sdVpTZ2dXMXh1WEhSY0lpNHVMMk52Y21WY0lseHVYU3dnWm5WdVkzUnBiMjRvSUdwUmRXVnllU0FwSUh0Y2JseHVYQ0oxYzJVZ2MzUnlhV04wWENJN1hHNWNiaTh2SUVOeWIzTnpMV0p5YjNkelpYSWdlRzFzSUhCaGNuTnBibWRjYm1wUmRXVnllUzV3WVhKelpWaE5UQ0E5SUdaMWJtTjBhVzl1S0NCa1lYUmhJQ2tnZTF4dVhIUjJZWElnZUcxc08xeHVYSFJwWmlBb0lDRmtZWFJoSUh4OElIUjVjR1Z2WmlCa1lYUmhJQ0U5UFNCY0luTjBjbWx1WjF3aUlDa2dlMXh1WEhSY2RISmxkSFZ5YmlCdWRXeHNPMXh1WEhSOVhHNWNibHgwTHk4Z1UzVndjRzl5ZERvZ1NVVWdPU0F0SURFeElHOXViSGxjYmx4MEx5OGdTVVVnZEdoeWIzZHpJRzl1SUhCaGNuTmxSbkp2YlZOMGNtbHVaeUIzYVhSb0lHbHVkbUZzYVdRZ2FXNXdkWFF1WEc1Y2RIUnllU0I3WEc1Y2RGeDBlRzFzSUQwZ0tDQnVaWGNnZDJsdVpHOTNMa1JQVFZCaGNuTmxjaWdwSUNrdWNHRnljMlZHY205dFUzUnlhVzVuS0NCa1lYUmhMQ0JjSW5SbGVIUXZlRzFzWENJZ0tUdGNibHgwZlNCallYUmphQ0FvSUdVZ0tTQjdYRzVjZEZ4MGVHMXNJRDBnZFc1a1pXWnBibVZrTzF4dVhIUjlYRzVjYmx4MGFXWWdLQ0FoZUcxc0lIeDhJSGh0YkM1blpYUkZiR1Z0Wlc1MGMwSjVWR0ZuVG1GdFpTZ2dYQ0p3WVhKelpYSmxjbkp2Y2x3aUlDa3ViR1Z1WjNSb0lDa2dlMXh1WEhSY2RHcFJkV1Z5ZVM1bGNuSnZjaWdnWENKSmJuWmhiR2xrSUZoTlREb2dYQ0lnS3lCa1lYUmhJQ2s3WEc1Y2RIMWNibHgwY21WMGRYSnVJSGh0YkR0Y2JuMDdYRzVjYm5KbGRIVnliaUJxVVhWbGNua3VjR0Z5YzJWWVRVdzdYRzVjYm4wZ0tUdGNiaUpkZlE9PVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUZ6YzJWMGN5OXdZV05yY3k5cWNYVmxjbmt2YzNKakwyRnFZWGd2Y0dGeWMyVllUVXd1YW5NaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNUVUZCVFN4RFFVRkRPMGxCUTBnc1UwRkJVenREUVVOYUxFVkJRVVVzVlVGQlZTeE5RVUZOTzBsQlEyWXNXVUZCV1N4RFFVRkRPMGxCUTJJc05FSkJRVFJDTzBsQlF6VkNMRTFCUVUwc1EwRkJReXhSUVVGUkxFZEJRVWNzVlVGQlZTeEpRVUZKTzFGQlF6VkNMRWxCUVVrc1IwRkJSeXhEUVVGRE8xRkJRMUlzUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXl4SlFVRkpMRWxCUVVrc1QwRkJUeXhKUVVGSkxFdEJRVXNzVVVGQlVTeERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTndReXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETzFGQlEyaENMRU5CUVVNN1VVRkRSQ3d3UWtGQk1FSTdVVUZETVVJc2JVUkJRVzFFTzFGQlEyNUVMRWxCUVVrc1EwRkJRenRaUVVORUxFZEJRVWNzUjBGQlJ5eERRVUZETEVsQlFVa3NUVUZCVFN4RFFVRkRMRk5CUVZNc1JVRkJSU3hEUVVGRExFTkJRVU1zWlVGQlpTeERRVUZETEVsQlFVa3NSVUZCUlN4VlFVRlZMRU5CUVVNc1EwRkJRenRSUVVOeVJTeERRVUZETzFGQlEwUXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU5RTEVkQlFVY3NSMEZCUnl4VFFVRlRMRU5CUVVNN1VVRkRjRUlzUTBGQlF6dFJRVU5FTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhKUVVGSkxFZEJRVWNzUTBGQlF5eHZRa0ZCYjBJc1EwRkJReXhoUVVGaExFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTNwRUxFMUJRVTBzUTBGQlF5eExRVUZMTEVOQlFVTXNaVUZCWlN4SFFVRkhMRWxCUVVrc1EwRkJReXhEUVVGRE8xRkJRM3BETEVOQlFVTTdVVUZEUkN4TlFVRk5MRU5CUVVNc1IwRkJSeXhEUVVGRE8wbEJRMllzUTBGQlF5eERRVUZETzBsQlEwWXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhSUVVGUkxFTkJRVU03UVVGRE0wSXNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkZTQ3h0WjBWQlFXMW5SU0lzSW1acGJHVWlPaUpoYzNObGRITXZjR0ZqYTNNdmFuRjFaWEo1TDNOeVl5OWhhbUY0TDNCaGNuTmxXRTFNTG1weklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2laR1ZtYVc1bEtGdGNiaUFnSUNCY0lpNHVMMk52Y21WY0lseHVYU3dnWm5WdVkzUnBiMjRnS0dwUmRXVnllU2tnZTF4dUlDQWdJRndpZFhObElITjBjbWxqZEZ3aU8xeHVJQ0FnSUM4dklFTnliM056TFdKeWIzZHpaWElnZUcxc0lIQmhjbk5wYm1kY2JpQWdJQ0JxVVhWbGNua3VjR0Z5YzJWWVRVd2dQU0JtZFc1amRHbHZiaUFvWkdGMFlTa2dlMXh1SUNBZ0lDQWdJQ0IyWVhJZ2VHMXNPMXh1SUNBZ0lDQWdJQ0JwWmlBb0lXUmhkR0VnZkh3Z2RIbHdaVzltSUdSaGRHRWdJVDA5SUZ3aWMzUnlhVzVuWENJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1ZFd4c08xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQzh2SUZOMWNIQnZjblE2SUVsRklEa2dMU0F4TVNCdmJteDVYRzRnSUNBZ0lDQWdJQzh2SUVsRklIUm9jbTkzY3lCdmJpQndZWEp6WlVaeWIyMVRkSEpwYm1jZ2QybDBhQ0JwYm5aaGJHbGtJR2x1Y0hWMExseHVJQ0FnSUNBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdlRzFzSUQwZ0tHNWxkeUIzYVc1a2IzY3VSRTlOVUdGeWMyVnlLQ2twTG5CaGNuTmxSbkp2YlZOMGNtbHVaeWhrWVhSaExDQmNJblJsZUhRdmVHMXNYQ0lwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lHTmhkR05vSUNobEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCNGJXd2dQU0IxYm1SbFptbHVaV1E3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2FXWWdLQ0Y0Yld3Z2ZId2dlRzFzTG1kbGRFVnNaVzFsYm5SelFubFVZV2RPWVcxbEtGd2ljR0Z5YzJWeVpYSnliM0pjSWlrdWJHVnVaM1JvS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JxVVhWbGNua3VaWEp5YjNJb1hDSkpiblpoYkdsa0lGaE5URG9nWENJZ0t5QmtZWFJoS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2VHMXNPMXh1SUNBZ0lIMDdYRzRnSUNBZ2NtVjBkWEp1SUdwUmRXVnllUzV3WVhKelpWaE5URHRjYm4wcE8xeHVYRzR2THlNZ2MyOTFjbU5sVFdGd2NHbHVaMVZTVEQxa1lYUmhPbUZ3Y0d4cFkyRjBhVzl1TDJwemIyNDdZMmhoY25ObGREMTFkR1k0TzJKaGMyVTJOQ3hsZVVveVdsaEtlbUZYT1hWSmFtOTZURU5LZW1JelZubFpNbFo2U1dwd1lrbHRSbnBqTWxZd1kzazVkMWxYVG5KamVUbHhZMWhXYkdOdWEzWmpNMHBxVERKR2NWbFlaM1pqUjBaNVl6SldXVlJWZDNWaGJrMXBXRk4zYVdKdFJuUmFXRTFwVDJ4MFpFeERTblJaV0VKM1lWYzFibU41U1RaSmEwWkNVVlZGYzFSVlJrSlVVM2hFVVZWR1JrOHdiRUpSTVVGelZUQkdRbFY2ZEVSUlZVNVZURVZXUWxGVlZYTldWVVpDVmxONFRsRlZSazVQTUd4Q1VsYzFRMHhHYkVKUlZtdHpVVEJHUWxGNmRFcFJWVlpwVEVSU1ExRlZSVEJSYW5SS1VWVk5NVkZwZUU1UlZVWk9URVZPUWxGVlRYTlZWVVpDVlZONFNGRlZSa2hNUmxaQ1VWWlZjMU5WUmtKVFZIUlNVVlZOZGxGcGVFcFJWVVpLVEVWa1FsRlZZM05STUVaQ1VYcDBVbEZWVGxOTVJWWkNVVlZWYzFFd1JrSlJlWGhFVVZWR1JreEZUa0pSVlUxelUxVkdRbE5UZUVwUlZVWktURVU1UWxGVk9ITlRWVVpDVTFONFRGRlZSa3hNUmtaQ1VWWk5jMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTAzVjFWR1JHVnJUWE5VVlVaQ1ZGTjRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlblJTVVZWT2FVeEZUa0pSVlUwM1ZWVkdSbEpEZDNkUmEwWkNUVVZKTjFWVlJrUk5WVWx6WWxWU1FsRlhNVVZQTVVaQ1VUSTFSVXhGYkVKUlZXdHpVVEJHUWxGNmRGcFJWVTVMVEVWa1FsRlZZM05TTUVaQ1VubDRSRkZWUmtaTVJXeENVVlZyYzFSVlJrSlVVM2hFVVZWR1JFeEdUa0pSVmsxelVsVkdRbEpUZUVSUlZVWkdURVZPUWxGVlRYTmFWVVpDV2xONFJGRlZSa1pNUld4Q1VWVnJjMUpWUmtKU1UzaFdVVlZHVmt4RlRrSlJWVlZ6VVRCR1FsRjZkRkpSVlU0d1VsTjRSRkZWUmtSUE1VWkNVVlZOYzFNd1JrSlRlWGhFVVZWR1JFeEZUa0pSVlZWelVUQkdRbEpUZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhwMFdsRlZUbXRNUldSQ1VWVmpjMUl3UmtKU2VYaFVVVlZHVkV4RlRrSlJWVTAzVlZWR1JHRnJTWE5STUVaQ1VYcDBVbEZWVmtWTVJWWkNVVlZWYzFFd1JrSlJlWGhFVVZWR1JreEZUa0pSVlUxelVqQkdRbEo1ZUVwUlZVWktURVZrUWxGVlkzTlJNRVpDVVhsNGRsRnJSa0ppTUVselVUQkdRbEpUZUdoUlZVWm9URVZPUWxGVlZYTlJNRVpDVVhsNFRsRlZSbEJNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkU4eGJFSlJNbWhHVEVVeFFsRlZNSE5STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZWYzFwVlJrSmFVM2hJVVZWR1NFeEZiRUpSVld0elVUQkdRbEpUZUVSUlZVWkVUekZHUWxFemFFUk1SVTVDVVZWTk4xVlZSa1JTUTNoT1VWVkdUa3hGVGtKUlZVMXpVakJHUWxKNWVFUlJWVVpFVHpCc1FsRXhiM05STUVaQ1VYbDRSRkZWUmtSUE1HeENVbFZaYzFSVlJrSlVVM2hFVVZWR1JFeEZNVUpSVlRCelVUQkdRbEY1ZUZKUlZVWlNURVZPUWxGVlRUZFJWVVpHWkd0SmMxRXdSa0pSZVhoRVVWVkdSa3hGVGtKUlZVMXBURU5LYldGWGVHeEphbTlwV1ZoT2VscFlVbnBNTTBKb1dUSjBla3d5Y0hoa1YxWjVaVk01ZW1OdFRYWlpWM0JvWlVNNWQxbFlTbnBhVm1oT1ZFTTFjV041U1hOSmJrNTJaRmhLYWxwWVRrUmlNalV3V2xjMU1FbHFjR0pKYlZKc1dtMXNkVnBUWjJkWE1YaDFXRWhTWTBscE5IVk1NazUyWTIxV1kwbHNlSFZZVTNkbldtNVdkVmt6VW5CaU1qUnZTVWR3VW1SWFZubGxVMEZ3U1VoMFkySnNlSFZZUTBveFl6SlZaMk16VW5saFYwNHdXRU5KTjFoSE5XTmlhVGgyU1VWT2VXSXpUbnBNVjBwNVlqTmtlbHBZU1dkbFJ6RnpTVWhDYUdOdVRuQmliV1JqWW0xd1VtUlhWbmxsVXpWM1dWaEtlbHBXYUU1VVEwRTVTVWRhTVdKdFRqQmhWemwxUzBOQ2ExbFlVbWhKUTJ0blpURjRkVmhJVWpKWldFbG5aVWN4YzA4eGVIVllTRkp3V21sQmIwbERSbXRaV0ZKb1NVaDRPRWxJVWpWalIxWjJXbWxDYTFsWVVtaEpRMFU1VUZOQ1kwbHVUakJqYld4MVdqRjNhVWxEYTJkbE1YaDFXRWhTWTJSSVNteGtTRlo1WW1sQ2RXUlhlSE5QTVhoMVdFaFNPVmhITldOaWJIZ3dUSGs0WjFVelZuZGpSemw1WkVSdloxTlZWV2RQVTBGMFNVUkZlRWxIT1hWaVNHeGpZbXg0TUV4NU9HZFRWVlZuWkVkb2VXSXpaSHBKUnpsMVNVaENhR051VG14U2JrcDJZbFpPTUdOdGJIVmFlVUl6WVZoU2IwbEhiSFZrYlVaellWZFJaMkZYTlhka1dGRjFXRWMxWTJSSVVubGxVMEkzV0VjMVkyUkdlREJsUnpGelNVUXdaMHREUW5WYVdHTm5aREpzZFZwSE9UTk1hMUpRVkZaQ2FHTnVUbXhqYVdkd1NVTnJkV05IUm5sak1sWkhZMjA1ZEZVelVubGhWelZ1UzBOQ2ExbFlVbWhNUTBKalNXNVNiR1ZJVVhabFJ6RnpXRU5KWjB0VWRHTmliSGd3WmxOQ2FsbFlVbXBoUTBGdlNVZFZaMHRUUWpkWVJ6VmpaRVo0TUdWSE1YTkpSREJuWkZjMWExcFhXbkJpYlZaclR6RjRkVmhJVWpsWVJ6VmpZbXg0TUdGWFdXZExRMEZvWlVjeGMwbEllRGhKU0doMFlrTTFibHBZVWtaaVIxWjBXbGMxTUdNd1NqVldSMFp1VkcxR2RGcFRaMmRZUTBwM1dWaEtlbHBZU214amJrcDJZMngzYVVsRGEzVmlSMVoxV2pOU2IwbERhMmRsTVhoMVdFaFNZMlJIY0ZKa1YxWjVaVk0xYkdOdVNuWmphV2RuV0VOS1NtSnVXbWhpUjJ4clNVWm9UbFJFYjJkWVEwbG5TM2xDYTFsWVVtaEpRMnMzV0VjMVkyUklNV05pYkhnd1kyMVdNR1JZU25WSlNHaDBZa1IwWTJKdU1EZFlSelZqWW01S2JHUklWbmxpYVVKeFZWaFdiR051YTNWalIwWjVZekpXV1ZSVmR6ZFlSelZqWW00d1owdFVkR05pYVVwa1psRTlQVnh1SWwxOVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRnpjMlYwY3k5d1lXTnJjeTlxY1hWbGNua3ZjM0pqTDJGcVlYZ3ZjR0Z5YzJWWVRVd3Vhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1RVRkJUU3hEUVVGRE8wbEJRMGdzVTBGQlV6dERRVU5hTEVWQlFVVXNWVUZCVlN4TlFVRk5PMGxCUTJZc1dVRkJXU3hEUVVGRE8wbEJRMklzTkVKQlFUUkNPMGxCUXpWQ0xFMUJRVTBzUTBGQlF5eFJRVUZSTEVkQlFVY3NWVUZCVlN4SlFVRkpPMUZCUXpWQ0xFbEJRVWtzUjBGQlJ5eERRVUZETzFGQlExSXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhKUVVGSkxFbEJRVWtzVDBGQlR5eEpRVUZKTEV0QlFVc3NVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVOd1F5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRPMUZCUTJoQ0xFTkJRVU03VVVGRFJDd3dRa0ZCTUVJN1VVRkRNVUlzYlVSQlFXMUVPMUZCUTI1RUxFbEJRVWtzUTBGQlF6dFpRVU5FTEVkQlFVY3NSMEZCUnl4RFFVRkRMRWxCUVVrc1RVRkJUU3hEUVVGRExGTkJRVk1zUlVGQlJTeERRVUZETEVOQlFVTXNaVUZCWlN4RFFVRkRMRWxCUVVrc1JVRkJSU3hWUVVGVkxFTkJRVU1zUTBGQlF6dFJRVU55UlN4RFFVRkRPMUZCUTBRc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTlFMRWRCUVVjc1IwRkJSeXhUUVVGVExFTkJRVU03VVVGRGNFSXNRMEZCUXp0UlFVTkVMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVkQlFVY3NRMEZCUXl4dlFrRkJiMElzUTBGQlF5eGhRVUZoTEVOQlFVTXNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRM3BFTEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVNc1pVRkJaU3hIUVVGSExFbEJRVWtzUTBGQlF5eERRVUZETzFGQlEzcERMRU5CUVVNN1VVRkRSQ3hOUVVGTkxFTkJRVU1zUjBGQlJ5eERRVUZETzBsQlEyWXNRMEZCUXl4RFFVRkRPMGxCUTBZc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTTdRVUZETTBJc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRFNDeHRaMFZCUVcxblJUdEJRVVZ1WjBVc01qQktRVUV5TUVvaUxDSm1hV3hsSWpvaVlYTnpaWFJ6TDNCaFkydHpMMnB4ZFdWeWVTOXpjbU12WVdwaGVDOXdZWEp6WlZoTlRDNXFjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1SbFptbHVaU2hiWEc0Z0lDQWdYQ0l1TGk5amIzSmxYQ0pjYmwwc0lHWjFibU4wYVc5dUlDaHFVWFZsY25rcElIdGNiaUFnSUNCY0luVnpaU0J6ZEhKcFkzUmNJanRjYmlBZ0lDQXZMeUJEY205emN5MWljbTkzYzJWeUlIaHRiQ0J3WVhKemFXNW5YRzRnSUNBZ2FsRjFaWEo1TG5CaGNuTmxXRTFNSUQwZ1puVnVZM1JwYjI0Z0tHUmhkR0VwSUh0Y2JpQWdJQ0FnSUNBZ2RtRnlJSGh0YkR0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0ZrWVhSaElIeDhJSFI1Y0dWdlppQmtZWFJoSUNFOVBTQmNJbk4wY21sdVoxd2lLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JuVnNiRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBdkx5QlRkWEJ3YjNKME9pQkpSU0E1SUMwZ01URWdiMjVzZVZ4dUlDQWdJQ0FnSUNBdkx5QkpSU0IwYUhKdmQzTWdiMjRnY0dGeWMyVkdjbTl0VTNSeWFXNW5JSGRwZEdnZ2FXNTJZV3hwWkNCcGJuQjFkQzVjYmlBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhodGJDQTlJQ2h1WlhjZ2QybHVaRzkzTGtSUFRWQmhjbk5sY2lncEtTNXdZWEp6WlVaeWIyMVRkSEpwYm1jb1pHRjBZU3dnWENKMFpYaDBMM2h0YkZ3aUtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0JqWVhSamFDQW9aU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdlRzFzSUQwZ2RXNWtaV1pwYm1Wa08xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR2xtSUNnaGVHMXNJSHg4SUhodGJDNW5aWFJGYkdWdFpXNTBjMEo1VkdGblRtRnRaU2hjSW5CaGNuTmxjbVZ5Y205eVhDSXBMbXhsYm1kMGFDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FsRjFaWEo1TG1WeWNtOXlLRndpU1c1MllXeHBaQ0JZVFV3NklGd2lJQ3NnWkdGMFlTazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSGh0YkR0Y2JpQWdJQ0I5TzF4dUlDQWdJSEpsZEhWeWJpQnFVWFZsY25rdWNHRnljMlZZVFV3N1hHNTlLVHRjYmk4dkl5QnpiM1Z5WTJWTllYQndhVzVuVlZKTVBXUmhkR0U2WVhCd2JHbGpZWFJwYjI0dmFuTnZianRqYUdGeWMyVjBQWFYwWmpnN1ltRnpaVFkwTEdWNVNqSmFXRXA2WVZjNWRVbHFiM3BNUTBwNllqTldlVmt5Vm5wSmFuQmlTVzFHZW1NeVZqQmplVGwzV1ZkT2NtTjVPWEZqV0Zac1kyNXJkbU16U21wTU1rWnhXVmhuZG1OSFJubGpNbFpaVkZWM2RXRnVUV2xZVTNkcFltMUdkRnBZVFdsUGJIUmtURU5LZEZsWVFuZGhWelZ1WTNsSk5rbHJSa0pSVlVWelZGVkdRbFJUZUVSUlZVWkdUekJzUWxFeFFYTlZNRVpDVlhwMFJGRlZUbFZNUlZaQ1VWVlZjMVpWUmtKV1UzaE9VVlZHVGs4d2JFSlNWelZEVEVac1FsRldhM05STUVaQ1VYcDBTbEZWVm1sTVJGSkRVVlZGTUZGcWRFcFJWVTB4VVdsNFRsRlZSazVNUlU1Q1VWVk5jMVZWUmtKVlUzaElVVlZHU0V4R1ZrSlJWbFZ6VTFWR1FsTlVkRkpSVlUxMlVXbDRTbEZWUmtwTVJXUkNVVlZqYzFFd1JrSlJlblJTVVZWT1UweEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkdURVZPUWxGVlRYTlRWVVpDVTFONFNsRlZSa3BNUlRsQ1VWVTRjMU5WUmtKVFUzaE1VVlZHVEV4R1JrSlJWazF6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkWFZVWkVaV3ROYzFSVlJrSlVVM2hFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY2ZEZKUlZVNXBURVZPUWxGVlRUZFZWVVpHVWtOM2QxRnJSa0pOUlVrM1ZWVkdSRTFWU1hOaVZWSkNVVmN4UlU4eFJrSlJNalZGVEVWc1FsRlZhM05STUVaQ1VYcDBXbEZWVGt0TVJXUkNVVlZqYzFJd1JrSlNlWGhFVVZWR1JreEZiRUpSVld0elZGVkdRbFJUZUVSUlZVWkVURVpPUWxGV1RYTlNWVVpDVWxONFJGRlZSa1pNUlU1Q1VWVk5jMXBWUmtKYVUzaEVVVlZHUmt4RmJFSlJWV3R6VWxWR1FsSlRlRlpSVlVaV1RFVk9RbEZWVlhOUk1FWkNVWHAwVWxGVlRqQlNVM2hFVVZWR1JFOHhSa0pSVlUxelV6QkdRbE41ZUVSUlZVWkVURVZPUWxGVlZYTlJNRVpDVWxONFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVuUmFVVlZPYTB4RlpFSlJWV056VWpCR1FsSjVlRlJSVlVaVVRFVk9RbEZWVFRkVlZVWkVZV3RKYzFFd1JrSlJlblJTVVZWV1JVeEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkdURVZPUWxGVlRYTlNNRVpDVW5sNFNsRlZSa3BNUldSQ1VWVmpjMUV3UmtKUmVYaDJVV3RHUW1Jd1NYTlJNRVpDVWxONGFGRlZSbWhNUlU1Q1VWVlZjMUV3UmtKUmVYaE9VVlZHVUV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVR6RnNRbEV5YUVaTVJURkNVVlV3YzFFd1JrSlJlWGhNVVZWR1RFeEZUa0pSVlZWeldsVkdRbHBUZUVoUlZVWklURVZzUWxGVmEzTlJNRVpDVWxONFJGRlZSa1JQTVVaQ1VUTm9SRXhGVGtKUlZVMDNWVlZHUkZKRGVFNVJWVVpPVEVWT1FsRlZUWE5TTUVaQ1VubDRSRkZWUmtSUE1HeENVVEZ2YzFFd1JrSlJlWGhFVVZWR1JFOHdiRUpTVlZselZGVkdRbFJUZUVSUlZVWkVURVV4UWxGVk1ITlJNRVpDVVhsNFVsRlZSbEpNUlU1Q1VWVk5OMUZWUmtaa2EwbHpVVEJHUWxGNWVFUlJWVVpHVEVWT1FsRlZUV2xNUTBwdFlWZDRiRWxxYjJsWldFNTZXbGhTZWt3elFtaFpNblI2VERKd2VHUlhWbmxsVXpsNlkyMU5kbGxYY0dobFF6bDNXVmhLZWxwV2FFNVVRelZ4WTNsSmMwbHVUblprV0VwcVdsaE9SR0l5TlRCYVZ6VXdTV3B3WWtsdFVteGFiV3gxV2xObloxY3hlSFZZU0ZKalNXazBkVXd5VG5aamJWWmpTV3g0ZFZoVGQyZGFibFoxV1ROU2NHSXlORzlKUjNCU1pGZFdlV1ZUUVhCSlNIUmpZbXg0ZFZoRFNqRmpNbFZuWXpOU2VXRlhUakJZUTBrM1dFYzFZMkpwT0haSlJVNTVZak5PZWt4WFNubGlNMlI2V2xoSloyVkhNWE5KU0VKb1kyNU9jR0p0WkdOaWJYQlNaRmRXZVdWVE5YZFpXRXA2V2xab1RsUkRRVGxKUjFveFltMU9NR0ZYT1hWTFEwSnJXVmhTYUVsRGEyZGxNWGgxV0VoU01sbFlTV2RsUnpGelR6RjRkVmhJVW5CYWFVRnZTVU5HYTFsWVVtaEpTSGc0U1VoU05XTkhWblphYVVKcldWaFNhRWxEUlRsUVUwSmpTVzVPTUdOdGJIVmFNWGRwU1VOcloyVXhlSFZZU0ZKalpFaEtiR1JJVm5saWFVSjFaRmQ0YzA4eGVIVllTRkk1V0VjMVkySnNlREJNZVRoblZUTldkMk5IT1hsa1JHOW5VMVZWWjA5VFFYUkpSRVY0U1VjNWRXSkliR05pYkhnd1RIazRaMU5WVldka1IyaDVZak5rZWtsSE9YVkpTRUpvWTI1T2JGSnVTblppVms0d1kyMXNkVnA1UWpOaFdGSnZTVWRzZFdSdFJuTmhWMUZuWVZjMWQyUllVWFZZUnpWalpFaFNlV1ZUUWpkWVJ6VmpaRVo0TUdWSE1YTkpSREJuUzBOQ2RWcFlZMmRrTW14MVdrYzVNMHhyVWxCVVZrSm9ZMjVPYkdOcFozQkpRMnQxWTBkR2VXTXlWa2RqYlRsMFZUTlNlV0ZYTlc1TFEwSnJXVmhTYUV4RFFtTkpibEpzWlVoUmRtVkhNWE5ZUTBsblMxUjBZMkpzZURCbVUwSnFXVmhTYW1GRFFXOUpSMVZuUzFOQ04xaEhOV05rUm5nd1pVY3hjMGxFTUdka1Z6VnJXbGRhY0dKdFZtdFBNWGgxV0VoU09WaEhOV05pYkhnd1lWZFpaMHREUVdobFJ6RnpTVWg0T0VsSWFIUmlRelZ1V2xoU1JtSkhWblJhVnpVd1l6QktOVlpIUm01VWJVWjBXbE5uWjFoRFNuZFpXRXA2V2xoS2JHTnVTblpqYkhkcFNVTnJkV0pIVm5WYU0xSnZTVU5yWjJVeGVIVllTRkpqWkVkd1VtUlhWbmxsVXpWc1kyNUtkbU5wWjJkWVEwcEtZbTVhYUdKSGJHdEpSbWhPVkVSdloxaERTV2RMZVVKcldWaFNhRWxEYXpkWVJ6VmpaRWd4WTJKc2VEQmpiVll3WkZoS2RVbElhSFJpUkhSalltNHdOMWhITldOaWJrcHNaRWhXZVdKcFFuRlZXRlpzWTI1cmRXTkhSbmxqTWxaWlZGVjNOMWhITldOaWJqQm5TMVIwWTJKcFNtUm1VVDA5WEc1Y2JpOHZJeUJ6YjNWeVkyVk5ZWEJ3YVc1blZWSk1QV1JoZEdFNllYQndiR2xqWVhScGIyNHZhbk52Ymp0amFHRnljMlYwUFhWMFpqZzdZbUZ6WlRZMExHVjVTakphV0VwNllWYzVkVWxxYjNwTVEwcDZZak5XZVZreVZucEphbkJpU1cxR2VtTXlWakJqZVRsM1dWZE9jbU41T1hGaldGWnNZMjVyZG1NelNtcE1Na1p4V1ZobmRtTkhSbmxqTWxaWlZGVjNkV0Z1VFdsWVUzZHBZbTFHZEZwWVRXbFBiSFJrVEVOS2RGbFlRbmRoVnpWdVkzbEpOa2xyUmtKUlZVVnpWRlZHUWxSVGVFUlJWVVpFVHpCc1FsRXdaM05WTUVaQ1ZYcDBSRkZWVG1GTVJWWkNVVlZWYzFaVlJrSldVM2hPVVZWR1RrOHdiRUpSTWxselYxVkdRbGRUZUVSUlZVWkVUekJzUWxFeVNYTk9SVXBDVVZSU1EwOHdiRUpSZWxaRFRFVXhRbEZWTUhOUk1FWkNVWGw0VWxGVlJsSk1SV1JDVVZWamMxWlZSa0pXVTNoS1VWVkdTazh4UmtKUmVsWkRURVZzUWxGVmEzTlNNRVpDVW5sNFJGRlZSa1JQTVVaQ1VURkpjMUpWUmtKU1UzaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjVlRXBSVlVaS1RFVnNRbEZWYTNOVU1FWkNWSGw0U2xGVlJrcE1SWFJDVVZWemMxVlZSa0pWVTNoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNmRGcFJWVTUzVVhsNFRsRlZSazVNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkU4eFJrSlJNbWhEVEVWT1FsRlZUVGRWVlVaRVVrTjNkMUZyUmtKTlJVazNWVlZHUkUxVlNYTmlWVkpDVVZjeFJVOHhSa0pSTWpWRlRFVnNRbEZWYTNOUk1FWkNVWHAwV2xGVlRrVk1SV1JDVVZWamMxSXdSa0pTZVhoRVVWVkdSRXhGYkVKUlZXdHpWRlZHUWxSVGVFUlJWVVpFVEVaT1FsRldUWE5TVlVaQ1VsTjRSRkZWUmtSTVJVNUNVVlZOYzFwVlJrSmFVM2hFVVZWR1JFeEZiRUpSVld0elVsVkdRbEpUZUZaUlZVWldURVZPUWxGVlRYTlJNRVpDVVhwMFVsRlZUbmxTVTNoRVVWVkdSRTh4UmtKUk1GRnpVekJHUWxONWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlblJhVVZWT1VVeEZaRUpSVldOelVqQkdRbEo1ZUZSUlZVWlVURVZPUWxGVlRUZFZWVVpFWTBWSmMxRXdSa0pSZW5SU1VWVk9SVXhGVmtKUlZWVnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5TTUVaQ1VubDRTbEZWUmtwTVJXUkNVVlZqYzFFd1JrSlJlWGgyVVd0R1FtSXdTWE5STUVaQ1VYbDRhRkZWUm1oTVJVNUNVVlZOYzFFd1JrSlJlWGhPVVZWR1RreEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVUekZzUWxFemNFVk1SVEZDVVZVd2MxRXdSa0pSZVhoTVVWVkdURXhGVGtKUlZVMXpXbFZHUWxwVGVFaFJWVVpJVEVWc1FsRlZhM05STUVaQ1VYbDRSRkZWUmtSUE1VWkNVVE53UkV4RlRrSlJWVTAzVlZWR1JGSkRlRTVSVlVaT1RFVk9RbEZWVFhOU01FWkNVbmw0UkZGVlJrUlBNR3hDVVRKWmMxRXdSa0pSZVhoRVVWVkdSRTh3YkVKUk1GbHpWRlZHUWxSVGVFUlJWVVpFVEVVeFFsRlZNSE5STUVaQ1VYbDRVbEZWUmxKTVJVNUNVVlZOTjFGVlJrUk5NRWx6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkUlZVWkdVME40ZEZvd1ZrSlJWekZ1VWxOSmMwbHRXbkJpUjFWcFQybEthR016VG14a1NFMTJZMGRHYW1FelRYWmhia1l4V2xoS05Vd3pUbmxaZVRsb1lXMUdORXd6UW1oamJrNXNWMFV4VFV4dGNIcEphWGRwWXpJNU1XTnRUbXhqTUU1MlltNVNiR0p1VVdsUGJITnBXa2RXYldGWE5XeExSblJqWW1sQlowbERRbU5KYVRSMVRESk9kbU50Vm1OSmJIaDFXRk4zWjFwdVZuVlpNMUp3WWpJMFowdEhjRkprVjFaNVpWTnJaMlV4ZUhWSlEwRm5TVVozYVdSWVRteEpTRTR3WTIxc2FtUkdkMmxQTVhoMVNVTkJaMGxET0haSlJVNTVZak5PZWt4WFNubGlNMlI2V2xoSloyVkhNWE5KU0VKb1kyNU9jR0p0WkdOaWFVRm5TVU5DY1ZWWVZteGpibXQxWTBkR2VXTXlWbGxVVlhkblVGTkNiV1JYTldwa1IyeDJZbWxCYjFwSFJqQlpVMnRuWlRGNGRVbERRV2RKUTBGblNVTkNNbGxZU1dkbFJ6RnpUekY0ZFVsRFFXZEpRMEZuU1VOQ2NGcHBRVzlKVjFKb1pFZEZaMlpJZDJka1NHeDNXbGM1YlVsSFVtaGtSMFZuU1ZRd09VbEdkMmxqTTFKNVlWYzFibGhEU1hCSlNIUmpZbWxCWjBsRFFXZEpRMEZuU1VOQlowbElTbXhrU0ZaNVltbENkV1JYZUhOUE1YaDFTVU5CWjBsRFFXZEpRMEk1V0VjMFowbERRV2RKUTBGblNVTTRka2xHVGpGalNFSjJZMjVSTmtsRmJFWkpSR3RuVEZOQmVFMVRRblppYlhnMVdFYzBaMGxEUVdkSlEwRm5TVU00ZGtsRmJFWkpTRkp2WTIwNU0yTjVRblppYVVKM1dWaEtlbHBWV25saU1qRlVaRWhLY0dKdFkyZGtNbXd3WVVOQ2NHSnVXbWhpUjJ4clNVZHNkV05JVmpCTWJIaDFTVU5CWjBsRFFXZEpRMEl3WTI1cloyVXhlSFZKUTBGblNVTkJaMGxEUVdkSlEwRm5aVWN4YzBsRU1HZExSelZzWkhsQ00yRlhOV3RpTTJOMVVrVTVUbFZIUm5sak1sWjVTME5yY0V4dVFtaGpiazVzVW01S2RtSldUakJqYld4MVdubG9hMWxZVW1oTVEwSmpTVzVTYkdWSVVYWmxSekZ6V0VOSmNFOHhlSFZKUTBGblNVTkJaMGxEUWpsWVJ6Um5TVU5CWjBsRFFXZEpSMDVvWkVkT2IwbERhR3hMVTBJM1dFYzBaMGxEUVdkSlEwRm5TVU5CWjBsRFFqUmlWM2RuVUZOQ01XSnRVbXhhYld4MVdsZFJOMWhITkdkSlEwRm5TVU5CWjBsSU1XTmlhVUZuU1VOQlowbERRV2RoVjFsblMwTkdOR0pYZDJkbVNIZG5aVWN4YzB4dFpHeGtSVlp6V2xjeGJHSnVVbnBSYm14VldWZGtUMWxYTVd4TFJuZHBZMGRHZVdNeVZubGFXRXA1WWpOS1kwbHBhM1ZpUjFaMVdqTlNiMHRUUWpkWVJ6Um5TVU5CWjBsRFFXZEpRMEZuU1VOQ2NWVllWbXhqYm10MVdsaEtlV0l6U1c5WVEwcEtZbTVhYUdKSGJHdEpSbWhPVkVSdloxaERTV2RMZVVKcldWaFNhRXRVZEdOaWFVRm5TVU5CWjBsRFFXZG1WbmgxU1VOQlowbERRV2RKUTBKNVdsaFNNV050TkdkbFJ6RnpUekY0ZFVsRFFXZEpTREEzV0VjMFowbERRV2RqYlZZd1pGaEtkVWxIY0ZKa1YxWjVaVk0xZDFsWVNucGFWbWhPVkVSMFkySnVNSEJQTVhoMVdFYzBka3g1VFdkak1qa3hZMjFPYkZSWFJuZGpSMngxV2pGV1UxUkVNV3RaV0ZKb1QyMUdkMk5IZUhCWk1rWXdZVmM1ZFV3eWNIcGlNalEzV1RKb2FHTnVUbXhrUkRFeFpFZFpORTh5U21oak1sVXlUa040YkdWVmIzbFhiR2hMWlcxR1dFOVlWa3BoYlRrMlZFVk9TMlZ0U1hwV2JteGFUV3hhTmxOWGNIZFphMngwVW01d2FrMXNXWGRaTTJzMVpERnNXRlJ1U21wbFZHeDRXVEZvVjJKSFRuVmhNMXBxVFRCd2NWUkVTa2RqVm14WldqTmFhbEl3V2pWWmVrcFhWMVpTVm1RelZtaGlhekZ3VjBaT00yRlhTblJTYmxKaFYwVXhjRlF5ZURCYVJYaEVVMjVTV2xkRlNqTlpWbU14WW0xT05WTlVXa3BoTUZwRFZWWldSbU14VWxaU2EwcFZWVE5vUlZWV1ZrZFNhemgzWWtWS1VrMVZSbnBXVkVKSFVXeFdObVJGVWxKV1ZUVldWRVZXVjFGc1JsWldXRTVYVmxWYVExWnNUalJVYkVaV1VtczFVRTFIZUVOVmJHTXhVVEI0UjJKRlNsSldiWFI2VlZSQ1IxRnNSalprUlhCU1ZsWmFjRlJGVWxOUk1VWldVbFJDVW1GdVVrdFZWbFpPVFZaR2NHVkZOVkpXVlZwUFZFVldUMUZzUmxaVVdFNVdWbFZhUTFaV1RqUlRSa1pXVW10b1RWSnNXa05WVmxwV1l6Rk9WbEpyU2xSV1NGSlRWVlpXVG1Sc1JuQmxSWEJTVmxWYVMxUkZWbXRSYkVaV1dUTk9VazFGV2tOVldIQXdWV3hHVmxSc1RrMVNWbHBEVlZaV1ZtTXhSWGRTYTBwU1pWaG9SVlZXVmtkU2EzaEdWR3RLVWxaVk1YcFZNVlpIVVd4T1ZHVkZjRkpXVlZwTFZFVlZOVkZzUmxaUFNFNVVWbFZhUTFVeFRqUlVSa1pXVW10NFRWSnJXa05WVmxwT1l6RkZkMUpyU2xKbFdHaEZWVlpXUjFKRmVFWlVhMHBTVmxVd00xWXhWa2RTUjFaeVZGaE9WVlpWV2tOV1JrNDBVa1pHVmxKclVrMVNWM2hEVlZaV2NtTXhSWGRTYTBwU1pXNVNVMVZXVms5aFZYaEdWR3RLVWxaVk1ETldWbFpIVW14S1JHUXpaRkpoTUZwRFZGVldTazR4VmxaU2ExSk9WbFZzZWxsc1ZsTlJiRVpZVFZWV1VFMVZXa05WVkVreFVsVjRSbUpGU2xKV1YzUjZWVlJDUjFGc1JqWmtSbkJTVmxVMVRGUkZWbXRSYkVaV1dUTk9VMDFGV2tOVmJtdzBVa1pHVmxKcldrMVNWM2hEVlZaV2NtTXhVbFpTYTBwVlZUTm9SVlZXVmtkU1JYaEhWR3RLVWxack1YcFZiRlpIVVd4S1ZHVkZVbEpXVlZwSFZFVldUMUZzUmxaVVdFNWhWbFZhUTFkc1RqUlNSa1pXVW10YVRWSlhlRU5WVmxaeVl6RktWbEpyU2xOVk0yaFhWVlpXUjFacmVFWlVhMHBTVmxaV2VsVlVRa2RSYkVZMlpFWktVbFpWTkhkVmJFNDBVa1pHVmxKclVsQk5WVnBEVlZaV1RtTXhUWGRTYTBwVVpWaG9SVlZXVmtkU1JYaEdWR3RLVWxaV1ZucFZWRUpIVVd4S1ZHVkZVbEpXVlZwRlZFVldUMUZzUmxaVVdFNVNUVVZhUTFWWWNEQlhiRVpXVkcxMFRWSlhVa05WVmxacVl6RkpkMUpyU2xObFdHaFZWVlpXUjFaRmVFWlVhMHBTVmxVd00xWldWa2RTUjBaeVUxaE9VazFGV2tOVldIQXdWV3hHVmxaclZrMVNWbHBEVlZaV1ZtTXhSWGRTYTBwU1pWaG9SVlZXVmtkU2EzaEdWR3RLVWxaVk1YcFZha0pIVVd4S05XVkZjRkpXVlZwTFZFVldhMUZzUmxaWk0wNVNUVVZhUTFWWWJEUmtiRVp5VW10S2FVMUZiSHBWVkVKSFVXeEtWR1ZIYUZKV1ZWcHZWRVZXVDFGc1JsWldXRTVTVFVWYVExVlliRFJVYkVaV1VteENUVkpWTlVOVlZsWk9ZekZGZDFKclNsSmxXR2hGVlZaV1IxSkZPSGhpUlVwU1RXMW9SMVJGVlhoUmJFWldUVWhPVWsxRldrTlZXR3cwVkVaR1ZsSnJlRTFTVlRWRFZWWldWbU14Y0ZaU2EwcGhWVE5vU1ZWV1ZrZFRSWGhHWWtWS1VsWlhkSHBWVkVKSFVXeEtWR1ZGVWxKV1ZWcEZWSHBHUjFGc1JYcGhSVkpOVWxVMVExVldWazVPTVZaV1VtdFNVMUV6YUU5VlZsWkhWR3Q0UmxSclNsSldWVEY2VldwQ1IxRnNTalZsUlZKU1ZsVmFSVlI2UW5OUmJFVjRZak5PVWsxRldrTlZXR3cwVWtaR1ZsSnJVbEJOUjNoRFZXeFdXbU14VWxaU2EwcFZWVE5vUlZWV1ZrZFNSWGhHVFZWS1VsWlVRbnBWVkVKSFVXeEdOV1ZHU2xKV1ZWcFRWRVZXVDFGc1JsWlVWR1JTVmxWYVIxcEhkRXBqTVVWM1VtdEtVbVZZYUVWVlZsWkhVbXQ0UmxSclNsSldWVEZ3VkVWT1MySlhSbGhsUjNoS1lXMDVjRmRXYUU5bGJIQlpWVzV3VFUwd1NtOVhWRW93Wld0M2VXTklhR3RXTVZvMVdsWk5OV1Z0VG5SVVdGcGFWak5DYjFwVlRUVmtNV3haVTI1d1lWWnRhRTlXUlUweFkxZE9OVk5ZVGtwaWF6VXlXa1pvUzJGc2NGbFVhMUpwVFdwVmQxZHNZekZOUld4eFkwZEtTbUpXU25OWGJURnpaRlp3VkZveVpGaE5XR2d4VjBWb1Uxa3diSEJPU0ZaTlRXczFNbGt5TVZkWk1HeHpaVWhXV1ZVelpHNVhiVFZYWkZacmVsVnVRbWxOYWxKMlUxVmtkMVZ0VWxoV2JteHNWVEJHZDFOVmFEQlpNa3B6WlVoV1dWRXdiM2haZWtwV1dqSk5lbFZ1YkdoV01EUjNWMFZPU2s0eGFFaE9WMDVwWVZSb01sTlZWazlsVjBsNlZHNXdUVll3Y0RWWmFrNXJaV3h3V1ZOWFpHeFNla1o2VTFWb1EyRkhUblZVYmtKcFlsZFNhbGx0TVhkVmJWSllWbTVzYkZWNlZqTlhWbWhMWld4d1YyRkZOVlZSTUVVMVUxVmtZVTFYU25SVWFrSm9WbnBzTVZNd1RrTmhNV3haVlcxb1NsRXlkRzVhVkVZMFpGWm9TVlZxU2xwWFJXeHVXbFZqZUdNd09IaGxTRlpaVTBaS2QxZHRiRUppTUd4RVVtMTBXbGRHU205VFZXZzBUMFZzU1ZWcVZtcFNNVm95VjIxc1EyRXhiRmxWYldoS1VUQlZOVlZHVGtOWk1HeDFWR3BDYW1KWGVERlhha1l6WVZWc1JHRXlaR3hOV0dneFYwVm9VMWt5VWtsVGJYaHJVMFphTlZsdGJFTmtWMUpZWlVoT1VFMVlhREZYUldoVFQxWm9TRTVYVG1saVNHZDNWRWhyTkZveFZYcFdibVJxVW5wc05WcEZVblphTVU1V1ZsZGtVRlV3UmpCVFZWSkdaVVZzU0U5WVZtbFRSM2hxV1cxNE5FMUZlRFZQUjJSVVZsWldibHBGWkc5bFYwbDZXa2h3U2xKNmJERlRWV2hEWVVkT2RWUnRlRk5pYTNBeVdXeGFUMDFIVG5SaVNGWmhaVlZKZWxsV2FGTmlNR3hJWWtoV2EySlZXbnBaVm1SU1dqSkdXRTVZWkd0WFJrWXhWMFZqTVZreVVrbFZibXhzVlRCSk0xZEZZekZaTWxKSFpVUkNiRko2Um5wVFZWRjNXakIwUkZGdVZtRlhSMDV1V2tSS2MyUldjRWhQVkU1TllURktVVlpHV2tOaFIwNTFWRzE0YW1GWFpIZFRWVTV5WkZkT1NGSnViR3BOYkZwSVdUSXdOV1JHVlhwVmJteG9WbnBXZFZNd1RrTmhNV3haVlcxb1RWRXdTbXBUVnpWVFlrZFdTVlZZV214U2VrWjZWMFZPU2xvd2RGVmtSMDVwWWtobmQxcHNUa05oYkd4WlZXMXdhRkV3Um5aVFZXUldXakIwVkZGcVpGbFNlbFpxV2tWYU5FMUhWa2hOV0U1S1VrUkNibHBHWXpGaE1YQllWMjVDYVdKV1duSlVla1kwWkZab1NWVnFiRmxTZWxacVdXMTRORTFIUmxoWFYyUk1VVEJHYjFwVlkzaGpNR3hKWlVSb1NsTkhhREJaYTAweFlteHdXVlZyV21sU01Wb3dWMnhqTVUxSFRYZFRhbFpYVWpCYWRWWkhNVWRrUm5CVVdqSmtXVkV3Y0ROWFZtaExaV3h3V1ZOdGVHcGlhM0F5V1RKNE0yRlZiRVJoTTFacFVqRmFNVmRxVGxOaU1HeEVZVEprYkUxWWFERlhSV2hUV1RKU1NHTkdTbXRXTVZvMVdsWk5NV0pIVG5WVGJscHFZVmRrYmxkRlRrdFRiVXAxVjIxb2FWSXllSEpUVlZwdlZHeFNSV0l5WkZsUk1HeHVVek5zUTJFeGJGbFZiV2hLVVRKek0xZEZZekZaTWxKSlRWZE9hV0pJWjNkWk1qRlhUVWRTV1ZOdVZrcFRSMmd3V1d0U01Ga3lTblZOUkdSWlVucFdhbGx0TlV0aVIxSkpWbTVzYVdGVlNuaFdWbWhYWWtkT2RXRXpWbXBTTUZvMVdYcEtWMWRXVWxaa2VtUlpVbnBXYWxsdE5IZGFNSFJWWkVkT2FXRlZjR3RhYkVVNVVGWjRkVWxzTVRsY2JpSmRmUT09XG4iXX0=
