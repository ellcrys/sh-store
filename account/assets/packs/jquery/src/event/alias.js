define([
    "../core",
    "../event",
    "./trigger"
], function (jQuery) {
    "use strict";
    jQuery.each(("blur focus focusin focusout resize scroll click dblclick " +
        "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
        "change select submit keydown keypress keyup contextmenu").split(" "), function (i, name) {
        // Handle event binding
        jQuery.fn[name] = function (data, fn) {
            return arguments.length > 0 ?
                this.on(name, null, data, fn) :
                this.trigger(name);
        };
    });
    jQuery.fn.extend({
        hover: function (fnOver, fnOut) {
            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
        }
    });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2V2ZW50L2FsaWFzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBRTtJQUNQLFNBQVM7SUFFVCxVQUFVO0lBQ1YsV0FBVztDQUNYLEVBQUUsVUFBVSxNQUFNO0lBRW5CLFlBQVksQ0FBQztJQUViLE1BQU0sQ0FBQyxJQUFJLENBQUUsQ0FBRSwyREFBMkQ7UUFDekUsdUVBQXVFO1FBQ3ZFLHlEQUF5RCxDQUFFLENBQUMsS0FBSyxDQUFFLEdBQUcsQ0FBRSxFQUN4RSxVQUFVLENBQUMsRUFBRSxJQUFJO1FBRWpCLHVCQUF1QjtRQUN2QixNQUFNLENBQUMsRUFBRSxDQUFFLElBQUksQ0FBRSxHQUFHLFVBQVUsSUFBSSxFQUFFLEVBQUU7WUFDckMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQztnQkFDMUIsSUFBSSxDQUFDLEVBQUUsQ0FBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUU7Z0JBQy9CLElBQUksQ0FBQyxPQUFPLENBQUUsSUFBSSxDQUFFLENBQUM7UUFDdkIsQ0FBQyxDQUFDO0lBQ0gsQ0FBQyxDQUFFLENBQUM7SUFFSixNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBRTtRQUNqQixLQUFLLEVBQUUsVUFBVSxNQUFNLEVBQUUsS0FBSztZQUM3QixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBRSxNQUFNLENBQUUsQ0FBQyxVQUFVLENBQUUsS0FBSyxJQUFJLE1BQU0sQ0FBRSxDQUFDO1FBQ2hFLENBQUM7S0FDRCxDQUFFLENBQUM7QUFFSixDQUFDLENBQUUsQ0FBQyIsImZpbGUiOiJhc3NldHMvcGFja3MvanF1ZXJ5L3NyYy9ldmVudC9hbGlhcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZSggW1xuXHRcIi4uL2NvcmVcIixcblxuXHRcIi4uL2V2ZW50XCIsXG5cdFwiLi90cmlnZ2VyXCJcbl0sIGZ1bmN0aW9uKCBqUXVlcnkgKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5qUXVlcnkuZWFjaCggKCBcImJsdXIgZm9jdXMgZm9jdXNpbiBmb2N1c291dCByZXNpemUgc2Nyb2xsIGNsaWNrIGRibGNsaWNrIFwiICtcblx0XCJtb3VzZWRvd24gbW91c2V1cCBtb3VzZW1vdmUgbW91c2VvdmVyIG1vdXNlb3V0IG1vdXNlZW50ZXIgbW91c2VsZWF2ZSBcIiArXG5cdFwiY2hhbmdlIHNlbGVjdCBzdWJtaXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBjb250ZXh0bWVudVwiICkuc3BsaXQoIFwiIFwiICksXG5cdGZ1bmN0aW9uKCBpLCBuYW1lICkge1xuXG5cdC8vIEhhbmRsZSBldmVudCBiaW5kaW5nXG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMCA/XG5cdFx0XHR0aGlzLm9uKCBuYW1lLCBudWxsLCBkYXRhLCBmbiApIDpcblx0XHRcdHRoaXMudHJpZ2dlciggbmFtZSApO1xuXHR9O1xufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGhvdmVyOiBmdW5jdGlvbiggZm5PdmVyLCBmbk91dCApIHtcblx0XHRyZXR1cm4gdGhpcy5tb3VzZWVudGVyKCBmbk92ZXIgKS5tb3VzZWxlYXZlKCBmbk91dCB8fCBmbk92ZXIgKTtcblx0fVxufSApO1xuXG59ICk7XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2V2ZW50L2FsaWFzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQztJQUNILFNBQVM7SUFDVCxVQUFVO0lBQ1YsV0FBVztDQUNkLEVBQUUsVUFBVSxNQUFNO0lBQ2YsWUFBWSxDQUFDO0lBQ2IsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLDJEQUEyRDtRQUNwRSx1RUFBdUU7UUFDdkUseURBQXlELENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsVUFBVSxDQUFDLEVBQUUsSUFBSTtRQUN4Rix1QkFBdUI7UUFDdkIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxVQUFVLElBQUksRUFBRSxFQUFFO1lBQ2hDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUM7Z0JBQ3ZCLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDO2dCQUM3QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNCLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQyxDQUFDO0lBQ0gsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7UUFDYixLQUFLLEVBQUUsVUFBVSxNQUFNLEVBQUUsS0FBSztZQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxVQUFVLENBQUMsS0FBSyxJQUFJLE1BQU0sQ0FBQyxDQUFDO1FBQy9ELENBQUM7S0FDSixDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQztBQUVILG1rRUFBbWtFIiwiZmlsZSI6ImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2V2ZW50L2FsaWFzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcbiAgICBcIi4uL2NvcmVcIixcbiAgICBcIi4uL2V2ZW50XCIsXG4gICAgXCIuL3RyaWdnZXJcIlxuXSwgZnVuY3Rpb24gKGpRdWVyeSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIGpRdWVyeS5lYWNoKChcImJsdXIgZm9jdXMgZm9jdXNpbiBmb2N1c291dCByZXNpemUgc2Nyb2xsIGNsaWNrIGRibGNsaWNrIFwiICtcbiAgICAgICAgXCJtb3VzZWRvd24gbW91c2V1cCBtb3VzZW1vdmUgbW91c2VvdmVyIG1vdXNlb3V0IG1vdXNlZW50ZXIgbW91c2VsZWF2ZSBcIiArXG4gICAgICAgIFwiY2hhbmdlIHNlbGVjdCBzdWJtaXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBjb250ZXh0bWVudVwiKS5zcGxpdChcIiBcIiksIGZ1bmN0aW9uIChpLCBuYW1lKSB7XG4gICAgICAgIC8vIEhhbmRsZSBldmVudCBiaW5kaW5nXG4gICAgICAgIGpRdWVyeS5mbltuYW1lXSA9IGZ1bmN0aW9uIChkYXRhLCBmbikge1xuICAgICAgICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAwID9cbiAgICAgICAgICAgICAgICB0aGlzLm9uKG5hbWUsIG51bGwsIGRhdGEsIGZuKSA6XG4gICAgICAgICAgICAgICAgdGhpcy50cmlnZ2VyKG5hbWUpO1xuICAgICAgICB9O1xuICAgIH0pO1xuICAgIGpRdWVyeS5mbi5leHRlbmQoe1xuICAgICAgICBob3ZlcjogZnVuY3Rpb24gKGZuT3ZlciwgZm5PdXQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm1vdXNlZW50ZXIoZm5PdmVyKS5tb3VzZWxlYXZlKGZuT3V0IHx8IGZuT3Zlcik7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRnpjMlYwY3k5d1lXTnJjeTlxY1hWbGNua3ZjM0pqTDJWMlpXNTBMMkZzYVdGekxtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEUxQlFVMHNRMEZCUlR0SlFVTlFMRk5CUVZNN1NVRkZWQ3hWUVVGVk8wbEJRMVlzVjBGQlZ6dERRVU5ZTEVWQlFVVXNWVUZCVlN4TlFVRk5PMGxCUlc1Q0xGbEJRVmtzUTBGQlF6dEpRVVZpTEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVVc1EwRkJSU3d5UkVGQk1rUTdVVUZEZWtVc2RVVkJRWFZGTzFGQlEzWkZMSGxFUVVGNVJDeERRVUZGTEVOQlFVTXNTMEZCU3l4RFFVRkZMRWRCUVVjc1EwRkJSU3hGUVVONFJTeFZRVUZWTEVOQlFVTXNSVUZCUlN4SlFVRkpPMUZCUldwQ0xIVkNRVUYxUWp0UlFVTjJRaXhOUVVGTkxFTkJRVU1zUlVGQlJTeERRVUZGTEVsQlFVa3NRMEZCUlN4SFFVRkhMRlZCUVZVc1NVRkJTU3hGUVVGRkxFVkJRVVU3V1VGRGNrTXNUVUZCVFN4RFFVRkRMRk5CUVZNc1EwRkJReXhOUVVGTkxFZEJRVWNzUTBGQlF6dG5Ra0ZETVVJc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlJTeEpRVUZKTEVWQlFVVXNTVUZCU1N4RlFVRkZMRWxCUVVrc1JVRkJSU3hGUVVGRkxFTkJRVVU3WjBKQlF5OUNMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVVVzU1VGQlNTeERRVUZGTEVOQlFVTTdVVUZEZGtJc1EwRkJReXhEUVVGRE8wbEJRMGdzUTBGQlF5eERRVUZGTEVOQlFVTTdTVUZGU2l4TlFVRk5MRU5CUVVNc1JVRkJSU3hEUVVGRExFMUJRVTBzUTBGQlJUdFJRVU5xUWl4TFFVRkxMRVZCUVVVc1ZVRkJWU3hOUVVGTkxFVkJRVVVzUzBGQlN6dFpRVU0zUWl4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlJTeE5RVUZOTEVOQlFVVXNRMEZCUXl4VlFVRlZMRU5CUVVVc1MwRkJTeXhKUVVGSkxFMUJRVTBzUTBGQlJTeERRVUZETzFGQlEyaEZMRU5CUVVNN1MwRkRSQ3hEUVVGRkxFTkJRVU03UVVGRlNpeERRVUZETEVOQlFVVXNRMEZCUXlJc0ltWnBiR1VpT2lKaGMzTmxkSE12Y0dGamEzTXZhbkYxWlhKNUwzTnlZeTlsZG1WdWRDOWhiR2xoY3k1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbVJsWm1sdVpTZ2dXMXh1WEhSY0lpNHVMMk52Y21WY0lpeGNibHh1WEhSY0lpNHVMMlYyWlc1MFhDSXNYRzVjZEZ3aUxpOTBjbWxuWjJWeVhDSmNibDBzSUdaMWJtTjBhVzl1S0NCcVVYVmxjbmtnS1NCN1hHNWNibHdpZFhObElITjBjbWxqZEZ3aU8xeHVYRzVxVVhWbGNua3VaV0ZqYUNnZ0tDQmNJbUpzZFhJZ1ptOWpkWE1nWm05amRYTnBiaUJtYjJOMWMyOTFkQ0J5WlhOcGVtVWdjMk55YjJ4c0lHTnNhV05ySUdSaWJHTnNhV05ySUZ3aUlDdGNibHgwWENKdGIzVnpaV1J2ZDI0Z2JXOTFjMlYxY0NCdGIzVnpaVzF2ZG1VZ2JXOTFjMlZ2ZG1WeUlHMXZkWE5sYjNWMElHMXZkWE5sWlc1MFpYSWdiVzkxYzJWc1pXRjJaU0JjSWlBclhHNWNkRndpWTJoaGJtZGxJSE5sYkdWamRDQnpkV0p0YVhRZ2EyVjVaRzkzYmlCclpYbHdjbVZ6Y3lCclpYbDFjQ0JqYjI1MFpYaDBiV1Z1ZFZ3aUlDa3VjM0JzYVhRb0lGd2lJRndpSUNrc1hHNWNkR1oxYm1OMGFXOXVLQ0JwTENCdVlXMWxJQ2tnZTF4dVhHNWNkQzh2SUVoaGJtUnNaU0JsZG1WdWRDQmlhVzVrYVc1blhHNWNkR3BSZFdWeWVTNW1ibHNnYm1GdFpTQmRJRDBnWm5WdVkzUnBiMjRvSUdSaGRHRXNJR1p1SUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJoY21kMWJXVnVkSE11YkdWdVozUm9JRDRnTUNBL1hHNWNkRngwWEhSMGFHbHpMbTl1S0NCdVlXMWxMQ0J1ZFd4c0xDQmtZWFJoTENCbWJpQXBJRHBjYmx4MFhIUmNkSFJvYVhNdWRISnBaMmRsY2lnZ2JtRnRaU0FwTzF4dVhIUjlPMXh1ZlNBcE8xeHVYRzVxVVhWbGNua3VabTR1WlhoMFpXNWtLQ0I3WEc1Y2RHaHZkbVZ5T2lCbWRXNWpkR2x2YmlnZ1ptNVBkbVZ5TENCbWJrOTFkQ0FwSUh0Y2JseDBYSFJ5WlhSMWNtNGdkR2hwY3k1dGIzVnpaV1Z1ZEdWeUtDQm1iazkyWlhJZ0tTNXRiM1Z6Wld4bFlYWmxLQ0JtYms5MWRDQjhmQ0JtYms5MlpYSWdLVHRjYmx4MGZWeHVmU0FwTzF4dVhHNTlJQ2s3WEc0aVhYMD1cbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
