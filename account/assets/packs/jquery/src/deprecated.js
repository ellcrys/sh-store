define([
    "./core",
    "./core/nodeName"
], function (jQuery, nodeName) {
    "use strict";
    jQuery.fn.extend({
        bind: function (types, data, fn) {
            return this.on(types, null, data, fn);
        },
        unbind: function (types, fn) {
            return this.off(types, null, fn);
        },
        delegate: function (selector, types, data, fn) {
            return this.on(types, selector, data, fn);
        },
        undelegate: function (selector, types, fn) {
            // ( namespace ) or ( selector, types [, fn] )
            return arguments.length === 1 ?
                this.off(selector, "**") :
                this.off(types, selector || "**", fn);
        }
    });
    jQuery.holdReady = function (hold) {
        if (hold) {
            jQuery.readyWait++;
        }
        else {
            jQuery.ready(true);
        }
    };
    jQuery.isArray = Array.isArray;
    jQuery.parseJSON = JSON.parse;
    jQuery.nodeName = nodeName;
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2RlcHJlY2F0ZWQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFFO0lBQ1AsUUFBUTtJQUNSLGlCQUFpQjtDQUNqQixFQUFFLFVBQVUsTUFBTSxFQUFFLFFBQVE7SUFFN0IsWUFBWSxDQUFDO0lBRWIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUU7UUFFakIsSUFBSSxFQUFFLFVBQVUsS0FBSyxFQUFFLElBQUksRUFBRSxFQUFFO1lBQzlCLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBRSxDQUFDO1FBQ3pDLENBQUM7UUFDRCxNQUFNLEVBQUUsVUFBVSxLQUFLLEVBQUUsRUFBRTtZQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBRSxDQUFDO1FBQ3BDLENBQUM7UUFFRCxRQUFRLEVBQUUsVUFBVSxRQUFRLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxFQUFFO1lBQzVDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBRSxDQUFDO1FBQzdDLENBQUM7UUFDRCxVQUFVLEVBQUUsVUFBVSxRQUFRLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFFeEMsOENBQThDO1lBQzlDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxLQUFLLENBQUM7Z0JBQzVCLElBQUksQ0FBQyxHQUFHLENBQUUsUUFBUSxFQUFFLElBQUksQ0FBRTtnQkFDMUIsSUFBSSxDQUFDLEdBQUcsQ0FBRSxLQUFLLEVBQUUsUUFBUSxJQUFJLElBQUksRUFBRSxFQUFFLENBQUUsQ0FBQztRQUMxQyxDQUFDO0tBQ0QsQ0FBRSxDQUFDO0lBRUosTUFBTSxDQUFDLFNBQVMsR0FBRyxVQUFVLElBQUk7UUFDaEMsRUFBRSxDQUFDLENBQUUsSUFBSyxDQUFDLENBQUMsQ0FBQztZQUNaLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNwQixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDUCxNQUFNLENBQUMsS0FBSyxDQUFFLElBQUksQ0FBRSxDQUFDO1FBQ3RCLENBQUM7SUFDRixDQUFDLENBQUM7SUFDRixNQUFNLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUM7SUFDL0IsTUFBTSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQzlCLE1BQU0sQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0FBRTNCLENBQUMsQ0FBRSxDQUFDIiwiZmlsZSI6ImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2RlcHJlY2F0ZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoIFtcblx0XCIuL2NvcmVcIixcblx0XCIuL2NvcmUvbm9kZU5hbWVcIlxuXSwgZnVuY3Rpb24oIGpRdWVyeSwgbm9kZU5hbWUgKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0YmluZDogZnVuY3Rpb24oIHR5cGVzLCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZXMsIG51bGwsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuYmluZDogZnVuY3Rpb24oIHR5cGVzLCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vZmYoIHR5cGVzLCBudWxsLCBmbiApO1xuXHR9LFxuXG5cdGRlbGVnYXRlOiBmdW5jdGlvbiggc2VsZWN0b3IsIHR5cGVzLCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApO1xuXHR9LFxuXHR1bmRlbGVnYXRlOiBmdW5jdGlvbiggc2VsZWN0b3IsIHR5cGVzLCBmbiApIHtcblxuXHRcdC8vICggbmFtZXNwYWNlICkgb3IgKCBzZWxlY3RvciwgdHlwZXMgWywgZm5dIClcblx0XHRyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/XG5cdFx0XHR0aGlzLm9mZiggc2VsZWN0b3IsIFwiKipcIiApIDpcblx0XHRcdHRoaXMub2ZmKCB0eXBlcywgc2VsZWN0b3IgfHwgXCIqKlwiLCBmbiApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5ob2xkUmVhZHkgPSBmdW5jdGlvbiggaG9sZCApIHtcblx0aWYgKCBob2xkICkge1xuXHRcdGpRdWVyeS5yZWFkeVdhaXQrKztcblx0fSBlbHNlIHtcblx0XHRqUXVlcnkucmVhZHkoIHRydWUgKTtcblx0fVxufTtcbmpRdWVyeS5pc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbmpRdWVyeS5wYXJzZUpTT04gPSBKU09OLnBhcnNlO1xualF1ZXJ5Lm5vZGVOYW1lID0gbm9kZU5hbWU7XG5cbn0gKTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2RlcHJlY2F0ZWQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDO0lBQ0gsUUFBUTtJQUNSLGlCQUFpQjtDQUNwQixFQUFFLFVBQVUsTUFBTSxFQUFFLFFBQVE7SUFDekIsWUFBWSxDQUFDO0lBQ2IsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7UUFDYixJQUFJLEVBQUUsVUFBVSxLQUFLLEVBQUUsSUFBSSxFQUFFLEVBQUU7WUFDM0IsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDMUMsQ0FBQztRQUNELE1BQU0sRUFBRSxVQUFVLEtBQUssRUFBRSxFQUFFO1lBQ3ZCLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDckMsQ0FBQztRQUNELFFBQVEsRUFBRSxVQUFVLFFBQVEsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEVBQUU7WUFDekMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDOUMsQ0FBQztRQUNELFVBQVUsRUFBRSxVQUFVLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUNyQyw4Q0FBOEM7WUFDOUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEtBQUssQ0FBQztnQkFDekIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDO2dCQUN4QixJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxRQUFRLElBQUksSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQzlDLENBQUM7S0FDSixDQUFDLENBQUM7SUFDSCxNQUFNLENBQUMsU0FBUyxHQUFHLFVBQVUsSUFBSTtRQUM3QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ1AsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3ZCLENBQUM7UUFDRCxJQUFJLENBQUMsQ0FBQztZQUNGLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkIsQ0FBQztJQUNMLENBQUMsQ0FBQztJQUNGLE1BQU0sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQztJQUMvQixNQUFNLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDOUIsTUFBTSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7QUFDL0IsQ0FBQyxDQUFDLENBQUM7QUFFSCwrM0ZBQSszRiIsImZpbGUiOiJhc3NldHMvcGFja3MvanF1ZXJ5L3NyYy9kZXByZWNhdGVkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcbiAgICBcIi4vY29yZVwiLFxuICAgIFwiLi9jb3JlL25vZGVOYW1lXCJcbl0sIGZ1bmN0aW9uIChqUXVlcnksIG5vZGVOYW1lKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgalF1ZXJ5LmZuLmV4dGVuZCh7XG4gICAgICAgIGJpbmQ6IGZ1bmN0aW9uICh0eXBlcywgZGF0YSwgZm4pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm9uKHR5cGVzLCBudWxsLCBkYXRhLCBmbik7XG4gICAgICAgIH0sXG4gICAgICAgIHVuYmluZDogZnVuY3Rpb24gKHR5cGVzLCBmbikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMub2ZmKHR5cGVzLCBudWxsLCBmbik7XG4gICAgICAgIH0sXG4gICAgICAgIGRlbGVnYXRlOiBmdW5jdGlvbiAoc2VsZWN0b3IsIHR5cGVzLCBkYXRhLCBmbikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMub24odHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbik7XG4gICAgICAgIH0sXG4gICAgICAgIHVuZGVsZWdhdGU6IGZ1bmN0aW9uIChzZWxlY3RvciwgdHlwZXMsIGZuKSB7XG4gICAgICAgICAgICAvLyAoIG5hbWVzcGFjZSApIG9yICggc2VsZWN0b3IsIHR5cGVzIFssIGZuXSApXG4gICAgICAgICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/XG4gICAgICAgICAgICAgICAgdGhpcy5vZmYoc2VsZWN0b3IsIFwiKipcIikgOlxuICAgICAgICAgICAgICAgIHRoaXMub2ZmKHR5cGVzLCBzZWxlY3RvciB8fCBcIioqXCIsIGZuKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGpRdWVyeS5ob2xkUmVhZHkgPSBmdW5jdGlvbiAoaG9sZCkge1xuICAgICAgICBpZiAoaG9sZCkge1xuICAgICAgICAgICAgalF1ZXJ5LnJlYWR5V2FpdCsrO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgalF1ZXJ5LnJlYWR5KHRydWUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBqUXVlcnkuaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XG4gICAgalF1ZXJ5LnBhcnNlSlNPTiA9IEpTT04ucGFyc2U7XG4gICAgalF1ZXJ5Lm5vZGVOYW1lID0gbm9kZU5hbWU7XG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUZ6YzJWMGN5OXdZV05yY3k5cWNYVmxjbmt2YzNKakwyUmxjSEpsWTJGMFpXUXVhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1RVRkJUU3hEUVVGRk8wbEJRMUFzVVVGQlVUdEpRVU5TTEdsQ1FVRnBRanREUVVOcVFpeEZRVUZGTEZWQlFWVXNUVUZCVFN4RlFVRkZMRkZCUVZFN1NVRkZOMElzV1VGQldTeERRVUZETzBsQlJXSXNUVUZCVFN4RFFVRkRMRVZCUVVVc1EwRkJReXhOUVVGTkxFTkJRVVU3VVVGRmFrSXNTVUZCU1N4RlFVRkZMRlZCUVZVc1MwRkJTeXhGUVVGRkxFbEJRVWtzUlVGQlJTeEZRVUZGTzFsQlF6bENMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZGTEV0QlFVc3NSVUZCUlN4SlFVRkpMRVZCUVVVc1NVRkJTU3hGUVVGRkxFVkJRVVVzUTBGQlJTeERRVUZETzFGQlEzcERMRU5CUVVNN1VVRkRSQ3hOUVVGTkxFVkJRVVVzVlVGQlZTeExRVUZMTEVWQlFVVXNSVUZCUlR0WlFVTXhRaXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUlN4TFFVRkxMRVZCUVVVc1NVRkJTU3hGUVVGRkxFVkJRVVVzUTBGQlJTeERRVUZETzFGQlEzQkRMRU5CUVVNN1VVRkZSQ3hSUVVGUkxFVkJRVVVzVlVGQlZTeFJRVUZSTEVWQlFVVXNTMEZCU3l4RlFVRkZMRWxCUVVrc1JVRkJSU3hGUVVGRk8xbEJRelZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRkxFdEJRVXNzUlVGQlJTeFJRVUZSTEVWQlFVVXNTVUZCU1N4RlFVRkZMRVZCUVVVc1EwRkJSU3hEUVVGRE8xRkJRemRETEVOQlFVTTdVVUZEUkN4VlFVRlZMRVZCUVVVc1ZVRkJWU3hSUVVGUkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVWQlFVVTdXVUZGZUVNc09FTkJRVGhETzFsQlF6bERMRTFCUVUwc1EwRkJReXhUUVVGVExFTkJRVU1zVFVGQlRTeExRVUZMTEVOQlFVTTdaMEpCUXpWQ0xFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVVXNVVUZCVVN4RlFVRkZMRWxCUVVrc1EwRkJSVHRuUWtGRE1VSXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJSU3hMUVVGTExFVkJRVVVzVVVGQlVTeEpRVUZKTEVsQlFVa3NSVUZCUlN4RlFVRkZMRU5CUVVVc1EwRkJRenRSUVVNeFF5eERRVUZETzB0QlEwUXNRMEZCUlN4RFFVRkRPMGxCUlVvc1RVRkJUU3hEUVVGRExGTkJRVk1zUjBGQlJ5eFZRVUZWTEVsQlFVazdVVUZEYUVNc1JVRkJSU3hEUVVGRExFTkJRVVVzU1VGQlN5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTmFMRTFCUVUwc1EwRkJReXhUUVVGVExFVkJRVVVzUTBGQlF6dFJRVU53UWl4RFFVRkRPMUZCUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03V1VGRFVDeE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkZMRWxCUVVrc1EwRkJSU3hEUVVGRE8xRkJRM1JDTEVOQlFVTTdTVUZEUml4RFFVRkRMRU5CUVVNN1NVRkRSaXhOUVVGTkxFTkJRVU1zVDBGQlR5eEhRVUZITEV0QlFVc3NRMEZCUXl4UFFVRlBMRU5CUVVNN1NVRkRMMElzVFVGQlRTeERRVUZETEZOQlFWTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRE8wbEJRemxDTEUxQlFVMHNRMEZCUXl4UlFVRlJMRWRCUVVjc1VVRkJVU3hEUVVGRE8wRkJSVE5DTEVOQlFVTXNRMEZCUlN4RFFVRkRJaXdpWm1sc1pTSTZJbUZ6YzJWMGN5OXdZV05yY3k5cWNYVmxjbmt2YzNKakwyUmxjSEpsWTJGMFpXUXVhbk1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKa1pXWnBibVVvSUZ0Y2JseDBYQ0l1TDJOdmNtVmNJaXhjYmx4MFhDSXVMMk52Y21VdmJtOWtaVTVoYldWY0lseHVYU3dnWm5WdVkzUnBiMjRvSUdwUmRXVnllU3dnYm05a1pVNWhiV1VnS1NCN1hHNWNibHdpZFhObElITjBjbWxqZEZ3aU8xeHVYRzVxVVhWbGNua3VabTR1WlhoMFpXNWtLQ0I3WEc1Y2JseDBZbWx1WkRvZ1puVnVZM1JwYjI0b0lIUjVjR1Z6TENCa1lYUmhMQ0JtYmlBcElIdGNibHgwWEhSeVpYUjFjbTRnZEdocGN5NXZiaWdnZEhsd1pYTXNJRzUxYkd3c0lHUmhkR0VzSUdadUlDazdYRzVjZEgwc1hHNWNkSFZ1WW1sdVpEb2dablZ1WTNScGIyNG9JSFI1Y0dWekxDQm1iaUFwSUh0Y2JseDBYSFJ5WlhSMWNtNGdkR2hwY3k1dlptWW9JSFI1Y0dWekxDQnVkV3hzTENCbWJpQXBPMXh1WEhSOUxGeHVYRzVjZEdSbGJHVm5ZWFJsT2lCbWRXNWpkR2x2YmlnZ2MyVnNaV04wYjNJc0lIUjVjR1Z6TENCa1lYUmhMQ0JtYmlBcElIdGNibHgwWEhSeVpYUjFjbTRnZEdocGN5NXZiaWdnZEhsd1pYTXNJSE5sYkdWamRHOXlMQ0JrWVhSaExDQm1iaUFwTzF4dVhIUjlMRnh1WEhSMWJtUmxiR1ZuWVhSbE9pQm1kVzVqZEdsdmJpZ2djMlZzWldOMGIzSXNJSFI1Y0dWekxDQm1iaUFwSUh0Y2JseHVYSFJjZEM4dklDZ2dibUZ0WlhOd1lXTmxJQ2tnYjNJZ0tDQnpaV3hsWTNSdmNpd2dkSGx3WlhNZ1d5d2dabTVkSUNsY2JseDBYSFJ5WlhSMWNtNGdZWEpuZFcxbGJuUnpMbXhsYm1kMGFDQTlQVDBnTVNBL1hHNWNkRngwWEhSMGFHbHpMbTltWmlnZ2MyVnNaV04wYjNJc0lGd2lLaXBjSWlBcElEcGNibHgwWEhSY2RIUm9hWE11YjJabUtDQjBlWEJsY3l3Z2MyVnNaV04wYjNJZ2ZId2dYQ0lxS2x3aUxDQm1iaUFwTzF4dVhIUjlYRzU5SUNrN1hHNWNibXBSZFdWeWVTNW9iMnhrVW1WaFpIa2dQU0JtZFc1amRHbHZiaWdnYUc5c1pDQXBJSHRjYmx4MGFXWWdLQ0JvYjJ4a0lDa2dlMXh1WEhSY2RHcFJkV1Z5ZVM1eVpXRmtlVmRoYVhRckt6dGNibHgwZlNCbGJITmxJSHRjYmx4MFhIUnFVWFZsY25rdWNtVmhaSGtvSUhSeWRXVWdLVHRjYmx4MGZWeHVmVHRjYm1wUmRXVnllUzVwYzBGeWNtRjVJRDBnUVhKeVlYa3VhWE5CY25KaGVUdGNibXBSZFdWeWVTNXdZWEp6WlVwVFQwNGdQU0JLVTA5T0xuQmhjbk5sTzF4dWFsRjFaWEo1TG01dlpHVk9ZVzFsSUQwZ2JtOWtaVTVoYldVN1hHNWNibjBnS1R0Y2JpSmRmUT09XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
