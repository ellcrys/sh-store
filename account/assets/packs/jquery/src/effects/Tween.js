define([
    "../core",
    "../css"
], function (jQuery) {
    "use strict";
    function Tween(elem, options, prop, end, easing) {
        return new Tween.prototype.init(elem, options, prop, end, easing);
    }
    jQuery.Tween = Tween;
    Tween.prototype = {
        constructor: Tween,
        init: function (elem, options, prop, end, easing, unit) {
            this.elem = elem;
            this.prop = prop;
            this.easing = easing || jQuery.easing._default;
            this.options = options;
            this.start = this.now = this.cur();
            this.end = end;
            this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
        },
        cur: function () {
            var hooks = Tween.propHooks[this.prop];
            return hooks && hooks.get ?
                hooks.get(this) :
                Tween.propHooks._default.get(this);
        },
        run: function (percent) {
            var eased, hooks = Tween.propHooks[this.prop];
            if (this.options.duration) {
                this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
            }
            else {
                this.pos = eased = percent;
            }
            this.now = (this.end - this.start) * eased + this.start;
            if (this.options.step) {
                this.options.step.call(this.elem, this.now, this);
            }
            if (hooks && hooks.set) {
                hooks.set(this);
            }
            else {
                Tween.propHooks._default.set(this);
            }
            return this;
        }
    };
    Tween.prototype.init.prototype = Tween.prototype;
    Tween.propHooks = {
        _default: {
            get: function (tween) {
                var result;
                // Use a property on the element directly when it is not a DOM element,
                // or when there is no matching style property that exists.
                if (tween.elem.nodeType !== 1 ||
                    tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
                    return tween.elem[tween.prop];
                }
                // Passing an empty string as a 3rd parameter to .css will automatically
                // attempt a parseFloat and fallback to a string if the parse fails.
                // Simple values such as "10px" are parsed to Float;
                // complex values such as "rotate(1rad)" are returned as-is.
                result = jQuery.css(tween.elem, tween.prop, "");
                // Empty strings, null, undefined and "auto" are converted to 0.
                return !result || result === "auto" ? 0 : result;
            },
            set: function (tween) {
                // Use step hook for back compat.
                // Use cssHook if its there.
                // Use .style if available and use plain properties where available.
                if (jQuery.fx.step[tween.prop]) {
                    jQuery.fx.step[tween.prop](tween);
                }
                else if (tween.elem.nodeType === 1 &&
                    (tween.elem.style[jQuery.cssProps[tween.prop]] != null ||
                        jQuery.cssHooks[tween.prop])) {
                    jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
                }
                else {
                    tween.elem[tween.prop] = tween.now;
                }
            }
        }
    };
    // Support: IE <=9 only
    // Panic based approach to setting things on disconnected nodes
    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
        set: function (tween) {
            if (tween.elem.nodeType && tween.elem.parentNode) {
                tween.elem[tween.prop] = tween.now;
            }
        }
    };
    jQuery.easing = {
        linear: function (p) {
            return p;
        },
        swing: function (p) {
            return 0.5 - Math.cos(p * Math.PI) / 2;
        },
        _default: "swing"
    };
    jQuery.fx = Tween.prototype.init;
    // Back compat <1.8 extension point
    jQuery.fx.step = {};
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2VmZmVjdHMvVHdlZW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDO0lBQ0gsU0FBUztJQUNULFFBQVE7Q0FDWCxFQUFFLFVBQVUsTUFBTTtJQUNmLFlBQVksQ0FBQztJQUNiLGVBQWUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLE1BQU07UUFDM0MsTUFBTSxDQUFDLElBQUksS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3RFLENBQUM7SUFDRCxNQUFNLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNyQixLQUFLLENBQUMsU0FBUyxHQUFHO1FBQ2QsV0FBVyxFQUFFLEtBQUs7UUFDbEIsSUFBSSxFQUFFLFVBQVUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxJQUFJO1lBQ2xELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1lBQ2pCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1lBQ2pCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1lBQy9DLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDbkMsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7WUFDZixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQzdELENBQUM7UUFDRCxHQUFHLEVBQUU7WUFD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QUFFLFVBQVUsS0FBSztZQUNoQixFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7Z0JBQy9DLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUM7WUFDdkMsQ0FBQztRQUNMLENBQUM7S0FDSixDQUFDO0lBQ0YsTUFBTSxDQUFDLE1BQU0sR0FBRztRQUNaLE1BQU0sRUFBRSxVQUFVLENBQUM7WUFDZixNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ2IsQ0FBQztRQUNELEtBQUssRUFBRSxVQUFVLENBQUM7WUFDZCxNQUFNLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDM0MsQ0FBQztRQUNELFFBQVEsRUFBRSxPQUFPO0tBQ3BCLENBQUM7SUFDRixNQUFNLENBQUMsRUFBRSxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO0lBQ2pDLG1DQUFtQztJQUNuQyxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7QUFDeEIsQ0FBQyxDQUFDLENBQUM7QUFFSCwyeVVBQTJ5VSIsImZpbGUiOiJhc3NldHMvcGFja3MvanF1ZXJ5L3NyYy9lZmZlY3RzL1R3ZWVuLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcbiAgICBcIi4uL2NvcmVcIixcbiAgICBcIi4uL2Nzc1wiXG5dLCBmdW5jdGlvbiAoalF1ZXJ5KSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgZnVuY3Rpb24gVHdlZW4oZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBUd2Vlbi5wcm90b3R5cGUuaW5pdChlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyk7XG4gICAgfVxuICAgIGpRdWVyeS5Ud2VlbiA9IFR3ZWVuO1xuICAgIFR3ZWVuLnByb3RvdHlwZSA9IHtcbiAgICAgICAgY29uc3RydWN0b3I6IFR3ZWVuLFxuICAgICAgICBpbml0OiBmdW5jdGlvbiAoZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcsIHVuaXQpIHtcbiAgICAgICAgICAgIHRoaXMuZWxlbSA9IGVsZW07XG4gICAgICAgICAgICB0aGlzLnByb3AgPSBwcm9wO1xuICAgICAgICAgICAgdGhpcy5lYXNpbmcgPSBlYXNpbmcgfHwgalF1ZXJ5LmVhc2luZy5fZGVmYXVsdDtcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgICAgICB0aGlzLnN0YXJ0ID0gdGhpcy5ub3cgPSB0aGlzLmN1cigpO1xuICAgICAgICAgICAgdGhpcy5lbmQgPSBlbmQ7XG4gICAgICAgICAgICB0aGlzLnVuaXQgPSB1bml0IHx8IChqUXVlcnkuY3NzTnVtYmVyW3Byb3BdID8gXCJcIiA6IFwicHhcIik7XG4gICAgICAgIH0sXG4gICAgICAgIGN1cjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzW3RoaXMucHJvcF07XG4gICAgICAgICAgICByZXR1cm4gaG9va3MgJiYgaG9va3MuZ2V0ID9cbiAgICAgICAgICAgICAgICBob29rcy5nZXQodGhpcykgOlxuICAgICAgICAgICAgICAgIFR3ZWVuLnByb3BIb29rcy5fZGVmYXVsdC5nZXQodGhpcyk7XG4gICAgICAgIH0sXG4gICAgICAgIHJ1bjogZnVuY3Rpb24gKHBlcmNlbnQpIHtcbiAgICAgICAgICAgIHZhciBlYXNlZCwgaG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbdGhpcy5wcm9wXTtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuZHVyYXRpb24pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBvcyA9IGVhc2VkID0galF1ZXJ5LmVhc2luZ1t0aGlzLmVhc2luZ10ocGVyY2VudCwgdGhpcy5vcHRpb25zLmR1cmF0aW9uICogcGVyY2VudCwgMCwgMSwgdGhpcy5vcHRpb25zLmR1cmF0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMucG9zID0gZWFzZWQgPSBwZXJjZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5ub3cgPSAodGhpcy5lbmQgLSB0aGlzLnN0YXJ0KSAqIGVhc2VkICsgdGhpcy5zdGFydDtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuc3RlcCkge1xuICAgICAgICAgICAgICAgIHRoaXMub3B0aW9ucy5zdGVwLmNhbGwodGhpcy5lbGVtLCB0aGlzLm5vdywgdGhpcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaG9va3MgJiYgaG9va3Muc2V0KSB7XG4gICAgICAgICAgICAgICAgaG9va3Muc2V0KHRoaXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgVHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LnNldCh0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBUd2Vlbi5wcm90b3R5cGUuaW5pdC5wcm90b3R5cGUgPSBUd2Vlbi5wcm90b3R5cGU7XG4gICAgVHdlZW4ucHJvcEhvb2tzID0ge1xuICAgICAgICBfZGVmYXVsdDoge1xuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAodHdlZW4pIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0O1xuICAgICAgICAgICAgICAgIC8vIFVzZSBhIHByb3BlcnR5IG9uIHRoZSBlbGVtZW50IGRpcmVjdGx5IHdoZW4gaXQgaXMgbm90IGEgRE9NIGVsZW1lbnQsXG4gICAgICAgICAgICAgICAgLy8gb3Igd2hlbiB0aGVyZSBpcyBubyBtYXRjaGluZyBzdHlsZSBwcm9wZXJ0eSB0aGF0IGV4aXN0cy5cbiAgICAgICAgICAgICAgICBpZiAodHdlZW4uZWxlbS5ub2RlVHlwZSAhPT0gMSB8fFxuICAgICAgICAgICAgICAgICAgICB0d2Vlbi5lbGVtW3R3ZWVuLnByb3BdICE9IG51bGwgJiYgdHdlZW4uZWxlbS5zdHlsZVt0d2Vlbi5wcm9wXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0d2Vlbi5lbGVtW3R3ZWVuLnByb3BdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBQYXNzaW5nIGFuIGVtcHR5IHN0cmluZyBhcyBhIDNyZCBwYXJhbWV0ZXIgdG8gLmNzcyB3aWxsIGF1dG9tYXRpY2FsbHlcbiAgICAgICAgICAgICAgICAvLyBhdHRlbXB0IGEgcGFyc2VGbG9hdCBhbmQgZmFsbGJhY2sgdG8gYSBzdHJpbmcgaWYgdGhlIHBhcnNlIGZhaWxzLlxuICAgICAgICAgICAgICAgIC8vIFNpbXBsZSB2YWx1ZXMgc3VjaCBhcyBcIjEwcHhcIiBhcmUgcGFyc2VkIHRvIEZsb2F0O1xuICAgICAgICAgICAgICAgIC8vIGNvbXBsZXggdmFsdWVzIHN1Y2ggYXMgXCJyb3RhdGUoMXJhZClcIiBhcmUgcmV0dXJuZWQgYXMtaXMuXG4gICAgICAgICAgICAgICAgcmVzdWx0ID0galF1ZXJ5LmNzcyh0d2Vlbi5lbGVtLCB0d2Vlbi5wcm9wLCBcIlwiKTtcbiAgICAgICAgICAgICAgICAvLyBFbXB0eSBzdHJpbmdzLCBudWxsLCB1bmRlZmluZWQgYW5kIFwiYXV0b1wiIGFyZSBjb252ZXJ0ZWQgdG8gMC5cbiAgICAgICAgICAgICAgICByZXR1cm4gIXJlc3VsdCB8fCByZXN1bHQgPT09IFwiYXV0b1wiID8gMCA6IHJlc3VsdDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uICh0d2Vlbikge1xuICAgICAgICAgICAgICAgIC8vIFVzZSBzdGVwIGhvb2sgZm9yIGJhY2sgY29tcGF0LlxuICAgICAgICAgICAgICAgIC8vIFVzZSBjc3NIb29rIGlmIGl0cyB0aGVyZS5cbiAgICAgICAgICAgICAgICAvLyBVc2UgLnN0eWxlIGlmIGF2YWlsYWJsZSBhbmQgdXNlIHBsYWluIHByb3BlcnRpZXMgd2hlcmUgYXZhaWxhYmxlLlxuICAgICAgICAgICAgICAgIGlmIChqUXVlcnkuZnguc3RlcFt0d2Vlbi5wcm9wXSkge1xuICAgICAgICAgICAgICAgICAgICBqUXVlcnkuZnguc3RlcFt0d2Vlbi5wcm9wXSh0d2Vlbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHR3ZWVuLmVsZW0ubm9kZVR5cGUgPT09IDEgJiZcbiAgICAgICAgICAgICAgICAgICAgKHR3ZWVuLmVsZW0uc3R5bGVbalF1ZXJ5LmNzc1Byb3BzW3R3ZWVuLnByb3BdXSAhPSBudWxsIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkuY3NzSG9va3NbdHdlZW4ucHJvcF0pKSB7XG4gICAgICAgICAgICAgICAgICAgIGpRdWVyeS5zdHlsZSh0d2Vlbi5lbGVtLCB0d2Vlbi5wcm9wLCB0d2Vlbi5ub3cgKyB0d2Vlbi51bml0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHR3ZWVuLmVsZW1bdHdlZW4ucHJvcF0gPSB0d2Vlbi5ub3c7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICAvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuICAgIC8vIFBhbmljIGJhc2VkIGFwcHJvYWNoIHRvIHNldHRpbmcgdGhpbmdzIG9uIGRpc2Nvbm5lY3RlZCBub2Rlc1xuICAgIFR3ZWVuLnByb3BIb29rcy5zY3JvbGxUb3AgPSBUd2Vlbi5wcm9wSG9va3Muc2Nyb2xsTGVmdCA9IHtcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodHdlZW4pIHtcbiAgICAgICAgICAgIGlmICh0d2Vlbi5lbGVtLm5vZGVUeXBlICYmIHR3ZWVuLmVsZW0ucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgICAgIHR3ZWVuLmVsZW1bdHdlZW4ucHJvcF0gPSB0d2Vlbi5ub3c7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGpRdWVyeS5lYXNpbmcgPSB7XG4gICAgICAgIGxpbmVhcjogZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgIHJldHVybiBwO1xuICAgICAgICB9LFxuICAgICAgICBzd2luZzogZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgIHJldHVybiAwLjUgLSBNYXRoLmNvcyhwICogTWF0aC5QSSkgLyAyO1xuICAgICAgICB9LFxuICAgICAgICBfZGVmYXVsdDogXCJzd2luZ1wiXG4gICAgfTtcbiAgICBqUXVlcnkuZnggPSBUd2Vlbi5wcm90b3R5cGUuaW5pdDtcbiAgICAvLyBCYWNrIGNvbXBhdCA8MS44IGV4dGVuc2lvbiBwb2ludFxuICAgIGpRdWVyeS5meC5zdGVwID0ge307XG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUZ6YzJWMGN5OXdZV05yY3k5cWNYVmxjbmt2YzNKakwyVm1abVZqZEhNdlZIZGxaVzR1YW5NaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNUVUZCVFN4RFFVRkZPMGxCUTFBc1UwRkJVenRKUVVOVUxGRkJRVkU3UTBGRFVpeEZRVUZGTEZWQlFWVXNUVUZCVFR0SlFVVnVRaXhaUVVGWkxFTkJRVU03U1VGRllpeGxRVUZuUWl4SlFVRkpMRVZCUVVVc1QwRkJUeXhGUVVGRkxFbEJRVWtzUlVGQlJTeEhRVUZITEVWQlFVVXNUVUZCVFR0UlFVTXZReXhOUVVGTkxFTkJRVU1zU1VGQlNTeExRVUZMTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJSU3hKUVVGSkxFVkJRVVVzVDBGQlR5eEZRVUZGTEVsQlFVa3NSVUZCUlN4SFFVRkhMRVZCUVVVc1RVRkJUU3hEUVVGRkxFTkJRVU03U1VGRGNrVXNRMEZCUXp0SlFVTkVMRTFCUVUwc1EwRkJReXhMUVVGTExFZEJRVWNzUzBGQlN5eERRVUZETzBsQlJYSkNMRXRCUVVzc1EwRkJReXhUUVVGVExFZEJRVWM3VVVGRGFrSXNWMEZCVnl4RlFVRkZMRXRCUVVzN1VVRkRiRUlzU1VGQlNTeEZRVUZGTEZWQlFWVXNTVUZCU1N4RlFVRkZMRTlCUVU4c1JVRkJSU3hKUVVGSkxFVkJRVVVzUjBGQlJ5eEZRVUZGTEUxQlFVMHNSVUZCUlN4SlFVRkpPMWxCUTNKRUxFbEJRVWtzUTBGQlF5eEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRPMWxCUTJwQ0xFbEJRVWtzUTBGQlF5eEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRPMWxCUTJwQ0xFbEJRVWtzUTBGQlF5eE5RVUZOTEVkQlFVY3NUVUZCVFN4SlFVRkpMRTFCUVUwc1EwRkJReXhOUVVGTkxFTkJRVU1zVVVGQlVTeERRVUZETzFsQlF5OURMRWxCUVVrc1EwRkJReXhQUVVGUExFZEJRVWNzVDBGQlR5eERRVUZETzFsQlEzWkNMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzU1VGQlNTeERRVUZETEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1IwRkJSeXhGUVVGRkxFTkJRVU03V1VGRGJrTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1IwRkJSeXhIUVVGSExFTkJRVU03V1VGRFppeEpRVUZKTEVOQlFVTXNTVUZCU1N4SFFVRkhMRWxCUVVrc1NVRkJTU3hEUVVGRkxFMUJRVTBzUTBGQlF5eFRRVUZUTEVOQlFVVXNTVUZCU1N4RFFVRkZMRWRCUVVjc1JVRkJSU3hIUVVGSExFbEJRVWtzUTBGQlJTeERRVUZETzFGQlF6bEVMRU5CUVVNN1VVRkRSQ3hIUVVGSExFVkJRVVU3V1VGRFNpeEpRVUZKTEV0QlFVc3NSMEZCUnl4TFFVRkxMRU5CUVVNc1UwRkJVeXhEUVVGRkxFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVVXNRMEZCUXp0WlFVVjZReXhOUVVGTkxFTkJRVU1zUzBGQlN5eEpRVUZKTEV0QlFVc3NRMEZCUXl4SFFVRkhPMmRDUVVONFFpeExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkZMRWxCUVVrc1EwRkJSVHRuUWtGRGFrSXNTMEZCU3l4RFFVRkRMRk5CUVZNc1EwRkJReXhSUVVGUkxFTkJRVU1zUjBGQlJ5eERRVUZGTEVsQlFVa3NRMEZCUlN4RFFVRkRPMUZCUTNaRExFTkJRVU03VVVGRFJDeEhRVUZITEVWQlFVVXNWVUZCVlN4UFFVRlBPMWxCUTNKQ0xFbEJRVWtzUzBGQlN5eEZRVU5TTEV0QlFVc3NSMEZCUnl4TFFVRkxMRU5CUVVNc1UwRkJVeXhEUVVGRkxFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVVXNRMEZCUXp0WlFVVjBReXhGUVVGRkxFTkJRVU1zUTBGQlJTeEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRkZCUVZNc1EwRkJReXhEUVVGRExFTkJRVU03WjBKQlF6ZENMRWxCUVVrc1EwRkJReXhIUVVGSExFZEJRVWNzUzBGQlN5eEhRVUZITEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVVc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlJTeERRVU01UXl4UFFVRlBMRVZCUVVVc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eFJRVUZSTEVkQlFVY3NUMEZCVHl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4UlFVRlJMRU5CUTNKRkxFTkJRVU03V1VGRFNDeERRVUZETzFsQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1owSkJRMUFzU1VGQlNTeERRVUZETEVkQlFVY3NSMEZCUnl4TFFVRkxMRWRCUVVjc1QwRkJUeXhEUVVGRE8xbEJRelZDTEVOQlFVTTdXVUZEUkN4SlFVRkpMRU5CUVVNc1IwRkJSeXhIUVVGSExFTkJRVVVzU1VGQlNTeERRVUZETEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRkxFZEJRVWNzUzBGQlN5eEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNN1dVRkZNVVFzUlVGQlJTeERRVUZETEVOQlFVVXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhKUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTjZRaXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVVc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeEpRVUZKTEVOQlFVTXNSMEZCUnl4RlFVRkZMRWxCUVVrc1EwRkJSU3hEUVVGRE8xbEJRM0pFTEVOQlFVTTdXVUZGUkN4RlFVRkZMRU5CUVVNc1EwRkJSU3hMUVVGTExFbEJRVWtzUzBGQlN5eERRVUZETEVkQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRekZDTEV0QlFVc3NRMEZCUXl4SFFVRkhMRU5CUVVVc1NVRkJTU3hEUVVGRkxFTkJRVU03V1VGRGJrSXNRMEZCUXp0WlFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8yZENRVU5RTEV0QlFVc3NRMEZCUXl4VFFVRlRMRU5CUVVNc1VVRkJVU3hEUVVGRExFZEJRVWNzUTBGQlJTeEpRVUZKTEVOQlFVVXNRMEZCUXp0WlFVTjBReXhEUVVGRE8xbEJRMFFzVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXp0UlFVTmlMRU5CUVVNN1MwRkRSQ3hEUVVGRE8wbEJSVVlzUzBGQlN5eERRVUZETEZOQlFWTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1UwRkJVeXhIUVVGSExFdEJRVXNzUTBGQlF5eFRRVUZUTEVOQlFVTTdTVUZGYWtRc1MwRkJTeXhEUVVGRExGTkJRVk1zUjBGQlJ6dFJRVU5xUWl4UlFVRlJMRVZCUVVVN1dVRkRWQ3hIUVVGSExFVkJRVVVzVlVGQlZTeExRVUZMTzJkQ1FVTnVRaXhKUVVGSkxFMUJRVTBzUTBGQlF6dG5Ra0ZGV0N4MVJVRkJkVVU3WjBKQlEzWkZMREpFUVVFeVJEdG5Ra0ZETTBRc1JVRkJSU3hEUVVGRExFTkJRVVVzUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRXRCUVVzc1EwRkJRenR2UWtGRE4wSXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJSU3hMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZGTEVsQlFVa3NTVUZCU1N4SlFVRkpMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZGTEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVVc1NVRkJTU3hKUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETzI5Q1FVTTVSU3hOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUlN4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRkxFTkJRVU03WjBKQlEycERMRU5CUVVNN1owSkJSVVFzZDBWQlFYZEZPMmRDUVVONFJTeHZSVUZCYjBVN1owSkJRM0JGTEc5RVFVRnZSRHRuUWtGRGNFUXNORVJCUVRSRU8yZENRVU0xUkN4TlFVRk5MRWRCUVVjc1RVRkJUU3hEUVVGRExFZEJRVWNzUTBGQlJTeExRVUZMTEVOQlFVTXNTVUZCU1N4RlFVRkZMRXRCUVVzc1EwRkJReXhKUVVGSkxFVkJRVVVzUlVGQlJTeERRVUZGTEVOQlFVTTdaMEpCUld4RUxHZEZRVUZuUlR0blFrRkRhRVVzVFVGQlRTeERRVUZETEVOQlFVTXNUVUZCVFN4SlFVRkpMRTFCUVUwc1MwRkJTeXhOUVVGTkxFZEJRVWNzUTBGQlF5eEhRVUZITEUxQlFVMHNRMEZCUXp0WlFVTnNSQ3hEUVVGRE8xbEJRMFFzUjBGQlJ5eEZRVUZGTEZWQlFWVXNTMEZCU3p0blFrRkZia0lzYVVOQlFXbERPMmRDUVVOcVF5dzBRa0ZCTkVJN1owSkJRelZDTEc5RlFVRnZSVHRuUWtGRGNFVXNSVUZCUlN4RFFVRkRMRU5CUVVVc1RVRkJUU3hEUVVGRExFVkJRVVVzUTBGQlF5eEpRVUZKTEVOQlFVVXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZEY0VNc1RVRkJUU3hEUVVGRExFVkJRVVVzUTBGQlF5eEpRVUZKTEVOQlFVVXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJSU3hEUVVGRkxFdEJRVXNzUTBGQlJTeERRVUZETzJkQ1FVTjJReXhEUVVGRE8yZENRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJSU3hMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNTMEZCU3l4RFFVRkRPMjlDUVVOd1F5eERRVUZGTEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRkxFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVVXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJSU3hEUVVGRkxFbEJRVWtzU1VGQlNUdDNRa0ZETVVRc1RVRkJUU3hEUVVGRExGRkJRVkVzUTBGQlJTeExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkZMRU5CUVVjc1EwRkJReXhEUVVGRExFTkJRVU03YjBKQlEzQkRMRTFCUVUwc1EwRkJReXhMUVVGTExFTkJRVVVzUzBGQlN5eERRVUZETEVsQlFVa3NSVUZCUlN4TFFVRkxMRU5CUVVNc1NVRkJTU3hGUVVGRkxFdEJRVXNzUTBGQlF5eEhRVUZITEVkQlFVY3NTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJSU3hEUVVGRE8yZENRVU5vUlN4RFFVRkRPMmRDUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzI5Q1FVTlFMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVVVzUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUlN4SFFVRkhMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU03WjBKQlEzUkRMRU5CUVVNN1dVRkRSaXhEUVVGRE8xTkJRMFE3UzBGRFJDeERRVUZETzBsQlJVWXNkVUpCUVhWQ08wbEJRM1pDTEN0RVFVRXJSRHRKUVVNdlJDeExRVUZMTEVOQlFVTXNVMEZCVXl4RFFVRkRMRk5CUVZNc1IwRkJSeXhMUVVGTExFTkJRVU1zVTBGQlV5eERRVUZETEZWQlFWVXNSMEZCUnp0UlFVTjRSQ3hIUVVGSExFVkJRVVVzVlVGQlZTeExRVUZMTzFsQlEyNUNMRVZCUVVVc1EwRkJReXhEUVVGRkxFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4SlFVRkpMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zVlVGQlZ5eERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRjRVFzUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUlN4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRkxFZEJRVWNzUzBGQlN5eERRVUZETEVkQlFVY3NRMEZCUXp0WlFVTjBReXhEUVVGRE8xRkJRMFlzUTBGQlF6dExRVU5FTEVOQlFVTTdTVUZGUml4TlFVRk5MRU5CUVVNc1RVRkJUU3hIUVVGSE8xRkJRMllzVFVGQlRTeEZRVUZGTEZWQlFWVXNRMEZCUXp0WlFVTnNRaXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETzFGQlExWXNRMEZCUXp0UlFVTkVMRXRCUVVzc1JVRkJSU3hWUVVGVkxFTkJRVU03V1VGRGFrSXNUVUZCVFN4RFFVRkRMRWRCUVVjc1IwRkJSeXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZGTEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRkxFZEJRVWNzUTBGQlF5eERRVUZETzFGQlF6RkRMRU5CUVVNN1VVRkRSQ3hSUVVGUkxFVkJRVVVzVDBGQlR6dExRVU5xUWl4RFFVRkRPMGxCUlVZc1RVRkJUU3hEUVVGRExFVkJRVVVzUjBGQlJ5eExRVUZMTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJRenRKUVVWcVF5eHRRMEZCYlVNN1NVRkRia01zVFVGQlRTeERRVUZETEVWQlFVVXNRMEZCUXl4SlFVRkpMRWRCUVVjc1JVRkJSU3hEUVVGRE8wRkJSWEJDTEVOQlFVTXNRMEZCUlN4RFFVRkRJaXdpWm1sc1pTSTZJbUZ6YzJWMGN5OXdZV05yY3k5cWNYVmxjbmt2YzNKakwyVm1abVZqZEhNdlZIZGxaVzR1YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SmtaV1pwYm1Vb0lGdGNibHgwWENJdUxpOWpiM0psWENJc1hHNWNkRndpTGk0dlkzTnpYQ0pjYmwwc0lHWjFibU4wYVc5dUtDQnFVWFZsY25rZ0tTQjdYRzVjYmx3aWRYTmxJSE4wY21samRGd2lPMXh1WEc1bWRXNWpkR2x2YmlCVWQyVmxiaWdnWld4bGJTd2diM0IwYVc5dWN5d2djSEp2Y0N3Z1pXNWtMQ0JsWVhOcGJtY2dLU0I3WEc1Y2RISmxkSFZ5YmlCdVpYY2dWSGRsWlc0dWNISnZkRzkwZVhCbExtbHVhWFFvSUdWc1pXMHNJRzl3ZEdsdmJuTXNJSEJ5YjNBc0lHVnVaQ3dnWldGemFXNW5JQ2s3WEc1OVhHNXFVWFZsY25rdVZIZGxaVzRnUFNCVWQyVmxianRjYmx4dVZIZGxaVzR1Y0hKdmRHOTBlWEJsSUQwZ2UxeHVYSFJqYjI1emRISjFZM1J2Y2pvZ1ZIZGxaVzRzWEc1Y2RHbHVhWFE2SUdaMWJtTjBhVzl1S0NCbGJHVnRMQ0J2Y0hScGIyNXpMQ0J3Y205d0xDQmxibVFzSUdWaGMybHVaeXdnZFc1cGRDQXBJSHRjYmx4MFhIUjBhR2x6TG1Wc1pXMGdQU0JsYkdWdE8xeHVYSFJjZEhSb2FYTXVjSEp2Y0NBOUlIQnliM0E3WEc1Y2RGeDBkR2hwY3k1bFlYTnBibWNnUFNCbFlYTnBibWNnZkh3Z2FsRjFaWEo1TG1WaGMybHVaeTVmWkdWbVlYVnNkRHRjYmx4MFhIUjBhR2x6TG05d2RHbHZibk1nUFNCdmNIUnBiMjV6TzF4dVhIUmNkSFJvYVhNdWMzUmhjblFnUFNCMGFHbHpMbTV2ZHlBOUlIUm9hWE11WTNWeUtDazdYRzVjZEZ4MGRHaHBjeTVsYm1RZ1BTQmxibVE3WEc1Y2RGeDBkR2hwY3k1MWJtbDBJRDBnZFc1cGRDQjhmQ0FvSUdwUmRXVnllUzVqYzNOT2RXMWlaWEpiSUhCeWIzQWdYU0EvSUZ3aVhDSWdPaUJjSW5CNFhDSWdLVHRjYmx4MGZTeGNibHgwWTNWeU9pQm1kVzVqZEdsdmJpZ3BJSHRjYmx4MFhIUjJZWElnYUc5dmEzTWdQU0JVZDJWbGJpNXdjbTl3U0c5dmEzTmJJSFJvYVhNdWNISnZjQ0JkTzF4dVhHNWNkRngwY21WMGRYSnVJR2h2YjJ0eklDWW1JR2h2YjJ0ekxtZGxkQ0EvWEc1Y2RGeDBYSFJvYjI5cmN5NW5aWFFvSUhSb2FYTWdLU0E2WEc1Y2RGeDBYSFJVZDJWbGJpNXdjbTl3U0c5dmEzTXVYMlJsWm1GMWJIUXVaMlYwS0NCMGFHbHpJQ2s3WEc1Y2RIMHNYRzVjZEhKMWJqb2dablZ1WTNScGIyNG9JSEJsY21ObGJuUWdLU0I3WEc1Y2RGeDBkbUZ5SUdWaGMyVmtMRnh1WEhSY2RGeDBhRzl2YTNNZ1BTQlVkMlZsYmk1d2NtOXdTRzl2YTNOYklIUm9hWE11Y0hKdmNDQmRPMXh1WEc1Y2RGeDBhV1lnS0NCMGFHbHpMbTl3ZEdsdmJuTXVaSFZ5WVhScGIyNGdLU0I3WEc1Y2RGeDBYSFIwYUdsekxuQnZjeUE5SUdWaGMyVmtJRDBnYWxGMVpYSjVMbVZoYzJsdVoxc2dkR2hwY3k1bFlYTnBibWNnWFNoY2JseDBYSFJjZEZ4MGNHVnlZMlZ1ZEN3Z2RHaHBjeTV2Y0hScGIyNXpMbVIxY21GMGFXOXVJQ29nY0dWeVkyVnVkQ3dnTUN3Z01Td2dkR2hwY3k1dmNIUnBiMjV6TG1SMWNtRjBhVzl1WEc1Y2RGeDBYSFFwTzF4dVhIUmNkSDBnWld4elpTQjdYRzVjZEZ4MFhIUjBhR2x6TG5CdmN5QTlJR1ZoYzJWa0lEMGdjR1Z5WTJWdWREdGNibHgwWEhSOVhHNWNkRngwZEdocGN5NXViM2NnUFNBb0lIUm9hWE11Wlc1a0lDMGdkR2hwY3k1emRHRnlkQ0FwSUNvZ1pXRnpaV1FnS3lCMGFHbHpMbk4wWVhKME8xeHVYRzVjZEZ4MGFXWWdLQ0IwYUdsekxtOXdkR2x2Ym5NdWMzUmxjQ0FwSUh0Y2JseDBYSFJjZEhSb2FYTXViM0IwYVc5dWN5NXpkR1Z3TG1OaGJHd29JSFJvYVhNdVpXeGxiU3dnZEdocGN5NXViM2NzSUhSb2FYTWdLVHRjYmx4MFhIUjlYRzVjYmx4MFhIUnBaaUFvSUdodmIydHpJQ1ltSUdodmIydHpMbk5sZENBcElIdGNibHgwWEhSY2RHaHZiMnR6TG5ObGRDZ2dkR2hwY3lBcE8xeHVYSFJjZEgwZ1pXeHpaU0I3WEc1Y2RGeDBYSFJVZDJWbGJpNXdjbTl3U0c5dmEzTXVYMlJsWm1GMWJIUXVjMlYwS0NCMGFHbHpJQ2s3WEc1Y2RGeDBmVnh1WEhSY2RISmxkSFZ5YmlCMGFHbHpPMXh1WEhSOVhHNTlPMXh1WEc1VWQyVmxiaTV3Y205MGIzUjVjR1V1YVc1cGRDNXdjbTkwYjNSNWNHVWdQU0JVZDJWbGJpNXdjbTkwYjNSNWNHVTdYRzVjYmxSM1pXVnVMbkJ5YjNCSWIyOXJjeUE5SUh0Y2JseDBYMlJsWm1GMWJIUTZJSHRjYmx4MFhIUm5aWFE2SUdaMWJtTjBhVzl1S0NCMGQyVmxiaUFwSUh0Y2JseDBYSFJjZEhaaGNpQnlaWE4xYkhRN1hHNWNibHgwWEhSY2RDOHZJRlZ6WlNCaElIQnliM0JsY25SNUlHOXVJSFJvWlNCbGJHVnRaVzUwSUdScGNtVmpkR3g1SUhkb1pXNGdhWFFnYVhNZ2JtOTBJR0VnUkU5TklHVnNaVzFsYm5Rc1hHNWNkRngwWEhRdkx5QnZjaUIzYUdWdUlIUm9aWEpsSUdseklHNXZJRzFoZEdOb2FXNW5JSE4wZVd4bElIQnliM0JsY25SNUlIUm9ZWFFnWlhocGMzUnpMbHh1WEhSY2RGeDBhV1lnS0NCMGQyVmxiaTVsYkdWdExtNXZaR1ZVZVhCbElDRTlQU0F4SUh4OFhHNWNkRngwWEhSY2RIUjNaV1Z1TG1Wc1pXMWJJSFIzWldWdUxuQnliM0FnWFNBaFBTQnVkV3hzSUNZbUlIUjNaV1Z1TG1Wc1pXMHVjM1I1YkdWYklIUjNaV1Z1TG5CeWIzQWdYU0E5UFNCdWRXeHNJQ2tnZTF4dVhIUmNkRngwWEhSeVpYUjFjbTRnZEhkbFpXNHVaV3hsYlZzZ2RIZGxaVzR1Y0hKdmNDQmRPMXh1WEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFF2THlCUVlYTnphVzVuSUdGdUlHVnRjSFI1SUhOMGNtbHVaeUJoY3lCaElETnlaQ0J3WVhKaGJXVjBaWElnZEc4Z0xtTnpjeUIzYVd4c0lHRjFkRzl0WVhScFkyRnNiSGxjYmx4MFhIUmNkQzh2SUdGMGRHVnRjSFFnWVNCd1lYSnpaVVpzYjJGMElHRnVaQ0JtWVd4c1ltRmpheUIwYnlCaElITjBjbWx1WnlCcFppQjBhR1VnY0dGeWMyVWdabUZwYkhNdVhHNWNkRngwWEhRdkx5QlRhVzF3YkdVZ2RtRnNkV1Z6SUhOMVkyZ2dZWE1nWENJeE1IQjRYQ0lnWVhKbElIQmhjbk5sWkNCMGJ5QkdiRzloZER0Y2JseDBYSFJjZEM4dklHTnZiWEJzWlhnZ2RtRnNkV1Z6SUhOMVkyZ2dZWE1nWENKeWIzUmhkR1VvTVhKaFpDbGNJaUJoY21VZ2NtVjBkWEp1WldRZ1lYTXRhWE11WEc1Y2RGeDBYSFJ5WlhOMWJIUWdQU0JxVVhWbGNua3VZM056S0NCMGQyVmxiaTVsYkdWdExDQjBkMlZsYmk1d2NtOXdMQ0JjSWx3aUlDazdYRzVjYmx4MFhIUmNkQzh2SUVWdGNIUjVJSE4wY21sdVozTXNJRzUxYkd3c0lIVnVaR1ZtYVc1bFpDQmhibVFnWENKaGRYUnZYQ0lnWVhKbElHTnZiblpsY25SbFpDQjBieUF3TGx4dVhIUmNkRngwY21WMGRYSnVJQ0Z5WlhOMWJIUWdmSHdnY21WemRXeDBJRDA5UFNCY0ltRjFkRzljSWlBL0lEQWdPaUJ5WlhOMWJIUTdYRzVjZEZ4MGZTeGNibHgwWEhSelpYUTZJR1oxYm1OMGFXOXVLQ0IwZDJWbGJpQXBJSHRjYmx4dVhIUmNkRngwTHk4Z1ZYTmxJSE4wWlhBZ2FHOXZheUJtYjNJZ1ltRmpheUJqYjIxd1lYUXVYRzVjZEZ4MFhIUXZMeUJWYzJVZ1kzTnpTRzl2YXlCcFppQnBkSE1nZEdobGNtVXVYRzVjZEZ4MFhIUXZMeUJWYzJVZ0xuTjBlV3hsSUdsbUlHRjJZV2xzWVdKc1pTQmhibVFnZFhObElIQnNZV2x1SUhCeWIzQmxjblJwWlhNZ2QyaGxjbVVnWVhaaGFXeGhZbXhsTGx4dVhIUmNkRngwYVdZZ0tDQnFVWFZsY25rdVpuZ3VjM1JsY0ZzZ2RIZGxaVzR1Y0hKdmNDQmRJQ2tnZTF4dVhIUmNkRngwWEhScVVYVmxjbmt1Wm5ndWMzUmxjRnNnZEhkbFpXNHVjSEp2Y0NCZEtDQjBkMlZsYmlBcE8xeHVYSFJjZEZ4MGZTQmxiSE5sSUdsbUlDZ2dkSGRsWlc0dVpXeGxiUzV1YjJSbFZIbHdaU0E5UFQwZ01TQW1KbHh1WEhSY2RGeDBYSFFvSUhSM1pXVnVMbVZzWlcwdWMzUjViR1ZiSUdwUmRXVnllUzVqYzNOUWNtOXdjMXNnZEhkbFpXNHVjSEp2Y0NCZElGMGdJVDBnYm5Wc2JDQjhmRnh1WEhSY2RGeDBYSFJjZEdwUmRXVnllUzVqYzNOSWIyOXJjMXNnZEhkbFpXNHVjSEp2Y0NCZElDa2dLU0I3WEc1Y2RGeDBYSFJjZEdwUmRXVnllUzV6ZEhsc1pTZ2dkSGRsWlc0dVpXeGxiU3dnZEhkbFpXNHVjSEp2Y0N3Z2RIZGxaVzR1Ym05M0lDc2dkSGRsWlc0dWRXNXBkQ0FwTzF4dVhIUmNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkRngwZEhkbFpXNHVaV3hsYlZzZ2RIZGxaVzR1Y0hKdmNDQmRJRDBnZEhkbFpXNHVibTkzTzF4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4MGZWeHVmVHRjYmx4dUx5OGdVM1Z3Y0c5eWREb2dTVVVnUEQwNUlHOXViSGxjYmk4dklGQmhibWxqSUdKaGMyVmtJR0Z3Y0hKdllXTm9JSFJ2SUhObGRIUnBibWNnZEdocGJtZHpJRzl1SUdScGMyTnZibTVsWTNSbFpDQnViMlJsYzF4dVZIZGxaVzR1Y0hKdmNFaHZiMnR6TG5OamNtOXNiRlJ2Y0NBOUlGUjNaV1Z1TG5CeWIzQkliMjlyY3k1elkzSnZiR3hNWldaMElEMGdlMXh1WEhSelpYUTZJR1oxYm1OMGFXOXVLQ0IwZDJWbGJpQXBJSHRjYmx4MFhIUnBaaUFvSUhSM1pXVnVMbVZzWlcwdWJtOWtaVlI1Y0dVZ0ppWWdkSGRsWlc0dVpXeGxiUzV3WVhKbGJuUk9iMlJsSUNrZ2UxeHVYSFJjZEZ4MGRIZGxaVzR1Wld4bGJWc2dkSGRsWlc0dWNISnZjQ0JkSUQwZ2RIZGxaVzR1Ym05M08xeHVYSFJjZEgxY2JseDBmVnh1ZlR0Y2JseHVhbEYxWlhKNUxtVmhjMmx1WnlBOUlIdGNibHgwYkdsdVpXRnlPaUJtZFc1amRHbHZiaWdnY0NBcElIdGNibHgwWEhSeVpYUjFjbTRnY0R0Y2JseDBmU3hjYmx4MGMzZHBibWM2SUdaMWJtTjBhVzl1S0NCd0lDa2dlMXh1WEhSY2RISmxkSFZ5YmlBd0xqVWdMU0JOWVhSb0xtTnZjeWdnY0NBcUlFMWhkR2d1VUVrZ0tTQXZJREk3WEc1Y2RIMHNYRzVjZEY5a1pXWmhkV3gwT2lCY0luTjNhVzVuWENKY2JuMDdYRzVjYm1wUmRXVnllUzVtZUNBOUlGUjNaV1Z1TG5CeWIzUnZkSGx3WlM1cGJtbDBPMXh1WEc0dkx5QkNZV05ySUdOdmJYQmhkQ0E4TVM0NElHVjRkR1Z1YzJsdmJpQndiMmx1ZEZ4dWFsRjFaWEo1TG1aNExuTjBaWEFnUFNCN2ZUdGNibHh1ZlNBcE8xeHVJbDE5XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
