define([
    "../core",
    "../selector",
    "../effects"
], function (jQuery) {
    "use strict";
    jQuery.expr.pseudos.animated = function (elem) {
        return jQuery.grep(jQuery.timers, function (fn) {
            return elem === fn.elem;
        }).length;
    };
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2VmZmVjdHMvYW5pbWF0ZWRTZWxlY3Rvci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUU7SUFDUCxTQUFTO0lBQ1QsYUFBYTtJQUNiLFlBQVk7Q0FDWixFQUFFLFVBQVUsTUFBTTtJQUVuQixZQUFZLENBQUM7SUFFYixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsVUFBVSxJQUFJO1FBQzVDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFFLE1BQU0sQ0FBQyxNQUFNLEVBQUUsVUFBVSxFQUFFO1lBQzlDLE1BQU0sQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQztRQUN6QixDQUFDLENBQUUsQ0FBQyxNQUFNLENBQUM7SUFDWixDQUFDLENBQUM7QUFFRixDQUFDLENBQUUsQ0FBQyIsImZpbGUiOiJhc3NldHMvcGFja3MvanF1ZXJ5L3NyYy9lZmZlY3RzL2FuaW1hdGVkU2VsZWN0b3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoIFtcblx0XCIuLi9jb3JlXCIsXG5cdFwiLi4vc2VsZWN0b3JcIixcblx0XCIuLi9lZmZlY3RzXCJcbl0sIGZ1bmN0aW9uKCBqUXVlcnkgKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5qUXVlcnkuZXhwci5wc2V1ZG9zLmFuaW1hdGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiBqUXVlcnkuZ3JlcCggalF1ZXJ5LnRpbWVycywgZnVuY3Rpb24oIGZuICkge1xuXHRcdHJldHVybiBlbGVtID09PSBmbi5lbGVtO1xuXHR9ICkubGVuZ3RoO1xufTtcblxufSApO1xuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2VmZmVjdHMvYW5pbWF0ZWRTZWxlY3Rvci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUM7SUFDSCxTQUFTO0lBQ1QsYUFBYTtJQUNiLFlBQVk7Q0FDZixFQUFFLFVBQVUsTUFBTTtJQUNmLFlBQVksQ0FBQztJQUNiLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxVQUFVLElBQUk7UUFDekMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUU7WUFDMUMsTUFBTSxDQUFDLElBQUksS0FBSyxFQUFFLENBQUMsSUFBSSxDQUFDO1FBQzVCLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUNkLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyxDQUFDO0FBRUgsdWtDQUF1a0MiLCJmaWxlIjoiYXNzZXRzL3BhY2tzL2pxdWVyeS9zcmMvZWZmZWN0cy9hbmltYXRlZFNlbGVjdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcbiAgICBcIi4uL2NvcmVcIixcbiAgICBcIi4uL3NlbGVjdG9yXCIsXG4gICAgXCIuLi9lZmZlY3RzXCJcbl0sIGZ1bmN0aW9uIChqUXVlcnkpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBqUXVlcnkuZXhwci5wc2V1ZG9zLmFuaW1hdGVkID0gZnVuY3Rpb24gKGVsZW0pIHtcbiAgICAgICAgcmV0dXJuIGpRdWVyeS5ncmVwKGpRdWVyeS50aW1lcnMsIGZ1bmN0aW9uIChmbikge1xuICAgICAgICAgICAgcmV0dXJuIGVsZW0gPT09IGZuLmVsZW07XG4gICAgICAgIH0pLmxlbmd0aDtcbiAgICB9O1xufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1GemMyVjBjeTl3WVdOcmN5OXFjWFZsY25rdmMzSmpMMlZtWm1WamRITXZZVzVwYldGMFpXUlRaV3hsWTNSdmNpNXFjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRU5CUVVVN1NVRkRVQ3hUUVVGVE8wbEJRMVFzWVVGQllUdEpRVU5pTEZsQlFWazdRMEZEV2l4RlFVRkZMRlZCUVZVc1RVRkJUVHRKUVVWdVFpeFpRVUZaTEVOQlFVTTdTVUZGWWl4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eFJRVUZSTEVkQlFVY3NWVUZCVlN4SlFVRkpPMUZCUXpWRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkZMRTFCUVUwc1EwRkJReXhOUVVGTkxFVkJRVVVzVlVGQlZTeEZRVUZGTzFsQlF6bERMRTFCUVUwc1EwRkJReXhKUVVGSkxFdEJRVXNzUlVGQlJTeERRVUZETEVsQlFVa3NRMEZCUXp0UlFVTjZRaXhEUVVGRExFTkJRVVVzUTBGQlF5eE5RVUZOTEVOQlFVTTdTVUZEV2l4RFFVRkRMRU5CUVVNN1FVRkZSaXhEUVVGRExFTkJRVVVzUTBGQlF5SXNJbVpwYkdVaU9pSmhjM05sZEhNdmNHRmphM012YW5GMVpYSjVMM055WXk5bFptWmxZM1J6TDJGdWFXMWhkR1ZrVTJWc1pXTjBiM0l1YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SmtaV1pwYm1Vb0lGdGNibHgwWENJdUxpOWpiM0psWENJc1hHNWNkRndpTGk0dmMyVnNaV04wYjNKY0lpeGNibHgwWENJdUxpOWxabVpsWTNSelhDSmNibDBzSUdaMWJtTjBhVzl1S0NCcVVYVmxjbmtnS1NCN1hHNWNibHdpZFhObElITjBjbWxqZEZ3aU8xeHVYRzVxVVhWbGNua3VaWGh3Y2k1d2MyVjFaRzl6TG1GdWFXMWhkR1ZrSUQwZ1puVnVZM1JwYjI0b0lHVnNaVzBnS1NCN1hHNWNkSEpsZEhWeWJpQnFVWFZsY25rdVozSmxjQ2dnYWxGMVpYSjVMblJwYldWeWN5d2dablZ1WTNScGIyNG9JR1p1SUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJsYkdWdElEMDlQU0JtYmk1bGJHVnRPMXh1WEhSOUlDa3ViR1Z1WjNSb08xeHVmVHRjYmx4dWZTQXBPMXh1SWwxOVxuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2VmZmVjdHMvYW5pbWF0ZWRTZWxlY3Rvci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUM7SUFDSCxTQUFTO0lBQ1QsYUFBYTtJQUNiLFlBQVk7Q0FDZixFQUFFLFVBQVUsTUFBTTtJQUNmLFlBQVksQ0FBQztJQUNiLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxVQUFVLElBQUk7UUFDekMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUU7WUFDMUMsTUFBTSxDQUFDLElBQUksS0FBSyxFQUFFLENBQUMsSUFBSSxDQUFDO1FBQzVCLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUNkLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyxDQUFDO0FBQ0gsdWtDQUF1a0M7QUFFdmtDLG1qRkFBbWpGIiwiZmlsZSI6ImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2VmZmVjdHMvYW5pbWF0ZWRTZWxlY3Rvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXG4gICAgXCIuLi9jb3JlXCIsXG4gICAgXCIuLi9zZWxlY3RvclwiLFxuICAgIFwiLi4vZWZmZWN0c1wiXG5dLCBmdW5jdGlvbiAoalF1ZXJ5KSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgalF1ZXJ5LmV4cHIucHNldWRvcy5hbmltYXRlZCA9IGZ1bmN0aW9uIChlbGVtKSB7XG4gICAgICAgIHJldHVybiBqUXVlcnkuZ3JlcChqUXVlcnkudGltZXJzLCBmdW5jdGlvbiAoZm4pIHtcbiAgICAgICAgICAgIHJldHVybiBlbGVtID09PSBmbi5lbGVtO1xuICAgICAgICB9KS5sZW5ndGg7XG4gICAgfTtcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUZ6YzJWMGN5OXdZV05yY3k5cWNYVmxjbmt2YzNKakwyVm1abVZqZEhNdllXNXBiV0YwWldSVFpXeGxZM1J2Y2k1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxFTkJRVVU3U1VGRFVDeFRRVUZUTzBsQlExUXNZVUZCWVR0SlFVTmlMRmxCUVZrN1EwRkRXaXhGUVVGRkxGVkJRVlVzVFVGQlRUdEpRVVZ1UWl4WlFVRlpMRU5CUVVNN1NVRkZZaXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4UlFVRlJMRWRCUVVjc1ZVRkJWU3hKUVVGSk8xRkJRelZETEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRkxFMUJRVTBzUTBGQlF5eE5RVUZOTEVWQlFVVXNWVUZCVlN4RlFVRkZPMWxCUXpsRExFMUJRVTBzUTBGQlF5eEpRVUZKTEV0QlFVc3NSVUZCUlN4RFFVRkRMRWxCUVVrc1EwRkJRenRSUVVONlFpeERRVUZETEVOQlFVVXNRMEZCUXl4TlFVRk5MRU5CUVVNN1NVRkRXaXhEUVVGRExFTkJRVU03UVVGRlJpeERRVUZETEVOQlFVVXNRMEZCUXlJc0ltWnBiR1VpT2lKaGMzTmxkSE12Y0dGamEzTXZhbkYxWlhKNUwzTnlZeTlsWm1abFkzUnpMMkZ1YVcxaGRHVmtVMlZzWldOMGIzSXVhbk1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKa1pXWnBibVVvSUZ0Y2JseDBYQ0l1TGk5amIzSmxYQ0lzWEc1Y2RGd2lMaTR2YzJWc1pXTjBiM0pjSWl4Y2JseDBYQ0l1TGk5bFptWmxZM1J6WENKY2JsMHNJR1oxYm1OMGFXOXVLQ0JxVVhWbGNua2dLU0I3WEc1Y2Jsd2lkWE5sSUhOMGNtbGpkRndpTzF4dVhHNXFVWFZsY25rdVpYaHdjaTV3YzJWMVpHOXpMbUZ1YVcxaGRHVmtJRDBnWm5WdVkzUnBiMjRvSUdWc1pXMGdLU0I3WEc1Y2RISmxkSFZ5YmlCcVVYVmxjbmt1WjNKbGNDZ2dhbEYxWlhKNUxuUnBiV1Z5Y3l3Z1puVnVZM1JwYjI0b0lHWnVJQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQmxiR1Z0SUQwOVBTQm1iaTVsYkdWdE8xeHVYSFI5SUNrdWJHVnVaM1JvTzF4dWZUdGNibHh1ZlNBcE8xeHVJbDE5XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1GemMyVjBjeTl3WVdOcmN5OXFjWFZsY25rdmMzSmpMMlZtWm1WamRITXZZVzVwYldGMFpXUlRaV3hsWTNSdmNpNXFjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRU5CUVVNN1NVRkRTQ3hUUVVGVE8wbEJRMVFzWVVGQllUdEpRVU5pTEZsQlFWazdRMEZEWml4RlFVRkZMRlZCUVZVc1RVRkJUVHRKUVVObUxGbEJRVmtzUTBGQlF6dEpRVU5pTEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExGRkJRVkVzUjBGQlJ5eFZRVUZWTEVsQlFVazdVVUZEZWtNc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1JVRkJSU3hWUVVGVkxFVkJRVVU3V1VGRE1VTXNUVUZCVFN4RFFVRkRMRWxCUVVrc1MwRkJTeXhGUVVGRkxFTkJRVU1zU1VGQlNTeERRVUZETzFGQlF6VkNMRU5CUVVNc1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF6dEpRVU5rTEVOQlFVTXNRMEZCUXp0QlFVTk9MRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJSVWdzZFd0RFFVRjFhME1pTENKbWFXeGxJam9pWVhOelpYUnpMM0JoWTJ0ekwycHhkV1Z5ZVM5emNtTXZaV1ptWldOMGN5OWhibWx0WVhSbFpGTmxiR1ZqZEc5eUxtcHpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpWkdWbWFXNWxLRnRjYmlBZ0lDQmNJaTR1TDJOdmNtVmNJaXhjYmlBZ0lDQmNJaTR1TDNObGJHVmpkRzl5WENJc1hHNGdJQ0FnWENJdUxpOWxabVpsWTNSelhDSmNibDBzSUdaMWJtTjBhVzl1SUNocVVYVmxjbmtwSUh0Y2JpQWdJQ0JjSW5WelpTQnpkSEpwWTNSY0lqdGNiaUFnSUNCcVVYVmxjbmt1Wlhod2NpNXdjMlYxWkc5ekxtRnVhVzFoZEdWa0lEMGdablZ1WTNScGIyNGdLR1ZzWlcwcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHcFJkV1Z5ZVM1bmNtVndLR3BSZFdWeWVTNTBhVzFsY25Nc0lHWjFibU4wYVc5dUlDaG1iaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHVnNaVzBnUFQwOUlHWnVMbVZzWlcwN1hHNGdJQ0FnSUNBZ0lIMHBMbXhsYm1kMGFEdGNiaUFnSUNCOU8xeHVmU2s3WEc1Y2JpOHZJeUJ6YjNWeVkyVk5ZWEJ3YVc1blZWSk1QV1JoZEdFNllYQndiR2xqWVhScGIyNHZhbk52Ymp0amFHRnljMlYwUFhWMFpqZzdZbUZ6WlRZMExHVjVTakphV0VwNllWYzVkVWxxYjNwTVEwcDZZak5XZVZreVZucEphbkJpU1cxR2VtTXlWakJqZVRsM1dWZE9jbU41T1hGaldGWnNZMjVyZG1NelNtcE1NbFp0V20xV2FtUklUWFpaVnpWd1lsZEdNRnBYVWxSYVYzaHNXVE5TZG1OcE5YRmplVXBrVEVOS2RWbFhNV3hqZVVrMlZ6RXdjMGx0TVdoalNFSndZbTFrZWtscWIybFJWVVpDVVZONFRsRlZSazVNUlU1Q1VWVlZOMU5WUmtSVlEzaFVVVlZHVkU4d2JFSlJNVkZ6V1ZWR1FsbFVkRXBSVlU1cFRFWnNRbEZXYXpkUk1FWkVWMmw0UmxGVlJrWk1SbFpDVVZaVmMxUlZSa0pVVkhSS1VWVldkVkZwZUZwUlZVWmFURVZPUWxGVlRUZFRWVVpHV1dsNFRsRlZSazVNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4Rk9VSlJWVGh6VVRCR1FsRjVlRkpSVlVaU1RFVmtRbEZWWTNOV1ZVWkNWbE40U2xGVlJrcFBNVVpDVVhwV1JFeEZNVUpSVlRCelVUQkdRbEY1ZUU1UlZVWk9URVZPUWxGVlRYTlRWVVpDVTFONFJGRlZSa1pNUlRGQ1VWVXdjMUV3UmtKUmVYaE9VVlZHVGt4RlZrSlJWVlZ6VmxWR1FsWlRlRVpSVlVaR1R6RnNRbEY2YkVSTVJURkNVVlV3YzFFd1JrSlJlWGhLVVZWR1NreEZkRUpSVlhOelVsVkdRbEpUZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhwMFVsRlZUalpSYVhoRVVWVkdSRXhGVGtKUlZWVnpVVEJHUWxGNWVFNVJWVVpPVEVWT1FsRlZUVGRUVlVaRVYybDRSRkZWUmtSTVJVNUNVVlZOTjFGVlJrWlNhWGhFVVZWR1JFeEZUa0pSVlZWelVUQkdRbEY1U1hOSmJWcHdZa2RWYVU5cFNtaGpNMDVzWkVoTmRtTkhSbXBoTTAxMllXNUdNVnBZU2pWTU0wNTVXWGs1YkZwdFdteFpNMUo2VERKR2RXRlhNV2hrUjFaclZUSldjMXBYVGpCaU0wbDFZVzVOYVV4RFNucGlNMVo1V1RKV2VsRXlPWFZrUjFaMVpFTkpObGQ1U210YVYxcHdZbTFWYjBsR2RHTmliSGd3V0VOSmRVeHBPV3BpTTBwc1dFTkpjMWhITldOa1JuZHBUR2swZG1NeVZuTmFWMDR3WWpOS1kwbHBlR05pYkhnd1dFTkpkVXhwT1d4YWJWcHNXVE5TZWxoRFNtTmliREJ6U1VkYU1XSnRUakJoVnpsMVMwTkNjVlZZVm14amJtdG5TMU5DTjFoSE5XTmliSGRwWkZoT2JFbElUakJqYld4cVpFWjNhVTh4ZUhWWVJ6VnhWVmhXYkdOdWEzVmFXR2gzWTJrMWQyTXlWakZhUnpsNlRHMUdkV0ZYTVdoa1IxWnJTVVF3WjFwdVZuVlpNMUp3WWpJMGIwbEhWbk5hVnpCblMxTkNOMWhITldOa1NFcHNaRWhXZVdKcFFuRlZXRlpzWTI1cmRWb3pTbXhqUTJkbllXeEdNVnBZU2pWTWJsSndZbGRXZVdONWQyZGFibFoxV1ROU2NHSXlORzlKUjFwMVNVTnJaMlV4ZUhWWVNGSmpaRWhLYkdSSVZubGlhVUpzWWtkV2RFbEVNRGxRVTBKdFltazFiR0pIVm5SUE1YaDFXRWhTT1VsRGEzVmlSMVoxV2pOU2IwOHhlSFZtVkhSallteDRkV1pUUVhCUE1YaDFTV3d4T1Z4dUlsMTlcbiJdfQ==

//# sourceMappingURL=data:application/json;charset=utf8;base64,
