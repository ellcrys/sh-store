define(function () {
    "use strict";
    // Only count HTML whitespace
    // Other whitespace should count in values
    // https://html.spec.whatwg.org/multipage/infrastructure.html#space-character
    return (/[^\x20\t\r\n\f]+/g);
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL3Zhci9ybm90aHRtbHdoaXRlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBRTtJQUNQLFlBQVksQ0FBQztJQUViLDZCQUE2QjtJQUM3QiwwQ0FBMEM7SUFDMUMsNkVBQTZFO0lBQzdFLE1BQU0sQ0FBQyxDQUFFLG1CQUFtQixDQUFFLENBQUM7QUFDaEMsQ0FBQyxDQUFFLENBQUMiLCJmaWxlIjoiYXNzZXRzL3BhY2tzL2pxdWVyeS9zcmMvdmFyL3Jub3RodG1sd2hpdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoIGZ1bmN0aW9uKCkge1xuXHRcInVzZSBzdHJpY3RcIjtcblxuXHQvLyBPbmx5IGNvdW50IEhUTUwgd2hpdGVzcGFjZVxuXHQvLyBPdGhlciB3aGl0ZXNwYWNlIHNob3VsZCBjb3VudCBpbiB2YWx1ZXNcblx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvaW5mcmFzdHJ1Y3R1cmUuaHRtbCNzcGFjZS1jaGFyYWN0ZXJcblx0cmV0dXJuICggL1teXFx4MjBcXHRcXHJcXG5cXGZdKy9nICk7XG59ICk7XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL3Zhci9ybm90aHRtbHdoaXRlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQztJQUNILFlBQVksQ0FBQztJQUNiLDZCQUE2QjtJQUM3QiwwQ0FBMEM7SUFDMUMsNkVBQTZFO0lBQzdFLE1BQU0sQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFDakMsQ0FBQyxDQUFDLENBQUM7QUFFSCwyeEJBQTJ4QiIsImZpbGUiOiJhc3NldHMvcGFja3MvanF1ZXJ5L3NyYy92YXIvcm5vdGh0bWx3aGl0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZShmdW5jdGlvbiAoKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgLy8gT25seSBjb3VudCBIVE1MIHdoaXRlc3BhY2VcbiAgICAvLyBPdGhlciB3aGl0ZXNwYWNlIHNob3VsZCBjb3VudCBpbiB2YWx1ZXNcbiAgICAvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9pbmZyYXN0cnVjdHVyZS5odG1sI3NwYWNlLWNoYXJhY3RlclxuICAgIHJldHVybiAoL1teXFx4MjBcXHRcXHJcXG5cXGZdKy9nKTtcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRnpjMlYwY3k5d1lXTnJjeTlxY1hWbGNua3ZjM0pqTDNaaGNpOXlibTkwYUhSdGJIZG9hWFJsTG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRTFCUVUwc1EwRkJSVHRKUVVOUUxGbEJRVmtzUTBGQlF6dEpRVVZpTERaQ1FVRTJRanRKUVVNM1Fpd3dRMEZCTUVNN1NVRkRNVU1zTmtWQlFUWkZPMGxCUXpkRkxFMUJRVTBzUTBGQlF5eERRVUZGTEcxQ1FVRnRRaXhEUVVGRkxFTkJRVU03UVVGRGFFTXNRMEZCUXl4RFFVRkZMRU5CUVVNaUxDSm1hV3hsSWpvaVlYTnpaWFJ6TDNCaFkydHpMMnB4ZFdWeWVTOXpjbU12ZG1GeUwzSnViM1JvZEcxc2QyaHBkR1V1YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SmtaV1pwYm1Vb0lHWjFibU4wYVc5dUtDa2dlMXh1WEhSY0luVnpaU0J6ZEhKcFkzUmNJanRjYmx4dVhIUXZMeUJQYm14NUlHTnZkVzUwSUVoVVRVd2dkMmhwZEdWemNHRmpaVnh1WEhRdkx5QlBkR2hsY2lCM2FHbDBaWE53WVdObElITm9iM1ZzWkNCamIzVnVkQ0JwYmlCMllXeDFaWE5jYmx4MEx5OGdhSFIwY0hNNkx5OW9kRzFzTG5Od1pXTXVkMmhoZEhkbkxtOXlaeTl0ZFd4MGFYQmhaMlV2YVc1bWNtRnpkSEoxWTNSMWNtVXVhSFJ0YkNOemNHRmpaUzFqYUdGeVlXTjBaWEpjYmx4MGNtVjBkWEp1SUNnZ0wxdGVYRng0TWpCY1hIUmNYSEpjWEc1Y1hHWmRLeTluSUNrN1hHNTlJQ2s3WEc0aVhYMD1cbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL3Zhci9ybm90aHRtbHdoaXRlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQztJQUNILFlBQVksQ0FBQztJQUNiLDZCQUE2QjtJQUM3QiwwQ0FBMEM7SUFDMUMsNkVBQTZFO0lBQzdFLE1BQU0sQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFDakMsQ0FBQyxDQUFDLENBQUM7QUFDSCwyeEJBQTJ4QjtBQUUzeEIsKzFEQUErMUQiLCJmaWxlIjoiYXNzZXRzL3BhY2tzL2pxdWVyeS9zcmMvdmFyL3Jub3RodG1sd2hpdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoZnVuY3Rpb24gKCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIC8vIE9ubHkgY291bnQgSFRNTCB3aGl0ZXNwYWNlXG4gICAgLy8gT3RoZXIgd2hpdGVzcGFjZSBzaG91bGQgY291bnQgaW4gdmFsdWVzXG4gICAgLy8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvaW5mcmFzdHJ1Y3R1cmUuaHRtbCNzcGFjZS1jaGFyYWN0ZXJcbiAgICByZXR1cm4gKC9bXlxceDIwXFx0XFxyXFxuXFxmXSsvZyk7XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1GemMyVjBjeTl3WVdOcmN5OXFjWFZsY25rdmMzSmpMM1poY2k5eWJtOTBhSFJ0Ykhkb2FYUmxMbXB6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxFMUJRVTBzUTBGQlJUdEpRVU5RTEZsQlFWa3NRMEZCUXp0SlFVVmlMRFpDUVVFMlFqdEpRVU0zUWl3d1EwRkJNRU03U1VGRE1VTXNOa1ZCUVRaRk8wbEJRemRGTEUxQlFVMHNRMEZCUXl4RFFVRkZMRzFDUVVGdFFpeERRVUZGTEVOQlFVTTdRVUZEYUVNc1EwRkJReXhEUVVGRkxFTkJRVU1pTENKbWFXeGxJam9pWVhOelpYUnpMM0JoWTJ0ekwycHhkV1Z5ZVM5emNtTXZkbUZ5TDNKdWIzUm9kRzFzZDJocGRHVXVhbk1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKa1pXWnBibVVvSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjSW5WelpTQnpkSEpwWTNSY0lqdGNibHh1WEhRdkx5QlBibXg1SUdOdmRXNTBJRWhVVFV3Z2QyaHBkR1Z6Y0dGalpWeHVYSFF2THlCUGRHaGxjaUIzYUdsMFpYTndZV05sSUhOb2IzVnNaQ0JqYjNWdWRDQnBiaUIyWVd4MVpYTmNibHgwTHk4Z2FIUjBjSE02THk5b2RHMXNMbk53WldNdWQyaGhkSGRuTG05eVp5OXRkV3gwYVhCaFoyVXZhVzVtY21GemRISjFZM1IxY21VdWFIUnRiQ056Y0dGalpTMWphR0Z5WVdOMFpYSmNibHgwY21WMGRYSnVJQ2dnTDF0ZVhGeDRNakJjWEhSY1hISmNYRzVjWEdaZEt5OW5JQ2s3WEc1OUlDazdYRzRpWFgwPVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRnpjMlYwY3k5d1lXTnJjeTlxY1hWbGNua3ZjM0pqTDNaaGNpOXlibTkwYUhSdGJIZG9hWFJsTG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRTFCUVUwc1EwRkJRenRKUVVOSUxGbEJRVmtzUTBGQlF6dEpRVU5pTERaQ1FVRTJRanRKUVVNM1Fpd3dRMEZCTUVNN1NVRkRNVU1zTmtWQlFUWkZPMGxCUXpkRkxFMUJRVTBzUTBGQlF5eERRVUZETEcxQ1FVRnRRaXhEUVVGRExFTkJRVU03UVVGRGFrTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkZTQ3d5ZUVKQlFUSjRRaUlzSW1acGJHVWlPaUpoYzNObGRITXZjR0ZqYTNNdmFuRjFaWEo1TDNOeVl5OTJZWEl2Y201dmRHaDBiV3gzYUdsMFpTNXFjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1SbFptbHVaU2htZFc1amRHbHZiaUFvS1NCN1hHNGdJQ0FnWENKMWMyVWdjM1J5YVdOMFhDSTdYRzRnSUNBZ0x5OGdUMjVzZVNCamIzVnVkQ0JJVkUxTUlIZG9hWFJsYzNCaFkyVmNiaUFnSUNBdkx5QlBkR2hsY2lCM2FHbDBaWE53WVdObElITm9iM1ZzWkNCamIzVnVkQ0JwYmlCMllXeDFaWE5jYmlBZ0lDQXZMeUJvZEhSd2N6b3ZMMmgwYld3dWMzQmxZeTUzYUdGMGQyY3ViM0puTDIxMWJIUnBjR0ZuWlM5cGJtWnlZWE4wY25WamRIVnlaUzVvZEcxc0kzTndZV05sTFdOb1lYSmhZM1JsY2x4dUlDQWdJSEpsZEhWeWJpQW9MMXRlWEZ4NE1qQmNYSFJjWEhKY1hHNWNYR1pkS3k5bktUdGNibjBwTzF4dVhHNHZMeU1nYzI5MWNtTmxUV0Z3Y0dsdVoxVlNURDFrWVhSaE9tRndjR3hwWTJGMGFXOXVMMnB6YjI0N1kyaGhjbk5sZEQxMWRHWTRPMkpoYzJVMk5DeGxlVW95V2xoS2VtRlhPWFZKYW05NlRFTktlbUl6Vm5sWk1sWjZTV3B3WWtsdFJucGpNbFl3WTNrNWQxbFhUbkpqZVRseFkxaFdiR051YTNaak0wcHFURE5hYUdOcE9YbGliVGt3WVVoU2RHSklaRzloV0ZKc1RHMXdla2xzTUhOSmJUVm9ZbGRXZWtscWNHSllVM2RwWWxkR2QyTkhiSFZhTTAxcFQybEtRbEZWUmtKTVJURkNVVlV3YzFFd1JrSlNWSFJLVVZWT1VVeEdiRUpSVm10elVUQkdRbEY2ZEVwUlZWWnBURVJhUTFGVlJUSlJhblJLVVZWTk0xRnBkM2RSTUVaQ1RVVk5OMU5WUmtSTlZVMXpUbXRXUWxGVVdrWlBNR3hDVVhwa1JreEZNVUpSVlRCelVUQkdRbEY1ZUVSUlZVWkdURWN4UTFGVlJuUlJhWGhFVVZWR1JreEZUa0pSVlUwM1VWVkdSR0ZGVFhOUk1FWkNVWGw0UkZGVlJrWk1SVTVDVVZWTmFVeERTbTFoVjNoc1NXcHZhVmxZVG5wYVdGSjZURE5DYUZreWRIcE1NbkI0WkZkV2VXVlRPWHBqYlUxMlpHMUdlVXd6U25WaU0xSnZaRWN4YzJReWFIQmtSMVYxWVc1TmFVeERTbnBpTTFaNVdUSldlbEV5T1hWa1IxWjFaRU5KTmxkNVNtdGFWMXB3WW0xVmIwbEhXakZpYlU0d1lWYzVkVXREYTJkbE1YaDFXRWhTWTBsdVZucGFVMEo2WkVoS2NGa3pVbU5KYW5SallteDRkVmhJVVhaTWVVSlFZbTE0TlVsSFRuWmtWelV3U1VWb1ZWUlZkMmRrTW1od1pFZFdlbU5IUm1wYVZuaDFXRWhSZGt4NVFsQmtSMmhzWTJsQ00yRkhiREJhV0U1M1dWZE9iRWxJVG05aU0xWnpXa05DYW1JelZuVmtRMEp3WW1sQ01sbFhlREZhV0U1allteDRNRXg1T0dkaFNGSXdZMGhOTmt4NU9XOWtSekZ6VEc1T2QxcFhUWFZrTW1ob1pFaGtia3h0T1hsYWVUbDBaRmQ0TUdGWVFtaGFNbFYyWVZjMWJXTnRSbnBrU0VveFdUTlNNV050VlhWaFNGSjBZa05PZW1OSFJtcGFVekZxWVVkR2VWbFhUakJhV0VwallteDRNR050VmpCa1dFcDFTVU5uWjB3eGRHVllSbmcwVFdwQ1kxaElVbU5ZU0VwaldFYzFZMWhIV21STGVUbHVTVU5yTjFoSE5UbEpRMnMzV0VjMGFWaFlNRDFjYmlKZGZRPT1cbiJdfQ==

//# sourceMappingURL=data:application/json;charset=utf8;base64,
