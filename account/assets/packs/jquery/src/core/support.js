define([
    "../var/document",
    "../var/support"
], function (document, support) {
    "use strict";
    // Support: Safari 8 only
    // In Safari 8 documents created via document.implementation.createHTMLDocument
    // collapse sibling forms: the second one becomes a child of the first one.
    // Because of that, this security measure has to be disabled in Safari 8.
    // https://bugs.webkit.org/show_bug.cgi?id=137337
    support.createHTMLDocument = (function () {
        var body = document.implementation.createHTMLDocument("").body;
        body.innerHTML = "<form></form><form></form>";
        return body.childNodes.length === 2;
    })();
    return support;
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2NvcmUvc3VwcG9ydC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUU7SUFDUCxpQkFBaUI7SUFDakIsZ0JBQWdCO0NBQ2hCLEVBQUUsVUFBVSxRQUFRLEVBQUUsT0FBTztJQUU5QixZQUFZLENBQUM7SUFFYix5QkFBeUI7SUFDekIsK0VBQStFO0lBQy9FLDJFQUEyRTtJQUMzRSx5RUFBeUU7SUFDekUsaURBQWlEO0lBQ2pELE9BQU8sQ0FBQyxrQkFBa0IsR0FBRyxDQUFFO1FBQzlCLElBQUksSUFBSSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsa0JBQWtCLENBQUUsRUFBRSxDQUFFLENBQUMsSUFBSSxDQUFDO1FBQ2pFLElBQUksQ0FBQyxTQUFTLEdBQUcsNEJBQTRCLENBQUM7UUFDOUMsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQztJQUNyQyxDQUFDLENBQUUsRUFBRSxDQUFDO0lBRU4sTUFBTSxDQUFDLE9BQU8sQ0FBQztBQUNmLENBQUMsQ0FBRSxDQUFDIiwiZmlsZSI6ImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2NvcmUvc3VwcG9ydC5qcyIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZSggW1xuXHRcIi4uL3Zhci9kb2N1bWVudFwiLFxuXHRcIi4uL3Zhci9zdXBwb3J0XCJcbl0sIGZ1bmN0aW9uKCBkb2N1bWVudCwgc3VwcG9ydCApIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIFN1cHBvcnQ6IFNhZmFyaSA4IG9ubHlcbi8vIEluIFNhZmFyaSA4IGRvY3VtZW50cyBjcmVhdGVkIHZpYSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnRcbi8vIGNvbGxhcHNlIHNpYmxpbmcgZm9ybXM6IHRoZSBzZWNvbmQgb25lIGJlY29tZXMgYSBjaGlsZCBvZiB0aGUgZmlyc3Qgb25lLlxuLy8gQmVjYXVzZSBvZiB0aGF0LCB0aGlzIHNlY3VyaXR5IG1lYXN1cmUgaGFzIHRvIGJlIGRpc2FibGVkIGluIFNhZmFyaSA4LlxuLy8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTEzNzMzN1xuc3VwcG9ydC5jcmVhdGVIVE1MRG9jdW1lbnQgPSAoIGZ1bmN0aW9uKCkge1xuXHR2YXIgYm9keSA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCggXCJcIiApLmJvZHk7XG5cdGJvZHkuaW5uZXJIVE1MID0gXCI8Zm9ybT48L2Zvcm0+PGZvcm0+PC9mb3JtPlwiO1xuXHRyZXR1cm4gYm9keS5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMjtcbn0gKSgpO1xuXG5yZXR1cm4gc3VwcG9ydDtcbn0gKTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2NvcmUvc3VwcG9ydC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUM7SUFDSCxpQkFBaUI7SUFDakIsZ0JBQWdCO0NBQ25CLEVBQUUsVUFBVSxRQUFRLEVBQUUsT0FBTztJQUMxQixZQUFZLENBQUM7SUFDYix5QkFBeUI7SUFDekIsK0VBQStFO0lBQy9FLDJFQUEyRTtJQUMzRSx5RUFBeUU7SUFDekUsaURBQWlEO0lBQ2pELE9BQU8sQ0FBQyxrQkFBa0IsR0FBRyxDQUFDO1FBQzFCLElBQUksSUFBSSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQy9ELElBQUksQ0FBQyxTQUFTLEdBQUcsNEJBQTRCLENBQUM7UUFDOUMsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ0wsTUFBTSxDQUFDLE9BQU8sQ0FBQztBQUNuQixDQUFDLENBQUMsQ0FBQztBQUVILDJzREFBMnNEIiwiZmlsZSI6ImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL2NvcmUvc3VwcG9ydC5qcyIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXG4gICAgXCIuLi92YXIvZG9jdW1lbnRcIixcbiAgICBcIi4uL3Zhci9zdXBwb3J0XCJcbl0sIGZ1bmN0aW9uIChkb2N1bWVudCwgc3VwcG9ydCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIC8vIFN1cHBvcnQ6IFNhZmFyaSA4IG9ubHlcbiAgICAvLyBJbiBTYWZhcmkgOCBkb2N1bWVudHMgY3JlYXRlZCB2aWEgZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50XG4gICAgLy8gY29sbGFwc2Ugc2libGluZyBmb3JtczogdGhlIHNlY29uZCBvbmUgYmVjb21lcyBhIGNoaWxkIG9mIHRoZSBmaXJzdCBvbmUuXG4gICAgLy8gQmVjYXVzZSBvZiB0aGF0LCB0aGlzIHNlY3VyaXR5IG1lYXN1cmUgaGFzIHRvIGJlIGRpc2FibGVkIGluIFNhZmFyaSA4LlxuICAgIC8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzczMzdcbiAgICBzdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBib2R5ID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KFwiXCIpLmJvZHk7XG4gICAgICAgIGJvZHkuaW5uZXJIVE1MID0gXCI8Zm9ybT48L2Zvcm0+PGZvcm0+PC9mb3JtPlwiO1xuICAgICAgICByZXR1cm4gYm9keS5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMjtcbiAgICB9KSgpO1xuICAgIHJldHVybiBzdXBwb3J0O1xufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1GemMyVjBjeTl3WVdOcmN5OXFjWFZsY25rdmMzSmpMMk52Y21VdmMzVndjRzl5ZEM1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxFTkJRVVU3U1VGRFVDeHBRa0ZCYVVJN1NVRkRha0lzWjBKQlFXZENPME5CUTJoQ0xFVkJRVVVzVlVGQlZTeFJRVUZSTEVWQlFVVXNUMEZCVHp0SlFVVTVRaXhaUVVGWkxFTkJRVU03U1VGRllpeDVRa0ZCZVVJN1NVRkRla0lzSzBWQlFTdEZPMGxCUXk5RkxESkZRVUV5UlR0SlFVTXpSU3g1UlVGQmVVVTdTVUZEZWtVc2FVUkJRV2xFTzBsQlEycEVMRTlCUVU4c1EwRkJReXhyUWtGQmEwSXNSMEZCUnl4RFFVRkZPMUZCUXpsQ0xFbEJRVWtzU1VGQlNTeEhRVUZITEZGQlFWRXNRMEZCUXl4alFVRmpMRU5CUVVNc2EwSkJRV3RDTEVOQlFVVXNSVUZCUlN4RFFVRkZMRU5CUVVNc1NVRkJTU3hEUVVGRE8xRkJRMnBGTEVsQlFVa3NRMEZCUXl4VFFVRlRMRWRCUVVjc05FSkJRVFJDTEVOQlFVTTdVVUZET1VNc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNUVUZCVFN4TFFVRkxMRU5CUVVNc1EwRkJRenRKUVVOeVF5eERRVUZETEVOQlFVVXNSVUZCUlN4RFFVRkRPMGxCUlU0c1RVRkJUU3hEUVVGRExFOUJRVThzUTBGQlF6dEJRVU5tTEVOQlFVTXNRMEZCUlN4RFFVRkRJaXdpWm1sc1pTSTZJbUZ6YzJWMGN5OXdZV05yY3k5cWNYVmxjbmt2YzNKakwyTnZjbVV2YzNWd2NHOXlkQzVxY3lJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltUmxabWx1WlNnZ1cxeHVYSFJjSWk0dUwzWmhjaTlrYjJOMWJXVnVkRndpTEZ4dVhIUmNJaTR1TDNaaGNpOXpkWEJ3YjNKMFhDSmNibDBzSUdaMWJtTjBhVzl1S0NCa2IyTjFiV1Z1ZEN3Z2MzVndjRzl5ZENBcElIdGNibHh1WENKMWMyVWdjM1J5YVdOMFhDSTdYRzVjYmk4dklGTjFjSEJ2Y25RNklGTmhabUZ5YVNBNElHOXViSGxjYmk4dklFbHVJRk5oWm1GeWFTQTRJR1J2WTNWdFpXNTBjeUJqY21WaGRHVmtJSFpwWVNCa2IyTjFiV1Z1ZEM1cGJYQnNaVzFsYm5SaGRHbHZiaTVqY21WaGRHVklWRTFNUkc5amRXMWxiblJjYmk4dklHTnZiR3hoY0hObElITnBZbXhwYm1jZ1ptOXliWE02SUhSb1pTQnpaV052Ym1RZ2IyNWxJR0psWTI5dFpYTWdZU0JqYUdsc1pDQnZaaUIwYUdVZ1ptbHljM1FnYjI1bExseHVMeThnUW1WallYVnpaU0J2WmlCMGFHRjBMQ0IwYUdseklITmxZM1Z5YVhSNUlHMWxZWE4xY21VZ2FHRnpJSFJ2SUdKbElHUnBjMkZpYkdWa0lHbHVJRk5oWm1GeWFTQTRMbHh1THk4Z2FIUjBjSE02THk5aWRXZHpMbmRsWW10cGRDNXZjbWN2YzJodmQxOWlkV2N1WTJkcFAybGtQVEV6TnpNek4xeHVjM1Z3Y0c5eWRDNWpjbVZoZEdWSVZFMU1SRzlqZFcxbGJuUWdQU0FvSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFIyWVhJZ1ltOWtlU0E5SUdSdlkzVnRaVzUwTG1sdGNHeGxiV1Z1ZEdGMGFXOXVMbU55WldGMFpVaFVUVXhFYjJOMWJXVnVkQ2dnWENKY0lpQXBMbUp2WkhrN1hHNWNkR0p2WkhrdWFXNXVaWEpJVkUxTUlEMGdYQ0k4Wm05eWJUNDhMMlp2Y20wK1BHWnZjbTArUEM5bWIzSnRQbHdpTzF4dVhIUnlaWFIxY200Z1ltOWtlUzVqYUdsc1pFNXZaR1Z6TG14bGJtZDBhQ0E5UFQwZ01qdGNibjBnS1NncE8xeHVYRzV5WlhSMWNtNGdjM1Z3Y0c5eWREdGNibjBnS1R0Y2JpSmRmUT09XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
