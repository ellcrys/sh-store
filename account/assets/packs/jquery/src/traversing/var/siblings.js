define(function () {
    "use strict";
    return function (n, elem) {
        var matched = [];
        for (; n; n = n.nextSibling) {
            if (n.nodeType === 1 && n !== elem) {
                matched.push(n);
            }
        }
        return matched;
    };
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL3RyYXZlcnNpbmcvdmFyL3NpYmxpbmdzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBRTtJQUVSLFlBQVksQ0FBQztJQUViLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxJQUFJO1FBQ3ZCLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUVqQixHQUFHLENBQUMsQ0FBQyxFQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFdBQVcsRUFBRyxDQUFDO1lBQy9CLEVBQUUsQ0FBQyxDQUFFLENBQUMsQ0FBQyxRQUFRLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUN0QyxPQUFPLENBQUMsSUFBSSxDQUFFLENBQUMsQ0FBRSxDQUFDO1lBQ25CLENBQUM7UUFDRixDQUFDO1FBRUQsTUFBTSxDQUFDLE9BQU8sQ0FBQztJQUNoQixDQUFDLENBQUM7QUFFRixDQUFDLENBQUUsQ0FBQyIsImZpbGUiOiJhc3NldHMvcGFja3MvanF1ZXJ5L3NyYy90cmF2ZXJzaW5nL3Zhci9zaWJsaW5ncy5qcyIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZSggZnVuY3Rpb24oKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5yZXR1cm4gZnVuY3Rpb24oIG4sIGVsZW0gKSB7XG5cdHZhciBtYXRjaGVkID0gW107XG5cblx0Zm9yICggOyBuOyBuID0gbi5uZXh0U2libGluZyApIHtcblx0XHRpZiAoIG4ubm9kZVR5cGUgPT09IDEgJiYgbiAhPT0gZWxlbSApIHtcblx0XHRcdG1hdGNoZWQucHVzaCggbiApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBtYXRjaGVkO1xufTtcblxufSApO1xuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL3RyYXZlcnNpbmcvdmFyL3NpYmxpbmdzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQztJQUNILFlBQVksQ0FBQztJQUNiLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxJQUFJO1FBQ3BCLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNqQixHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUNqQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3BCLENBQUM7UUFDTCxDQUFDO1FBQ0QsTUFBTSxDQUFDLE9BQU8sQ0FBQztJQUNuQixDQUFDLENBQUM7QUFDTixDQUFDLENBQUMsQ0FBQztBQUVILCttQ0FBK21DIiwiZmlsZSI6ImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL3RyYXZlcnNpbmcvdmFyL3NpYmxpbmdzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKGZ1bmN0aW9uICgpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICByZXR1cm4gZnVuY3Rpb24gKG4sIGVsZW0pIHtcbiAgICAgICAgdmFyIG1hdGNoZWQgPSBbXTtcbiAgICAgICAgZm9yICg7IG47IG4gPSBuLm5leHRTaWJsaW5nKSB7XG4gICAgICAgICAgICBpZiAobi5ub2RlVHlwZSA9PT0gMSAmJiBuICE9PSBlbGVtKSB7XG4gICAgICAgICAgICAgICAgbWF0Y2hlZC5wdXNoKG4pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtYXRjaGVkO1xuICAgIH07XG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUZ6YzJWMGN5OXdZV05yY3k5cWNYVmxjbmt2YzNKakwzUnlZWFpsY25OcGJtY3ZkbUZ5TDNOcFlteHBibWR6TG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRTFCUVUwc1EwRkJSVHRKUVVWU0xGbEJRVmtzUTBGQlF6dEpRVVZpTEUxQlFVMHNRMEZCUXl4VlFVRlZMRU5CUVVNc1JVRkJSU3hKUVVGSk8xRkJRM1pDTEVsQlFVa3NUMEZCVHl4SFFVRkhMRVZCUVVVc1EwRkJRenRSUVVWcVFpeEhRVUZITEVOQlFVTXNRMEZCUXl4RlFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEZkQlFWY3NSVUZCUnl4RFFVRkRPMWxCUXk5Q0xFVkJRVVVzUTBGQlF5eERRVUZGTEVOQlFVTXNRMEZCUXl4UlFVRlJMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eEpRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVOMFF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkZMRU5CUVVNc1EwRkJSU3hEUVVGRE8xbEJRMjVDTEVOQlFVTTdVVUZEUml4RFFVRkRPMUZCUlVRc1RVRkJUU3hEUVVGRExFOUJRVThzUTBGQlF6dEpRVU5vUWl4RFFVRkRMRU5CUVVNN1FVRkZSaXhEUVVGRExFTkJRVVVzUTBGQlF5SXNJbVpwYkdVaU9pSmhjM05sZEhNdmNHRmphM012YW5GMVpYSjVMM055WXk5MGNtRjJaWEp6YVc1bkwzWmhjaTl6YVdKc2FXNW5jeTVxY3lJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltUmxabWx1WlNnZ1puVnVZM1JwYjI0b0tTQjdYRzVjYmx3aWRYTmxJSE4wY21samRGd2lPMXh1WEc1eVpYUjFjbTRnWm5WdVkzUnBiMjRvSUc0c0lHVnNaVzBnS1NCN1hHNWNkSFpoY2lCdFlYUmphR1ZrSUQwZ1cxMDdYRzVjYmx4MFptOXlJQ2dnT3lCdU95QnVJRDBnYmk1dVpYaDBVMmxpYkdsdVp5QXBJSHRjYmx4MFhIUnBaaUFvSUc0dWJtOWtaVlI1Y0dVZ1BUMDlJREVnSmlZZ2JpQWhQVDBnWld4bGJTQXBJSHRjYmx4MFhIUmNkRzFoZEdOb1pXUXVjSFZ6YUNnZ2JpQXBPMXh1WEhSY2RIMWNibHgwZlZ4dVhHNWNkSEpsZEhWeWJpQnRZWFJqYUdWa08xeHVmVHRjYmx4dWZTQXBPMXh1SWwxOVxuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL3RyYXZlcnNpbmcvdmFyL3NpYmxpbmdzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQztJQUNILFlBQVksQ0FBQztJQUNiLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxJQUFJO1FBQ3BCLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNqQixHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUNqQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3BCLENBQUM7UUFDTCxDQUFDO1FBQ0QsTUFBTSxDQUFDLE9BQU8sQ0FBQztJQUNuQixDQUFDLENBQUM7QUFDTixDQUFDLENBQUMsQ0FBQztBQUNILCttQ0FBK21DO0FBRS9tQywycUZBQTJxRiIsImZpbGUiOiJhc3NldHMvcGFja3MvanF1ZXJ5L3NyYy90cmF2ZXJzaW5nL3Zhci9zaWJsaW5ncy5qcyIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZShmdW5jdGlvbiAoKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChuLCBlbGVtKSB7XG4gICAgICAgIHZhciBtYXRjaGVkID0gW107XG4gICAgICAgIGZvciAoOyBuOyBuID0gbi5uZXh0U2libGluZykge1xuICAgICAgICAgICAgaWYgKG4ubm9kZVR5cGUgPT09IDEgJiYgbiAhPT0gZWxlbSkge1xuICAgICAgICAgICAgICAgIG1hdGNoZWQucHVzaChuKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWF0Y2hlZDtcbiAgICB9O1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRnpjMlYwY3k5d1lXTnJjeTlxY1hWbGNua3ZjM0pqTDNSeVlYWmxjbk5wYm1jdmRtRnlMM05wWW14cGJtZHpMbXB6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxFMUJRVTBzUTBGQlJUdEpRVVZTTEZsQlFWa3NRMEZCUXp0SlFVVmlMRTFCUVUwc1EwRkJReXhWUVVGVkxFTkJRVU1zUlVGQlJTeEpRVUZKTzFGQlEzWkNMRWxCUVVrc1QwRkJUeXhIUVVGSExFVkJRVVVzUTBGQlF6dFJRVVZxUWl4SFFVRkhMRU5CUVVNc1EwRkJReXhGUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRmRCUVZjc1JVRkJSeXhEUVVGRE8xbEJReTlDTEVWQlFVVXNRMEZCUXl4RFFVRkZMRU5CUVVNc1EwRkJReXhSUVVGUkxFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4SlFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRE8yZENRVU4wUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRkxFTkJRVU1zUTBGQlJTeERRVUZETzFsQlEyNUNMRU5CUVVNN1VVRkRSaXhEUVVGRE8xRkJSVVFzVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXp0SlFVTm9RaXhEUVVGRExFTkJRVU03UVVGRlJpeERRVUZETEVOQlFVVXNRMEZCUXlJc0ltWnBiR1VpT2lKaGMzTmxkSE12Y0dGamEzTXZhbkYxWlhKNUwzTnlZeTkwY21GMlpYSnphVzVuTDNaaGNpOXphV0pzYVc1bmN5NXFjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1SbFptbHVaU2dnWm5WdVkzUnBiMjRvS1NCN1hHNWNibHdpZFhObElITjBjbWxqZEZ3aU8xeHVYRzV5WlhSMWNtNGdablZ1WTNScGIyNG9JRzRzSUdWc1pXMGdLU0I3WEc1Y2RIWmhjaUJ0WVhSamFHVmtJRDBnVzEwN1hHNWNibHgwWm05eUlDZ2dPeUJ1T3lCdUlEMGdiaTV1WlhoMFUybGliR2x1WnlBcElIdGNibHgwWEhScFppQW9JRzR1Ym05a1pWUjVjR1VnUFQwOUlERWdKaVlnYmlBaFBUMGdaV3hsYlNBcElIdGNibHgwWEhSY2RHMWhkR05vWldRdWNIVnphQ2dnYmlBcE8xeHVYSFJjZEgxY2JseDBmVnh1WEc1Y2RISmxkSFZ5YmlCdFlYUmphR1ZrTzF4dWZUdGNibHh1ZlNBcE8xeHVJbDE5XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1GemMyVjBjeTl3WVdOcmN5OXFjWFZsY25rdmMzSmpMM1J5WVhabGNuTnBibWN2ZG1GeUwzTnBZbXhwYm1kekxtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEUxQlFVMHNRMEZCUXp0SlFVTklMRmxCUVZrc1EwRkJRenRKUVVOaUxFMUJRVTBzUTBGQlF5eFZRVUZWTEVOQlFVTXNSVUZCUlN4SlFVRkpPMUZCUTNCQ0xFbEJRVWtzVDBGQlR5eEhRVUZITEVWQlFVVXNRMEZCUXp0UlFVTnFRaXhIUVVGSExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExGZEJRVmNzUlVGQlJTeERRVUZETzFsQlF6RkNMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eFJRVUZSTEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTnFReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTNCQ0xFTkJRVU03VVVGRFRDeERRVUZETzFGQlEwUXNUVUZCVFN4RFFVRkRMRTlCUVU4c1EwRkJRenRKUVVOdVFpeERRVUZETEVOQlFVTTdRVUZEVGl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVWSUxDdHRRMEZCSzIxRElpd2labWxzWlNJNkltRnpjMlYwY3k5d1lXTnJjeTlxY1hWbGNua3ZjM0pqTDNSeVlYWmxjbk5wYm1jdmRtRnlMM05wWW14cGJtZHpMbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVpHVm1hVzVsS0daMWJtTjBhVzl1SUNncElIdGNiaUFnSUNCY0luVnpaU0J6ZEhKcFkzUmNJanRjYmlBZ0lDQnlaWFIxY200Z1puVnVZM1JwYjI0Z0tHNHNJR1ZzWlcwcElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUcxaGRHTm9aV1FnUFNCYlhUdGNiaUFnSUNBZ0lDQWdabTl5SUNnN0lHNDdJRzRnUFNCdUxtNWxlSFJUYVdKc2FXNW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYmk1dWIyUmxWSGx3WlNBOVBUMGdNU0FtSmlCdUlDRTlQU0JsYkdWdEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0YwWTJobFpDNXdkWE5vS0c0cE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCdFlYUmphR1ZrTzF4dUlDQWdJSDA3WEc1OUtUdGNibHh1THk4aklITnZkWEpqWlUxaGNIQnBibWRWVWt3OVpHRjBZVHBoY0hCc2FXTmhkR2x2Ymk5cWMyOXVPMk5vWVhKelpYUTlkWFJtT0R0aVlYTmxOalFzWlhsS01scFlTbnBoVnpsMVNXcHZla3hEU25waU0xWjVXVEpXZWtscWNHSkpiVVo2WXpKV01HTjVPWGRaVjA1eVkzazVjV05ZVm14amJtdDJZek5LYWt3elVubFpXRnBzWTI1T2NHSnRZM1prYlVaNVRETk9jRmx0ZUhCaWJXUjZURzF3ZWtsc01ITkpiVFZvWWxkV2VrbHFjR0pZVTNkcFlsZEdkMk5IYkhWYU0wMXBUMmxLUWxGVlJrSk1SVEZDVVZVd2MxRXdSa0pTVkhSS1VWVldVMHhHYkVKUlZtdHpVVEJHUWxGNmRFcFJWVlpwVEVVeFFsRlZNSE5STUVaQ1VYbDRWbEZWUmxaTVJVNUNVVlZOYzFKVlJrSlNVM2hLVVZWR1NrOHhSa0pSTTFwRFRFVnNRbEZWYTNOVU1FWkNWSGw0U0ZGVlJraE1SVlpDVVZWVmMxRXdSa0pSZW5SU1VWVldjVkZwZUVoUlZVWklURVZPUWxGVlRYTlJNRVpDVVhsNFJsRlZSa2hNUlU1Q1VWVk5jMUpWUmtKU1UzaEVVVlZHUkV4RlpFSlJWV056VVRCR1FsRjVlRVJSVlVaRVRFWmtRbEZXWTNOU1ZVWkNVbmw0UkZGVlJrUlBNV3hDVVhrNVEweEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkdURVZPUWxGVlRYTlJNRVpDVVhsNFVsRlZSbEpNUlhSQ1VWVnpjMUV3UmtKUmVYaEtVVlZHU2t4RlRrSlJWVTF6VXpCR1FsTjVlRXBSVlVaTVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNbVJEVVZWT01GRjVlRkJSVlVaUVRFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrWk1SVTVDVVZWTmMxRXdSa0pTVTNoRVVWVkdSRTh4YkVKUk1qVkRURVZPUWxGVlRUZFZWVVpFVW1sNFJGRlZSa1JQTVVaQ1VsVlJjMVJWUmtKVVUzaEVVVlZHUkV4Rk9VSlJWVGh6VVRCR1FsRjZkRXBSVlU1dlVXbDRSRkZWUmtSTVJVNUNVVlZOTjFGVlJrWlNhWGhFVVZWR1JFeEZUa0pSVlZWelVUQkdRbEY1U1hOSmJWcHdZa2RWYVU5cFNtaGpNMDVzWkVoTmRtTkhSbXBoTTAxMllXNUdNVnBZU2pWTU0wNTVXWGs1TUdOdFJqSmFXRXA2WVZjMWJrd3pXbWhqYVRsNllWZEtjMkZYTlc1amVUVnhZM2xKYzBsdVRuWmtXRXBxV2xoT1JHSXlOVEJhVnpVd1NXcHdZa2x0VW14YWJXeDFXbE5uWjFwdVZuVlpNMUp3WWpJMGIwdFRRamRZUnpWallteDNhV1JZVG14SlNFNHdZMjFzYW1SR2QybFBNWGgxV0VjMWVWcFlVakZqYlRSbldtNVdkVmt6VW5CaU1qUnZTVWMwYzBsSFZuTmFWekJuUzFOQ04xaEhOV05rU0Zwb1kybENkRmxZVW1waFIxWnJTVVF3WjFjeE1EZFlSelZqWW14NE1GcHRPWGxKUTJkblQzbENkVTk1UW5WSlJEQm5ZbWsxZFZwWWFEQlZNbXhwWWtkc2RWcDVRWEJKU0hSallteDRNRmhJVW5CYWFVRnZTVWMwZFdKdE9XdGFWbEkxWTBkVloxQlVNRGxKUkVWblNtbFpaMkpwUVdoUVZEQm5XbGQ0YkdKVFFYQkpTSFJqWW14NE1GaElVbU5rUnpGb1pFZE9iMXBYVVhWalNGWjZZVU5uWjJKcFFYQlBNWGgxV0VoU1kyUklNV05pYkhnd1psWjRkVmhITldOa1NFcHNaRWhXZVdKcFFuUlpXRkpxWVVkV2EwOHhlSFZtVkhSallteDRkV1pUUVhCUE1YaDFTV3d4T1Z4dUlsMTlcbiJdfQ==

//# sourceMappingURL=data:application/json;charset=utf8;base64,
