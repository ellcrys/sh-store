define([
    "../../core"
], function (jQuery) {
    "use strict";
    return function (elem, dir, until) {
        var matched = [], truncate = until !== undefined;
        while ((elem = elem[dir]) && elem.nodeType !== 9) {
            if (elem.nodeType === 1) {
                if (truncate && jQuery(elem).is(until)) {
                    break;
                }
                matched.push(elem);
            }
        }
        return matched;
    };
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL3RyYXZlcnNpbmcvdmFyL2Rpci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUU7SUFDUCxZQUFZO0NBQ1osRUFBRSxVQUFVLE1BQU07SUFFbkIsWUFBWSxDQUFDO0lBRWIsTUFBTSxDQUFDLFVBQVUsSUFBSSxFQUFFLEdBQUcsRUFBRSxLQUFLO1FBQ2hDLElBQUksT0FBTyxHQUFHLEVBQUUsRUFDZixRQUFRLEdBQUcsS0FBSyxLQUFLLFNBQVMsQ0FBQztRQUVoQyxPQUFRLENBQUUsSUFBSSxHQUFHLElBQUksQ0FBRSxHQUFHLENBQUUsQ0FBRSxJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssQ0FBQyxFQUFHLENBQUM7WUFDeEQsRUFBRSxDQUFDLENBQUUsSUFBSSxDQUFDLFFBQVEsS0FBSyxDQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUMzQixFQUFFLENBQUMsQ0FBRSxRQUFRLElBQUksTUFBTSxDQUFFLElBQUksQ0FBRSxDQUFDLEVBQUUsQ0FBRSxLQUFLLENBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQzlDLEtBQUssQ0FBQztnQkFDUCxDQUFDO2dCQUNELE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSxDQUFFLENBQUM7WUFDdEIsQ0FBQztRQUNGLENBQUM7UUFDRCxNQUFNLENBQUMsT0FBTyxDQUFDO0lBQ2hCLENBQUMsQ0FBQztBQUVGLENBQUMsQ0FBRSxDQUFDIiwiZmlsZSI6ImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL3RyYXZlcnNpbmcvdmFyL2Rpci5qcyIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZSggW1xuXHRcIi4uLy4uL2NvcmVcIlxuXSwgZnVuY3Rpb24oIGpRdWVyeSApIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbnJldHVybiBmdW5jdGlvbiggZWxlbSwgZGlyLCB1bnRpbCApIHtcblx0dmFyIG1hdGNoZWQgPSBbXSxcblx0XHR0cnVuY2F0ZSA9IHVudGlsICE9PSB1bmRlZmluZWQ7XG5cblx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICYmIGVsZW0ubm9kZVR5cGUgIT09IDkgKSB7XG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0aWYgKCB0cnVuY2F0ZSAmJiBqUXVlcnkoIGVsZW0gKS5pcyggdW50aWwgKSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIG1hdGNoZWQ7XG59O1xuXG59ICk7XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9qcXVlcnkvc3JjL3RyYXZlcnNpbmcvdmFyL2Rpci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUM7SUFDSCxZQUFZO0NBQ2YsRUFBRSxVQUFVLE1BQU07SUFDZixZQUFZLENBQUM7SUFDYixNQUFNLENBQUMsVUFBVSxJQUFJLEVBQUUsR0FBRyxFQUFFLEtBQUs7UUFDN0IsSUFBSSxPQUFPLEdBQUcsRUFBRSxFQUFFLFFBQVEsR0FBRyxLQUFLLEtBQUssU0FBUyxDQUFDO1FBQ2pELE9BQU8sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLFFBQVEsS0FBSyxDQUFDLEVBQUUsQ0FBQztZQUMvQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RCLEVBQUUsQ0FBQyxDQUFDLFFBQVEsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDckMsS0FBSyxDQUFDO2dCQUNWLENBQUM7Z0JBQ0QsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN2QixDQUFDO1FBQ0wsQ0FBQztRQUNELE1BQU0sQ0FBQyxPQUFPLENBQUM7SUFDbkIsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDLENBQUM7QUFFSCx1a0RBQXVrRCIsImZpbGUiOiJhc3NldHMvcGFja3MvanF1ZXJ5L3NyYy90cmF2ZXJzaW5nL3Zhci9kaXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1xuICAgIFwiLi4vLi4vY29yZVwiXG5dLCBmdW5jdGlvbiAoalF1ZXJ5KSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtLCBkaXIsIHVudGlsKSB7XG4gICAgICAgIHZhciBtYXRjaGVkID0gW10sIHRydW5jYXRlID0gdW50aWwgIT09IHVuZGVmaW5lZDtcbiAgICAgICAgd2hpbGUgKChlbGVtID0gZWxlbVtkaXJdKSAmJiBlbGVtLm5vZGVUeXBlICE9PSA5KSB7XG4gICAgICAgICAgICBpZiAoZWxlbS5ub2RlVHlwZSA9PT0gMSkge1xuICAgICAgICAgICAgICAgIGlmICh0cnVuY2F0ZSAmJiBqUXVlcnkoZWxlbSkuaXModW50aWwpKSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBtYXRjaGVkLnB1c2goZWxlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1hdGNoZWQ7XG4gICAgfTtcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRnpjMlYwY3k5d1lXTnJjeTlxY1hWbGNua3ZjM0pqTDNSeVlYWmxjbk5wYm1jdmRtRnlMMlJwY2k1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxFTkJRVVU3U1VGRFVDeFpRVUZaTzBOQlExb3NSVUZCUlN4VlFVRlZMRTFCUVUwN1NVRkZia0lzV1VGQldTeERRVUZETzBsQlJXSXNUVUZCVFN4RFFVRkRMRlZCUVZVc1NVRkJTU3hGUVVGRkxFZEJRVWNzUlVGQlJTeExRVUZMTzFGQlEyaERMRWxCUVVrc1QwRkJUeXhIUVVGSExFVkJRVVVzUlVGRFppeFJRVUZSTEVkQlFVY3NTMEZCU3l4TFFVRkxMRk5CUVZNc1EwRkJRenRSUVVWb1F5eFBRVUZSTEVOQlFVVXNTVUZCU1N4SFFVRkhMRWxCUVVrc1EwRkJSU3hIUVVGSExFTkJRVVVzUTBGQlJTeEpRVUZKTEVsQlFVa3NRMEZCUXl4UlFVRlJMRXRCUVVzc1EwRkJReXhGUVVGSExFTkJRVU03V1VGRGVFUXNSVUZCUlN4RFFVRkRMRU5CUVVVc1NVRkJTU3hEUVVGRExGRkJRVkVzUzBGQlN5eERRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVNelFpeEZRVUZGTEVOQlFVTXNRMEZCUlN4UlFVRlJMRWxCUVVrc1RVRkJUU3hEUVVGRkxFbEJRVWtzUTBGQlJTeERRVUZETEVWQlFVVXNRMEZCUlN4TFFVRkxMRU5CUVVjc1EwRkJReXhEUVVGRExFTkJRVU03YjBKQlF6bERMRXRCUVVzc1EwRkJRenRuUWtGRFVDeERRVUZETzJkQ1FVTkVMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVVVzU1VGQlNTeERRVUZGTEVOQlFVTTdXVUZEZEVJc1EwRkJRenRSUVVOR0xFTkJRVU03VVVGRFJDeE5RVUZOTEVOQlFVTXNUMEZCVHl4RFFVRkRPMGxCUTJoQ0xFTkJRVU1zUTBGQlF6dEJRVVZHTEVOQlFVTXNRMEZCUlN4RFFVRkRJaXdpWm1sc1pTSTZJbUZ6YzJWMGN5OXdZV05yY3k5cWNYVmxjbmt2YzNKakwzUnlZWFpsY25OcGJtY3ZkbUZ5TDJScGNpNXFjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1SbFptbHVaU2dnVzF4dVhIUmNJaTR1THk0dUwyTnZjbVZjSWx4dVhTd2dablZ1WTNScGIyNG9JR3BSZFdWeWVTQXBJSHRjYmx4dVhDSjFjMlVnYzNSeWFXTjBYQ0k3WEc1Y2JuSmxkSFZ5YmlCbWRXNWpkR2x2YmlnZ1pXeGxiU3dnWkdseUxDQjFiblJwYkNBcElIdGNibHgwZG1GeUlHMWhkR05vWldRZ1BTQmJYU3hjYmx4MFhIUjBjblZ1WTJGMFpTQTlJSFZ1ZEdsc0lDRTlQU0IxYm1SbFptbHVaV1E3WEc1Y2JseDBkMmhwYkdVZ0tDQW9JR1ZzWlcwZ1BTQmxiR1Z0V3lCa2FYSWdYU0FwSUNZbUlHVnNaVzB1Ym05a1pWUjVjR1VnSVQwOUlEa2dLU0I3WEc1Y2RGeDBhV1lnS0NCbGJHVnRMbTV2WkdWVWVYQmxJRDA5UFNBeElDa2dlMXh1WEhSY2RGeDBhV1lnS0NCMGNuVnVZMkYwWlNBbUppQnFVWFZsY25rb0lHVnNaVzBnS1M1cGN5Z2dkVzUwYVd3Z0tTQXBJSHRjYmx4MFhIUmNkRngwWW5KbFlXczdYRzVjZEZ4MFhIUjlYRzVjZEZ4MFhIUnRZWFJqYUdWa0xuQjFjMmdvSUdWc1pXMGdLVHRjYmx4MFhIUjlYRzVjZEgxY2JseDBjbVYwZFhKdUlHMWhkR05vWldRN1hHNTlPMXh1WEc1OUlDazdYRzRpWFgwPVxuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
