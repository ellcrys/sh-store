/* globals Tether */
Tether.modules.push({
    initialize: function () {
        var _this = this;
        this.markers = {};
        ['target', 'element'].forEach(function (type) {
            var el = document.createElement('div');
            el.className = _this.getClass(type + "-marker");
            var dot = document.createElement('div');
            dot.className = _this.getClass('marker-dot');
            el.appendChild(dot);
            _this[type].appendChild(el);
            _this.markers[type] = { dot: dot, el: el };
        });
    },
    position: function (_a) {
        var manualOffset = _a.manualOffset, manualTargetOffset = _a.manualTargetOffset;
        var offsets = {
            element: manualOffset,
            target: manualTargetOffset
        };
        for (var type in offsets) {
            var offset = offsets[type];
            for (var side in offset) {
                var val = offset[side];
                var notString = typeof val !== 'string';
                if (notString ||
                    val.indexOf('%') === -1 &&
                        val.indexOf('px') === -1) {
                    val += 'px';
                }
                if (this.markers[type].dot.style[side] !== val) {
                    this.markers[type].dot.style[side] = val;
                }
            }
        }
        return true;
    }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy90ZXRoZXIvc3JjL2pzL21hcmtBdHRhY2htZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUVwQixNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUNsQixVQUFVO1FBQVYsaUJBZUM7UUFkQyxJQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUVsQixDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxJQUFJO1lBQ2hDLElBQU0sRUFBRSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDekMsRUFBRSxDQUFDLFNBQVMsR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFLLElBQUksWUFBVSxDQUFDLENBQUM7WUFFakQsSUFBTSxHQUFHLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMxQyxHQUFHLENBQUMsU0FBUyxHQUFHLEtBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDNUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUVwQixLQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBRTNCLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBQyxHQUFHLEtBQUEsRUFBRSxFQUFFLElBQUEsRUFBQyxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFFBQVEsWUFBQyxFQUFrQztZQUFqQyw4QkFBWSxFQUFFLDBDQUFrQjtRQUN4QyxJQUFNLE9BQU8sR0FBRztZQUNkLE9BQU8sRUFBRSxZQUFZO1lBQ3JCLE1BQU0sRUFBRSxrQkFBa0I7U0FDM0IsQ0FBQztRQUVGLEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDekIsSUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzdCLEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUM7Z0JBQ3hCLElBQUksR0FBRyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDdkIsSUFBTSxTQUFTLEdBQUcsT0FBTyxHQUFHLEtBQUssUUFBUSxDQUFDO2dCQUMxQyxFQUFFLENBQUMsQ0FBQyxTQUFTO29CQUNULEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO3dCQUN2QixHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDN0IsR0FBRyxJQUFJLElBQUksQ0FBQztnQkFDZCxDQUFDO2dCQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO29CQUMvQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDO2dCQUMzQyxDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUM7UUFFRCxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGLENBQUMsQ0FBQyIsImZpbGUiOiJhc3NldHMvcGFja3MvdGV0aGVyL3NyYy9qcy9tYXJrQXR0YWNobWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgVGV0aGVyICovXG5cblRldGhlci5tb2R1bGVzLnB1c2goe1xuICBpbml0aWFsaXplKCkge1xuICAgIHRoaXMubWFya2VycyA9IHt9O1xuXG4gICAgWyd0YXJnZXQnLCAnZWxlbWVudCddLmZvckVhY2godHlwZSA9PiB7XG4gICAgICBjb25zdCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgZWwuY2xhc3NOYW1lID0gdGhpcy5nZXRDbGFzcyhgJHsgdHlwZSB9LW1hcmtlcmApO1xuXG4gICAgICBjb25zdCBkb3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGRvdC5jbGFzc05hbWUgPSB0aGlzLmdldENsYXNzKCdtYXJrZXItZG90Jyk7XG4gICAgICBlbC5hcHBlbmRDaGlsZChkb3QpO1xuXG4gICAgICB0aGlzW3R5cGVdLmFwcGVuZENoaWxkKGVsKTtcblxuICAgICAgdGhpcy5tYXJrZXJzW3R5cGVdID0ge2RvdCwgZWx9O1xuICAgIH0pO1xuICB9LFxuXG4gIHBvc2l0aW9uKHttYW51YWxPZmZzZXQsIG1hbnVhbFRhcmdldE9mZnNldH0pIHtcbiAgICBjb25zdCBvZmZzZXRzID0ge1xuICAgICAgZWxlbWVudDogbWFudWFsT2Zmc2V0LFxuICAgICAgdGFyZ2V0OiBtYW51YWxUYXJnZXRPZmZzZXRcbiAgICB9O1xuXG4gICAgZm9yIChsZXQgdHlwZSBpbiBvZmZzZXRzKSB7XG4gICAgICBjb25zdCBvZmZzZXQgPSBvZmZzZXRzW3R5cGVdO1xuICAgICAgZm9yIChsZXQgc2lkZSBpbiBvZmZzZXQpIHtcbiAgICAgICAgbGV0IHZhbCA9IG9mZnNldFtzaWRlXTtcbiAgICAgICAgY29uc3Qgbm90U3RyaW5nID0gdHlwZW9mIHZhbCAhPT0gJ3N0cmluZyc7XG4gICAgICAgIGlmIChub3RTdHJpbmcgfHxcbiAgICAgICAgICAgIHZhbC5pbmRleE9mKCclJykgPT09IC0xICYmXG4gICAgICAgICAgICB2YWwuaW5kZXhPZigncHgnKSA9PT0gLTEpIHtcbiAgICAgICAgICB2YWwgKz0gJ3B4JztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLm1hcmtlcnNbdHlwZV0uZG90LnN0eWxlW3NpZGVdICE9PSB2YWwpIHtcbiAgICAgICAgICB0aGlzLm1hcmtlcnNbdHlwZV0uZG90LnN0eWxlW3NpZGVdID0gdmFsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn0pO1xuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy90ZXRoZXIvc3JjL2pzL21hcmtBdHRhY2htZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUNoQixVQUFVLEVBQUU7UUFDUixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDbEIsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQVUsSUFBSTtZQUN4QyxJQUFJLEVBQUUsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3ZDLEVBQUUsQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDLENBQUM7WUFDaEQsSUFBSSxHQUFHLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN4QyxHQUFHLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDN0MsRUFBRSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNwQixLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzVCLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUMvQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxRQUFRLEVBQUUsVUFBVSxFQUFFO1FBQ2xCLElBQUksWUFBWSxHQUFHLEVBQUUsQ0FBQyxZQUFZLEVBQUUsa0JBQWtCLEdBQUcsRUFBRSxDQUFDLGtCQUFrQixDQUFDO1FBQy9FLElBQUksT0FBTyxHQUFHO1lBQ1YsT0FBTyxFQUFFLFlBQVk7WUFDckIsTUFBTSxFQUFFLGtCQUFrQjtTQUM3QixDQUFDO1FBQ0YsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUN2QixJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDM0IsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQztnQkFDdEIsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN2QixJQUFJLFNBQVMsR0FBRyxPQUFPLEdBQUcsS0FBSyxRQUFRLENBQUM7Z0JBQ3hDLEVBQUUsQ0FBQyxDQUFDLFNBQVM7b0JBQ1QsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7d0JBQ25CLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUMvQixHQUFHLElBQUksSUFBSSxDQUFDO2dCQUNoQixDQUFDO2dCQUNELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO29CQUM3QyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDO2dCQUM3QyxDQUFDO1lBQ0wsQ0FBQztRQUNMLENBQUM7UUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2hCLENBQUM7Q0FDSixDQUFDLENBQUM7QUFDSCwybkhBQTJuSDtBQUMzbkgsdS9SQUF1L1I7QUFFdi9SLG1ncUJBQW1ncUIiLCJmaWxlIjoiYXNzZXRzL3BhY2tzL3RldGhlci9zcmMvanMvbWFya0F0dGFjaG1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIFRldGhlciAqL1xuVGV0aGVyLm1vZHVsZXMucHVzaCh7XG4gICAgaW5pdGlhbGl6ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB0aGlzLm1hcmtlcnMgPSB7fTtcbiAgICAgICAgWyd0YXJnZXQnLCAnZWxlbWVudCddLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHtcbiAgICAgICAgICAgIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgZWwuY2xhc3NOYW1lID0gX3RoaXMuZ2V0Q2xhc3ModHlwZSArIFwiLW1hcmtlclwiKTtcbiAgICAgICAgICAgIHZhciBkb3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIGRvdC5jbGFzc05hbWUgPSBfdGhpcy5nZXRDbGFzcygnbWFya2VyLWRvdCcpO1xuICAgICAgICAgICAgZWwuYXBwZW5kQ2hpbGQoZG90KTtcbiAgICAgICAgICAgIF90aGlzW3R5cGVdLmFwcGVuZENoaWxkKGVsKTtcbiAgICAgICAgICAgIF90aGlzLm1hcmtlcnNbdHlwZV0gPSB7IGRvdDogZG90LCBlbDogZWwgfTtcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBwb3NpdGlvbjogZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHZhciBtYW51YWxPZmZzZXQgPSBfYS5tYW51YWxPZmZzZXQsIG1hbnVhbFRhcmdldE9mZnNldCA9IF9hLm1hbnVhbFRhcmdldE9mZnNldDtcbiAgICAgICAgdmFyIG9mZnNldHMgPSB7XG4gICAgICAgICAgICBlbGVtZW50OiBtYW51YWxPZmZzZXQsXG4gICAgICAgICAgICB0YXJnZXQ6IG1hbnVhbFRhcmdldE9mZnNldFxuICAgICAgICB9O1xuICAgICAgICBmb3IgKHZhciB0eXBlIGluIG9mZnNldHMpIHtcbiAgICAgICAgICAgIHZhciBvZmZzZXQgPSBvZmZzZXRzW3R5cGVdO1xuICAgICAgICAgICAgZm9yICh2YXIgc2lkZSBpbiBvZmZzZXQpIHtcbiAgICAgICAgICAgICAgICB2YXIgdmFsID0gb2Zmc2V0W3NpZGVdO1xuICAgICAgICAgICAgICAgIHZhciBub3RTdHJpbmcgPSB0eXBlb2YgdmFsICE9PSAnc3RyaW5nJztcbiAgICAgICAgICAgICAgICBpZiAobm90U3RyaW5nIHx8XG4gICAgICAgICAgICAgICAgICAgIHZhbC5pbmRleE9mKCclJykgPT09IC0xICYmXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWwuaW5kZXhPZigncHgnKSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsICs9ICdweCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0aGlzLm1hcmtlcnNbdHlwZV0uZG90LnN0eWxlW3NpZGVdICE9PSB2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXJrZXJzW3R5cGVdLmRvdC5zdHlsZVtzaWRlXSA9IHZhbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRnpjMlYwY3k5d1lXTnJjeTkwWlhSb1pYSXZjM0pqTDJwekwyMWhjbXRCZEhSaFkyaHRaVzUwTG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRzlDUVVGdlFqdEJRVVZ3UWl4TlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF6dEpRVU5zUWl4VlFVRlZPMUZCUVZZc2FVSkJaVU03VVVGa1F5eEpRVUZKTEVOQlFVTXNUMEZCVHl4SFFVRkhMRVZCUVVVc1EwRkJRenRSUVVWc1FpeERRVUZETEZGQlFWRXNSVUZCUlN4VFFVRlRMRU5CUVVNc1EwRkJReXhQUVVGUExFTkJRVU1zVlVGQlFTeEpRVUZKTzFsQlEyaERMRWxCUVUwc1JVRkJSU3hIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1dVRkRla01zUlVGQlJTeERRVUZETEZOQlFWTXNSMEZCUnl4TFFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGTExFbEJRVWtzV1VGQlZTeERRVUZETEVOQlFVTTdXVUZGYWtRc1NVRkJUU3hIUVVGSExFZEJRVWNzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRaUVVNeFF5eEhRVUZITEVOQlFVTXNVMEZCVXl4SFFVRkhMRXRCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zV1VGQldTeERRVUZETEVOQlFVTTdXVUZETlVNc1JVRkJSU3hEUVVGRExGZEJRVmNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0WlFVVndRaXhMUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNWMEZCVnl4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRE8xbEJSVE5DTEV0QlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUlVGQlF5eEhRVUZITEV0QlFVRXNSVUZCUlN4RlFVRkZMRWxCUVVFc1JVRkJReXhEUVVGRE8xRkJRMnBETEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUTB3c1EwRkJRenRKUVVWRUxGRkJRVkVzV1VGQlF5eEZRVUZyUXp0WlFVRnFReXc0UWtGQldTeEZRVUZGTERCRFFVRnJRanRSUVVONFF5eEpRVUZOTEU5QlFVOHNSMEZCUnp0WlFVTmtMRTlCUVU4c1JVRkJSU3haUVVGWk8xbEJRM0pDTEUxQlFVMHNSVUZCUlN4clFrRkJhMEk3VTBGRE0wSXNRMEZCUXp0UlFVVkdMRWRCUVVjc1EwRkJReXhEUVVGRExFbEJRVWtzU1VGQlNTeEpRVUZKTEU5QlFVOHNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRla0lzU1VGQlRTeE5RVUZOTEVkQlFVY3NUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8xbEJRemRDTEVkQlFVY3NRMEZCUXl4RFFVRkRMRWxCUVVrc1NVRkJTU3hKUVVGSkxFMUJRVTBzUTBGQlF5eERRVUZETEVOQlFVTTdaMEpCUTNoQ0xFbEJRVWtzUjBGQlJ5eEhRVUZITEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRuUWtGRGRrSXNTVUZCVFN4VFFVRlRMRWRCUVVjc1QwRkJUeXhIUVVGSExFdEJRVXNzVVVGQlVTeERRVUZETzJkQ1FVTXhReXhGUVVGRkxFTkJRVU1zUTBGQlF5eFRRVUZUTzI5Q1FVTlVMRWRCUVVjc1EwRkJReXhQUVVGUExFTkJRVU1zUjBGQlJ5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRPM2RDUVVOMlFpeEhRVUZITEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0dlFrRkROMElzUjBGQlJ5eEpRVUZKTEVsQlFVa3NRMEZCUXp0blFrRkRaQ3hEUVVGRE8yZENRVVZFTEVWQlFVVXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRPMjlDUVVNdlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1IwRkJSeXhEUVVGRE8yZENRVU16UXl4RFFVRkRPMWxCUTBnc1EwRkJRenRSUVVOSUxFTkJRVU03VVVGRlJDeE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRPMGxCUTJRc1EwRkJRenREUVVOR0xFTkJRVU1zUTBGQlF5SXNJbVpwYkdVaU9pSmhjM05sZEhNdmNHRmphM012ZEdWMGFHVnlMM055WXk5cWN5OXRZWEpyUVhSMFlXTm9iV1Z1ZEM1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaThxSUdkc2IySmhiSE1nVkdWMGFHVnlJQ292WEc1Y2JsUmxkR2hsY2k1dGIyUjFiR1Z6TG5CMWMyZ29lMXh1SUNCcGJtbDBhV0ZzYVhwbEtDa2dlMXh1SUNBZ0lIUm9hWE11YldGeWEyVnljeUE5SUh0OU8xeHVYRzRnSUNBZ1d5ZDBZWEpuWlhRbkxDQW5aV3hsYldWdWRDZGRMbVp2Y2tWaFkyZ29kSGx3WlNBOVBpQjdYRzRnSUNBZ0lDQmpiMjV6ZENCbGJDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0oyUnBkaWNwTzF4dUlDQWdJQ0FnWld3dVkyeGhjM05PWVcxbElEMGdkR2hwY3k1blpYUkRiR0Z6Y3loZ0pIc2dkSGx3WlNCOUxXMWhjbXRsY21BcE8xeHVYRzRnSUNBZ0lDQmpiMjV6ZENCa2IzUWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZGthWFluS1R0Y2JpQWdJQ0FnSUdSdmRDNWpiR0Z6YzA1aGJXVWdQU0IwYUdsekxtZGxkRU5zWVhOektDZHRZWEpyWlhJdFpHOTBKeWs3WEc0Z0lDQWdJQ0JsYkM1aGNIQmxibVJEYUdsc1pDaGtiM1FwTzF4dVhHNGdJQ0FnSUNCMGFHbHpXM1I1Y0dWZExtRndjR1Z1WkVOb2FXeGtLR1ZzS1R0Y2JseHVJQ0FnSUNBZ2RHaHBjeTV0WVhKclpYSnpXM1I1Y0dWZElEMGdlMlJ2ZEN3Z1pXeDlPMXh1SUNBZ0lIMHBPMXh1SUNCOUxGeHVYRzRnSUhCdmMybDBhVzl1S0h0dFlXNTFZV3hQWm1aelpYUXNJRzFoYm5WaGJGUmhjbWRsZEU5bVpuTmxkSDBwSUh0Y2JpQWdJQ0JqYjI1emRDQnZabVp6WlhSeklEMGdlMXh1SUNBZ0lDQWdaV3hsYldWdWREb2diV0Z1ZFdGc1QyWm1jMlYwTEZ4dUlDQWdJQ0FnZEdGeVoyVjBPaUJ0WVc1MVlXeFVZWEpuWlhSUFptWnpaWFJjYmlBZ0lDQjlPMXh1WEc0Z0lDQWdabTl5SUNoc1pYUWdkSGx3WlNCcGJpQnZabVp6WlhSektTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCdlptWnpaWFFnUFNCdlptWnpaWFJ6VzNSNWNHVmRPMXh1SUNBZ0lDQWdabTl5SUNoc1pYUWdjMmxrWlNCcGJpQnZabVp6WlhRcElIdGNiaUFnSUNBZ0lDQWdiR1YwSUhaaGJDQTlJRzltWm5ObGRGdHphV1JsWFR0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYm05MFUzUnlhVzVuSUQwZ2RIbHdaVzltSUhaaGJDQWhQVDBnSjNOMGNtbHVaeWM3WEc0Z0lDQWdJQ0FnSUdsbUlDaHViM1JUZEhKcGJtY2dmSHhjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhiQzVwYm1SbGVFOW1LQ2NsSnlrZ1BUMDlJQzB4SUNZbVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVd3dWFXNWtaWGhQWmlnbmNIZ25LU0E5UFQwZ0xURXBJSHRjYmlBZ0lDQWdJQ0FnSUNCMllXd2dLejBnSjNCNEp6dGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG0xaGNtdGxjbk5iZEhsd1pWMHVaRzkwTG5OMGVXeGxXM05wWkdWZElDRTlQU0IyWVd3cElIdGNiaUFnSUNBZ0lDQWdJQ0IwYUdsekxtMWhjbXRsY25OYmRIbHdaVjB1Wkc5MExuTjBlV3hsVzNOcFpHVmRJRDBnZG1Gc08xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYRzRnSUgxY2JuMHBPMXh1SWwxOVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUZ6YzJWMGN5OXdZV05yY3k5MFpYUm9aWEl2YzNKakwycHpMMjFoY210QmRIUmhZMmh0Wlc1MExtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEc5Q1FVRnZRanRCUVVOd1FpeE5RVUZOTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJRenRKUVVOb1FpeFZRVUZWTEVWQlFVVTdVVUZEVWl4SlFVRkpMRXRCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU03VVVGRGFrSXNTVUZCU1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhGUVVGRkxFTkJRVU03VVVGRGJFSXNRMEZCUXl4UlFVRlJMRVZCUVVVc1UwRkJVeXhEUVVGRExFTkJRVU1zVDBGQlR5eERRVUZETEZWQlFWVXNTVUZCU1R0WlFVTjRReXhKUVVGSkxFVkJRVVVzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8xbEJRM1pETEVWQlFVVXNRMEZCUXl4VFFVRlRMRWRCUVVjc1MwRkJTeXhEUVVGRExGRkJRVkVzUTBGQlF5eEpRVUZKTEVkQlFVY3NVMEZCVXl4RFFVRkRMRU5CUVVNN1dVRkRhRVFzU1VGQlNTeEhRVUZITEVkQlFVY3NVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dFpRVU40UXl4SFFVRkhMRU5CUVVNc1UwRkJVeXhIUVVGSExFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNXVUZCV1N4RFFVRkRMRU5CUVVNN1dVRkROME1zUlVGQlJTeERRVUZETEZkQlFWY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRaUVVOd1FpeExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETzFsQlF6VkNMRXRCUVVzc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NSVUZCUlN4SFFVRkhMRVZCUVVVc1IwRkJSeXhGUVVGRkxFVkJRVVVzUlVGQlJTeEZRVUZGTEVWQlFVVXNRMEZCUXp0UlFVTXZReXhEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU5RTEVOQlFVTTdTVUZEUkN4UlFVRlJMRVZCUVVVc1ZVRkJWU3hGUVVGRk8xRkJRMnhDTEVsQlFVa3NXVUZCV1N4SFFVRkhMRVZCUVVVc1EwRkJReXhaUVVGWkxFVkJRVVVzYTBKQlFXdENMRWRCUVVjc1JVRkJSU3hEUVVGRExHdENRVUZyUWl4RFFVRkRPMUZCUXk5RkxFbEJRVWtzVDBGQlR5eEhRVUZITzFsQlExWXNUMEZCVHl4RlFVRkZMRmxCUVZrN1dVRkRja0lzVFVGQlRTeEZRVUZGTEd0Q1FVRnJRanRUUVVNM1FpeERRVUZETzFGQlEwWXNSMEZCUnl4RFFVRkRMRU5CUVVNc1NVRkJTU3hKUVVGSkxFbEJRVWtzVDBGQlR5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTjJRaXhKUVVGSkxFMUJRVTBzUjBGQlJ5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1dVRkRNMElzUjBGQlJ5eERRVUZETEVOQlFVTXNTVUZCU1N4SlFVRkpMRWxCUVVrc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF6dG5Ra0ZEZEVJc1NVRkJTU3hIUVVGSExFZEJRVWNzVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMmRDUVVOMlFpeEpRVUZKTEZOQlFWTXNSMEZCUnl4UFFVRlBMRWRCUVVjc1MwRkJTeXhSUVVGUkxFTkJRVU03WjBKQlEzaERMRVZCUVVVc1EwRkJReXhEUVVGRExGTkJRVk03YjBKQlExUXNSMEZCUnl4RFFVRkRMRTlCUVU4c1EwRkJReXhIUVVGSExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdkMEpCUTI1Q0xFZEJRVWNzUTBGQlF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzI5Q1FVTXZRaXhIUVVGSExFbEJRVWtzU1VGQlNTeERRVUZETzJkQ1FVTm9RaXhEUVVGRE8yZENRVU5FTEVWQlFVVXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRPMjlDUVVNM1F5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1IwRkJSeXhEUVVGRE8yZENRVU0zUXl4RFFVRkRPMWxCUTB3c1EwRkJRenRSUVVOTUxFTkJRVU03VVVGRFJDeE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRPMGxCUTJoQ0xFTkJRVU03UTBGRFNpeERRVUZETEVOQlFVTTdRVUZGU0N3eWJraEJRVEp1U0NJc0ltWnBiR1VpT2lKaGMzTmxkSE12Y0dGamEzTXZkR1YwYUdWeUwzTnlZeTlxY3k5dFlYSnJRWFIwWVdOb2JXVnVkQzVxY3lJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpOHFJR2RzYjJKaGJITWdWR1YwYUdWeUlDb3ZYRzVVWlhSb1pYSXViVzlrZFd4bGN5NXdkWE5vS0h0Y2JpQWdJQ0JwYm1sMGFXRnNhWHBsT2lCbWRXNWpkR2x2YmlBb0tTQjdYRzRnSUNBZ0lDQWdJSFpoY2lCZmRHaHBjeUE5SUhSb2FYTTdYRzRnSUNBZ0lDQWdJSFJvYVhNdWJXRnlhMlZ5Y3lBOUlIdDlPMXh1SUNBZ0lDQWdJQ0JiSjNSaGNtZGxkQ2NzSUNkbGJHVnRaVzUwSjEwdVptOXlSV0ZqYUNobWRXNWpkR2x2YmlBb2RIbHdaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdWc0lEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnblpHbDJKeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxiQzVqYkdGemMwNWhiV1VnUFNCZmRHaHBjeTVuWlhSRGJHRnpjeWgwZVhCbElDc2dYQ0l0YldGeWEyVnlYQ0lwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdSdmRDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0oyUnBkaWNwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdaRzkwTG1Oc1lYTnpUbUZ0WlNBOUlGOTBhR2x6TG1kbGRFTnNZWE56S0NkdFlYSnJaWEl0Wkc5MEp5azdYRzRnSUNBZ0lDQWdJQ0FnSUNCbGJDNWhjSEJsYm1SRGFHbHNaQ2hrYjNRcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWDNSb2FYTmJkSGx3WlYwdVlYQndaVzVrUTJocGJHUW9aV3dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdYM1JvYVhNdWJXRnlhMlZ5YzF0MGVYQmxYU0E5SUhzZ1pHOTBPaUJrYjNRc0lHVnNPaUJsYkNCOU8xeHVJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlMRnh1SUNBZ0lIQnZjMmwwYVc5dU9pQm1kVzVqZEdsdmJpQW9YMkVwSUh0Y2JpQWdJQ0FnSUNBZ2RtRnlJRzFoYm5WaGJFOW1abk5sZENBOUlGOWhMbTFoYm5WaGJFOW1abk5sZEN3Z2JXRnVkV0ZzVkdGeVoyVjBUMlptYzJWMElEMGdYMkV1YldGdWRXRnNWR0Z5WjJWMFQyWm1jMlYwTzF4dUlDQWdJQ0FnSUNCMllYSWdiMlptYzJWMGN5QTlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnNaVzFsYm5RNklHMWhiblZoYkU5bVpuTmxkQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIUmhjbWRsZERvZ2JXRnVkV0ZzVkdGeVoyVjBUMlptYzJWMFhHNGdJQ0FnSUNBZ0lIMDdYRzRnSUNBZ0lDQWdJR1p2Y2lBb2RtRnlJSFI1Y0dVZ2FXNGdiMlptYzJWMGN5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJRzltWm5ObGRDQTlJRzltWm5ObGRITmJkSGx3WlYwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjNJZ0tIWmhjaUJ6YVdSbElHbHVJRzltWm5ObGRDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCMllXd2dQU0J2Wm1aelpYUmJjMmxrWlYwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJRzV2ZEZOMGNtbHVaeUE5SUhSNWNHVnZaaUIyWVd3Z0lUMDlJQ2R6ZEhKcGJtY25PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodWIzUlRkSEpwYm1jZ2ZIeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc0xtbHVaR1Y0VDJZb0p5VW5LU0E5UFQwZ0xURWdKaVpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkM1cGJtUmxlRTltS0Nkd2VDY3BJRDA5UFNBdE1Ta2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXd2dLejBnSjNCNEp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSb2FYTXViV0Z5YTJWeWMxdDBlWEJsWFM1a2IzUXVjM1I1YkdWYmMybGtaVjBnSVQwOUlIWmhiQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xaGNtdGxjbk5iZEhsd1pWMHVaRzkwTG5OMGVXeGxXM05wWkdWZElEMGdkbUZzTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEhKMVpUdGNiaUFnSUNCOVhHNTlLVHRjYmx4dUx5OGpJSE52ZFhKalpVMWhjSEJwYm1kVlVrdzlaR0YwWVRwaGNIQnNhV05oZEdsdmJpOXFjMjl1TzJOb1lYSnpaWFE5ZFhSbU9EdGlZWE5sTmpRc1pYbEtNbHBZU25waFZ6bDFTV3B2ZWt4RFNucGlNMVo1V1RKV2VrbHFjR0pKYlVaNll6SldNR041T1hkWlYwNXlZM2s1TUZwWVVtOWFXRWwyWXpOS2Frd3ljSHBNTWpGb1kyMTBRbVJJVW1oWk1taDBXbGMxTUV4dGNIcEpiREJ6U1cwMWFHSlhWbnBKYW5CaVdGTjNhV0pYUm5kalIyeDFXak5OYVU5cFNrSlJWVVpDVEVjNVExRlZSblpSYW5SQ1VWVldkMUZwZUU1UlZVWk9URVZPUWxGVlRYTlVNRVpDVkhsNFJGRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVuUktVVlZPYzFGcGVGWlJWVVpXVHpGR1FsRldXWE5oVlVwQ1dsVk5OMVZWUm10UmVYaEtVVlZHU2t4RlRrSlJWVTF6VkRCR1FsUjVlRWhSVlVaSVRFVldRbEZWVlhOUk1FWkNVWHAwVWxGVlZuTlJhWGhFVVZWR1JFeEdSa0pSVmtWelVsVkdRbEpUZUZSUlZVWlVURVZPUWxGVlRYTlJNRVpDVVhsNFVGRlZSbEJNUlU1Q1VWVk5jMVpWUmtKUlUzaEtVVlZHU2s4eGJFSlJNbWhFVEVWc1FsRlZNSE5TVlVaQ1VsTjRTRkZWUmtoTVJrWkNVVlpGYzFFd1JrSlJlWGhvVVZWR2FFeEZUa0pSVlUxelV6QkdRbE41ZUVSUlZVWkVURVZPUWxGVlRUZFhWVVpFWld0TmMxSlZSa0pTVTNoRVVWVkdSRXhHVGtKUlZrMXpVakJHUWxKNWVFeFJWVVpLVEVWT1FsRlZUWE5WVlVaQ1ZWTjRSRkZWUmt4TVJXeENVVlZyYzFkVlJrSldVM2hFVVZWR1JFeEZUa0pSVlUwM1YxVkdSbUZyVVhOVFZVWkNWRk40U0ZGVlJraE1SV1JDVVZWamMxVlZSa0pWVTNoRVVWVkdSRXhIUmtKUlYwVnpVVEJHUWxGNWVFeFJWVVpNVEVWT1FsRlZUWE5STUVaQ1VYcDBXbEZWVFhoUmVYaElVVlZHU0V4RlRrSlJWVTF6VlRCR1FsVjVlRWhSVlVaSVRFVjBRbEZWYTNOUk1FWkNVWGw0VWxGVlJsSk1SVTVDVVZWTmMxZFZSa0pYVTNoRVVWVkdSRXhGVGtKUlZVMDNWMVZHUkU1VlRYTlNWVVpDVWxONFJGRlZSa1JNUm1SQ1VWWmpjMUV3UmtKUmVYaElVVlZHU0V4RlRrSlJWVTF6VVRCR1FsRjZkRnBSVlZaM1VXbDRURkZWUmtwTVJVNUNVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEZUa0pSVlUxelZqQkdRbFo1ZUVSUlZVWkVURVZXUWxGVlZYTlJNRVpDVVhsNFJGRlZSa1JQTVd4Q1VsUk9RMHhGZEVKUlZXdHpVVEJHUWxGNWVGQlJWVVpRVEVWT1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSTVJXUkNVVlZqYzFKVlJrSlJlWGhJVVZWR1NFeEZkRUpSVlVWelVsVkdRbEpUZUVaUlZVWkdURVZzUWxGVlJYTlNWVVpDVVhsNFJGRlZSa1JQTVVaQ1VUSndSRXhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVHpCc1FsRXdkM05STUVaQ1VYcDBTbEZWVmtWTVJrWkNVVlpGYzFkVlJrSlJlWGhHVVZWR2NsRjZkRnBSVlVaeFVYbDNORkZyUmtKWFUzaEdVVlZHUmt4RVFrUlJWVVp5VVdwMFVsRlZUalJSZVhoS1VWVkdUa3hGT1VKUlZUaHpVakJHUWxKNmRGcFJWVTVyVEVVNVFsRlZPSE5TVlVaQ1VsTjRXbEZWUmxwUE1XeENVVE5LUTB4Rk1VSlJWVEJ6VWxWR1FsSlRlSEpSYTBaQ1lUQkpOMVV3UmtSTk1FbHpVVEJHUWxGNmRGSlJWVlpIVEVWa1FsRlZZM05STUVaQ1VYbDRSRkZWUmtSTVJXeENVVlZyYzFOVlJrSlRVM2hLVVZWR1NreEZPVUpSVlRoelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRUZFhWVVpFWld0SmMxTlZSa0pVVTNoT1VWVkdUa3hGWkVKUlZXTnpWREJHUWxSNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRSRkZWUmtSUE1XeENVWHBrUTB4RlpFSlJWV056VVRCR1FsRjVlRVJSVlVaRVRFVnNRbEZWYTNOVFZVWkNVMU40U2xGVlJrcE1SVEZDVVZVd2MxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMDNXakJLUWxFemFFTk1SV3hDVVZWcmMxSXdSa0pTZVhoSVVWVkdTRXhGTVVKUlZUQnpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5STUVaQ1VYcDBibEZyUmtSa2EwbHpVMVZHUWxSVGVGUlJWVVpVVEVWa1FsRlZZM05VTUVaQ1ZIbDRTRkZWUmtoTVJYUkNVVlZ6YzFWVlJrSlZVM2hFVVZWR1JFOHlaRU5SVlUxNFVYbDRSbEZWUmtaTVJVNUNVVlZOYzFFd1JrSlJlWGhVVVZWR1ZFOHlPVU5SVlU1VlRFVmtRbEZWWTNOUk1FWkNVWGw0VUZGVlJsQk1SVTVDVVZWTmMxSXdSa0pTZVhoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVFUlJWVVpFVHpOa1ExRlZUakpSYVhoSVVWVkdTRXhGVGtKUlZVMXpWREJHUWxSNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEhaUmEwWkVUakJKYzFJd1JrSlNlWGhLVVZWR1NreEZiRUpSVld0elVUQkdRbEY2ZEc1UmEwWkVXa040UkZGVlJrUlBNbVJEVVZWV1JVeEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFVGRlZSbEJNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RlRrSlJWVTF6VWpCR1FsSjVlRVJSVlVaRVRFVjBRbEZWYzNOUk1FWkNVWGw0U2xGVlJrcE1SVTVDVVZWTmMxTXdSa0pUZVhoSVVWVkdTRXhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVHpJNVExRlZUWFpSZVhoS1VWVkdTa3hGVGtKUlZVMXpWREJHUWxSNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRSRkZWUmtSTVJXUkNVVlZqYzFFd1JrSlJlWGhNVVZWR1RFeEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVZrUWxGVlkzTlNNRVpDVW5sNFJGRlZSa1JQTW1SRFVWVk5lbEY1ZUVSUlZVWkVUekZzUWxFd1ozTlJNRVpDVVhwMFVsRlZUa2xNUlU1Q1VWVk5OMVZWUmtaU1EzaE9VVlZHVGt4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVR6QnNRbEV5VVhOUk1FWkNVWHAwUkZGVlRrZE1SVTVDVVZWTmMxRXdSa0pSZVVselNXMWFjR0pIVldsUGFVcG9Zek5PYkdSSVRYWmpSMFpxWVROTmRtUkhWakJoUjFaNVRETk9lVmw1T1hGamVUbDBXVmhLY2xGWVVqQlpWMDV2WWxkV2RXUkROWEZqZVVselNXNU9kbVJZU21wYVdFNUVZakkxTUZwWE5UQkphbkJpU1drNGNVbEhaSE5pTWtwb1lraE5aMVpIVmpCaFIxWjVTVU52ZGxoSE5XTmliRkpzWkVkb2JHTnBOWFJpTWxJeFlrZFdla3h1UWpGak1tZHZaVEY0ZFVsRFFuQmliV3d3WVZkR2MyRlljR3hMUTJ0blpURjRkVWxEUVdkSlNGSnZZVmhOZFdKWFJubGhNbFo1WTNsQk9VbElkRGxQTVhoMVdFYzBaMGxEUVdkWGVXUXdXVmhLYmxwWVVXNU1RMEZ1V2xkNGJHSlhWblZrUTJSa1RHMWFkbU5yVm1oWk1tZHZaRWhzZDFwVFFUbFFhVUkzV0VjMFowbERRV2RKUTBKcVlqSTFlbVJEUW14aVEwRTVTVWRTZGxrelZuUmFWelV3VEcxT2VWcFhSakJhVlZaeldsY3hiR0p1VVc5S01sSndaR2xqY0U4eGVIVkpRMEZuU1VOQloxcFhkM1ZaTW5ob1l6Tk9UMWxYTVd4SlJEQm5aRWRvY0dONU5XNWFXRkpFWWtkR2VtTjVhR2RLU0hOblpFaHNkMXBUUWpsTVZ6Rm9ZMjEwYkdOdFFYQlBNWGgxV0VjMFowbERRV2RKUTBKcVlqSTFlbVJEUW10aU0xRm5VRk5DYTJJeVRqRmlWMVoxWkVNMWFtTnRWbWhrUjFaR1lrZFdkRnBYTlRCTFEyUnJZVmhaYmt0VWRHTmlhVUZuU1VOQlowbEhVblprUXpWcVlrZEdlbU13TldoaVYxVm5VRk5DTUdGSGJIcE1iV1JzWkVWT2MxbFlUbnBMUTJSMFdWaEtjbHBZU1hSYVJ6a3dTbmxyTjFoSE5HZEpRMEZuU1VOQ2JHSkROV2hqU0VKc1ltMVNSR0ZIYkhOYVEyaHJZak5SY0U4eGVIVllSelJuU1VOQlowbERRakJoUjJ4NlZ6TlNOV05IVm1STWJVWjNZMGRXZFZwRlRtOWhWM2hyUzBkV2MwdFVkR05pYkhoMVNVTkJaMGxEUVdka1IyaHdZM2sxZEZsWVNuSmFXRXA2VnpOU05XTkhWbVJKUkRCblpUSlNkbVJEZDJkYVYzZzVUekY0ZFVsRFFXZEpTREJ3VHpGNGRVbERRamxNUm5oMVdFYzBaMGxJUW5aak1td3dZVmM1ZFV0SWRIUlpWelV4V1ZkNFVGcHRXbnBhV0ZGelNVY3hhR0p1Vm1oaVJsSm9ZMjFrYkdSRk9XMWFiazVzWkVnd2NFbElkR05pYVVGblNVTkNhbUl5Tlhwa1EwSjJXbTFhZWxwWVVucEpSREJuWlRGNGRVbERRV2RKUTBGbldsZDRiR0pYVm5Wa1JHOW5ZbGRHZFdSWFJuTlVNbHB0WXpKV01FeEdlSFZKUTBGblNVTkJaMlJIUm5sYU1sWXdUMmxDZEZsWE5URlpWM2hWV1ZoS2JscFlVbEJhYlZwNldsaFNZMkpwUVdkSlEwSTVUekY0ZFZoSE5HZEpRMEZuV20wNWVVbERhSE5hV0ZGblpFaHNkMXBUUW5CaWFVSjJXbTFhZWxwWVVucExVMEkzV0VjMFowbERRV2RKUTBKcVlqSTFlbVJEUW5aYWJWcDZXbGhSWjFCVFFuWmFiVnA2V2xoU2VsY3pValZqUjFaa1R6RjRkVWxEUVdkSlEwRm5XbTA1ZVVsRGFITmFXRkZuWXpKc2ExcFRRbkJpYVVKMldtMWFlbHBZVVhCSlNIUmpZbWxCWjBsRFFXZEpRMEZuWWtkV01FbElXbWhpUTBFNVNVYzViVnB1VG14a1JuUjZZVmRTYkZoVWRHTmlhVUZuU1VOQlowbERRV2RaTWpsMVl6TlJaMkp0T1RCVk0xSjVZVmMxYmtsRU1HZGtTR3gzV2xjNWJVbElXbWhpUTBGb1VGUXdaMG96VGpCamJXeDFXbmxqTjFoSE5HZEpRMEZuU1VOQlowbEhiRzFKUTJoMVlqTlNWR1JJU25CaWJXTm5aa2g0WTJKcFFXZEpRMEZuU1VOQlowbERRV2RKU0Zwb1lrTTFjR0p0VW14bFJUbHRTME5qYkVwNWEyZFFWREE1U1VNd2VFbERXVzFZUnpSblNVTkJaMGxEUVdkSlEwRm5TVU5DTWxsWGQzVmhWelZyV2xob1VGcHBaMjVqU0dkdVMxTkJPVkJVTUdkTVZFVndTVWgwWTJKcFFXZEpRMEZuU1VOQlowbERRakpaVjNkblMzb3daMG96UWpSS2VuUmpZbWxCWjBsRFFXZEpRMEZuWmxaNGRWaEhOR2RKUTBGblNVTkJaMGxIYkcxSlEyZ3dZVWRzZWt4dE1XaGpiWFJzWTI1T1ltUkliSGRhVmpCMVdrYzVNRXh1VGpCbFYzaHNWek5PY0ZwSFZtUkpRMFU1VUZOQ01sbFhkM0JKU0hSalltbEJaMGxEUVdkSlEwRm5TVU5DTUdGSGJIcE1iVEZvWTIxMGJHTnVUbUprU0d4M1dsWXdkVnBIT1RCTWJrNHdaVmQ0YkZjelRuQmFSMVprU1VRd1oyUnRSbk5QTVhoMVNVTkJaMGxEUVdkSlEwSTVXRWMwWjBsRFFXZEpRMEk1V0VjMFowbERRV2RtVm5oMVdFYzBaMGxEUVdkamJWWXdaRmhLZFVsSVVubGtWMVUzV0VjMFowbElNV05pYmpCd1R6RjRkVWxzTVRsY2JpSmRmUT09XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1GemMyVjBjeTl3WVdOcmN5OTBaWFJvWlhJdmMzSmpMMnB6TDIxaGNtdEJkSFJoWTJodFpXNTBMbXB6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxHOUNRVUZ2UWp0QlFVTndRaXhOUVVGTkxFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXp0SlFVTm9RaXhWUVVGVkxFVkJRVVU3VVVGRFVpeEpRVUZKTEV0QlFVc3NSMEZCUnl4SlFVRkpMRU5CUVVNN1VVRkRha0lzU1VGQlNTeERRVUZETEU5QlFVOHNSMEZCUnl4RlFVRkZMRU5CUVVNN1VVRkRiRUlzUTBGQlF5eFJRVUZSTEVWQlFVVXNVMEZCVXl4RFFVRkRMRU5CUVVNc1QwRkJUeXhEUVVGRExGVkJRVlVzU1VGQlNUdFpRVU40UXl4SlFVRkpMRVZCUVVVc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRPMWxCUTNaRExFVkJRVVVzUTBGQlF5eFRRVUZUTEVkQlFVY3NTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJReXhKUVVGSkxFZEJRVWNzVTBGQlV5eERRVUZETEVOQlFVTTdXVUZEYUVRc1NVRkJTU3hIUVVGSExFZEJRVWNzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRaUVVONFF5eEhRVUZITEVOQlFVTXNVMEZCVXl4SFFVRkhMRXRCUVVzc1EwRkJReXhSUVVGUkxFTkJRVU1zV1VGQldTeERRVUZETEVOQlFVTTdXVUZETjBNc1JVRkJSU3hEUVVGRExGZEJRVmNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0WlFVTndRaXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNWMEZCVnl4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRE8xbEJRelZDTEV0QlFVc3NRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUlVGQlJTeEhRVUZITEVWQlFVVXNSMEZCUnl4RlFVRkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxFVkJRVVVzUTBGQlF6dFJRVU12UXl4RFFVRkRMRU5CUVVNc1EwRkJRenRKUVVOUUxFTkJRVU03U1VGRFJDeFJRVUZSTEVWQlFVVXNWVUZCVlN4RlFVRkZPMUZCUTJ4Q0xFbEJRVWtzV1VGQldTeEhRVUZITEVWQlFVVXNRMEZCUXl4WlFVRlpMRVZCUVVVc2EwSkJRV3RDTEVkQlFVY3NSVUZCUlN4RFFVRkRMR3RDUVVGclFpeERRVUZETzFGQlF5OUZMRWxCUVVrc1QwRkJUeXhIUVVGSE8xbEJRMVlzVDBGQlR5eEZRVUZGTEZsQlFWazdXVUZEY2tJc1RVRkJUU3hGUVVGRkxHdENRVUZyUWp0VFFVTTNRaXhEUVVGRE8xRkJRMFlzUjBGQlJ5eERRVUZETEVOQlFVTXNTVUZCU1N4SlFVRkpMRWxCUVVrc1QwRkJUeXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU4yUWl4SlFVRkpMRTFCUVUwc1IwRkJSeXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdXVUZETTBJc1IwRkJSeXhEUVVGRExFTkJRVU1zU1VGQlNTeEpRVUZKTEVsQlFVa3NUVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRGRFSXNTVUZCU1N4SFFVRkhMRWRCUVVjc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzJkQ1FVTjJRaXhKUVVGSkxGTkJRVk1zUjBGQlJ5eFBRVUZQTEVkQlFVY3NTMEZCU3l4UlFVRlJMRU5CUVVNN1owSkJRM2hETEVWQlFVVXNRMEZCUXl4RFFVRkRMRk5CUVZNN2IwSkJRMVFzUjBGQlJ5eERRVUZETEU5QlFVOHNRMEZCUXl4SFFVRkhMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03ZDBKQlEyNUNMRWRCUVVjc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8yOUNRVU12UWl4SFFVRkhMRWxCUVVrc1NVRkJTU3hEUVVGRE8yZENRVU5vUWl4RFFVRkRPMmRDUVVORUxFVkJRVVVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETzI5Q1FVTTNReXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NSMEZCUnl4RFFVRkRPMmRDUVVNM1F5eERRVUZETzFsQlEwd3NRMEZCUXp0UlFVTk1MRU5CUVVNN1VVRkRSQ3hOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETzBsQlEyaENMRU5CUVVNN1EwRkRTaXhEUVVGRExFTkJRVU03UVVGRFNDd3lia2hCUVRKdVNEdEJRVVV6Ymtnc2RTOVNRVUYxTDFJaUxDSm1hV3hsSWpvaVlYTnpaWFJ6TDNCaFkydHpMM1JsZEdobGNpOXpjbU12YW5NdmJXRnlhMEYwZEdGamFHMWxiblF1YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZLaUJuYkc5aVlXeHpJRlJsZEdobGNpQXFMMXh1VkdWMGFHVnlMbTF2WkhWc1pYTXVjSFZ6YUNoN1hHNGdJQ0FnYVc1cGRHbGhiR2w2WlRvZ1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lDQWdJQ0IyWVhJZ1gzUm9hWE1nUFNCMGFHbHpPMXh1SUNBZ0lDQWdJQ0IwYUdsekxtMWhjbXRsY25NZ1BTQjdmVHRjYmlBZ0lDQWdJQ0FnV3lkMFlYSm5aWFFuTENBblpXeGxiV1Z1ZENkZExtWnZja1ZoWTJnb1puVnVZM1JwYjI0Z0tIUjVjR1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCbGJDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0oyUnBkaWNwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdaV3d1WTJ4aGMzTk9ZVzFsSUQwZ1gzUm9hWE11WjJWMFEyeGhjM01vZEhsd1pTQXJJRndpTFcxaGNtdGxjbHdpS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCa2IzUWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZGthWFluS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1J2ZEM1amJHRnpjMDVoYldVZ1BTQmZkR2hwY3k1blpYUkRiR0Z6Y3lnbmJXRnlhMlZ5TFdSdmRDY3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pXd3VZWEJ3Wlc1a1EyaHBiR1FvWkc5MEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUY5MGFHbHpXM1I1Y0dWZExtRndjR1Z1WkVOb2FXeGtLR1ZzS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJRjkwYUdsekxtMWhjbXRsY25OYmRIbHdaVjBnUFNCN0lHUnZkRG9nWkc5MExDQmxiRG9nWld3Z2ZUdGNiaUFnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdmU3hjYmlBZ0lDQndiM05wZEdsdmJqb2dablZ1WTNScGIyNGdLRjloS1NCN1hHNGdJQ0FnSUNBZ0lIWmhjaUJ0WVc1MVlXeFBabVp6WlhRZ1BTQmZZUzV0WVc1MVlXeFBabVp6WlhRc0lHMWhiblZoYkZSaGNtZGxkRTltWm5ObGRDQTlJRjloTG0xaGJuVmhiRlJoY21kbGRFOW1abk5sZER0Y2JpQWdJQ0FnSUNBZ2RtRnlJRzltWm5ObGRITWdQU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxiR1Z0Wlc1ME9pQnRZVzUxWVd4UFptWnpaWFFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBZWEpuWlhRNklHMWhiblZoYkZSaGNtZGxkRTltWm5ObGRGeHVJQ0FnSUNBZ0lDQjlPMXh1SUNBZ0lDQWdJQ0JtYjNJZ0tIWmhjaUIwZVhCbElHbHVJRzltWm5ObGRITXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ2Wm1aelpYUWdQU0J2Wm1aelpYUnpXM1I1Y0dWZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUlDaDJZWElnYzJsa1pTQnBiaUJ2Wm1aelpYUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2RtRnNJRDBnYjJabWMyVjBXM05wWkdWZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ1YjNSVGRISnBibWNnUFNCMGVYQmxiMllnZG1Gc0lDRTlQU0FuYzNSeWFXNW5KenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JtOTBVM1J5YVc1bklIeDhYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJDNXBibVJsZUU5bUtDY2xKeWtnUFQwOUlDMHhJQ1ltWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd3dWFXNWtaWGhQWmlnbmNIZ25LU0E5UFQwZ0xURXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNJQ3M5SUNkd2VDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbTFoY210bGNuTmJkSGx3WlYwdVpHOTBMbk4wZVd4bFczTnBaR1ZkSUNFOVBTQjJZV3dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFlYSnJaWEp6VzNSNWNHVmRMbVJ2ZEM1emRIbHNaVnR6YVdSbFhTQTlJSFpoYkR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYRzRnSUNBZ2ZWeHVmU2s3WEc0dkx5TWdjMjkxY21ObFRXRndjR2x1WjFWU1REMWtZWFJoT21Gd2NHeHBZMkYwYVc5dUwycHpiMjQ3WTJoaGNuTmxkRDExZEdZNE8ySmhjMlUyTkN4bGVVb3lXbGhLZW1GWE9YVkphbTk2VEVOS2VtSXpWbmxaTWxaNlNXcHdZa2x0Um5wak1sWXdZM2s1ZDFsWFRuSmplVGt3V2xoU2IxcFlTWFpqTTBwcVRESndla3d5TVdoamJYUkNaRWhTYUZreWFIUmFWelV3VEcxd2VrbHNNSE5KYlRWb1lsZFdla2xxY0dKWVUzZHBZbGRHZDJOSGJIVmFNMDFwVDJsS1FsRlZSa0pNUnpsRFVWVkdkbEZxZEVKUlZWWjNVV2w0VGxGVlJrNU1SVTVDVVZWTmMxUXdSa0pVZVhoRVVWVkdSRXhGYkVKUlZXdHpVVEJHUWxGNmRFcFJWVTV6VVdsNFZsRlZSbFpQTVVaQ1VWWlpjMkZWU2tKYVZVMDNWVlZHYTFGNWVFcFJWVVpLVEVWT1FsRlZUWE5VTUVaQ1ZIbDRTRkZWUmtoTVJWWkNVVlZWYzFFd1JrSlJlblJTVVZWV2MxRnBlRVJSVlVaRVRFWkdRbEZXUlhOU1ZVWkNVbE40VkZGVlJsUk1SVTVDVVZWTmMxRXdSa0pSZVhoUVVWVkdVRXhGVGtKUlZVMXpWbFZHUWxGVGVFcFJWVVpLVHpGc1FsRXlhRVJNUld4Q1VWVXdjMUpWUmtKU1UzaElVVlZHU0V4R1JrSlJWa1Z6VVRCR1FsRjVlR2hSVlVab1RFVk9RbEZWVFhOVE1FWkNVM2w0UkZGVlJrUk1SVTVDVVZWTk4xZFZSa1JsYTAxelVsVkdRbEpUZUVSUlZVWkVURVpPUWxGV1RYTlNNRVpDVW5sNFRGRlZSa3BNUlU1Q1VWVk5jMVZWUmtKVlUzaEVVVlZHVEV4RmJFSlJWV3R6VjFWR1FsWlRlRVJSVlVaRVRFVk9RbEZWVFRkWFZVWkdZV3RSYzFOVlJrSlVVM2hJVVZWR1NFeEZaRUpSVldOelZWVkdRbFZUZUVSUlZVWkVURWRHUWxGWFJYTlJNRVpDVVhsNFRGRlZSa3hNUlU1Q1VWVk5jMUV3UmtKUmVuUmFVVlZOZUZGNWVFaFJWVVpJVEVWT1FsRlZUWE5WTUVaQ1ZYbDRTRkZWUmtoTVJYUkNVVlZyYzFFd1JrSlJlWGhTVVZWR1VreEZUa0pSVlUxelYxVkdRbGRUZUVSUlZVWkVURVZPUWxGVlRUZFhWVVpFVGxWTmMxSlZSa0pTVTNoRVVWVkdSRXhHWkVKUlZtTnpVVEJHUWxGNWVFaFJWVVpJVEVWT1FsRlZUWE5STUVaQ1VYcDBXbEZWVm5kUmFYaE1VVlZHU2t4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFVk9RbEZWVFhOV01FWkNWbmw0UkZGVlJrUk1SVlpDVVZWVmMxRXdSa0pSZVhoRVVWVkdSRTh4YkVKU1ZFNURURVYwUWxGVmEzTlJNRVpDVVhsNFVGRlZSbEJNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RlpFSlJWV056VWxWR1FsRjVlRWhSVlVaSVRFVjBRbEZWUlhOU1ZVWkNVbE40UmxGVlJrWk1SV3hDVVZWRmMxSlZSa0pSZVhoRVVWVkdSRTh4UmtKUk1uQkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTUd4Q1VUQjNjMUV3UmtKUmVuUktVVlZXUlV4R1JrSlJWa1Z6VjFWR1FsRjVlRVpSVlVaeVVYcDBXbEZWUm5GUmVYYzBVV3RHUWxkVGVFWlJWVVpHVEVSQ1JGRlZSbkpSYW5SU1VWVk9ORkY1ZUVwUlZVWk9URVU1UWxGVk9ITlNNRVpDVW5wMFdsRlZUbXRNUlRsQ1VWVTRjMUpWUmtKU1UzaGFVVlZHV2s4eGJFSlJNMHBEVEVVeFFsRlZNSE5TVlVaQ1VsTjRjbEZyUmtKaE1FazNWVEJHUkUwd1NYTlJNRVpDVVhwMFVsRlZWa2RNUldSQ1VWVmpjMUV3UmtKUmVYaEVVVlZHUkV4RmJFSlJWV3R6VTFWR1FsTlRlRXBSVlVaS1RFVTVRbEZWT0hOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4xZFZSa1JsYTBselUxVkdRbFJUZUU1UlZVWk9URVZrUWxGVlkzTlVNRVpDVkhsNFJGRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaEVVVlZHUkU4eGJFSlJlbVJEVEVWa1FsRlZZM05STUVaQ1VYbDRSRkZWUmtSTVJXeENVVlZyYzFOVlJrSlRVM2hLVVZWR1NreEZNVUpSVlRCelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRUZGFNRXBDVVROb1EweEZiRUpSVld0elVqQkdRbEo1ZUVoUlZVWklURVV4UWxGVk1ITlJNRVpDVVhsNFNsRlZSa3BNUlU1Q1VWVk5jMUV3UmtKUmVuUnVVV3RHUkdSclNYTlRWVVpDVkZONFZGRlZSbFJNUldSQ1VWVmpjMVF3UmtKVWVYaElVVlZHU0V4RmRFSlJWWE56VlZWR1FsVlRlRVJSVlVaRVR6SmtRMUZWVFhoUmVYaEdVVlZHUmt4RlRrSlJWVTF6VVRCR1FsRjVlRlJSVlVaVVR6STVRMUZWVGxWTVJXUkNVVlZqYzFFd1JrSlJlWGhRVVZWR1VFeEZUa0pSVlUxelVqQkdRbEo1ZUVSUlZVWkVURVYwUWxGVmMzTlJNRVpDVVhsNFJGRlZSa1JQTTJSRFVWVk9NbEZwZUVoUlZVWklURVZPUWxGVlRYTlVNRVpDVkhsNFJGRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaE1VVlZHVEV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwZGxGclJrUk9NRWx6VWpCR1FsSjVlRXBSVlVaS1RFVnNRbEZWYTNOUk1FWkNVWHAwYmxGclJrUmFRM2hFVVZWR1JFOHlaRU5SVlZaRlRFVldRbEZWVlhOUk1FWkNVWGw0UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoUVVWVkdVRXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVWT1FsRlZUWE5TTUVaQ1VubDRSRkZWUmtSTVJYUkNVVlZ6YzFFd1JrSlJlWGhLVVZWR1NreEZUa0pSVlUxelV6QkdRbE41ZUVoUlZVWklURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTWpsRFVWVk5kbEY1ZUVwUlZVWktURVZPUWxGVlRYTlVNRVpDVkhsNFJGRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaEVVVlZHUkV4RlpFSlJWV056VVRCR1FsRjVlRXhSVlVaTVRFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SV1JDVVZWamMxSXdSa0pTZVhoRVVWVkdSRTh5WkVOUlZVMTZVWGw0UkZGVlJrUlBNV3hDVVRCbmMxRXdSa0pSZW5SU1VWVk9TVXhGVGtKUlZVMDNWVlZHUmxKRGVFNVJWVVpPVEVWT1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSUE1HeENVVEpSYzFFd1JrSlJlblJFVVZWT1IweEZUa0pSVlUxelVUQkdRbEY1U1hOSmJWcHdZa2RWYVU5cFNtaGpNMDVzWkVoTmRtTkhSbXBoTTAxMlpFZFdNR0ZIVm5sTU0wNTVXWGs1Y1dONU9YUlpXRXB5VVZoU01GbFhUbTlpVjFaMVpFTTFjV041U1hOSmJrNTJaRmhLYWxwWVRrUmlNalV3V2xjMU1FbHFjR0pKYVRoeFNVZGtjMkl5U21oaVNFMW5Wa2RXTUdGSFZubEpRMjkyV0VjMVkySnNVbXhrUjJoc1kyazFkR0l5VWpGaVIxWjZURzVDTVdNeVoyOWxNWGgxU1VOQ2NHSnRiREJoVjBaellWaHdiRXREYTJkbE1YaDFTVU5CWjBsSVVtOWhXRTExWWxkR2VXRXlWbmxqZVVFNVNVaDBPVTh4ZUhWWVJ6Um5TVU5CWjFkNVpEQlpXRXB1V2xoUmJreERRVzVhVjNoc1lsZFdkV1JEWkdSTWJWcDJZMnRXYUZreVoyOWtTR3gzV2xOQk9WQnBRamRZUnpSblNVTkJaMGxEUW1waU1qVjZaRU5DYkdKRFFUbEpSMUoyV1ROV2RGcFhOVEJNYlU1NVdsZEdNRnBWVm5OYVZ6RnNZbTVSYjBveVVuQmthV053VHpGNGRVbERRV2RKUTBGbldsZDNkVmt5ZUdoak0wNVBXVmN4YkVsRU1HZGtSMmh3WTNrMWJscFlVa1JpUjBaNlkzbG9aMHBJYzJka1NHeDNXbE5DT1V4WE1XaGpiWFJzWTIxQmNFOHhlSFZZUnpSblNVTkJaMGxEUW1waU1qVjZaRU5DYTJJelVXZFFVMEpyWWpKT01XSlhWblZrUXpWcVkyMVdhR1JIVmtaaVIxWjBXbGMxTUV0RFpHdGhXRmx1UzFSMFkySnBRV2RKUTBGblNVZFNkbVJETldwaVIwWjZZekExYUdKWFZXZFFVMEl3WVVkc2VreHRaR3hrUlU1eldWaE9la3REWkhSWldFcHlXbGhKZEZwSE9UQktlV3MzV0VjMFowbERRV2RKUTBKc1lrTTFhR05JUW14aWJWSkVZVWRzYzFwRGFHdGlNMUZ3VHpGNGRWaEhOR2RKUTBGblNVTkNNR0ZIYkhwWE0xSTFZMGRXWkV4dFJuZGpSMVoxV2tWT2IyRlhlR3RMUjFaelMxUjBZMkpzZUhWSlEwRm5TVU5CWjJSSGFIQmplVFYwV1ZoS2NscFlTbnBYTTFJMVkwZFdaRWxFTUdkbE1sSjJaRU4zWjFwWGVEbFBNWGgxU1VOQlowbElNSEJQTVhoMVNVTkNPVXhHZUhWWVJ6Um5TVWhDZG1NeWJEQmhWemwxUzBoMGRGbFhOVEZaVjNoUVdtMWFlbHBZVVhOSlJ6Rm9ZbTVXYUdKR1VtaGpiV1JzWkVVNWJWcHVUbXhrU0RCd1NVaDBZMkpwUVdkSlEwSnFZakkxZW1SRFFuWmFiVnA2V2xoU2VrbEVNR2RsTVhoMVNVTkJaMGxEUVdkYVYzaHNZbGRXZFdSRWIyZGlWMFoxWkZkR2MxUXlXbTFqTWxZd1RFWjRkVWxEUVdkSlEwRm5aRWRHZVZveVZqQlBhVUowV1ZjMU1WbFhlRlZaV0VwdVdsaFNVRnB0V25wYVdGSmpZbWxCWjBsRFFqbFBNWGgxV0VjMFowbERRV2RhYlRsNVNVTm9jMXBZVVdka1NHeDNXbE5DY0dKcFFuWmFiVnA2V2xoU2VrdFRRamRZUnpSblNVTkJaMGxEUW1waU1qVjZaRU5DZGxwdFducGFXRkZuVUZOQ2RscHRXbnBhV0ZKNlZ6TlNOV05IVm1SUE1YaDFTVU5CWjBsRFFXZGFiVGw1U1VOb2MxcFlVV2RqTW14cldsTkNjR0pwUW5aYWJWcDZXbGhSY0VsSWRHTmlhVUZuU1VOQlowbERRV2RpUjFZd1NVaGFhR0pEUVRsSlJ6bHRXbTVPYkdSR2RIcGhWMUpzV0ZSMFkySnBRV2RKUTBGblNVTkJaMWt5T1hWak0xRm5ZbTA1TUZVelVubGhWelZ1U1VRd1oyUkliSGRhVnpsdFNVaGFhR0pEUVdoUVZEQm5Tak5PTUdOdGJIVmFlV00zV0VjMFowbERRV2RKUTBGblNVZHNiVWxEYUhWaU0xSlVaRWhLY0dKdFkyZG1TSGhqWW1sQlowbERRV2RKUTBGblNVTkJaMGxJV21oaVF6VndZbTFTYkdWRk9XMUxRMk5zU25scloxQlVNRGxKUXpCNFNVTlpiVmhITkdkSlEwRm5TVU5CWjBsRFFXZEpRMEl5V1ZkM2RXRlhOV3RhV0doUVdtbG5ibU5JWjI1TFUwRTVVRlF3WjB4VVJYQkpTSFJqWW1sQlowbERRV2RKUTBGblNVTkNNbGxYZDJkTGVqQm5Tak5DTkVwNmRHTmlhVUZuU1VOQlowbERRV2RtVm5oMVdFYzBaMGxEUVdkSlEwRm5TVWRzYlVsRGFEQmhSMng2VEcweGFHTnRkR3hqYms1aVpFaHNkMXBXTUhWYVJ6a3dURzVPTUdWWGVHeFhNMDV3V2tkV1pFbERSVGxRVTBJeVdWZDNjRWxJZEdOaWFVRm5TVU5CWjBsRFFXZEpRMEl3WVVkc2VreHRNV2hqYlhSc1kyNU9ZbVJJYkhkYVZqQjFXa2M1TUV4dVRqQmxWM2hzVnpOT2NGcEhWbVJKUkRCblpHMUdjMDh4ZUhWSlEwRm5TVU5CWjBsRFFqbFlSelJuU1VOQlowbERRamxZUnpSblNVTkJaMlpXZUhWWVJ6Um5TVU5CWjJOdFZqQmtXRXAxU1VoU2VXUlhWVGRZUnpSblNVZ3hZMkp1TUhCUE1YaDFTV3d4T1Z4dVhHNHZMeU1nYzI5MWNtTmxUV0Z3Y0dsdVoxVlNURDFrWVhSaE9tRndjR3hwWTJGMGFXOXVMMnB6YjI0N1kyaGhjbk5sZEQxMWRHWTRPMkpoYzJVMk5DeGxlVW95V2xoS2VtRlhPWFZKYW05NlRFTktlbUl6Vm5sWk1sWjZTV3B3WWtsdFJucGpNbFl3WTNrNWQxbFhUbkpqZVRrd1dsaFNiMXBZU1haak0wcHFUREp3ZWt3eU1XaGpiWFJDWkVoU2FGa3lhSFJhVnpVd1RHMXdla2xzTUhOSmJUVm9ZbGRXZWtscWNHSllVM2RwWWxkR2QyTkhiSFZhTTAxcFQybEtRbEZWUmtKTVJ6bERVVlZHZGxGcWRFSlJWVTUzVVdsNFRsRlZSazVNUlU1Q1VWVk5jMVF3UmtKVWVYaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjZkRXBSVlU1dlVXbDRWbEZWUmxaTVJWWkNVVlZWTjFWVlJrUlZhWGhLVVZWR1NreEZkRUpSVlhOelVqQkdRbEo1ZUVwUlZVWktURVZPUWxGVlRUZFZWVVpFWVd0SmMxTlZSa0pUVTNoRVVWVkdSRXhGT1VKUlZUaHpVakJHUWxKNWVFWlJWVVpHVEVWT1FsRlZUVGRWVlVaRVlrVkpjMUV3UmtKUmVYaFNVVlZHVWt4RlZrSlJWVlZ6VlRCR1FsVjVlRVJSVlVaRVRFVk9RbEZWVFhOVU1FWkNWSGw0UkZGVlJrUk1SbFpDVVZaVmMxTlZSa0pUVkhSYVVWVk9ORkY1ZUVwUlZVWktURVZXUWxGVlZYTlNNRVpDVW5sNFVsRlZSbEpNUlU1Q1VWVk5jMWxWUmtKWlUzaEVVVlZHUkV4RmRFSlJWWE56VVRCR1FsRjVlRVJSVlVaRVR6RnNRbEV6V2tSTVJWWkNVVlZWYzFFd1JrSlJlWGhVVVZWR1ZFeEZaRUpSVldOelV6QkdRbE41ZUVSUlZVWkVURVpHUWxGV1JYTlJNRVpDVVhsNFNsRlZSa3BNUldSQ1VWVmpjMVV3UmtKVmVYaEVVVlZHUkV4RlRrSlJWVTAzVjFWR1JHRkZVWE5UVlVaQ1UxTjRTRkZWUmtoTVJXUkNVVlZqYzFWVlJrSlZVM2hFVVZWR1JFeEhSa0pSVjBWelVUQkdRbEY1ZUV4UlZVWk1URVZPUWxGVlRYTlJNRVpDVVhwMFdsRlZUalJSZVhoSVVWVkdTRXhGVGtKUlZVMXpWVEJHUWxWNWVFaFJWVVpJVEVWMFFsRlZjM05STUVaQ1VYbDRVbEZWUmxKTVJVNUNVVlZOYzFkVlJrSlhVM2hFVVZWR1JFeEZUa0pSVlUwM1YxVkdSRTR3VFhOU1ZVWkNVbE40UkZGVlJrUk1SbVJDVVZaamMxRXdSa0pSZVhoSVVWVkdTRXhGVGtKUlZVMXpVVEJHUWxGNmRGcFJWVTUzVVdsNFRGRlZSa3hNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RlRrSlJWVTF6VmpCR1FsWjVlRVJSVlVaRVRFVldRbEZWVlhOUk1FWkNVWGw0UkZGVlJrUlBNV3hDVVhwV1EweEZkRUpSVlhOelVUQkdRbEY1ZUZCUlZVWlFURVZPUWxGVlRYTlRWVVpDVTFONFJGRlZSa1JNUldSQ1VWVmpjMUpWUmtKU1UzaElVVlZHU0V4RlZrSlJWVlZ6VWpCR1FsSjVlRVpSVlVaR1RFVldRbEZWVlhOU1ZVWkNVbE40UmxGVlJrWk1SVlpDVVZWVmMxRXdSa0pSZW5SU1VWVk5kbEY1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhwMFNsRlZUbEZNUlU1Q1VWVk5OMU5WUmtSU1EzaFNVVlZHVWt4RlZrSlJWVlZ6VmxWR1FsWlRlRVpSVlVaR1R6RkdRbEV5ZUVOTVJXeENVVlZyYzFkVlJrSlhVM2hJVVZWR1NFeEZWa0pSVlZWelVUQkdRbEY1ZUZwUlZVWmFURVZXUWxGVlZYTmhNRXBDVVZkMFEweEZaRUpSVldOelVsVkdRbEpUZUVSUlZVWkVURWQwUTFGVlJuSlJhWGhFVVZWR1JFOHhSa0pSZVRsR1RFVnNRbEZWYTNOVU1FWkNWSGw0U0ZGVlJraFBNV3hDVVRGWmMxUXdSa0pVZVhoR1VWVkdSa3hHYkVKUlZtczNWMVZHUkdOclNYTlVWVVpDVkZONFJsRlZSa1pNUjNSRFVWVkdjbEZxZEZSUlZVMHpVV2w0UkZGVlJrUlBNVVpDVVRCWmMxSXdSa0pTZVhoRVVWVkdSRXhGVGtKUlZVMXpVMVZHUWxOVGVFcFJWVVpLVEVWc1FsRlZhM05VTUVaQ1ZIbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlblJhVVZWT01sRnBlRXBSVlVaS1RFVXhRbEZWTUhOU01FWkNVbmw0VUZGVlJsQk1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGVGtKUlZVMDNWMVZHUkUwd1NYTlNNRVpDVW5sNFJGRlZSa1JNUlU1Q1VWVk5jMU5WUmtKVFUzaEtVVlZHU2t4RmJFSlJWV3R6VkZWR1FsUlRlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwYmxGclJrUmtSVWx6VTFWR1FsTlRlRWhSVlVaSVRFVmtRbEZWWTNOVVZVWkNWRk40UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoRVVWVkdSRTh5WkVOUlZVNHlVV2w0U2xGVlJrcE1SazVDVVZaTmMxSXdSa0pTZVhoUVVWVkdVRXhGWkVKUlZXTnpVekJHUWxONWVGSlJWVVpTVEVWT1FsRlZUVGRhTUVwQ1VUTm9SRXhGVmtKUlZWVnpVVEJHUWxGNWVFUlJWVVpFVEVaT1FsRldUVGRpTUVwQ1VURlJjMUl3UmtKU2VYaEVVVlZHUkV4Rk9VSlJWVGh6VVRCR1FsRjVlRWhSVlVaSVRFVk9RbEZWVFhOVE1FWkNVM2w0UkZGVlJrUk1SVTVDVVZWTk4yUXdTa0pSTWpWRFRFVmtRbEZWWTNOUk1FWkNVWGw0VUZGVlJsQk1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1qbERVVlZOZGxGcGVFaFJWVVpJVEVWc1FsRlZhM05UVlVaQ1UxTjRSRkZWUmtSUE1tUkRVVlZPYjFGcGVFUlJWVVpFVHpKa1ExRlZUa1ZNUlZaQ1VWVlZjMUV3UmtKUmVYaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRkJSVlVaUVRFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SVTVDVVZWTmMxSXdSa0pTZVhoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5UTUVaQ1UzbDRTRkZWUmtoTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFOHlPVU5SVlUwelVYbDRTbEZWUmtwTVJVNUNVVlZOYzFRd1JrSlVlWGhFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY1ZUVSUlZVWkVURVZrUWxGVlkzTlJNRVpDVVhsNFRGRlZSa3hNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RlpFSlJWV056VWpCR1FsSjVlRVJSVlVaRVR6SmtRMUZWVFROUmVYaEVVVlZHUkU4eGJFSlJNSGR6VVRCR1FsRjZkRkpSVlU1TlRFVk9RbEZWVFRkVlZVWkVVa040VGxGVlJrNU1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRTh3YkVKUk1taERURVZPUWxGVlRUZFJNRVpFVTJsNFJGRlZSa1JNUlU1Q1VWVk5OMUZWUmtaVFEzZDVZbXRvUWxGVVNuVlRRMGx6U1cxYWNHSkhWV2xQYVVwb1l6Tk9iR1JJVFhaalIwWnFZVE5OZG1SSFZqQmhSMVo1VEROT2VWbDVPWEZqZVRsMFdWaEtjbEZZVWpCWlYwNXZZbGRXZFdSRE5YRmplVWx6U1c1T2RtUllTbXBhV0U1RVlqSTFNRnBYTlRCSmFuQmlTV2s0Y1VsSFpITmlNa3BvWWtoTloxWkhWakJoUjFaNVNVTnZkbGhITlZWYVdGSnZXbGhKZFdKWE9XdGtWM2hzWTNrMWQyUllUbTlMU0hSalltbEJaMGxEUW5CaWJXd3dZVmRHYzJGWWNHeFBhVUp0WkZjMWFtUkhiSFppYVVGdlMxTkNOMWhITkdkSlEwRm5TVU5CWjBsSVdtaGphVUptWkVkb2NHTjVRVGxKU0ZKdllWaE5OMWhITkdkSlEwRm5TVU5CWjBsSVVtOWhXRTExWWxkR2VXRXlWbmxqZVVFNVNVaDBPVTh4ZUhWSlEwRm5TVU5CWjBsRFFtSktNMUpvWTIxa2JHUkRZM05KUTJSc1lrZFdkRnBYTlRCS01UQjFXbTA1ZVZKWFJtcGhRMmh0WkZjMWFtUkhiSFppYVVGdlpFaHNkMXBUYTJkbE1YaDFTVU5CWjBsRFFXZEpRMEZuU1VOQloyUnRSbmxKUjFaelNVUXdaMXBIT1dwa1Z6RnNZbTVSZFZrelNteFpXRkpzVWxkNGJHSlhWblZrUTJkdVdrZHNNa3A1YXpkWVJ6Um5TVU5CWjBsRFFXZEpRMEZuU1VOQ2JHSkROV3BpUjBaNll6QTFhR0pYVldkUVUwSm1aRWRvY0dONU5XNWFXRkpFWWtkR2VtTjVhREJsV0VKc1NVTnpaMWhEU1hSaVYwWjVZVEpXZVZoRFNYQlBNWGgxU1VOQlowbERRV2RKUTBGblNVTkJaMlJ0Um5sSlIxSjJaRU5CT1VsSFVuWlpNMVowV2xjMU1FeHRUbmxhVjBZd1dsVldjMXBYTVd4aWJsRnZTakpTY0dScFkzQlBNWGgxU1VOQlowbERRV2RKUTBGblNVTkJaMXBIT1RCTWJVNXpXVmhPZWxSdFJuUmFVMEU1U1VZNU1HRkhiSHBNYldSc1pFVk9jMWxZVG5wTFEyUjBXVmhLY2xwWVNYUmFSemt3U25sck4xaEhOR2RKUTBGblNVTkJaMGxEUVdkSlEwSnNZa00xYUdOSVFteGliVkpFWVVkc2MxcERhR3RpTTFGd1R6RjRkVWxEUVdkSlEwRm5TVU5CWjBsRFFXZFlNMUp2WVZoT1ltUkliSGRhVmpCMVdWaENkMXBYTld0Uk1taHdZa2RSYjFwWGQzQlBNWGgxU1VOQlowbERRV2RKUTBGblNVTkJaMWd6VW05aFdFMTFZbGRHZVdFeVZubGpNWFF3WlZoQ2JGaFRRVGxKU0hObldrYzVNRTlwUW10aU0xRnpTVWRXYzA5cFFteGlRMEk1VHpGNGRVbERRV2RKUTBGblNVTkNPVXRVZEdOaWFVRm5TVU5DT1V4R2VIVkpRMEZuU1VoQ2RtTXliREJoVnpsMVQybENiV1JYTldwa1IyeDJZbWxCYjFneVJYQkpTSFJqWW1sQlowbERRV2RKUTBGblpHMUdlVWxITVdoaWJsWm9Za1U1YlZwdVRteGtRMEU1U1VZNWFFeHRNV2hpYmxab1lrVTViVnB1VG14a1EzZG5ZbGRHZFdSWFJuTldSMFo1V2pKV01GUXlXbTFqTWxZd1NVUXdaMWd5UlhWaVYwWjFaRmRHYzFaSFJubGFNbFl3VkRKYWJXTXlWakJQTVhoMVNVTkJaMGxEUVdkSlEwSXlXVmhKWjJJeVdtMWpNbFl3WTNsQk9VbElkR05pYVVGblNVTkJaMGxEUVdkSlEwRm5TVWRXYzFwWE1XeGlibEUyU1VjeGFHSnVWbWhpUlRsdFdtNU9iR1JEZUdOaWFVRm5TVU5CWjBsRFFXZEpRMEZuU1VoU2FHTnRaR3hrUkc5bllsZEdkV1JYUm5OV1IwWjVXakpXTUZReVdtMWpNbFl3V0VjMFowbERRV2RKUTBGblNVZ3dOMWhITkdkSlEwRm5TVU5CWjBsSFduWmphVUZ2WkcxR2VVbElValZqUjFWbllWYzBaMkl5V20xak1sWXdZM2xyWjJVeGVIVkpRMEZuU1VOQlowbERRV2RKUTBGblpHMUdlVWxIT1cxYWJrNXNaRU5CT1VsSE9XMWFiazVzWkVoT1ltUkliSGRhVmpBM1dFYzBaMGxEUVdkSlEwRm5TVU5CWjBsRFFtMWlNMGxuUzBoYWFHTnBRbnBoVjFKc1NVZHNkVWxIT1cxYWJrNXNaRU5yWjJVeGVIVkpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxJV21oamFVSXlXVmQzWjFCVFFuWmFiVnA2V2xoU1ltTXliR3RhVmpBM1dFYzBaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuWkcxR2VVbEhOWFprUms0d1kyMXNkVnA1UVRsSlNGSTFZMGRXZGxwcFFqSlpWM2RuU1ZRd09VbERaSHBrU0Vwd1ltMWpiazh4ZUhWSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbEhiRzFKUTJoMVlqTlNWR1JJU25CaWJXTm5aa2g0WTJKcFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdka2JVWnpURzFzZFZwSFZqUlVNbGx2U25sVmJrdFRRVGxRVkRCblRGUkZaMHBwV21OaWFVRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxJV21oaVF6VndZbTFTYkdWRk9XMUxRMlIzWlVOamNFbEVNRGxRVTBGMFRWTnJaMlV4ZUhWSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBJeVdWZDNaMHQ2TUdkS00wSTBTbnAwWTJKcFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkNPVmhITkdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQloyRlhXV2RMU0ZKdllWaE5kV0pYUm5saE1sWjVZekYwTUdWWVFteFlVelZyWWpOUmRXTXpValZpUjFaaVl6SnNhMXBXTUdkSlZEQTVTVWhhYUdKRGEyZGxNWGgxU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5DTUdGSGJIcE1iVEZvWTIxMGJHTnVUbUprU0d4M1dsWXdkVnBIT1RCTWJrNHdaVmQ0YkZjelRuQmFSMVprU1VRd1oyUnRSbk5QTVhoMVNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpTREZqWW1sQlowbERRV2RKUTBGblNVTkJaMGxJTVdOaWFVRm5TVU5CWjBsRFFXZG1WbmgxU1VOQlowbERRV2RKUTBKNVdsaFNNV050Tkdka1NFb3hXbFIwWTJKcFFXZEpRMEk1V0VjMU9VdFVkR05pYkhoMVRIazRha2xJVG5aa1dFcHFXbFV4YUdOSVFuQmliV1JXVld0M09WcEhSakJaVkhCb1kwaENjMkZYVG1oa1IyeDJZbWs1Y1dNeU9YVlBNazV2V1ZoS2VscFlVVGxrV0ZKdFQwUjBhVmxZVG14T2FsRnpXbGhzUzAxc2NGbFRibkJvVm5wc01WTlhjSFpsYTNoRVUyNXdhVTB4V2pWWFZFcFhaV3RzY1dOSFNrcGlWVm8yV1hwS1YwMUhUalZQV0dSYVZqQTFlVmt6YXpWTlJuQlpWVzA1WVZkRmJESlplazVMWVd0M2VXTkljRTFOYWtadldUSXhNRkZ0VWtsVmJXaGFUVzFvTUZkc1l6Rk5SWGgwWTBod1NtSkVRbnBUVnpBeFlVZEtXRlp1Y0VwaGJrSnBWMFpPTTJGWFNsaFNibVJxVWpKNE1WZHFUazVoVlRsd1UydEtVbFpWV2tOVVJXTTFVVEZHVmxKdVdsSmhibEpEVlZaV1YyUXhSbkJsUlRWU1ZsVmFUMVJGVms5UmJFWldWRmhPVlUxRldrTldTR3cwVWtaR1ZsSnJVazFTVjNoRFZWWldjbU14UlhkU2EwcFNaVzVTUzFWV1ZrOWpNVVp3WlVaYVVsWlZXbGRVZWtaSFVXeEdWMWRZVG1oV1ZYQkRWMnhXVGs0eFZsWlNiWFJTWlZob1MxVldWa2RUYTNoR1ZHdEtVbFpWTVhwV1JFSkhVV3hTTldWRmFGSldWVnBKVkVWV1YxRnNSbFpXV0U1U1RVVmFRMVZZY0RCVmJFWldWbTVPVW1GWWFFVlZWbFpIVWtWNFIxSnJTbEpXYTFaNlZXeFdSMUZzU2xSbFJsSlNWbFZhVlZSRlZrOVJiRVpXVkZoT1VrMUZXa05WV0d3MFZVWkdWbEpzUWsxU1ZUVkRWVlpXVG1NeFdsWlNhMHBTVlROb1MxVldWa2RUYXpoNFlrVktVazF0YUVWVVJWWnpVV3hHVmsxSVRsTldWVnBEVld4T05GTkdSbFpTYTJoTlVtdGFRMVZXV2taak1VVjNVbXRLVW1WWWFHOVZWbFpIWVVWNFJsUnJTbEpXVlRGNlZYcENSMUZzVGpWbFJWSlNWbFZhUlZSRlZrOVJiRVpXVkZSa1dGWlZXa1ZhVjNST1l6RktWbEpyU2xOVk0yaEZWVlpXUjFKRmVFZFVhMHBTVm1zeGVsVnFRa2RSYkVvMVpVVjRVbFpWV2t0VVJWWlBVV3hHVmxSWVRsWldWVnBEVmxaT05GSkdSbFpTYTNoTlVsZDRRMVZXVm5Kak1XUldVbXRLVjFVemFFVlZWbFpIVWtWNFJsUnJTbEpXVlRBelZqRldSMUp0Um5KVldFNVVWbFZhUTFaR1RqUlRSa1pXVW10b1RWSlhVa05WVmxacVl6RldWbEpyU2xaVk0yaEZWVlpXUjFKRmVFaFNhMHBTVmpCV2VsVlVRa2RSYkVZMVpVVjRVbFpWV2sxVVJWWlBVV3hHVmxSWVRsSk5SVnBEVlZod01GZHNSbFpVV0doU1pWaG9TVlZXVmtkVFJYaEdWR3RLVWxaVk1YcFdWRUpIVVd4V05XVkZhRkpXVlZwSlZFVldNRkZzUmxaaE0wNVNUVVZhUTFWWWJEUlZiRVpXVW14S1RWSlZOVU5WVmxaT1l6RmtWbEpyU2xoVk0yaEZWVlpXUjFKRmVFWlVhMHBTVmxVd00xWXhWa2RTUlRWV1ZGaE9VMVpWV2tOVmJFNDBVa1pHVmxKclVrMVNiVkpEVlZaYWFtTXhSWGRTYTBwU1pWaG9TVlZXVmtkVFJYaEdWR3RLVWxaVk1YcFZWRUpIVVd4R05tUkdjRkpXVmxvelZWZHNORlJHUmxaU2EzQk5VbFUxUTFWV1ZrNWpNVTVXVW10S1ZGVXphRVZWVmxaSFVrVjRSbFJyU2xKV1ZURjZWbXBDUjFGc1dqVmxSVkpTVmxWYVJWUkZWbGRSYkVaV1ZsaE9VazFGV2tOVldHdzBVa1pHVmxKclVsQk5WM2hEVld4U1QxRXdlRVprUlVwU1ZsZDBlbFZVUWtkUmJFWTFaVVpDVWxaVldsRlVSVlpQVVd4R1ZsUllUbFJXVlZwRFZURk9ORkpHUmxaU2ExSk5VbGRTUTFWV1ZtcGpNVXBXVW10S1VtVllhRWxWVmxaSFUwVjRSbVJGU2xKV1ZWWjZWV3hXUjFGc1NsUmxSVnBTVmxWYVIxUkZWbk5SYkVaV1VsaE9VMVpWV2tOVldHdzBVa1pHVmxKclVsQk5WVnBEVlZSS2QxSkZlRVpVYTBwU1ZsVXhlbFZVUWtkUmJFWTFaVVZTVWxaVldrVlVla0p6VVd4RmQyUXpUbEpOUlZwRFZWaHdNRk5zUmxaV2ExWk5VbXRhUTFWV1drWmpNV1JXVW10S1VtVllhRWRWVmxaSFkyeEdObVJHY0ZKV1ZWcDRWVmhzTTA1R1JuSlNhMHBZVlROb1IxVldWa2RTYTNoRlVXdFNVbFpWV25sVlYzQXdWV3hHVmxScVVsSmxXR2hMVlZaV1IxUnJlRVpQVlVwU1ZsUm9lbFZxUWtkUmJFbzJaRVp3VWxaVk5YSlVSVlUxVVd4R1ZrOUlUbE5XVlZwRFZXeE9ORmRzUmxaU2JIQlFUVmQ0UTFWVVRrdFJNSGhHVFZWS1VsWlVRbnBWYkZaSFVXeEtWR1ZJU2xKaE1GcERXVlJDU2s0eFZYZFNhMUpPVFVWc2VsVlVRa2RSYkVZMlpFWktVbFpXV2toVVJWWnJVV3hHVmxrelRsSk5SVnBEVlZoc05GSkdSbFpTYTFKTlVsZDRRMVZXVm5Kak1VNVdVbXRLVkZVemFFdFZWbFpIVTJ0NFJrOVZTbEpXVkdoNlZWUkNSMUZzUmpWbFJWSlNWbFZhUlZSRlZrOVJiRVpXVkZSa1dGWlZXa1ZhVjNSS1l6Rk9WbEpyU2xWVk0yaFBWVlpXUjFScmVFWmFSVXBTVmxkT2VsWkVRa2RSYkZJMVpVVlNVbFpWV2tWVVJWWnpVV3hHVm1FelRsSk5SVnBEVlZoc05GSkdSbFpTYTFKUVRWZDRRMVZZY0d0Uk1IaEdXa1ZLVWxaWFRucFZWRUpIVVd4R05XVkZVbEpXVlZwRlZFVldjMUZzUmxaaE0wNVVWbFZhUTFVeFRqUlRiRVpXVW10d1RWSlVSa05WVmxWM1l6RkZkMUpyU2xKbFdHaEZWVlpXUjFKRmVFWlVhMHBTVmxVd00xZHFRa3RSYkVWNllVVk9UVkpYZUVOVlZsWnlZekZKZDFKclNsTmxXR2hKVlZaV1IxTkZlRVpOVlVwU1ZsUkNlbFZVUWtkUmJFWTFaVVZ3VWxaVldrdFVSVlpQVVd4R1ZsUllUbEpOUlZwRFZWaHdNR0pzUm5KU2ExSnJZVEJzZWxVeFZrZFJiRkpVWlVaU1VsWlZXbFZVUlZaclVXeEdWbGt6VGxWTlJWcERWa2hzTkZOR1JsWlNhMmhOVWxoU1ExVldWbnBqTVZaV1VtdEtWbFV6YUVWVlZsWkhVa1U0ZVZwRlRsSldWVEUwVlZoc05GSnNSbFpTYTFwTlVsVTFRMVZXVms1ak1VVjNVbXRLVW1WWWFGVlZWbFpIVmtVNGVVOVZUbEpXVlRWV1ZFVldhMUZzUmxaWk0wNVNUVVZhUTFWWWJEUlZSa1pXVW14Q1RWSlZOVU5WVmxaT1l6RkpkMUpyU2xObFdHaEZWVlpXUjFKRmVFWmtSVXBTVmxoT2VsVlVRa2RSYkVZMVpVVlNVbFpWV2tWVWVrNXJVVEZHVmxScVNsSmhXR2hKVlZaV1IxTkZlRVpVYTBwU1ZsVXhlbFpFUWtkUmJGSTFaVVZTVWxaVldrVlVSVlp6VVd4R1ZtRXpUbEpOUlZwRFZWaHNORlJHUmxaU2EzaE5VbFUxUTFWV1ZrNWpNVVYzVW10S1VtVllhRVZWVmxaSFVrVjRSbFJyU2xKV1ZURjZWVlJDUjFGc1JqWmtTRnBTWVRCYVJWUnFRa3BqTVVsM1VtdEtVMlZZYUV0VlZsWkhVMnQ0Um1KRlNsSldWM1I2VlZSQ1IxRnNSalprUnpWU1lUQmFSVmRyVGpSU1JrWldVbXRTVUUxdFVrUlZWbFpYVWxWNFJsWnJTbEpXVmxaNlZWUkNSMUZzUmpWbFJWSlNWbFZhUlZSRlZuTlJiRVpXWVROT1VrMUZXa05WV0d3MFZVWkdWbEpzUWsxU1ZUVkRWVlpXVG1NeFRsWlNhMHBVVlROb1JWVldWa2RTUlhoR1ZHdEtVbFpWTVhwVmFrSkhVV3hLTldWRlVsSldWVnBGVkVWV01GRnNSbFpqTTA1U1RVVmFRMVZZYkRSVGJFWldVbXR3VFZKVk5VTlZWbFpPWXpGTmQxSnJTbFJsV0doSlZWWldSMU5GZUVaVWEwcFNWbFV4ZWxWVVFrZFJiRVkxWlVWU1VsWlZXa1ZVZWtrMVVURkdWbFJZV2xKbFdHaExWVlpXUjFOcmVFWlVhMHBTVmxVeGVsWkVRa2RSYkZJMVpVVlNVbFpWV2tWVVJWWnpVV3hHVm1FelRsSk5SVnBEVlZoc05GSkdSbFpTYTFKTlVsZFNRMVZXVm1wak1VVjNVbXRLVW1WWWFFMVZWbFpIVkVWNFJsUnJTbEpXVlRGNlZURldSMUZzVGxSbFJWSlNWbFZhUlZSRlZtdFJiRVpXV1ROT1UwMUZXa05WYm13MFVrWkdWbEpyVWxCTmJWSkVWVlpXVG1Wc1JqVmxSVkpTVmxWYVJWUjZSbk5SYkVWM1dqTk9VazFGV2tOVldIQXdWV3hHVmxScmJFMVNWVFZEVlZaV1RrNHhWbFpTYTFwVFVUTm9UMVZXVmtkVWEzaEdWR3RLVWxaVk1YcFZNVlpIVVd4T1ZHVkZVbEpXVlZwRlZIcENjMUZzUlhsVldFNVNUVVZhUTFWWWNEQlNSa1pXVkd0a1RWSlZOVU5WVmxaT1l6RkZkMUpyU2xKbFZXeDZVMWN4WVdOSFNraFdWMnhRWVZWd2IxbDZUazlpUjFKSlZGaGFhbEl3V25GWlZFNU9aRzFTU0ZacVFtaFNNVm8xVkVST1QyVldiRFZQV0VacVpWUnNNRmRXYUV0amJFWlpWV3BDV2xZd05YWlpiR1JYWkZkU1JFNVlSbXBsVld4NlUxYzFUMlJ0VWxsVGJYQmhWMFUxUlZscVNURk5SbkJZVGxSQ1NtRnVRbWxUVjJzMFkxVnNTRnBJVG1sTmEzQnZXV3RvVGxveFdraFdha0pvVWpGYU5WTlZUblprYkdoSVRsZE9hV0pHU25OYVJXUnZZa2RPY0U1WVVtbE5iRWw0V1d0a1YyVnJlSFZSYWtacVRXMWtkbHBVUmpSa1ZXeEVVVzVDYVdKWGQzZFpWbVJIWXpKR1dXTkhlRXhSTW5SdVdsUkdOR1JWYkVSUlYyUktVMFpLZGxsV2FFNWtWMHBZVW01c2FFMXNXalZaTTJ4Q1QxVnNTV1JFYkZCTldHZ3hWMFZqTUZvd2JFUlJWMlJZWlZkUmQxZFdhRXRpYkhCWlZWYzFUVkV3Um5WWGJHUTBZa2RLV0ZadVZtdFJNbEpyVkVjeFlXUnRUbkpXYldoYVRXMWtkbHBGYUhOa01YQlVVVlJzVVdGVlNUTlhSV013V2pCc1JGRlhaRXBSTUVweFdXcEpNV1Z0VWtSUmJYaHBVVEJGTlZOVlpGTmtiR3Q2Vm01U1lWWjZWWGRVUnpGUFpWWndXRkpxUW1GV1ZscDZWMnhqZUdKSFNuVlZWemxMVFd4S2QxcEhiR3BqUlRoNFpVaFdTbEV3Um01VFZVNUNXakZ3V0dRelZscE5ibWh2V1hwT1QxUXhiRmhOVjNoS1VrUkNibHBGWkc5alIwNDFUbGMxWVZkR1NrVlphMlJIWlcxT05XRkhaRXRUU0U1dVdrVm9jMlF4Y0ZSUmFteE5WbnBHYjFreU1UQmlSMDUwVVZoQ1VFMVlhREZYUldNd1dqQnNSRkZYWkVwUk1FcHhXV3BKTVdWdFVrUlJiWFJwVFRGR2JsVkdUa05oTWtsNVZHcEdhVll4V2pGYVJVMHhZVzFPZEZadGFHdFNNVnBIV1d0a1YyUkdjRmhPVkVKTVVUSlNjbGxXYUZwaWEzUlZaRWRPYVdGVlJtNVRWVTVDV2pCc1NGVnVXbXRSZWxaeFdXdGtSMlZ0VFhkT1YyaHBWakZXYmxWR1RrTk5SMFpJWWtod1RXSlhVbk5hUlZaUFl6RnNXVlJ1Y0V4Uk1sSXdWMVpvUzJOc2NGbFRXRkpoVW5wcmQxTnViSEpPTVdoSVRrZGtTbEV3Um01VFZVNURZa2RLUkU1WGFHcFRSVXB6V1cweFUxSkhSa2hpU0U1aFVUSm9jbGxxVGxKalJUaDRaVWhXV1ZKNlVtNVRWVTVDV2pCc1JGRnFRbWhTTW5nMlZucE9VMDVYVGtoV2JWSk5ZbFZhTTFrd1pGZGtWbkJHVkcwNWFGWXphSEpUTUdSWFl6QjBWV1JIVG1saVNHZ3hVMVZPUWxvd2JFUlJWMlJyVWpKb2Qxa3phekZrUm14WlUyNUtZVmRGY0RaV2VrNVRUbGRPU0ZadFVrcFNSRUp1V2xSS1UyUnRVa1JrTW1SaFZqTm5OVlI2UmpSa1ZXeEVVVmRrU2xORVFuZFVla1kwWkZWc1JGRnFiRTFTYm1neFYwVmpNRm93YkVsUmJscHFUVzEzZDFsV1l6VmtWWFJKWkVoU1dsWjZWWGhYVm1RMFZVWndkRmR1Y0dGWFJrWjZVMVZqZUdGSFNuVldiV2hwVW14S2Ixa3lNV3RpUjFKR1QxY3hZV0pyTlhOYVJXZDNZMFZzU1dSSFRtbGhWVVp1VTFWT1EyRnRTWGxPV0hCclVUQktNbGR0TVdGbGJIQlpWVzV3U2xKRVFtNWFWRVkwWkZWc1JGRlhaRXBSTUVadVYyeGtOR0pIU2xoV2JsWnJVa2M1Ymxsc1pFZGtWMUpZVW01T1ZVMXNjSFJaZWtwWFRVVjRSMlZJVmtwUk1FWnVVMVZPUWxveVVraFNibXhoVFd4WmQxUXliRU5rUm14WVRsUkdXbFl6YUZaWFZtaExZbXh3V1ZWc1FtRmlWbkEyVjJ4b1Uxa3lTbkJSVjJSS1VUQkpOVlI2UmpSa1ZtaElUa2RrU2xFd1JtNVhiVEExWlZWc1JHRklUbUZYUmtadVdrVm9jMlF4Y0ZSUmJrSnBZVlZLTWxkdE1XRmxiSEJaVlc1d1RGVXdTVE5YUldNd1dqQnNSRkZYWkVwUk1FcHhXV3BKTVdWdFVrUlJibHBoWWxad05sZHNhRkphTVVKVVVXNWFZV0pXY0RaWGJHaFRaV3hqZWxWcVZtcFNNVnByVkhwR05HUlZiRVJSVjJSS1VUQkdibGR0TURWbFZXeEVZVWhPWVZkR1JtNVpla3B6WVRGd1ZGRnVRbWxoVlVveVYyMHhZV1ZzY0ZsVldFSktVMGhTYWxsdGJFSmFNR3hFVVZka1NsRXdSbTVaYTJSWFRVVnNTVmR0YUdsUk1FVTFVMVZqTldKV2NIVlViWGhyVW01U05sbFdaRk5pUm1oVlpFZE9hV0ZWUm01VFZVNUNXakJzUkZGWFpGcE5hbXd4V1hwT1Vsb3lTblJQVkVKV1RURktOVmxXWXpGaWEyeEZUVWRrYTFOSGVETlhiR00xWWxWc1NWZHRhR2xSTUVadlZVWlJkMW93YjNwVWFrSnFZbGQ0TVZkdWJHcE9NV2hJVGtka1NsRXdSbTVUVlU1Q1dqQnNTR0pITVVwUk1tZ3hXV3BPVTFaSFVrbFRia0pwWWxkT2JscHJhRFJaTWtwd1VWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpFcFRSbkJ2V1d0Tk1XTkhTblJWYlhoc1VsUnNkRk13VG1waVJYQTFZVEprVVZaRVFUVlRWVTEzWlVWc1JGZFhNVmxTZWxKdVUxVk9RbG93YkVSUlYyUktVVEJHYmxOVlRrTk5iR3hZWkROV2FGWjZWbkpYYkdodlZVWndjRm95TldwVFIyUjFVekZPUWs5V1FsVk5SMlJOVmtWV2QxTlZhREJaTWtwd1VWZGtTbEV3Um01VFZVNUNXakJzUkZGcVNscFdNMlJ1VXpOdmQxb3diM3BSYWxKTFpXNVNhbGx0YkVKYU1HeEVVVmRrU2xFd1JtNWFiRm8wWkZab1NFNUhaRXBSTUVadVUxVk9RbG93YkVoaVJ6RktVVEpuZDFsVlpITmxhM2gwVFZkb2FtSllVbk5aTWpWUFdXMVNTV0pJWkdGV2FrSXhWMnRqTlUxRmVIVlVha0pzVmpOb2MxWjZUazlqUm5CSVZtMVNTbEV3VlRWVlJrNURUV3hzV0dRelFrcFRTRkpxV1cxc1Fsb3diRVJSVjJSS1VUQkdibE5WVGtOTlIwWklZa2h3VFdKVVJtOVpNakV3WWtkT2RWUnRTbXRUUjNnelYyeFpkMlJXY0VoUFZFSk5ZbXMwZDFwV1pEUmlSbU42Vkc1Q1lWSXhXbXRUVlZGM1dqSlNkRkp1VGxCTldHZ3hVMVZPUWxvd2JFUlJWMlJLVVRCSk5WZEZZekJhTUd4RVVWZGtTbEV3U1RWWFJXTXdXakJzUkZGWFpHMVdibWd4VjBWak1Gb3diRVJSVjJScVlsWlpkMXBHYUV0a1ZXeEpWVzVzYTFZeFZUTlhSV013V2pCc1NVMVhUbWxpYWtKM1ZIcEdOR1JWYkhOTlZHeGpZbWxLWkdaUlBUMWNiaUpkZlE9PVxuIl19
