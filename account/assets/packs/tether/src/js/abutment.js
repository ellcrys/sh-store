/* globals TetherBase */
var _a = TetherBase.Utils, getBounds = _a.getBounds, updateClasses = _a.updateClasses, defer = _a.defer;
TetherBase.modules.push({
    position: function (_a) {
        var _this = this;
        var top = _a.top, left = _a.left;
        var _b = this.cache('element-bounds', function () {
            return getBounds(_this.element);
        }), height = _b.height, width = _b.width;
        var targetPos = this.getTargetBounds();
        var bottom = top + height;
        var right = left + width;
        var abutted = [];
        if (top <= targetPos.bottom && bottom >= targetPos.top) {
            ['left', 'right'].forEach(function (side) {
                var targetPosSide = targetPos[side];
                if (targetPosSide === left || targetPosSide === right) {
                    abutted.push(side);
                }
            });
        }
        if (left <= targetPos.right && right >= targetPos.left) {
            ['top', 'bottom'].forEach(function (side) {
                var targetPosSide = targetPos[side];
                if (targetPosSide === top || targetPosSide === bottom) {
                    abutted.push(side);
                }
            });
        }
        var allClasses = [];
        var addClasses = [];
        var sides = ['left', 'top', 'right', 'bottom'];
        allClasses.push(this.getClass('abutted'));
        sides.forEach(function (side) {
            allClasses.push(_this.getClass('abutted') + "-" + side);
        });
        if (abutted.length) {
            addClasses.push(this.getClass('abutted'));
        }
        abutted.forEach(function (side) {
            addClasses.push(_this.getClass('abutted') + "-" + side);
        });
        defer(function () {
            if (!(_this.options.addTargetClasses === false)) {
                updateClasses(_this.target, addClasses, allClasses);
            }
            updateClasses(_this.element, addClasses, allClasses);
        });
        return true;
    }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy90ZXRoZXIvc3JjL2pzL2FidXRtZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdCQUF3QjtBQUVsQixJQUFBLHFCQUFvRCxFQUFuRCx3QkFBUyxFQUFFLGdDQUFhLEVBQUUsZ0JBQUssQ0FBcUI7QUFFM0QsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7SUFDdEIsUUFBUSxZQUFDLEVBQVc7UUFBcEIsaUJBc0RDO1lBdERTLFlBQUcsRUFBRSxjQUFJO1FBQ1gsSUFBQTs7VUFFSixFQUZLLGtCQUFNLEVBQUUsZ0JBQUssQ0FFakI7UUFFSCxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFFekMsSUFBTSxNQUFNLEdBQUcsR0FBRyxHQUFHLE1BQU0sQ0FBQztRQUM1QixJQUFNLEtBQUssR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDO1FBRTNCLElBQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNuQixFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxDQUFDLE1BQU0sSUFBSSxNQUFNLElBQUksU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDdkQsQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSTtnQkFDNUIsSUFBTSxhQUFhLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN0QyxFQUFFLENBQUMsQ0FBQyxhQUFhLEtBQUssSUFBSSxJQUFJLGFBQWEsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDO29CQUN0RCxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNyQixDQUFDO1lBQ0gsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsSUFBSSxJQUFJLFNBQVMsQ0FBQyxLQUFLLElBQUksS0FBSyxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3ZELENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFBLElBQUk7Z0JBQzVCLElBQU0sYUFBYSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDdEMsRUFBRSxDQUFDLENBQUMsYUFBYSxLQUFLLEdBQUcsSUFBSSxhQUFhLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQztvQkFDdEQsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDckIsQ0FBQztZQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVELElBQU0sVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUN0QixJQUFNLFVBQVUsR0FBRyxFQUFFLENBQUM7UUFFdEIsSUFBTSxLQUFLLEdBQUcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztRQUNqRCxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUMxQyxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSTtZQUNoQixVQUFVLENBQUMsSUFBSSxDQUFLLEtBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLFNBQU0sSUFBTyxDQUFDLENBQUM7UUFDN0QsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNuQixVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUM1QyxDQUFDO1FBRUQsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFBLElBQUk7WUFDbEIsVUFBVSxDQUFDLElBQUksQ0FBSyxLQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxTQUFNLElBQU8sQ0FBQyxDQUFDO1FBQzdELENBQUMsQ0FBQyxDQUFDO1FBRUgsS0FBSyxDQUFDO1lBQ0osRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUksQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUMvQyxhQUFhLENBQUMsS0FBSSxDQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsVUFBVSxDQUFDLENBQUM7WUFDckQsQ0FBQztZQUNELGFBQWEsQ0FBQyxLQUFJLENBQUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUN0RCxDQUFDLENBQUMsQ0FBQztRQUVILE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBQ0YsQ0FBQyxDQUFDIiwiZmlsZSI6ImFzc2V0cy9wYWNrcy90ZXRoZXIvc3JjL2pzL2FidXRtZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFscyBUZXRoZXJCYXNlICovXG5cbmNvbnN0IHtnZXRCb3VuZHMsIHVwZGF0ZUNsYXNzZXMsIGRlZmVyfSA9IFRldGhlckJhc2UuVXRpbHM7XG5cblRldGhlckJhc2UubW9kdWxlcy5wdXNoKHtcbiAgcG9zaXRpb24oe3RvcCwgbGVmdH0pIHtcbiAgICBjb25zdCB7aGVpZ2h0LCB3aWR0aH0gPSB0aGlzLmNhY2hlKCdlbGVtZW50LWJvdW5kcycsICgpID0+IHtcbiAgICAgIHJldHVybiBnZXRCb3VuZHModGhpcy5lbGVtZW50KTtcbiAgICB9KTtcblxuICAgIGNvbnN0IHRhcmdldFBvcyA9IHRoaXMuZ2V0VGFyZ2V0Qm91bmRzKCk7XG5cbiAgICBjb25zdCBib3R0b20gPSB0b3AgKyBoZWlnaHQ7XG4gICAgY29uc3QgcmlnaHQgPSBsZWZ0ICsgd2lkdGg7XG5cbiAgICBjb25zdCBhYnV0dGVkID0gW107XG4gICAgaWYgKHRvcCA8PSB0YXJnZXRQb3MuYm90dG9tICYmIGJvdHRvbSA+PSB0YXJnZXRQb3MudG9wKSB7XG4gICAgICBbJ2xlZnQnLCAncmlnaHQnXS5mb3JFYWNoKHNpZGUgPT4ge1xuICAgICAgICBjb25zdCB0YXJnZXRQb3NTaWRlID0gdGFyZ2V0UG9zW3NpZGVdO1xuICAgICAgICBpZiAodGFyZ2V0UG9zU2lkZSA9PT0gbGVmdCB8fCB0YXJnZXRQb3NTaWRlID09PSByaWdodCkge1xuICAgICAgICAgIGFidXR0ZWQucHVzaChzaWRlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKGxlZnQgPD0gdGFyZ2V0UG9zLnJpZ2h0ICYmIHJpZ2h0ID49IHRhcmdldFBvcy5sZWZ0KSB7XG4gICAgICBbJ3RvcCcsICdib3R0b20nXS5mb3JFYWNoKHNpZGUgPT4ge1xuICAgICAgICBjb25zdCB0YXJnZXRQb3NTaWRlID0gdGFyZ2V0UG9zW3NpZGVdO1xuICAgICAgICBpZiAodGFyZ2V0UG9zU2lkZSA9PT0gdG9wIHx8IHRhcmdldFBvc1NpZGUgPT09IGJvdHRvbSkge1xuICAgICAgICAgIGFidXR0ZWQucHVzaChzaWRlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgYWxsQ2xhc3NlcyA9IFtdO1xuICAgIGNvbnN0IGFkZENsYXNzZXMgPSBbXTtcblxuICAgIGNvbnN0IHNpZGVzID0gWydsZWZ0JywgJ3RvcCcsICdyaWdodCcsICdib3R0b20nXTtcbiAgICBhbGxDbGFzc2VzLnB1c2godGhpcy5nZXRDbGFzcygnYWJ1dHRlZCcpKTtcbiAgICBzaWRlcy5mb3JFYWNoKHNpZGUgPT4ge1xuICAgICAgYWxsQ2xhc3Nlcy5wdXNoKGAkeyB0aGlzLmdldENsYXNzKCdhYnV0dGVkJykgfS0keyBzaWRlIH1gKTtcbiAgICB9KTtcblxuICAgIGlmIChhYnV0dGVkLmxlbmd0aCkge1xuICAgICAgYWRkQ2xhc3Nlcy5wdXNoKHRoaXMuZ2V0Q2xhc3MoJ2FidXR0ZWQnKSk7XG4gICAgfVxuXG4gICAgYWJ1dHRlZC5mb3JFYWNoKHNpZGUgPT4ge1xuICAgICAgYWRkQ2xhc3Nlcy5wdXNoKGAkeyB0aGlzLmdldENsYXNzKCdhYnV0dGVkJykgfS0keyBzaWRlIH1gKTtcbiAgICB9KTtcblxuICAgIGRlZmVyKCgpID0+IHtcbiAgICAgIGlmICghKHRoaXMub3B0aW9ucy5hZGRUYXJnZXRDbGFzc2VzID09PSBmYWxzZSkpIHtcbiAgICAgICAgdXBkYXRlQ2xhc3Nlcyh0aGlzLnRhcmdldCwgYWRkQ2xhc3NlcywgYWxsQ2xhc3Nlcyk7XG4gICAgICB9XG4gICAgICB1cGRhdGVDbGFzc2VzKHRoaXMuZWxlbWVudCwgYWRkQ2xhc3NlcywgYWxsQ2xhc3Nlcyk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufSk7XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy90ZXRoZXIvc3JjL2pzL2FidXRtZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdCQUF3QjtBQUN4QixJQUFJLEVBQUUsR0FBRyxVQUFVLENBQUMsS0FBSyxFQUFFLFNBQVMsR0FBRyxFQUFFLENBQUMsU0FBUyxFQUFFLGFBQWEsR0FBRyxFQUFFLENBQUMsYUFBYSxFQUFFLEtBQUssR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDO0FBQ3hHLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO0lBQ3BCLFFBQVEsRUFBRSxVQUFVLEVBQUU7UUFDbEIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsSUFBSSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUM7UUFDakMsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsRUFBRTtZQUNsQyxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwQyxDQUFDLENBQUMsRUFBRSxNQUFNLEdBQUcsRUFBRSxDQUFDLE1BQU0sRUFBRSxLQUFLLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQztRQUN6QyxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDdkMsSUFBSSxNQUFNLEdBQUcsR0FBRyxHQUFHLE1BQU0sQ0FBQztRQUMxQixJQUFJLEtBQUssR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNqQixFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxDQUFDLE1BQU0sSUFBSSxNQUFNLElBQUksU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDckQsQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQVUsSUFBSTtnQkFDcEMsSUFBSSxhQUFhLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNwQyxFQUFFLENBQUMsQ0FBQyxhQUFhLEtBQUssSUFBSSxJQUFJLGFBQWEsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDO29CQUNwRCxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN2QixDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsSUFBSSxJQUFJLFNBQVMsQ0FBQyxLQUFLLElBQUksS0FBSyxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3JELENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLElBQUk7Z0JBQ3BDLElBQUksYUFBYSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDcEMsRUFBRSxDQUFDLENBQUMsYUFBYSxLQUFLLEdBQUcsSUFBSSxhQUFhLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQztvQkFDcEQsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDdkIsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztRQUNELElBQUksVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNwQixJQUFJLFVBQVUsR0FBRyxFQUFFLENBQUM7UUFDcEIsSUFBSSxLQUFLLEdBQUcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztRQUMvQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUMxQyxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQVUsSUFBSTtZQUN4QixVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQzVELENBQUMsQ0FBQyxDQUFDO1FBQ0gsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDakIsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDOUMsQ0FBQztRQUNELE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBVSxJQUFJO1lBQzFCLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDNUQsQ0FBQyxDQUFDLENBQUM7UUFDSCxLQUFLLENBQUM7WUFDRixFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzlDLGFBQWEsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQztZQUN4RCxDQUFDO1lBQ0QsYUFBYSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQ3pELENBQUMsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNoQixDQUFDO0NBQ0osQ0FBQyxDQUFDO0FBRUgsbWdLQUFtZ0siLCJmaWxlIjoiYXNzZXRzL3BhY2tzL3RldGhlci9zcmMvanMvYWJ1dG1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIFRldGhlckJhc2UgKi9cbnZhciBfYSA9IFRldGhlckJhc2UuVXRpbHMsIGdldEJvdW5kcyA9IF9hLmdldEJvdW5kcywgdXBkYXRlQ2xhc3NlcyA9IF9hLnVwZGF0ZUNsYXNzZXMsIGRlZmVyID0gX2EuZGVmZXI7XG5UZXRoZXJCYXNlLm1vZHVsZXMucHVzaCh7XG4gICAgcG9zaXRpb246IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgdG9wID0gX2EudG9wLCBsZWZ0ID0gX2EubGVmdDtcbiAgICAgICAgdmFyIF9iID0gdGhpcy5jYWNoZSgnZWxlbWVudC1ib3VuZHMnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0Qm91bmRzKF90aGlzLmVsZW1lbnQpO1xuICAgICAgICB9KSwgaGVpZ2h0ID0gX2IuaGVpZ2h0LCB3aWR0aCA9IF9iLndpZHRoO1xuICAgICAgICB2YXIgdGFyZ2V0UG9zID0gdGhpcy5nZXRUYXJnZXRCb3VuZHMoKTtcbiAgICAgICAgdmFyIGJvdHRvbSA9IHRvcCArIGhlaWdodDtcbiAgICAgICAgdmFyIHJpZ2h0ID0gbGVmdCArIHdpZHRoO1xuICAgICAgICB2YXIgYWJ1dHRlZCA9IFtdO1xuICAgICAgICBpZiAodG9wIDw9IHRhcmdldFBvcy5ib3R0b20gJiYgYm90dG9tID49IHRhcmdldFBvcy50b3ApIHtcbiAgICAgICAgICAgIFsnbGVmdCcsICdyaWdodCddLmZvckVhY2goZnVuY3Rpb24gKHNpZGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0UG9zU2lkZSA9IHRhcmdldFBvc1tzaWRlXTtcbiAgICAgICAgICAgICAgICBpZiAodGFyZ2V0UG9zU2lkZSA9PT0gbGVmdCB8fCB0YXJnZXRQb3NTaWRlID09PSByaWdodCkge1xuICAgICAgICAgICAgICAgICAgICBhYnV0dGVkLnB1c2goc2lkZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGxlZnQgPD0gdGFyZ2V0UG9zLnJpZ2h0ICYmIHJpZ2h0ID49IHRhcmdldFBvcy5sZWZ0KSB7XG4gICAgICAgICAgICBbJ3RvcCcsICdib3R0b20nXS5mb3JFYWNoKGZ1bmN0aW9uIChzaWRlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhcmdldFBvc1NpZGUgPSB0YXJnZXRQb3Nbc2lkZV07XG4gICAgICAgICAgICAgICAgaWYgKHRhcmdldFBvc1NpZGUgPT09IHRvcCB8fCB0YXJnZXRQb3NTaWRlID09PSBib3R0b20pIHtcbiAgICAgICAgICAgICAgICAgICAgYWJ1dHRlZC5wdXNoKHNpZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhbGxDbGFzc2VzID0gW107XG4gICAgICAgIHZhciBhZGRDbGFzc2VzID0gW107XG4gICAgICAgIHZhciBzaWRlcyA9IFsnbGVmdCcsICd0b3AnLCAncmlnaHQnLCAnYm90dG9tJ107XG4gICAgICAgIGFsbENsYXNzZXMucHVzaCh0aGlzLmdldENsYXNzKCdhYnV0dGVkJykpO1xuICAgICAgICBzaWRlcy5mb3JFYWNoKGZ1bmN0aW9uIChzaWRlKSB7XG4gICAgICAgICAgICBhbGxDbGFzc2VzLnB1c2goX3RoaXMuZ2V0Q2xhc3MoJ2FidXR0ZWQnKSArIFwiLVwiICsgc2lkZSk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoYWJ1dHRlZC5sZW5ndGgpIHtcbiAgICAgICAgICAgIGFkZENsYXNzZXMucHVzaCh0aGlzLmdldENsYXNzKCdhYnV0dGVkJykpO1xuICAgICAgICB9XG4gICAgICAgIGFidXR0ZWQuZm9yRWFjaChmdW5jdGlvbiAoc2lkZSkge1xuICAgICAgICAgICAgYWRkQ2xhc3Nlcy5wdXNoKF90aGlzLmdldENsYXNzKCdhYnV0dGVkJykgKyBcIi1cIiArIHNpZGUpO1xuICAgICAgICB9KTtcbiAgICAgICAgZGVmZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKCEoX3RoaXMub3B0aW9ucy5hZGRUYXJnZXRDbGFzc2VzID09PSBmYWxzZSkpIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVDbGFzc2VzKF90aGlzLnRhcmdldCwgYWRkQ2xhc3NlcywgYWxsQ2xhc3Nlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1cGRhdGVDbGFzc2VzKF90aGlzLmVsZW1lbnQsIGFkZENsYXNzZXMsIGFsbENsYXNzZXMpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1GemMyVjBjeTl3WVdOcmN5OTBaWFJvWlhJdmMzSmpMMnB6TDJGaWRYUnRaVzUwTG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMSGRDUVVGM1FqdEJRVVZzUWl4SlFVRkJMSEZDUVVGdlJDeEZRVUZ1UkN4M1FrRkJVeXhGUVVGRkxHZERRVUZoTEVWQlFVVXNaMEpCUVVzc1EwRkJjVUk3UVVGRk0wUXNWVUZCVlN4RFFVRkRMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU03U1VGRGRFSXNVVUZCVVN4WlFVRkRMRVZCUVZjN1VVRkJjRUlzYVVKQmMwUkRPMWxCZEVSVExGbEJRVWNzUlVGQlJTeGpRVUZKTzFGQlExZ3NTVUZCUVRzN1ZVRkZTaXhGUVVaTExHdENRVUZOTEVWQlFVVXNaMEpCUVVzc1EwRkZha0k3VVVGRlNDeEpRVUZOTEZOQlFWTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1pVRkJaU3hGUVVGRkxFTkJRVU03VVVGRmVrTXNTVUZCVFN4TlFVRk5MRWRCUVVjc1IwRkJSeXhIUVVGSExFMUJRVTBzUTBGQlF6dFJRVU0xUWl4SlFVRk5MRXRCUVVzc1IwRkJSeXhKUVVGSkxFZEJRVWNzUzBGQlN5eERRVUZETzFGQlJUTkNMRWxCUVUwc1QwRkJUeXhIUVVGSExFVkJRVVVzUTBGQlF6dFJRVU51UWl4RlFVRkZMRU5CUVVNc1EwRkJReXhIUVVGSExFbEJRVWtzVTBGQlV5eERRVUZETEUxQlFVMHNTVUZCU1N4TlFVRk5MRWxCUVVrc1UwRkJVeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEZGtRc1EwRkJReXhOUVVGTkxFVkJRVVVzVDBGQlR5eERRVUZETEVOQlFVTXNUMEZCVHl4RFFVRkRMRlZCUVVFc1NVRkJTVHRuUWtGRE5VSXNTVUZCVFN4aFFVRmhMRWRCUVVjc1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzJkQ1FVTjBReXhGUVVGRkxFTkJRVU1zUTBGQlF5eGhRVUZoTEV0QlFVc3NTVUZCU1N4SlFVRkpMR0ZCUVdFc1MwRkJTeXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETzI5Q1FVTjBSQ3hQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMmRDUVVOeVFpeERRVUZETzFsQlEwZ3NRMEZCUXl4RFFVRkRMRU5CUVVNN1VVRkRUQ3hEUVVGRE8xRkJSVVFzUlVGQlJTeERRVUZETEVOQlFVTXNTVUZCU1N4SlFVRkpMRk5CUVZNc1EwRkJReXhMUVVGTExFbEJRVWtzUzBGQlN5eEpRVUZKTEZOQlFWTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRM1pFTEVOQlFVTXNTMEZCU3l4RlFVRkZMRkZCUVZFc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eFZRVUZCTEVsQlFVazdaMEpCUXpWQ0xFbEJRVTBzWVVGQllTeEhRVUZITEZOQlFWTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRuUWtGRGRFTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1lVRkJZU3hMUVVGTExFZEJRVWNzU1VGQlNTeGhRVUZoTEV0QlFVc3NUVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJRenR2UWtGRGRFUXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dG5Ra0ZEY2tJc1EwRkJRenRaUVVOSUxFTkJRVU1zUTBGQlF5eERRVUZETzFGQlEwd3NRMEZCUXp0UlFVVkVMRWxCUVUwc1ZVRkJWU3hIUVVGSExFVkJRVVVzUTBGQlF6dFJRVU4wUWl4SlFVRk5MRlZCUVZVc1IwRkJSeXhGUVVGRkxFTkJRVU03VVVGRmRFSXNTVUZCVFN4TFFVRkxMRWRCUVVjc1EwRkJReXhOUVVGTkxFVkJRVVVzUzBGQlN5eEZRVUZGTEU5QlFVOHNSVUZCUlN4UlFVRlJMRU5CUVVNc1EwRkJRenRSUVVOcVJDeFZRVUZWTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTXhReXhMUVVGTExFTkJRVU1zVDBGQlR5eERRVUZETEZWQlFVRXNTVUZCU1R0WlFVTm9RaXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZMTEV0QlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRExGTkJRVTBzU1VGQlR5eERRVUZETEVOQlFVTTdVVUZETjBRc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRlNDeEZRVUZGTEVOQlFVTXNRMEZCUXl4UFFVRlBMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU51UWl4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNc1EwRkJRenRSUVVNMVF5eERRVUZETzFGQlJVUXNUMEZCVHl4RFFVRkRMRTlCUVU4c1EwRkJReXhWUVVGQkxFbEJRVWs3V1VGRGJFSXNWVUZCVlN4RFFVRkRMRWxCUVVrc1EwRkJTeXhMUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXl4VFFVRk5MRWxCUVU4c1EwRkJReXhEUVVGRE8xRkJRemRFTEVOQlFVTXNRMEZCUXl4RFFVRkRPMUZCUlVnc1MwRkJTeXhEUVVGRE8xbEJRMG9zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRXRCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zWjBKQlFXZENMRXRCUVVzc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTXZReXhoUVVGaExFTkJRVU1zUzBGQlNTeERRVUZETEUxQlFVMHNSVUZCUlN4VlFVRlZMRVZCUVVVc1ZVRkJWU3hEUVVGRExFTkJRVU03V1VGRGNrUXNRMEZCUXp0WlFVTkVMR0ZCUVdFc1EwRkJReXhMUVVGSkxFTkJRVU1zVDBGQlR5eEZRVUZGTEZWQlFWVXNSVUZCUlN4VlFVRlZMRU5CUVVNc1EwRkJRenRSUVVOMFJDeERRVUZETEVOQlFVTXNRMEZCUXp0UlFVVklMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU03U1VGRFpDeERRVUZETzBOQlEwWXNRMEZCUXl4RFFVRkRJaXdpWm1sc1pTSTZJbUZ6YzJWMGN5OXdZV05yY3k5MFpYUm9aWEl2YzNKakwycHpMMkZpZFhSdFpXNTBMbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUx5b2daMnh2WW1Gc2N5QlVaWFJvWlhKQ1lYTmxJQ292WEc1Y2JtTnZibk4wSUh0blpYUkNiM1Z1WkhNc0lIVndaR0YwWlVOc1lYTnpaWE1zSUdSbFptVnlmU0E5SUZSbGRHaGxja0poYzJVdVZYUnBiSE03WEc1Y2JsUmxkR2hsY2tKaGMyVXViVzlrZFd4bGN5NXdkWE5vS0h0Y2JpQWdjRzl6YVhScGIyNG9lM1J2Y0N3Z2JHVm1kSDBwSUh0Y2JpQWdJQ0JqYjI1emRDQjdhR1ZwWjJoMExDQjNhV1IwYUgwZ1BTQjBhR2x6TG1OaFkyaGxLQ2RsYkdWdFpXNTBMV0p2ZFc1a2N5Y3NJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCblpYUkNiM1Z1WkhNb2RHaHBjeTVsYkdWdFpXNTBLVHRjYmlBZ0lDQjlLVHRjYmx4dUlDQWdJR052Ym5OMElIUmhjbWRsZEZCdmN5QTlJSFJvYVhNdVoyVjBWR0Z5WjJWMFFtOTFibVJ6S0NrN1hHNWNiaUFnSUNCamIyNXpkQ0JpYjNSMGIyMGdQU0IwYjNBZ0t5Qm9aV2xuYUhRN1hHNGdJQ0FnWTI5dWMzUWdjbWxuYUhRZ1BTQnNaV1owSUNzZ2QybGtkR2c3WEc1Y2JpQWdJQ0JqYjI1emRDQmhZblYwZEdWa0lEMGdXMTA3WEc0Z0lDQWdhV1lnS0hSdmNDQThQU0IwWVhKblpYUlFiM011WW05MGRHOXRJQ1ltSUdKdmRIUnZiU0ErUFNCMFlYSm5aWFJRYjNNdWRHOXdLU0I3WEc0Z0lDQWdJQ0JiSjJ4bFpuUW5MQ0FuY21sbmFIUW5YUzVtYjNKRllXTm9LSE5wWkdVZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQjBZWEpuWlhSUWIzTlRhV1JsSUQwZ2RHRnlaMlYwVUc5elczTnBaR1ZkTzF4dUlDQWdJQ0FnSUNCcFppQW9kR0Z5WjJWMFVHOXpVMmxrWlNBOVBUMGdiR1ZtZENCOGZDQjBZWEpuWlhSUWIzTlRhV1JsSUQwOVBTQnlhV2RvZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJR0ZpZFhSMFpXUXVjSFZ6YUNoemFXUmxLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHeGxablFnUEQwZ2RHRnlaMlYwVUc5ekxuSnBaMmgwSUNZbUlISnBaMmgwSUQ0OUlIUmhjbWRsZEZCdmN5NXNaV1owS1NCN1hHNGdJQ0FnSUNCYkozUnZjQ2NzSUNkaWIzUjBiMjBuWFM1bWIzSkZZV05vS0hOcFpHVWdQVDRnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0IwWVhKblpYUlFiM05UYVdSbElEMGdkR0Z5WjJWMFVHOXpXM05wWkdWZE8xeHVJQ0FnSUNBZ0lDQnBaaUFvZEdGeVoyVjBVRzl6VTJsa1pTQTlQVDBnZEc5d0lIeDhJSFJoY21kbGRGQnZjMU5wWkdVZ1BUMDlJR0p2ZEhSdmJTa2dlMXh1SUNBZ0lDQWdJQ0FnSUdGaWRYUjBaV1F1Y0hWemFDaHphV1JsS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVjM1FnWVd4c1EyeGhjM05sY3lBOUlGdGRPMXh1SUNBZ0lHTnZibk4wSUdGa1pFTnNZWE56WlhNZ1BTQmJYVHRjYmx4dUlDQWdJR052Ym5OMElITnBaR1Z6SUQwZ1d5ZHNaV1owSnl3Z0ozUnZjQ2NzSUNkeWFXZG9kQ2NzSUNkaWIzUjBiMjBuWFR0Y2JpQWdJQ0JoYkd4RGJHRnpjMlZ6TG5CMWMyZ29kR2hwY3k1blpYUkRiR0Z6Y3lnbllXSjFkSFJsWkNjcEtUdGNiaUFnSUNCemFXUmxjeTVtYjNKRllXTm9LSE5wWkdVZ1BUNGdlMXh1SUNBZ0lDQWdZV3hzUTJ4aGMzTmxjeTV3ZFhOb0tHQWtleUIwYUdsekxtZGxkRU5zWVhOektDZGhZblYwZEdWa0p5a2dmUzBrZXlCemFXUmxJSDFnS1R0Y2JpQWdJQ0I5S1R0Y2JseHVJQ0FnSUdsbUlDaGhZblYwZEdWa0xteGxibWQwYUNrZ2UxeHVJQ0FnSUNBZ1lXUmtRMnhoYzNObGN5NXdkWE5vS0hSb2FYTXVaMlYwUTJ4aGMzTW9KMkZpZFhSMFpXUW5LU2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdZV0oxZEhSbFpDNW1iM0pGWVdOb0tITnBaR1VnUFQ0Z2UxeHVJQ0FnSUNBZ1lXUmtRMnhoYzNObGN5NXdkWE5vS0dBa2V5QjBhR2x6TG1kbGRFTnNZWE56S0NkaFluVjBkR1ZrSnlrZ2ZTMGtleUJ6YVdSbElIMWdLVHRjYmlBZ0lDQjlLVHRjYmx4dUlDQWdJR1JsWm1WeUtDZ3BJRDArSUh0Y2JpQWdJQ0FnSUdsbUlDZ2hLSFJvYVhNdWIzQjBhVzl1Y3k1aFpHUlVZWEpuWlhSRGJHRnpjMlZ6SUQwOVBTQm1ZV3h6WlNrcElIdGNiaUFnSUNBZ0lDQWdkWEJrWVhSbFEyeGhjM05sY3loMGFHbHpMblJoY21kbGRDd2dZV1JrUTJ4aGMzTmxjeXdnWVd4c1EyeGhjM05sY3lrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCMWNHUmhkR1ZEYkdGemMyVnpLSFJvYVhNdVpXeGxiV1Z1ZEN3Z1lXUmtRMnhoYzNObGN5d2dZV3hzUTJ4aGMzTmxjeWs3WEc0Z0lDQWdmU2s3WEc1Y2JpQWdJQ0J5WlhSMWNtNGdkSEoxWlR0Y2JpQWdmVnh1ZlNrN1hHNGlYWDA9XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
