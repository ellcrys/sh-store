/* globals TetherBase */
TetherBase.modules.push({
    position: function (_a) {
        var top = _a.top, left = _a.left;
        if (!this.options.shift) {
            return;
        }
        var shift = this.options.shift;
        if (typeof this.options.shift === 'function') {
            shift = this.options.shift.call(this, { top: top, left: left });
        }
        var shiftTop, shiftLeft;
        if (typeof shift === 'string') {
            shift = shift.split(' ');
            shift[1] = shift[1] || shift[0];
            (shiftTop = shift[0], shiftLeft = shift[1]);
            shiftTop = parseFloat(shiftTop, 10);
            shiftLeft = parseFloat(shiftLeft, 10);
        }
        else {
            (_b = [shift.top, shift.left], shiftTop = _b[0], shiftLeft = _b[1]);
        }
        top += shiftTop;
        left += shiftLeft;
        return { top: top, left: left };
        var _b;
    }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy90ZXRoZXIvc3JjL2pzL3NoaWZ0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdCQUF3QjtBQUV4QixVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUN0QixRQUFRLFlBQUMsRUFBVztZQUFWLFlBQUcsRUFBRSxjQUFJO1FBQ2pCLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLE1BQU0sQ0FBQztRQUNULENBQUM7UUFFRCxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztRQUMvQixFQUFFLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDN0MsS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBQyxHQUFHLEtBQUEsRUFBRSxJQUFJLE1BQUEsRUFBQyxDQUFDLENBQUM7UUFDckQsQ0FBQztRQUVELElBQUksUUFBUSxFQUFFLFNBQVMsQ0FBQztRQUN4QixFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQzlCLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3pCLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRWhDLENBQUUsbUJBQVEsRUFBRSxvQkFBUyxDQUFVLENBQUM7WUFFaEMsUUFBUSxHQUFHLFVBQVUsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDcEMsU0FBUyxHQUFHLFVBQVUsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDeEMsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sQ0FBQyw0QkFBK0MsRUFBOUMsZ0JBQVEsRUFBRSxpQkFBUyxDQUE0QixDQUFDO1FBQ3BELENBQUM7UUFFRCxHQUFHLElBQUksUUFBUSxDQUFDO1FBQ2hCLElBQUksSUFBSSxTQUFTLENBQUM7UUFFbEIsTUFBTSxDQUFDLEVBQUMsR0FBRyxLQUFBLEVBQUUsSUFBSSxNQUFBLEVBQUMsQ0FBQzs7SUFDckIsQ0FBQztDQUNGLENBQUMsQ0FBQyIsImZpbGUiOiJhc3NldHMvcGFja3MvdGV0aGVyL3NyYy9qcy9zaGlmdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgVGV0aGVyQmFzZSAqL1xuXG5UZXRoZXJCYXNlLm1vZHVsZXMucHVzaCh7XG4gIHBvc2l0aW9uKHt0b3AsIGxlZnR9KSB7XG4gICAgaWYgKCF0aGlzLm9wdGlvbnMuc2hpZnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQgc2hpZnQgPSB0aGlzLm9wdGlvbnMuc2hpZnQ7XG4gICAgaWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMuc2hpZnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHNoaWZ0ID0gdGhpcy5vcHRpb25zLnNoaWZ0LmNhbGwodGhpcywge3RvcCwgbGVmdH0pO1xuICAgIH1cblxuICAgIGxldCBzaGlmdFRvcCwgc2hpZnRMZWZ0O1xuICAgIGlmICh0eXBlb2Ygc2hpZnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBzaGlmdCA9IHNoaWZ0LnNwbGl0KCcgJyk7XG4gICAgICBzaGlmdFsxXSA9IHNoaWZ0WzFdIHx8IHNoaWZ0WzBdO1xuXG4gICAgICAoW3NoaWZ0VG9wLCBzaGlmdExlZnRdID0gc2hpZnQpO1xuXG4gICAgICBzaGlmdFRvcCA9IHBhcnNlRmxvYXQoc2hpZnRUb3AsIDEwKTtcbiAgICAgIHNoaWZ0TGVmdCA9IHBhcnNlRmxvYXQoc2hpZnRMZWZ0LCAxMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIChbc2hpZnRUb3AsIHNoaWZ0TGVmdF0gPSBbc2hpZnQudG9wLCBzaGlmdC5sZWZ0XSk7XG4gICAgfVxuXG4gICAgdG9wICs9IHNoaWZ0VG9wO1xuICAgIGxlZnQgKz0gc2hpZnRMZWZ0O1xuXG4gICAgcmV0dXJuIHt0b3AsIGxlZnR9O1xuICB9XG59KTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy90ZXRoZXIvc3JjL2pzL3NoaWZ0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdCQUF3QjtBQUN4QixVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUNwQixRQUFRLEVBQUUsVUFBVSxFQUFFO1FBQ2xCLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsSUFBSSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUM7UUFDakMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDdEIsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUNELElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQy9CLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQztZQUMzQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFDcEUsQ0FBQztRQUNELElBQUksUUFBUSxFQUFFLFNBQVMsQ0FBQztRQUN4QixFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQzVCLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3pCLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2hDLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxTQUFTLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDNUMsUUFBUSxHQUFHLFVBQVUsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDcEMsU0FBUyxHQUFHLFVBQVUsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDMUMsQ0FBQztRQUNELElBQUksQ0FBQyxDQUFDO1lBQ0YsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxRQUFRLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLFNBQVMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4RSxDQUFDO1FBQ0QsR0FBRyxJQUFJLFFBQVEsQ0FBQztRQUNoQixJQUFJLElBQUksU0FBUyxDQUFDO1FBQ2xCLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDO1FBQ2hDLElBQUksRUFBRSxDQUFDO0lBQ1gsQ0FBQztDQUNKLENBQUMsQ0FBQztBQUVILDJpRkFBMmlGIiwiZmlsZSI6ImFzc2V0cy9wYWNrcy90ZXRoZXIvc3JjL2pzL3NoaWZ0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFscyBUZXRoZXJCYXNlICovXG5UZXRoZXJCYXNlLm1vZHVsZXMucHVzaCh7XG4gICAgcG9zaXRpb246IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgdG9wID0gX2EudG9wLCBsZWZ0ID0gX2EubGVmdDtcbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMuc2hpZnQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgc2hpZnQgPSB0aGlzLm9wdGlvbnMuc2hpZnQ7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLnNoaWZ0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBzaGlmdCA9IHRoaXMub3B0aW9ucy5zaGlmdC5jYWxsKHRoaXMsIHsgdG9wOiB0b3AsIGxlZnQ6IGxlZnQgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHNoaWZ0VG9wLCBzaGlmdExlZnQ7XG4gICAgICAgIGlmICh0eXBlb2Ygc2hpZnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBzaGlmdCA9IHNoaWZ0LnNwbGl0KCcgJyk7XG4gICAgICAgICAgICBzaGlmdFsxXSA9IHNoaWZ0WzFdIHx8IHNoaWZ0WzBdO1xuICAgICAgICAgICAgKHNoaWZ0VG9wID0gc2hpZnRbMF0sIHNoaWZ0TGVmdCA9IHNoaWZ0WzFdKTtcbiAgICAgICAgICAgIHNoaWZ0VG9wID0gcGFyc2VGbG9hdChzaGlmdFRvcCwgMTApO1xuICAgICAgICAgICAgc2hpZnRMZWZ0ID0gcGFyc2VGbG9hdChzaGlmdExlZnQsIDEwKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIChfYiA9IFtzaGlmdC50b3AsIHNoaWZ0LmxlZnRdLCBzaGlmdFRvcCA9IF9iWzBdLCBzaGlmdExlZnQgPSBfYlsxXSk7XG4gICAgICAgIH1cbiAgICAgICAgdG9wICs9IHNoaWZ0VG9wO1xuICAgICAgICBsZWZ0ICs9IHNoaWZ0TGVmdDtcbiAgICAgICAgcmV0dXJuIHsgdG9wOiB0b3AsIGxlZnQ6IGxlZnQgfTtcbiAgICAgICAgdmFyIF9iO1xuICAgIH1cbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRnpjMlYwY3k5d1lXTnJjeTkwWlhSb1pYSXZjM0pqTDJwekwzTm9hV1owTG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMSGRDUVVGM1FqdEJRVVY0UWl4VlFVRlZMRU5CUVVNc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF6dEpRVU4wUWl4UlFVRlJMRmxCUVVNc1JVRkJWenRaUVVGV0xGbEJRVWNzUlVGQlJTeGpRVUZKTzFGQlEycENMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRM2hDTEUxQlFVMHNRMEZCUXp0UlFVTlVMRU5CUVVNN1VVRkZSQ3hKUVVGSkxFdEJRVXNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJRenRSUVVNdlFpeEZRVUZGTEVOQlFVTXNRMEZCUXl4UFFVRlBMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUzBGQlN5eExRVUZMTEZWQlFWVXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkROME1zUzBGQlN5eEhRVUZITEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVWQlFVVXNSVUZCUXl4SFFVRkhMRXRCUVVFc1JVRkJSU3hKUVVGSkxFMUJRVUVzUlVGQlF5eERRVUZETEVOQlFVTTdVVUZEY2tRc1EwRkJRenRSUVVWRUxFbEJRVWtzVVVGQlVTeEZRVUZGTEZOQlFWTXNRMEZCUXp0UlFVTjRRaXhGUVVGRkxFTkJRVU1zUTBGQlF5eFBRVUZQTEV0QlFVc3NTMEZCU3l4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRemxDTEV0QlFVc3NSMEZCUnl4TFFVRkxMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzFsQlEzcENMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRWxCUVVrc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzFsQlJXaERMRU5CUVVVc2JVSkJRVkVzUlVGQlJTeHZRa0ZCVXl4RFFVRlZMRU5CUVVNN1dVRkZhRU1zVVVGQlVTeEhRVUZITEZWQlFWVXNRMEZCUXl4UlFVRlJMRVZCUVVVc1JVRkJSU3hEUVVGRExFTkJRVU03V1VGRGNFTXNVMEZCVXl4SFFVRkhMRlZCUVZVc1EwRkJReXhUUVVGVExFVkJRVVVzUlVGQlJTeERRVUZETEVOQlFVTTdVVUZEZUVNc1EwRkJRenRSUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzFsQlEwNHNRMEZCUXl3MFFrRkJLME1zUlVGQk9VTXNaMEpCUVZFc1JVRkJSU3hwUWtGQlV5eERRVUUwUWl4RFFVRkRPMUZCUTNCRUxFTkJRVU03VVVGRlJDeEhRVUZITEVsQlFVa3NVVUZCVVN4RFFVRkRPMUZCUTJoQ0xFbEJRVWtzU1VGQlNTeFRRVUZUTEVOQlFVTTdVVUZGYkVJc1RVRkJUU3hEUVVGRExFVkJRVU1zUjBGQlJ5eExRVUZCTEVWQlFVVXNTVUZCU1N4TlFVRkJMRVZCUVVNc1EwRkJRenM3U1VGRGNrSXNRMEZCUXp0RFFVTkdMRU5CUVVNc1EwRkJReUlzSW1acGJHVWlPaUpoYzNObGRITXZjR0ZqYTNNdmRHVjBhR1Z5TDNOeVl5OXFjeTl6YUdsbWRDNXFjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWk4cUlHZHNiMkpoYkhNZ1ZHVjBhR1Z5UW1GelpTQXFMMXh1WEc1VVpYUm9aWEpDWVhObExtMXZaSFZzWlhNdWNIVnphQ2g3WEc0Z0lIQnZjMmwwYVc5dUtIdDBiM0FzSUd4bFpuUjlLU0I3WEc0Z0lDQWdhV1lnS0NGMGFHbHpMbTl3ZEdsdmJuTXVjMmhwWm5RcElIdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JzWlhRZ2MyaHBablFnUFNCMGFHbHpMbTl3ZEdsdmJuTXVjMmhwWm5RN1hHNGdJQ0FnYVdZZ0tIUjVjR1Z2WmlCMGFHbHpMbTl3ZEdsdmJuTXVjMmhwWm5RZ1BUMDlJQ2RtZFc1amRHbHZiaWNwSUh0Y2JpQWdJQ0FnSUhOb2FXWjBJRDBnZEdocGN5NXZjSFJwYjI1ekxuTm9hV1owTG1OaGJHd29kR2hwY3l3Z2UzUnZjQ3dnYkdWbWRIMHBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHeGxkQ0J6YUdsbWRGUnZjQ3dnYzJocFpuUk1aV1owTzF4dUlDQWdJR2xtSUNoMGVYQmxiMllnYzJocFpuUWdQVDA5SUNkemRISnBibWNuS1NCN1hHNGdJQ0FnSUNCemFHbG1kQ0E5SUhOb2FXWjBMbk53YkdsMEtDY2dKeWs3WEc0Z0lDQWdJQ0J6YUdsbWRGc3hYU0E5SUhOb2FXWjBXekZkSUh4OElITm9hV1owV3pCZE8xeHVYRzRnSUNBZ0lDQW9XM05vYVdaMFZHOXdMQ0J6YUdsbWRFeGxablJkSUQwZ2MyaHBablFwTzF4dVhHNGdJQ0FnSUNCemFHbG1kRlJ2Y0NBOUlIQmhjbk5sUm14dllYUW9jMmhwWm5SVWIzQXNJREV3S1R0Y2JpQWdJQ0FnSUhOb2FXWjBUR1ZtZENBOUlIQmhjbk5sUm14dllYUW9jMmhwWm5STVpXWjBMQ0F4TUNrN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ2hiYzJocFpuUlViM0FzSUhOb2FXWjBUR1ZtZEYwZ1BTQmJjMmhwWm5RdWRHOXdMQ0J6YUdsbWRDNXNaV1owWFNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnZEc5d0lDczlJSE5vYVdaMFZHOXdPMXh1SUNBZ0lHeGxablFnS3owZ2MyaHBablJNWldaME8xeHVYRzRnSUNBZ2NtVjBkWEp1SUh0MGIzQXNJR3hsWm5SOU8xeHVJQ0I5WEc1OUtUdGNiaUpkZlE9PVxuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
