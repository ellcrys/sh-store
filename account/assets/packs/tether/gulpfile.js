var del = require('del');
var gulp = require('gulp');
var babel = require('gulp-babel');
var bump = require('gulp-bump');
var concat = require('gulp-concat');
var header = require('gulp-header');
var minify = require('gulp-minify-css');
var plumber = require('gulp-plumber');
var prefixer = require('gulp-autoprefixer');
var rename = require('gulp-rename');
var uglify = require('gulp-uglify');
var sass = require('gulp-sass');
var umd = require('gulp-wrap-umd');
// Variables
var distDir = './dist';
var pkg = require('./package.json');
var banner = ['/*!', pkg.name, pkg.version, '*/\n'].join(' ');
var umdOptions = {
    exports: 'Tether',
    namespace: 'Tether'
};
// Clean
gulp.task('clean', function () {
    del.sync([distDir]);
});
// Javascript
gulp.task('js', function () {
    gulp.src([
        './src/js/utils.js',
        './src/js/tether.js',
        './src/js/constraint.js',
        './src/js/abutment.js',
        './src/js/shift.js'
    ])
        .pipe(plumber())
        .pipe(babel())
        .pipe(concat('tether.js'))
        .pipe(umd(umdOptions))
        .pipe(header(banner))
        .pipe(gulp.dest(distDir + '/js'))
        .pipe(uglify())
        .pipe(rename({ suffix: '.min' }))
        .pipe(gulp.dest(distDir + '/js'));
});
// CSS
gulp.task('css', function () {
    gulp.src('./src/css/**/*.sass')
        .pipe(plumber())
        .pipe(sass())
        .pipe(prefixer())
        .pipe(gulp.dest(distDir + '/css'))
        .pipe(minify())
        .pipe(rename({ suffix: '.min' }))
        .pipe(gulp.dest(distDir + '/css'));
});
// Version bump
var VERSIONS = ['patch', 'minor', 'major'];
for (var i = 0; i < VERSIONS.length; ++i) {
    (function (version) {
        gulp.task('version:' + version, function () {
            gulp.src(['package.json', 'bower.json', 'component.json'])
                .pipe(bump({ type: version }))
                .pipe(gulp.dest('.'));
        });
    })(VERSIONS[i]);
}
// Watch
gulp.task('watch', ['js', 'css'], function () {
    gulp.watch('./src/js/**/*', ['js']);
    gulp.watch('./src/css/**/*', ['css']);
});
// Defaults
gulp.task('build', ['js', 'css']);
gulp.task('default', ['build']);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy90ZXRoZXIvZ3VscGZpbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSSxHQUFHLEdBQVcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2pDLElBQUksSUFBSSxHQUFVLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNsQyxJQUFJLEtBQUssR0FBUyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDeEMsSUFBSSxJQUFJLEdBQVUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3ZDLElBQUksTUFBTSxHQUFRLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUN6QyxJQUFJLE1BQU0sR0FBUSxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDekMsSUFBSSxNQUFNLEdBQVEsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDN0MsSUFBSSxPQUFPLEdBQU8sT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQzFDLElBQUksUUFBUSxHQUFNLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQy9DLElBQUksTUFBTSxHQUFRLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUN6QyxJQUFJLE1BQU0sR0FBUSxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDekMsSUFBSSxJQUFJLEdBQVUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3ZDLElBQUksR0FBRyxHQUFXLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUUzQyxZQUFZO0FBQ1osSUFBSSxPQUFPLEdBQUcsUUFBUSxDQUFDO0FBQ3ZCLElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3BDLElBQUksTUFBTSxHQUFHLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDOUQsSUFBSSxV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QUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUN4QyxDQUFDLENBQUMsQ0FBQztBQUdILFdBQVc7QUFDWCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQ2xDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJhc3NldHMvcGFja3MvdGV0aGVyL2d1bHBmaWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGRlbCAgICAgICAgID0gcmVxdWlyZSgnZGVsJyk7XG52YXIgZ3VscCAgICAgICAgPSByZXF1aXJlKCdndWxwJyk7XG52YXIgYmFiZWwgICAgICAgPSByZXF1aXJlKCdndWxwLWJhYmVsJyk7XG52YXIgYnVtcCAgICAgICAgPSByZXF1aXJlKCdndWxwLWJ1bXAnKTtcbnZhciBjb25jYXQgICAgICA9IHJlcXVpcmUoJ2d1bHAtY29uY2F0Jyk7XG52YXIgaGVhZGVyICAgICAgPSByZXF1aXJlKCdndWxwLWhlYWRlcicpO1xudmFyIG1pbmlmeSAgICAgID0gcmVxdWlyZSgnZ3VscC1taW5pZnktY3NzJyk7XG52YXIgcGx1bWJlciAgICAgPSByZXF1aXJlKCdndWxwLXBsdW1iZXInKTtcbnZhciBwcmVmaXhlciAgICA9IHJlcXVpcmUoJ2d1bHAtYXV0b3ByZWZpeGVyJyk7XG52YXIgcmVuYW1lICAgICAgPSByZXF1aXJlKCdndWxwLXJlbmFtZScpO1xudmFyIHVnbGlmeSAgICAgID0gcmVxdWlyZSgnZ3VscC11Z2xpZnknKTtcbnZhciBzYXNzICAgICAgICA9IHJlcXVpcmUoJ2d1bHAtc2FzcycpO1xudmFyIHVtZCAgICAgICAgID0gcmVxdWlyZSgnZ3VscC13cmFwLXVtZCcpO1xuXG4vLyBWYXJpYWJsZXNcbnZhciBkaXN0RGlyID0gJy4vZGlzdCc7XG52YXIgcGtnID0gcmVxdWlyZSgnLi9wYWNrYWdlLmpzb24nKTtcbnZhciBiYW5uZXIgPSBbJy8qIScsIHBrZy5uYW1lLCBwa2cudmVyc2lvbiwgJyovXFxuJ10uam9pbignICcpO1xudmFyIHVtZE9wdGlvbnMgPSB7XG4gIGV4cG9ydHM6ICdUZXRoZXInLFxuICBuYW1lc3BhY2U6ICdUZXRoZXInXG59O1xuXG5cbi8vIENsZWFuXG5ndWxwLnRhc2soJ2NsZWFuJywgZnVuY3Rpb24oKSB7XG4gIGRlbC5zeW5jKFtkaXN0RGlyXSk7XG59KTtcblxuXG4vLyBKYXZhc2NyaXB0XG5ndWxwLnRhc2soJ2pzJywgZnVuY3Rpb24oKSB7XG4gIGd1bHAuc3JjKFtcbiAgICAnLi9zcmMvanMvdXRpbHMuanMnLFxuICAgICcuL3NyYy9qcy90ZXRoZXIuanMnLFxuICAgICcuL3NyYy9qcy9jb25zdHJhaW50LmpzJyxcbiAgICAnLi9zcmMvanMvYWJ1dG1lbnQuanMnLFxuICAgICcuL3NyYy9qcy9zaGlmdC5qcydcbiAgXSlcbiAgICAucGlwZShwbHVtYmVyKCkpXG4gICAgLnBpcGUoYmFiZWwoKSlcbiAgICAucGlwZShjb25jYXQoJ3RldGhlci5qcycpKVxuICAgIC5waXBlKHVtZCh1bWRPcHRpb25zKSlcbiAgICAucGlwZShoZWFkZXIoYmFubmVyKSlcblxuICAgIC8vIE9yaWdpbmFsXG4gICAgLnBpcGUoZ3VscC5kZXN0KGRpc3REaXIgKyAnL2pzJykpXG5cbiAgICAvLyBNaW5pZmllZFxuICAgIC5waXBlKHVnbGlmeSgpKVxuICAgIC5waXBlKHJlbmFtZSh7c3VmZml4OiAnLm1pbid9KSlcbiAgICAucGlwZShndWxwLmRlc3QoZGlzdERpciArICcvanMnKSk7XG59KTtcblxuXG4vLyBDU1Ncbmd1bHAudGFzaygnY3NzJywgZnVuY3Rpb24oKSB7XG4gIGd1bHAuc3JjKCcuL3NyYy9jc3MvKiovKi5zYXNzJylcbiAgICAucGlwZShwbHVtYmVyKCkpXG4gICAgLnBpcGUoc2FzcygpKVxuICAgIC5waXBlKHByZWZpeGVyKCkpXG5cbiAgICAvLyBPcmlnaW5hbFxuICAgIC5waXBlKGd1bHAuZGVzdChkaXN0RGlyICsgJy9jc3MnKSlcblxuICAgIC8vIE1pbmlmaWVkXG4gICAgLnBpcGUobWluaWZ5KCkpXG4gICAgLnBpcGUocmVuYW1lKHtzdWZmaXg6ICcubWluJ30pKVxuICAgIC5waXBlKGd1bHAuZGVzdChkaXN0RGlyICsgJy9jc3MnKSk7XG59KTtcblxuXG4vLyBWZXJzaW9uIGJ1bXBcbnZhciBWRVJTSU9OUyA9IFsncGF0Y2gnLCAnbWlub3InLCAnbWFqb3InXTtcbmZvciAodmFyIGkgPSAwOyBpIDwgVkVSU0lPTlMubGVuZ3RoOyArK2kpe1xuICAoZnVuY3Rpb24odmVyc2lvbikge1xuICAgIGd1bHAudGFzaygndmVyc2lvbjonICsgdmVyc2lvbiwgZnVuY3Rpb24oKSB7XG4gICAgICBndWxwLnNyYyhbJ3BhY2thZ2UuanNvbicsICdib3dlci5qc29uJywgJ2NvbXBvbmVudC5qc29uJ10pXG4gICAgICAgIC5waXBlKGJ1bXAoe3R5cGU6IHZlcnNpb259KSlcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KCcuJykpO1xuICAgIH0pO1xuICB9KShWRVJTSU9OU1tpXSk7XG59XG5cblxuLy8gV2F0Y2hcbmd1bHAudGFzaygnd2F0Y2gnLCBbJ2pzJywgJ2NzcyddLCBmdW5jdGlvbigpIHtcbiAgZ3VscC53YXRjaCgnLi9zcmMvanMvKiovKicsIFsnanMnXSk7XG4gIGd1bHAud2F0Y2goJy4vc3JjL2Nzcy8qKi8qJywgWydjc3MnXSk7XG59KTtcblxuXG4vLyBEZWZhdWx0c1xuZ3VscC50YXNrKCdidWlsZCcsIFsnanMnLCAnY3NzJ10pO1xuZ3VscC50YXNrKCdkZWZhdWx0JywgWydidWlsZCddKTtcblxuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy90ZXRoZXIvZ3VscGZpbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUMzQixJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDbEMsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ2hDLElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUNwQyxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDcEMsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDeEMsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ3RDLElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQzVDLElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUNwQyxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDcEMsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ2hDLElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUNuQyxZQUFZO0FBQ1osSUFBSSxPQUFPLEdBQUcsUUFBUSxDQUFDO0FBQ3ZCLElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3BDLElBQUksTUFBTSxHQUFHLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDOUQsSUFBSSxV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QUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzFDLENBQUMsQ0FBQyxDQUFDO0FBQ0gsV0FBVztBQUNYLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7QUFDbEMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBQ2hDLDI1TkFBMjVOO0FBQzM1Tix1bGdCQUF1bGdCO0FBRXZsZ0IsMmpyQ0FBMmpyQyIsImZpbGUiOiJhc3NldHMvcGFja3MvdGV0aGVyL2d1bHBmaWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGRlbCA9IHJlcXVpcmUoJ2RlbCcpO1xudmFyIGd1bHAgPSByZXF1aXJlKCdndWxwJyk7XG52YXIgYmFiZWwgPSByZXF1aXJlKCdndWxwLWJhYmVsJyk7XG52YXIgYnVtcCA9IHJlcXVpcmUoJ2d1bHAtYnVtcCcpO1xudmFyIGNvbmNhdCA9IHJlcXVpcmUoJ2d1bHAtY29uY2F0Jyk7XG52YXIgaGVhZGVyID0gcmVxdWlyZSgnZ3VscC1oZWFkZXInKTtcbnZhciBtaW5pZnkgPSByZXF1aXJlKCdndWxwLW1pbmlmeS1jc3MnKTtcbnZhciBwbHVtYmVyID0gcmVxdWlyZSgnZ3VscC1wbHVtYmVyJyk7XG52YXIgcHJlZml4ZXIgPSByZXF1aXJlKCdndWxwLWF1dG9wcmVmaXhlcicpO1xudmFyIHJlbmFtZSA9IHJlcXVpcmUoJ2d1bHAtcmVuYW1lJyk7XG52YXIgdWdsaWZ5ID0gcmVxdWlyZSgnZ3VscC11Z2xpZnknKTtcbnZhciBzYXNzID0gcmVxdWlyZSgnZ3VscC1zYXNzJyk7XG52YXIgdW1kID0gcmVxdWlyZSgnZ3VscC13cmFwLXVtZCcpO1xuLy8gVmFyaWFibGVzXG52YXIgZGlzdERpciA9ICcuL2Rpc3QnO1xudmFyIHBrZyA9IHJlcXVpcmUoJy4vcGFja2FnZS5qc29uJyk7XG52YXIgYmFubmVyID0gWycvKiEnLCBwa2cubmFtZSwgcGtnLnZlcnNpb24sICcqL1xcbiddLmpvaW4oJyAnKTtcbnZhciB1bWRPcHRpb25zID0ge1xuICAgIGV4cG9ydHM6ICdUZXRoZXInLFxuICAgIG5hbWVzcGFjZTogJ1RldGhlcidcbn07XG4vLyBDbGVhblxuZ3VscC50YXNrKCdjbGVhbicsIGZ1bmN0aW9uICgpIHtcbiAgICBkZWwuc3luYyhbZGlzdERpcl0pO1xufSk7XG4vLyBKYXZhc2NyaXB0XG5ndWxwLnRhc2soJ2pzJywgZnVuY3Rpb24gKCkge1xuICAgIGd1bHAuc3JjKFtcbiAgICAgICAgJy4vc3JjL2pzL3V0aWxzLmpzJyxcbiAgICAgICAgJy4vc3JjL2pzL3RldGhlci5qcycsXG4gICAgICAgICcuL3NyYy9qcy9jb25zdHJhaW50LmpzJyxcbiAgICAgICAgJy4vc3JjL2pzL2FidXRtZW50LmpzJyxcbiAgICAgICAgJy4vc3JjL2pzL3NoaWZ0LmpzJ1xuICAgIF0pXG4gICAgICAgIC5waXBlKHBsdW1iZXIoKSlcbiAgICAgICAgLnBpcGUoYmFiZWwoKSlcbiAgICAgICAgLnBpcGUoY29uY2F0KCd0ZXRoZXIuanMnKSlcbiAgICAgICAgLnBpcGUodW1kKHVtZE9wdGlvbnMpKVxuICAgICAgICAucGlwZShoZWFkZXIoYmFubmVyKSlcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KGRpc3REaXIgKyAnL2pzJykpXG4gICAgICAgIC5waXBlKHVnbGlmeSgpKVxuICAgICAgICAucGlwZShyZW5hbWUoeyBzdWZmaXg6ICcubWluJyB9KSlcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KGRpc3REaXIgKyAnL2pzJykpO1xufSk7XG4vLyBDU1Ncbmd1bHAudGFzaygnY3NzJywgZnVuY3Rpb24gKCkge1xuICAgIGd1bHAuc3JjKCcuL3NyYy9jc3MvKiovKi5zYXNzJylcbiAgICAgICAgLnBpcGUocGx1bWJlcigpKVxuICAgICAgICAucGlwZShzYXNzKCkpXG4gICAgICAgIC5waXBlKHByZWZpeGVyKCkpXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChkaXN0RGlyICsgJy9jc3MnKSlcbiAgICAgICAgLnBpcGUobWluaWZ5KCkpXG4gICAgICAgIC5waXBlKHJlbmFtZSh7IHN1ZmZpeDogJy5taW4nIH0pKVxuICAgICAgICAucGlwZShndWxwLmRlc3QoZGlzdERpciArICcvY3NzJykpO1xufSk7XG4vLyBWZXJzaW9uIGJ1bXBcbnZhciBWRVJTSU9OUyA9IFsncGF0Y2gnLCAnbWlub3InLCAnbWFqb3InXTtcbmZvciAodmFyIGkgPSAwOyBpIDwgVkVSU0lPTlMubGVuZ3RoOyArK2kpIHtcbiAgICAoZnVuY3Rpb24gKHZlcnNpb24pIHtcbiAgICAgICAgZ3VscC50YXNrKCd2ZXJzaW9uOicgKyB2ZXJzaW9uLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBndWxwLnNyYyhbJ3BhY2thZ2UuanNvbicsICdib3dlci5qc29uJywgJ2NvbXBvbmVudC5qc29uJ10pXG4gICAgICAgICAgICAgICAgLnBpcGUoYnVtcCh7IHR5cGU6IHZlcnNpb24gfSkpXG4gICAgICAgICAgICAgICAgLnBpcGUoZ3VscC5kZXN0KCcuJykpO1xuICAgICAgICB9KTtcbiAgICB9KShWRVJTSU9OU1tpXSk7XG59XG4vLyBXYXRjaFxuZ3VscC50YXNrKCd3YXRjaCcsIFsnanMnLCAnY3NzJ10sIGZ1bmN0aW9uICgpIHtcbiAgICBndWxwLndhdGNoKCcuL3NyYy9qcy8qKi8qJywgWydqcyddKTtcbiAgICBndWxwLndhdGNoKCcuL3NyYy9jc3MvKiovKicsIFsnY3NzJ10pO1xufSk7XG4vLyBEZWZhdWx0c1xuZ3VscC50YXNrKCdidWlsZCcsIFsnanMnLCAnY3NzJ10pO1xuZ3VscC50YXNrKCdkZWZhdWx0JywgWydidWlsZCddKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1GemMyVjBjeTl3WVdOcmN5OTBaWFJvWlhJdlozVnNjR1pwYkdVdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzU1VGQlNTeEhRVUZITEVkQlFWY3NUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8wRkJRMnBETEVsQlFVa3NTVUZCU1N4SFFVRlZMRTlCUVU4c1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF6dEJRVU5zUXl4SlFVRkpMRXRCUVVzc1IwRkJVeXhQUVVGUExFTkJRVU1zV1VGQldTeERRVUZETEVOQlFVTTdRVUZEZUVNc1NVRkJTU3hKUVVGSkxFZEJRVlVzVDBGQlR5eERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRPMEZCUTNaRExFbEJRVWtzVFVGQlRTeEhRVUZSTEU5QlFVOHNRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenRCUVVONlF5eEpRVUZKTEUxQlFVMHNSMEZCVVN4UFFVRlBMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU03UVVGRGVrTXNTVUZCU1N4TlFVRk5MRWRCUVZFc1QwRkJUeXhEUVVGRExHbENRVUZwUWl4RFFVRkRMRU5CUVVNN1FVRkROME1zU1VGQlNTeFBRVUZQTEVkQlFVOHNUMEZCVHl4RFFVRkRMR05CUVdNc1EwRkJReXhEUVVGRE8wRkJRekZETEVsQlFVa3NVVUZCVVN4SFFVRk5MRTlCUVU4c1EwRkJReXh0UWtGQmJVSXNRMEZCUXl4RFFVRkRPMEZCUXk5RExFbEJRVWtzVFVGQlRTeEhRVUZSTEU5QlFVOHNRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenRCUVVONlF5eEpRVUZKTEUxQlFVMHNSMEZCVVN4UFFVRlBMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU03UVVGRGVrTXNTVUZCU1N4SlFVRkpMRWRCUVZVc1QwRkJUeXhEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETzBGQlEzWkRMRWxCUVVrc1IwRkJSeXhIUVVGWExFOUJRVThzUTBGQlF5eGxRVUZsTEVOQlFVTXNRMEZCUXp0QlFVVXpReXhaUVVGWk8wRkJRMW9zU1VGQlNTeFBRVUZQTEVkQlFVY3NVVUZCVVN4RFFVRkRPMEZCUTNaQ0xFbEJRVWtzUjBGQlJ5eEhRVUZITEU5QlFVOHNRMEZCUXl4blFrRkJaMElzUTBGQlF5eERRVUZETzBGQlEzQkRMRWxCUVVrc1RVRkJUU3hIUVVGSExFTkJRVU1zUzBGQlN5eEZRVUZGTEVkQlFVY3NRMEZCUXl4SlFVRkpMRVZCUVVVc1IwRkJSeXhEUVVGRExFOUJRVThzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU03UVVGRE9VUXNTVUZCU1N4VlFVRlZMRWRCUVVjN1NVRkRaaXhQUVVGUExFVkJRVVVzVVVGQlVUdEpRVU5xUWl4VFFVRlRMRVZCUVVVc1VVRkJVVHREUVVOd1FpeERRVUZETzBGQlIwWXNVVUZCVVR0QlFVTlNMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eEZRVUZGTzBsQlEycENMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUTNSQ0xFTkJRVU1zUTBGQlF5eERRVUZETzBGQlIwZ3NZVUZCWVR0QlFVTmlMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeEZRVUZGTzBsQlEyUXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJRenRSUVVOUUxHMUNRVUZ0UWp0UlFVTnVRaXh2UWtGQmIwSTdVVUZEY0VJc2QwSkJRWGRDTzFGQlEzaENMSE5DUVVGelFqdFJRVU4wUWl4dFFrRkJiVUk3UzBGRGNFSXNRMEZCUXp0VFFVTkRMRWxCUVVrc1EwRkJReXhQUVVGUExFVkJRVVVzUTBGQlF6dFRRVU5tTEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVVc1EwRkJRenRUUVVOaUxFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNWMEZCVnl4RFFVRkRMRU5CUVVNN1UwRkRla0lzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJRenRUUVVOeVFpeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRE8xTkJSM0JDTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUjBGQlJ5eExRVUZMTEVOQlFVTXNRMEZCUXp0VFFVZG9ReXhKUVVGSkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTTdVMEZEWkN4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFVkJRVU1zVFVGQlRTeEZRVUZGTEUxQlFVMHNSVUZCUXl4RFFVRkRMRU5CUVVNN1UwRkRPVUlzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhIUVVGSExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZEZEVNc1EwRkJReXhEUVVGRExFTkJRVU03UVVGSFNDeE5RVUZOTzBGQlEwNHNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFVkJRVVU3U1VGRFppeEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMSEZDUVVGeFFpeERRVUZETzFOQlF6VkNMRWxCUVVrc1EwRkJReXhQUVVGUExFVkJRVVVzUTBGQlF6dFRRVU5tTEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRUUVVOYUxFbEJRVWtzUTBGQlF5eFJRVUZSTEVWQlFVVXNRMEZCUXp0VFFVZG9RaXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1RVRkJUU3hEUVVGRExFTkJRVU03VTBGSGFrTXNTVUZCU1N4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRE8xTkJRMlFzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4RlFVRkRMRTFCUVUwc1JVRkJSU3hOUVVGTkxFVkJRVU1zUTBGQlF5eERRVUZETzFOQlF6bENMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNSMEZCUnl4TlFVRk5MRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRM1pETEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUjBnc1pVRkJaVHRCUVVObUxFbEJRVWtzVVVGQlVTeEhRVUZITEVOQlFVTXNUMEZCVHl4RlFVRkZMRTlCUVU4c1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6dEJRVU16UXl4SFFVRkhMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVVXNRMEZCUXl4SFFVRkhMRkZCUVZFc1EwRkJReXhOUVVGTkxFVkJRVVVzUlVGQlJTeERRVUZETEVWQlFVTXNRMEZCUXp0SlFVTjRReXhEUVVGRExGVkJRVk1zVDBGQlR6dFJRVU5tTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hIUVVGSExFOUJRVThzUlVGQlJUdFpRVU01UWl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zWTBGQll5eEZRVUZGTEZsQlFWa3NSVUZCUlN4blFrRkJaMElzUTBGQlF5eERRVUZETzJsQ1FVTjJSQ3hKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVTXNTVUZCU1N4RlFVRkZMRTlCUVU4c1JVRkJReXhEUVVGRExFTkJRVU03YVVKQlF6TkNMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNN1VVRkRNVUlzUTBGQlF5eERRVUZETEVOQlFVTTdTVUZEVEN4RFFVRkRMRU5CUVVNc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTnNRaXhEUVVGRE8wRkJSMFFzVVVGQlVUdEJRVU5TTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhGUVVGRkxFTkJRVU1zU1VGQlNTeEZRVUZGTEV0QlFVc3NRMEZCUXl4RlFVRkZPMGxCUTJoRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNaVUZCWlN4RlFVRkZMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU53UXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHZENRVUZuUWl4RlFVRkZMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU40UXl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVkSUxGZEJRVmM3UVVGRFdDeEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSU3hEUVVGRExFbEJRVWtzUlVGQlJTeExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUTJ4RExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RlFVRkZMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUTBGQlF5SXNJbVpwYkdVaU9pSmhjM05sZEhNdmNHRmphM012ZEdWMGFHVnlMMmQxYkhCbWFXeGxMbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWRtRnlJR1JsYkNBZ0lDQWdJQ0FnSUQwZ2NtVnhkV2x5WlNnblpHVnNKeWs3WEc1MllYSWdaM1ZzY0NBZ0lDQWdJQ0FnUFNCeVpYRjFhWEpsS0NkbmRXeHdKeWs3WEc1MllYSWdZbUZpWld3Z0lDQWdJQ0FnUFNCeVpYRjFhWEpsS0NkbmRXeHdMV0poWW1Wc0p5azdYRzUyWVhJZ1luVnRjQ0FnSUNBZ0lDQWdQU0J5WlhGMWFYSmxLQ2RuZFd4d0xXSjFiWEFuS1R0Y2JuWmhjaUJqYjI1allYUWdJQ0FnSUNBOUlISmxjWFZwY21Vb0oyZDFiSEF0WTI5dVkyRjBKeWs3WEc1MllYSWdhR1ZoWkdWeUlDQWdJQ0FnUFNCeVpYRjFhWEpsS0NkbmRXeHdMV2hsWVdSbGNpY3BPMXh1ZG1GeUlHMXBibWxtZVNBZ0lDQWdJRDBnY21WeGRXbHlaU2duWjNWc2NDMXRhVzVwWm5rdFkzTnpKeWs3WEc1MllYSWdjR3gxYldKbGNpQWdJQ0FnUFNCeVpYRjFhWEpsS0NkbmRXeHdMWEJzZFcxaVpYSW5LVHRjYm5aaGNpQndjbVZtYVhobGNpQWdJQ0E5SUhKbGNYVnBjbVVvSjJkMWJIQXRZWFYwYjNCeVpXWnBlR1Z5SnlrN1hHNTJZWElnY21WdVlXMWxJQ0FnSUNBZ1BTQnlaWEYxYVhKbEtDZG5kV3h3TFhKbGJtRnRaU2NwTzF4dWRtRnlJSFZuYkdsbWVTQWdJQ0FnSUQwZ2NtVnhkV2x5WlNnblozVnNjQzExWjJ4cFpua25LVHRjYm5aaGNpQnpZWE56SUNBZ0lDQWdJQ0E5SUhKbGNYVnBjbVVvSjJkMWJIQXRjMkZ6Y3ljcE8xeHVkbUZ5SUhWdFpDQWdJQ0FnSUNBZ0lEMGdjbVZ4ZFdseVpTZ25aM1ZzY0MxM2NtRndMWFZ0WkNjcE8xeHVYRzR2THlCV1lYSnBZV0pzWlhOY2JuWmhjaUJrYVhOMFJHbHlJRDBnSnk0dlpHbHpkQ2M3WEc1MllYSWdjR3RuSUQwZ2NtVnhkV2x5WlNnbkxpOXdZV05yWVdkbExtcHpiMjRuS1R0Y2JuWmhjaUJpWVc1dVpYSWdQU0JiSnk4cUlTY3NJSEJyWnk1dVlXMWxMQ0J3YTJjdWRtVnljMmx2Yml3Z0p5b3ZYRnh1SjEwdWFtOXBiaWduSUNjcE8xeHVkbUZ5SUhWdFpFOXdkR2x2Ym5NZ1BTQjdYRzRnSUdWNGNHOXlkSE02SUNkVVpYUm9aWEluTEZ4dUlDQnVZVzFsYzNCaFkyVTZJQ2RVWlhSb1pYSW5YRzU5TzF4dVhHNWNiaTh2SUVOc1pXRnVYRzVuZFd4d0xuUmhjMnNvSjJOc1pXRnVKeXdnWm5WdVkzUnBiMjRvS1NCN1hHNGdJR1JsYkM1emVXNWpLRnRrYVhOMFJHbHlYU2s3WEc1OUtUdGNibHh1WEc0dkx5QktZWFpoYzJOeWFYQjBYRzVuZFd4d0xuUmhjMnNvSjJwekp5d2dablZ1WTNScGIyNG9LU0I3WEc0Z0lHZDFiSEF1YzNKaktGdGNiaUFnSUNBbkxpOXpjbU12YW5NdmRYUnBiSE11YW5NbkxGeHVJQ0FnSUNjdUwzTnlZeTlxY3k5MFpYUm9aWEl1YW5NbkxGeHVJQ0FnSUNjdUwzTnlZeTlxY3k5amIyNXpkSEpoYVc1MExtcHpKeXhjYmlBZ0lDQW5MaTl6Y21NdmFuTXZZV0oxZEcxbGJuUXVhbk1uTEZ4dUlDQWdJQ2N1TDNOeVl5OXFjeTl6YUdsbWRDNXFjeWRjYmlBZ1hTbGNiaUFnSUNBdWNHbHdaU2h3YkhWdFltVnlLQ2twWEc0Z0lDQWdMbkJwY0dVb1ltRmlaV3dvS1NsY2JpQWdJQ0F1Y0dsd1pTaGpiMjVqWVhRb0ozUmxkR2hsY2k1cWN5Y3BLVnh1SUNBZ0lDNXdhWEJsS0hWdFpDaDFiV1JQY0hScGIyNXpLU2xjYmlBZ0lDQXVjR2x3WlNob1pXRmtaWElvWW1GdWJtVnlLU2xjYmx4dUlDQWdJQzh2SUU5eWFXZHBibUZzWEc0Z0lDQWdMbkJwY0dVb1ozVnNjQzVrWlhOMEtHUnBjM1JFYVhJZ0t5QW5MMnB6SnlrcFhHNWNiaUFnSUNBdkx5Qk5hVzVwWm1sbFpGeHVJQ0FnSUM1d2FYQmxLSFZuYkdsbWVTZ3BLVnh1SUNBZ0lDNXdhWEJsS0hKbGJtRnRaU2g3YzNWbVptbDRPaUFuTG0xcGJpZDlLU2xjYmlBZ0lDQXVjR2x3WlNobmRXeHdMbVJsYzNRb1pHbHpkRVJwY2lBcklDY3Zhbk1uS1NrN1hHNTlLVHRjYmx4dVhHNHZMeUJEVTFOY2JtZDFiSEF1ZEdGemF5Z25ZM056Snl3Z1puVnVZM1JwYjI0b0tTQjdYRzRnSUdkMWJIQXVjM0pqS0NjdUwzTnlZeTlqYzNNdktpb3ZLaTV6WVhOekp5bGNiaUFnSUNBdWNHbHdaU2h3YkhWdFltVnlLQ2twWEc0Z0lDQWdMbkJwY0dVb2MyRnpjeWdwS1Z4dUlDQWdJQzV3YVhCbEtIQnlaV1pwZUdWeUtDa3BYRzVjYmlBZ0lDQXZMeUJQY21sbmFXNWhiRnh1SUNBZ0lDNXdhWEJsS0dkMWJIQXVaR1Z6ZENoa2FYTjBSR2x5SUNzZ0p5OWpjM01uS1NsY2JseHVJQ0FnSUM4dklFMXBibWxtYVdWa1hHNGdJQ0FnTG5CcGNHVW9iV2x1YVdaNUtDa3BYRzRnSUNBZ0xuQnBjR1VvY21WdVlXMWxLSHR6ZFdabWFYZzZJQ2N1YldsdUozMHBLVnh1SUNBZ0lDNXdhWEJsS0dkMWJIQXVaR1Z6ZENoa2FYTjBSR2x5SUNzZ0p5OWpjM01uS1NrN1hHNTlLVHRjYmx4dVhHNHZMeUJXWlhKemFXOXVJR0oxYlhCY2JuWmhjaUJXUlZKVFNVOU9VeUE5SUZzbmNHRjBZMmduTENBbmJXbHViM0luTENBbmJXRnFiM0luWFR0Y2JtWnZjaUFvZG1GeUlHa2dQU0F3T3lCcElEd2dWa1ZTVTBsUFRsTXViR1Z1WjNSb095QXJLMmtwZTF4dUlDQW9ablZ1WTNScGIyNG9kbVZ5YzJsdmJpa2dlMXh1SUNBZ0lHZDFiSEF1ZEdGemF5Z25kbVZ5YzJsdmJqb25JQ3NnZG1WeWMybHZiaXdnWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnSUNCbmRXeHdMbk55WXloYkozQmhZMnRoWjJVdWFuTnZiaWNzSUNkaWIzZGxjaTVxYzI5dUp5d2dKMk52YlhCdmJtVnVkQzVxYzI5dUoxMHBYRzRnSUNBZ0lDQWdJQzV3YVhCbEtHSjFiWEFvZTNSNWNHVTZJSFpsY25OcGIyNTlLU2xjYmlBZ0lDQWdJQ0FnTG5CcGNHVW9aM1ZzY0M1a1pYTjBLQ2N1SnlrcE8xeHVJQ0FnSUgwcE8xeHVJQ0I5S1NoV1JWSlRTVTlPVTF0cFhTazdYRzU5WEc1Y2JseHVMeThnVjJGMFkyaGNibWQxYkhBdWRHRnpheWduZDJGMFkyZ25MQ0JiSjJwekp5d2dKMk56Y3lkZExDQm1kVzVqZEdsdmJpZ3BJSHRjYmlBZ1ozVnNjQzUzWVhSamFDZ25MaTl6Y21NdmFuTXZLaW92S2ljc0lGc25hbk1uWFNrN1hHNGdJR2QxYkhBdWQyRjBZMmdvSnk0dmMzSmpMMk56Y3k4cUtpOHFKeXdnV3lkamMzTW5YU2s3WEc1OUtUdGNibHh1WEc0dkx5QkVaV1poZFd4MGMxeHVaM1ZzY0M1MFlYTnJLQ2RpZFdsc1pDY3NJRnNuYW5NbkxDQW5ZM056SjEwcE8xeHVaM1ZzY0M1MFlYTnJLQ2RrWldaaGRXeDBKeXdnV3lkaWRXbHNaQ2RkS1R0Y2JseHVJbDE5XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRnpjMlYwY3k5d1lXTnJjeTkwWlhSb1pYSXZaM1ZzY0dacGJHVXVhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1NVRkJTU3hIUVVGSExFZEJRVWNzVDBGQlR5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRPMEZCUTNwQ0xFbEJRVWtzU1VGQlNTeEhRVUZITEU5QlFVOHNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJRenRCUVVNelFpeEpRVUZKTEV0QlFVc3NSMEZCUnl4UFFVRlBMRU5CUVVNc1dVRkJXU3hEUVVGRExFTkJRVU03UVVGRGJFTXNTVUZCU1N4SlFVRkpMRWRCUVVjc1QwRkJUeXhEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETzBGQlEyaERMRWxCUVVrc1RVRkJUU3hIUVVGSExFOUJRVThzUTBGQlF5eGhRVUZoTEVOQlFVTXNRMEZCUXp0QlFVTndReXhKUVVGSkxFMUJRVTBzUjBGQlJ5eFBRVUZQTEVOQlFVTXNZVUZCWVN4RFFVRkRMRU5CUVVNN1FVRkRjRU1zU1VGQlNTeE5RVUZOTEVkQlFVY3NUMEZCVHl4RFFVRkRMR2xDUVVGcFFpeERRVUZETEVOQlFVTTdRVUZEZUVNc1NVRkJTU3hQUVVGUExFZEJRVWNzVDBGQlR5eERRVUZETEdOQlFXTXNRMEZCUXl4RFFVRkRPMEZCUTNSRExFbEJRVWtzVVVGQlVTeEhRVUZITEU5QlFVOHNRMEZCUXl4dFFrRkJiVUlzUTBGQlF5eERRVUZETzBGQlF6VkRMRWxCUVVrc1RVRkJUU3hIUVVGSExFOUJRVThzUTBGQlF5eGhRVUZoTEVOQlFVTXNRMEZCUXp0QlFVTndReXhKUVVGSkxFMUJRVTBzUjBGQlJ5eFBRVUZQTEVOQlFVTXNZVUZCWVN4RFFVRkRMRU5CUVVNN1FVRkRjRU1zU1VGQlNTeEpRVUZKTEVkQlFVY3NUMEZCVHl4RFFVRkRMRmRCUVZjc1EwRkJReXhEUVVGRE8wRkJRMmhETEVsQlFVa3NSMEZCUnl4SFFVRkhMRTlCUVU4c1EwRkJReXhsUVVGbExFTkJRVU1zUTBGQlF6dEJRVU51UXl4WlFVRlpPMEZCUTFvc1NVRkJTU3hQUVVGUExFZEJRVWNzVVVGQlVTeERRVUZETzBGQlEzWkNMRWxCUVVrc1IwRkJSeXhIUVVGSExFOUJRVThzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhEUVVGRE8wRkJRM0JETEVsQlFVa3NUVUZCVFN4SFFVRkhMRU5CUVVNc1MwRkJTeXhGUVVGRkxFZEJRVWNzUTBGQlF5eEpRVUZKTEVWQlFVVXNSMEZCUnl4RFFVRkRMRTlCUVU4c1JVRkJSU3hOUVVGTkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1FVRkRPVVFzU1VGQlNTeFZRVUZWTEVkQlFVYzdTVUZEWWl4UFFVRlBMRVZCUVVVc1VVRkJVVHRKUVVOcVFpeFRRVUZUTEVWQlFVVXNVVUZCVVR0RFFVTjBRaXhEUVVGRE8wRkJRMFlzVVVGQlVUdEJRVU5TTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhGUVVGRk8wbEJRMllzUjBGQlJ5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU03UVVGRGVFSXNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRTQ3hoUVVGaE8wRkJRMklzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVN1NVRkRXaXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETzFGQlEwd3NiVUpCUVcxQ08xRkJRMjVDTEc5Q1FVRnZRanRSUVVOd1FpeDNRa0ZCZDBJN1VVRkRlRUlzYzBKQlFYTkNPMUZCUTNSQ0xHMUNRVUZ0UWp0TFFVTjBRaXhEUVVGRE8xTkJRMGNzU1VGQlNTeERRVUZETEU5QlFVOHNSVUZCUlN4RFFVRkRPMU5CUTJZc1NVRkJTU3hEUVVGRExFdEJRVXNzUlVGQlJTeERRVUZETzFOQlEySXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhYUVVGWExFTkJRVU1zUTBGQlF6dFRRVU42UWl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETzFOQlEzSkNMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTTdVMEZEY0VJc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4SFFVRkhMRXRCUVVzc1EwRkJReXhEUVVGRE8xTkJRMmhETEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJRenRUUVVOa0xFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1RVRkJUU3hGUVVGRkxFTkJRVU1zUTBGQlF6dFRRVU5vUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVNeFF5eERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTklMRTFCUVUwN1FVRkRUaXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NSVUZCUlR0SlFVTmlMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zY1VKQlFYRkNMRU5CUVVNN1UwRkRNVUlzU1VGQlNTeERRVUZETEU5QlFVOHNSVUZCUlN4RFFVRkRPMU5CUTJZc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzFOQlExb3NTVUZCU1N4RFFVRkRMRkZCUVZFc1JVRkJSU3hEUVVGRE8xTkJRMmhDTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUjBGQlJ5eE5RVUZOTEVOQlFVTXNRMEZCUXp0VFFVTnFReXhKUVVGSkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTTdVMEZEWkN4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEUxQlFVMHNSVUZCUlN4RFFVRkRMRU5CUVVNN1UwRkRhRU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhIUVVGSExFMUJRVTBzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZETTBNc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRFNDeGxRVUZsTzBGQlEyWXNTVUZCU1N4UlFVRlJMRWRCUVVjc1EwRkJReXhQUVVGUExFVkJRVVVzVDBGQlR5eEZRVUZGTEU5QlFVOHNRMEZCUXl4RFFVRkRPMEZCUXpORExFZEJRVWNzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFZEJRVWNzVVVGQlVTeERRVUZETEUxQlFVMHNSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRE8wbEJRM1pETEVOQlFVTXNWVUZCVlN4UFFVRlBPMUZCUTJRc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFZRVUZWTEVkQlFVY3NUMEZCVHl4RlFVRkZPMWxCUXpWQ0xFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4alFVRmpMRVZCUVVVc1dVRkJXU3hGUVVGRkxHZENRVUZuUWl4RFFVRkRMRU5CUVVNN2FVSkJRM0pFTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hKUVVGSkxFVkJRVVVzVDBGQlR5eEZRVUZGTEVOQlFVTXNRMEZCUXp0cFFrRkROMElzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU01UWl4RFFVRkRMRU5CUVVNc1EwRkJRenRKUVVOUUxFTkJRVU1zUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRM0JDTEVOQlFVTTdRVUZEUkN4UlFVRlJPMEZCUTFJc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVWQlFVVXNRMEZCUXl4SlFVRkpMRVZCUVVVc1MwRkJTeXhEUVVGRExFVkJRVVU3U1VGRE9VSXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhsUVVGbExFVkJRVVVzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUTNCRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNaMEpCUVdkQ0xFVkJRVVVzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUXpGRExFTkJRVU1zUTBGQlF5eERRVUZETzBGQlEwZ3NWMEZCVnp0QlFVTllMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eEZRVUZGTEVOQlFVTXNTVUZCU1N4RlFVRkZMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRGJFTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhUUVVGVExFVkJRVVVzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUldoRExESTFUa0ZCTWpWT0lpd2labWxzWlNJNkltRnpjMlYwY3k5d1lXTnJjeTkwWlhSb1pYSXZaM1ZzY0dacGJHVXVhbk1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKMllYSWdaR1ZzSUQwZ2NtVnhkV2x5WlNnblpHVnNKeWs3WEc1MllYSWdaM1ZzY0NBOUlISmxjWFZwY21Vb0oyZDFiSEFuS1R0Y2JuWmhjaUJpWVdKbGJDQTlJSEpsY1hWcGNtVW9KMmQxYkhBdFltRmlaV3duS1R0Y2JuWmhjaUJpZFcxd0lEMGdjbVZ4ZFdseVpTZ25aM1ZzY0MxaWRXMXdKeWs3WEc1MllYSWdZMjl1WTJGMElEMGdjbVZ4ZFdseVpTZ25aM1ZzY0MxamIyNWpZWFFuS1R0Y2JuWmhjaUJvWldGa1pYSWdQU0J5WlhGMWFYSmxLQ2RuZFd4d0xXaGxZV1JsY2ljcE8xeHVkbUZ5SUcxcGJtbG1lU0E5SUhKbGNYVnBjbVVvSjJkMWJIQXRiV2x1YVdaNUxXTnpjeWNwTzF4dWRtRnlJSEJzZFcxaVpYSWdQU0J5WlhGMWFYSmxLQ2RuZFd4d0xYQnNkVzFpWlhJbktUdGNiblpoY2lCd2NtVm1hWGhsY2lBOUlISmxjWFZwY21Vb0oyZDFiSEF0WVhWMGIzQnlaV1pwZUdWeUp5azdYRzUyWVhJZ2NtVnVZVzFsSUQwZ2NtVnhkV2x5WlNnblozVnNjQzF5Wlc1aGJXVW5LVHRjYm5aaGNpQjFaMnhwWm5rZ1BTQnlaWEYxYVhKbEtDZG5kV3h3TFhWbmJHbG1lU2NwTzF4dWRtRnlJSE5oYzNNZ1BTQnlaWEYxYVhKbEtDZG5kV3h3TFhOaGMzTW5LVHRjYm5aaGNpQjFiV1FnUFNCeVpYRjFhWEpsS0NkbmRXeHdMWGR5WVhBdGRXMWtKeWs3WEc0dkx5QldZWEpwWVdKc1pYTmNiblpoY2lCa2FYTjBSR2x5SUQwZ0p5NHZaR2x6ZENjN1hHNTJZWElnY0d0bklEMGdjbVZ4ZFdseVpTZ25MaTl3WVdOcllXZGxMbXB6YjI0bktUdGNiblpoY2lCaVlXNXVaWElnUFNCYkp5OHFJU2NzSUhCclp5NXVZVzFsTENCd2EyY3VkbVZ5YzJsdmJpd2dKeW92WEZ4dUoxMHVhbTlwYmlnbklDY3BPMXh1ZG1GeUlIVnRaRTl3ZEdsdmJuTWdQU0I3WEc0Z0lDQWdaWGh3YjNKMGN6b2dKMVJsZEdobGNpY3NYRzRnSUNBZ2JtRnRaWE53WVdObE9pQW5WR1YwYUdWeUoxeHVmVHRjYmk4dklFTnNaV0Z1WEc1bmRXeHdMblJoYzJzb0oyTnNaV0Z1Snl3Z1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lHUmxiQzV6ZVc1aktGdGthWE4wUkdseVhTazdYRzU5S1R0Y2JpOHZJRXBoZG1GelkzSnBjSFJjYm1kMWJIQXVkR0Z6YXlnbmFuTW5MQ0JtZFc1amRHbHZiaUFvS1NCN1hHNGdJQ0FnWjNWc2NDNXpjbU1vVzF4dUlDQWdJQ0FnSUNBbkxpOXpjbU12YW5NdmRYUnBiSE11YW5NbkxGeHVJQ0FnSUNBZ0lDQW5MaTl6Y21NdmFuTXZkR1YwYUdWeUxtcHpKeXhjYmlBZ0lDQWdJQ0FnSnk0dmMzSmpMMnB6TDJOdmJuTjBjbUZwYm5RdWFuTW5MRnh1SUNBZ0lDQWdJQ0FuTGk5emNtTXZhbk12WVdKMWRHMWxiblF1YW5NbkxGeHVJQ0FnSUNBZ0lDQW5MaTl6Y21NdmFuTXZjMmhwWm5RdWFuTW5YRzRnSUNBZ1hTbGNiaUFnSUNBZ0lDQWdMbkJwY0dVb2NHeDFiV0psY2lncEtWeHVJQ0FnSUNBZ0lDQXVjR2x3WlNoaVlXSmxiQ2dwS1Z4dUlDQWdJQ0FnSUNBdWNHbHdaU2hqYjI1allYUW9KM1JsZEdobGNpNXFjeWNwS1Z4dUlDQWdJQ0FnSUNBdWNHbHdaU2gxYldRb2RXMWtUM0IwYVc5dWN5a3BYRzRnSUNBZ0lDQWdJQzV3YVhCbEtHaGxZV1JsY2loaVlXNXVaWElwS1Z4dUlDQWdJQ0FnSUNBdWNHbHdaU2huZFd4d0xtUmxjM1FvWkdsemRFUnBjaUFySUNjdmFuTW5LU2xjYmlBZ0lDQWdJQ0FnTG5CcGNHVW9kV2RzYVdaNUtDa3BYRzRnSUNBZ0lDQWdJQzV3YVhCbEtISmxibUZ0WlNoN0lITjFabVpwZURvZ0p5NXRhVzRuSUgwcEtWeHVJQ0FnSUNBZ0lDQXVjR2x3WlNobmRXeHdMbVJsYzNRb1pHbHpkRVJwY2lBcklDY3Zhbk1uS1NrN1hHNTlLVHRjYmk4dklFTlRVMXh1WjNWc2NDNTBZWE5yS0NkamMzTW5MQ0JtZFc1amRHbHZiaUFvS1NCN1hHNGdJQ0FnWjNWc2NDNXpjbU1vSnk0dmMzSmpMMk56Y3k4cUtpOHFMbk5oYzNNbktWeHVJQ0FnSUNBZ0lDQXVjR2x3WlNod2JIVnRZbVZ5S0NrcFhHNGdJQ0FnSUNBZ0lDNXdhWEJsS0hOaGMzTW9LU2xjYmlBZ0lDQWdJQ0FnTG5CcGNHVW9jSEpsWm1sNFpYSW9LU2xjYmlBZ0lDQWdJQ0FnTG5CcGNHVW9aM1ZzY0M1a1pYTjBLR1JwYzNSRWFYSWdLeUFuTDJOemN5Y3BLVnh1SUNBZ0lDQWdJQ0F1Y0dsd1pTaHRhVzVwWm5rb0tTbGNiaUFnSUNBZ0lDQWdMbkJwY0dVb2NtVnVZVzFsS0hzZ2MzVm1abWw0T2lBbkxtMXBiaWNnZlNrcFhHNGdJQ0FnSUNBZ0lDNXdhWEJsS0dkMWJIQXVaR1Z6ZENoa2FYTjBSR2x5SUNzZ0p5OWpjM01uS1NrN1hHNTlLVHRjYmk4dklGWmxjbk5wYjI0Z1luVnRjRnh1ZG1GeUlGWkZVbE5KVDA1VElEMGdXeWR3WVhSamFDY3NJQ2R0YVc1dmNpY3NJQ2R0WVdwdmNpZGRPMXh1Wm05eUlDaDJZWElnYVNBOUlEQTdJR2tnUENCV1JWSlRTVTlPVXk1c1pXNW5kR2c3SUNzcmFTa2dlMXh1SUNBZ0lDaG1kVzVqZEdsdmJpQW9kbVZ5YzJsdmJpa2dlMXh1SUNBZ0lDQWdJQ0JuZFd4d0xuUmhjMnNvSjNabGNuTnBiMjQ2SnlBcklIWmxjbk5wYjI0c0lHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHZDFiSEF1YzNKaktGc25jR0ZqYTJGblpTNXFjMjl1Snl3Z0oySnZkMlZ5TG1wemIyNG5MQ0FuWTI5dGNHOXVaVzUwTG1wemIyNG5YU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1Y0dsd1pTaGlkVzF3S0hzZ2RIbHdaVG9nZG1WeWMybHZiaUI5S1NsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdWNHbHdaU2huZFd4d0xtUmxjM1FvSnk0bktTazdYRzRnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJSDBwS0ZaRlVsTkpUMDVUVzJsZEtUdGNibjFjYmk4dklGZGhkR05vWEc1bmRXeHdMblJoYzJzb0ozZGhkR05vSnl3Z1d5ZHFjeWNzSUNkamMzTW5YU3dnWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUdkMWJIQXVkMkYwWTJnb0p5NHZjM0pqTDJwekx5b3FMeW9uTENCYkoycHpKMTBwTzF4dUlDQWdJR2QxYkhBdWQyRjBZMmdvSnk0dmMzSmpMMk56Y3k4cUtpOHFKeXdnV3lkamMzTW5YU2s3WEc1OUtUdGNiaTh2SUVSbFptRjFiSFJ6WEc1bmRXeHdMblJoYzJzb0oySjFhV3hrSnl3Z1d5ZHFjeWNzSUNkamMzTW5YU2s3WEc1bmRXeHdMblJoYzJzb0oyUmxabUYxYkhRbkxDQmJKMkoxYVd4a0oxMHBPMXh1WEc0dkx5TWdjMjkxY21ObFRXRndjR2x1WjFWU1REMWtZWFJoT21Gd2NHeHBZMkYwYVc5dUwycHpiMjQ3WTJoaGNuTmxkRDExZEdZNE8ySmhjMlUyTkN4bGVVb3lXbGhLZW1GWE9YVkphbTk2VEVOS2VtSXpWbmxaTWxaNlNXcHdZa2x0Um5wak1sWXdZM2s1ZDFsWFRuSmplVGt3V2xoU2IxcFlTWFphTTFaelkwZGFjR0pIVlhWaGJrMXBXRk4zYVdKdFJuUmFXRTFwVDJ4MFpFeERTblJaV0VKM1lWYzFibU41U1RaSmEwWkNVVlZGYzFOVlJrSlRVM2hJVVZWR1NFeEZaRUpSVm1OelZEQkdRbFI1ZUVSUlZVWkVURVYwUWxGVmMzTlJNRVpDVVhsNFJGRlZSa1JQTUVaQ1VUSndSRXhGYkVKUlZXdHpVMVZHUWxOVGVFaFJWVVpXVEVVNVFsRlZPSE5STUVaQ1VYbDRUbEZWUms1TVJVNUNVVlZOYzFFd1JrSlJlblJDVVZWT2MxRjVlRXBSVlVaS1RFVjBRbEZWYzNOU01FWkNWWGw0VUZGVlJsQk1SVTVDVVZWTmMxZFZSa0pYVTNoRVVWVkdSRXhGVGtKUlZVMDNVVlZHUkdWRlRYTlRWVVpDVTFONFNsRlZSa3BNUldSQ1VWWlZjMVF3UmtKVWVYaEVVVlZHUkV4R1pFSlJWbU56VVRCR1FsRjVlRVJSVlVaRVR6QkdRbEV6V2tSTVJXeENVVlZyYzFSVlJrSlVVM2hJVVZWR1VreEZPVUpSVlRoelVUQkdRbEY1ZUdoUlZVWm9URVZPUWxGVlRYTlJNRVpDVVhwMFFsRlZUalpSZVhoS1VWVkdTa3hGTVVKUlZUQnpVakJHUWxWVGVGQlJWVVpRVEVWT1FsRlZUWE5aVlVaQ1dWTjRSRkZWUmtSTVJVNUNVVlZOTjFGVlJrUmxhMDF6VTFWR1FsTlRlRTVSVlVaT1RFVmtRbEZXUlhOVU1FWkNWSGw0UkZGVlJrUk1SMnhEVVZWR2NGRnBlRVJSVlVaRVRFVk9RbEZWVFRkUlZVWkVUakJOYzFOVlJrSlRVM2hRVVZWR1VFeEZaRUpSVlRoelZEQkdRbFI1ZUVSUlZVWkVURWRPUWxGWFRYTlJNRVpDVVhsNFJGRlZSa1JQTUVaQ1VYcEdSRXhGYkVKUlZXdHpWVlZHUWxWVGVFaFJWVVpPVEVVNVFsRlZPSE5STUVaQ1VYbDRkRkZyUmtKaVZVbHpVVEJHUWxGNWVFUlJWVVpFVHpCR1FsRjVPVVJNUld4Q1VWVnJjMVJWUmtKVVUzaElVVlZHVWt4Rk9VSlJWVGh6VVRCR1FsRjVlR2hSVlVab1RFVk9RbEZWVFhOUk1FWkNVWHAwUWxGVlRqWlJlWGhLVVZWR1NreEZNVUpSVlRCelVqQkdRbFZUZUZCUlZVWlFURVZPUWxGVlRYTlpWVVpDV1ZONFJGRlZSa1JNUlU1Q1VWVk5OMUZWUmtSbGEwMXpVMVZHUWxOVGVFcFJWVVpLVEVWa1FsRldWWE5VTUVaQ1ZIbDRSRkZWUmtSTVJtUkNVVlpqYzFFd1JrSlJlWGhFVVZWR1JFOHdSa0pSTTFwRVRFVnNRbEZWYTNOU01FWkNVbmw0U0ZGVlJsaE1SVGxDVVZVNGMxRXdSa0pSZVhoc1VWVkdiRXhGVGtKUlZVMXpVVEJHUWxGNmRFSlJWVlY2VVhsNFdsRlZSbHBQTUVaQ1VURnZjMU5WUmtKVFUzaFFVVlZHVUV4RlpFSlJWV056VlZWR1FsVlRlRVJSVlVaRVR6QkdRbEV6V2tOTVJXeENVVlZyYzFJd1JrSlNlWGhJVVZWR1NFeEZPVUpSVlRoelVUQkdRbEY1ZUc1UmEwWkNXakJKYzFFd1JrSlJlWGhFVVZWR1JFOHdSa0pSTTBKRVRFVnNRbEZWYTNOVVZVWkNWRk40U0ZGVlJraE1SVTVDVVZWTmMxTXdSa0pUZVhoR1VWVkdSa3hGWkVKUlZXTnpVVEJHUWxGNWVFcFJWVVpLVEVWV1FsRlZWWE5TTUVaQ1VubDRSRkZWUmtSTVJUbENVVlU0YzFKVlJrSlNVM2hPVVZWR1RreEZUa0pSVlUxelVUQkdRbEY1ZUVwUlZVWktURVZPUWxGVlRYTlNNRVpDVW5sNFJGRlZSa1JNUlU1Q1VWVk5OMUZWUmtSUFZWRnpVMVZHUWxOVGVGWlJWVVpXVEVWa1FsRlZZemRUVlVaRVdtbDRVRkZWUmxCTVJWWkNVVlZWYzFWVlJrSlZWSFJLVVZWT2NWRnBlRlJSVlVaVVRFVldRbEZWVlhOVlZVWkNWVlIwUkZGVlRuZFJhWGhFVVZWR1JFOHdSa0pTTUZselZWVkdRbFZVZEVKUlZVNVRURVZzUWxGVmEzTlJNRVpDVVhsNFNsRlZSa3BNUlU1Q1VWVk5jMVF3UmtKVWVYaEdVVlZHUms4d2JFSlJNbkJEVEVWa1FsRlZZM05STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFFd1JrSlJlWGhRVVZWR1VFeEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVUekJHUWxFelVrTk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRTh3UmtKU01HZHpXVlZHUWxsVWRFSlJWVTVwVEVWc1FsRlZhM05STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFOVlJrSlRVM2hHVVZWR1JrOHdiRUpSTWxGelUxVkdRbE5UZUVSUlZVWkVURVZrUWxGVlkzTlJNRVpDVVhwMFVsRlZUbEZNUnpGRFVWVkdkRkZxZEZKUlZVNTFVV2w0ZGxGclJrSmlNRWszVlZWR1JHTkZTWE5rTUVwQ1VWaGtRMDh4UmtKUk0yaERURWhPUTFGVlJucFJhblJTVVZWT01GRnBlSFJSYTBaQ1lsVkpOMU13UmtSalJVbHpVVEJHUWxGNmRGUlJWVTVFVEVWc1FsRlZhM05STUVaQ1VYbDRVRkZWUmxCTVJWWkNVVlZWYzFFd1JrSlJlblJVVVZWT2JVeEZiRUpSVld0elVUQkdRbEY1ZUV4UlZVWk1URVZXUWxGVlZYTlJNRVpDVVhwMFZGRlZUbWxNUld4Q1VWVnJjMUV3UmtKUmVYaE9VVlZHVGt4RlRrSlJWVTF6VmpCR1FsWjVlRVJSVlVaRVRFVk9RbEZWVFRkVk1FWkVaV3RKYzFOVlJrSlRVM2hFVVZWR1JFeEZaRUpSVldOelVUQkdRbEY1ZUZaUlZVWldURVZPUWxGVlRYTlJNRVpDVVhwMFZGRlZUbmxSYVhoS1VWVkdTa3hGVGtKUlZVMXpWRlZHUWxSVGVFUlJWVVpFVEVVeFFsRlZNSE5STUVaQ1VYbDRSRkZWUmtSUE1VNUNVak5DUTB4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SVGxDVVZVNGMxSXdSa0pTZVhoTVVWVkdURXhGVGtKUlZVMXpVVEJHUWxGNmRGUlJWV1J2VVhsNFNsRlZSa3BNUlU1Q1VWVk5jMVJWUmtKVVUzaEdVVlZHUmt4RlRrSlJWVTAzVlRCR1JGcERlRXBSVlVaS1RFVk9RbEZWVFhOVVZVWkNWRk40UkZGVlJrUk1SVlpDVVZWTmMxUlZSa0pVVTNoR1VWVkdSa3hGTVVKUlZUQnpVbFZHUWxGNWVFUlJWVVpFVEVWT1FsRlZUVGRWTUVaRVQxVkpjMU5WUmtKVFUzaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOVU1FWkNWSGw0U0ZGVlJraE1SWFJDVVZWemMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMDNVVlZHUkdSRlRYTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5OMUZWUmtoVFEzaE9VVlZHVGs4d1JrSlJNRFJ6VTFWR1FsTlRlRVJSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWGw0VEZGVlJreE1SVlpDVVZWVk4xTlZSa1JhYVhoS1VWVkdTa3hGVGtKUlZVMXpVakJHUWxKNWVFUlJWVVpFVEVoR1ExRlZSbmhSYVhoRVVWVkdSRTh4VGtKUmVsWkRURVZzUWxGVmEzTlJNRVpDVVhsNFVGRlZSbEJNUlZaQ1VWVlZjMUV3UmtKUmVuUlVVVlZPYlV4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVldRbEZWVlhOUk1FWkNVWHAwVkZGVlRtRk1SV3hDVVZWcmMxRXdSa0pSZVhoU1VWVkdVa3hGVmtKUlZWVnpVVEJHUWxGNmRGUlJWV1J2VVdsNFNsRlZSa3BNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRkJSVlVaUVRFVmtRbEZWWTNOVVZVWkNWRk40UkZGVlJrUk1SVTVDVVZWTk4xVXdSa2hoYTAxelUxVkdRbE5UZUVSUlZVWkVURVV4UWxGVk1ITlNWVVpDVWxONFJGRlZSa1JQTVU1Q1VUSlJjMU5WUmtKVFUzaEVVVlZHUkV4Rk1VSlJWVEJ6VVRCR1FsRjVlRVpSVlVaRVRFVXhRbEZWTUhOU1ZVWkNVbE40VGxGVlJrNU1SVlpDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRTh4VGtKUmVteERURVZzUWxGVmEzTlJNRVpDVVhsNFNsRlZSa3BNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4Rk9VSlJWVGh6VWpCR1FsSjVlRTVSVlVaT1RFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNRVpDVVROYVJFeEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVUekJHUWxJd1ozTmFWVVpDV2xSMFFsRlZUbTFNUld4Q1VWVnJjMVZWUmtKVlUzaElVVlZHU0V4RlRrSlJWVTF6VkRCR1FsUjVlRVpSVlVaR1RFVTVRbEZWT0hOU1ZVWkNVbE40VUZGVlJsQk1SVTVDVVZWTmMxRXdSa0pSZW5SQ1VWVk5lbEY1ZUVoUlZVWklURVZPUWxGVlRYTlJNRVpDVVhsNFNsRlZSa3BNUlU1Q1VWVk5jMUl3UmtKU2VYaEVVVlZHUkV4RlZrSlJWVlZ6VVRCR1FsRjVlRWhSVlVaSVRFWkdRbEZXUlhOUk1FWkNVWGw0VGxGVlJrNU1SVlpDVVZWVmMxSlZSa0pTVTNoRVVWVkdSRXhGVmtKUlZVMXpVVEJHUWxGNmRFcFJWVTQwVVhsNFJGRlZSa1JNUmxaQ1VWWk5jMVF3UmtKVWVuUlNVVlZPYlV4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOV1ZVWkNWbE40U0ZGVlJraE1SVGxDVVZVNGMxSlZSa0pTVkhSYVVWVk5OVkZwZUVwUlZVWktURVZPUWxGVlRYTlNNRVpDVW5sNFJGRlZSa1JNUlU1Q1VWVk5jMWt3UmtKWmVYaEdVVlZHUmt4R2JFSlJWbXR6VWxWR1FsSlRlRzVSYTBaQ1dqQkpjMUV3UmtKUmVYaEVVVlZHUkU4eWJFTlJWVTR5VWtONFNsRlZSa3BNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RlZrSlJWVTF6VTFWR1FsTlRlRVpSVlVaR1RFVTVRbEZWT0hOU1ZVWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4yRlZTa0pSZWs1RFRFVnNRbEZWYTNOUk1FWkNVWGw0U2xGVlJrcE1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGWkVKUlZXTnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUVGRWVlVaRVRWVkpjMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTAzVTFWR1JGUkRlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0VWxGVlJsSk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNmRFSlJWVTV6VVdsNFJGRlZSa1JQTUVaQ1VqQlJjMVZWUmtKVlZIUkNVVlZPVTB4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOVU1FWkNWSGw0UmxGVlJrWk1SVTVDVVZWTmMxTlZSa0pUVTNoR1VWVkdSa3hGZEVKUlZYTnpVVEJHUWxGNWVFWlJWVVpHVHpCc1FsRXlhRVJNUld4Q1VWVnJjMUV3UmtKUmVYaE1VVlZHVEV4RlRrSlJWVTF6V2xWR1FscFRlRVpSVlVaR1RFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZW5SS1VWVk9kMUY1ZUVwUlZVWktURVZPUWxGVlRYTlRNRVpDVTNsNFJGRlZSa1JNUjJSRFVWVkdibEZwZUVaUlZVWkdURVZPUWxGVlRYTlRNRVpDVTNsNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVuUkNVVlZPTkZGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBRbEZWWkVsTVJtUkNVVlpqTjFGVlJrUlhRM2hLVVZWR1NreEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVU1UWxGVk9ITlNWVVpDVWxONFJGRlZSa1JNUld4Q1VWVnJjMUpWUmtKU1UzaE1VVlZHVEV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVR6QkdRbEV5ZUVSTVJXeENVVlZyYzFFd1JrSlJlWGhLVVZWR1NreEZUa0pSVlUxelZUQkdRbFY1ZUVaUlZVWkdURVZPUWxGVlRYTlVNRVpDVkhsNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVVbHpTVzFhY0dKSFZXbFBhVXBvWXpOT2JHUklUWFpqUjBacVlUTk5kbVJIVmpCaFIxWjVUREprTVdKSVFtMWhWM2hzVEcxd2VrbHBkMmxqTWpreFkyMU9iR013VG5aaWJsSnNZbTVSYVU5c2MybGtiVVo1U1VkU2JHSkRRV2RKUTBGblNVTkJaMGxFTUdkamJWWjRaRmRzZVZwVFoyNWFSMVp6U25sck4xaEhOVEpaV0VsbldqTldjMk5EUVdkSlEwRm5TVU5CWjFCVFFubGFXRVl4WVZoS2JFdERaRzVrVjNoM1NubHJOMWhITlRKWldFbG5XVzFHYVZwWGQyZEpRMEZuU1VOQloxQlRRbmxhV0VZeFlWaEtiRXREWkc1a1YzaDNURmRLYUZsdFZuTktlV3MzV0VjMU1sbFlTV2RaYmxaMFkwTkJaMGxEUVdkSlEwRm5VRk5DZVZwWVJqRmhXRXBzUzBOa2JtUlhlSGRNVjBveFlsaEJia3RVZEdOaWJscG9ZMmxDYW1JeU5XcFpXRkZuU1VOQlowbERRVGxKU0Vwc1kxaFdjR050Vlc5S01tUXhZa2hCZEZreU9YVlpNa1l3U25sck4xaEhOVEpaV0VsbllVZFdhRnBIVm5sSlEwRm5TVU5CWjFCVFFubGFXRVl4WVZoS2JFdERaRzVrVjNoM1RGZG9iRmxYVW14amFXTndUekY0ZFdSdFJubEpSekZ3WW0xc2JXVlRRV2RKUTBGblNVUXdaMk50Vm5oa1YyeDVXbE5uYmxvelZuTmpRekYwWVZjMWNGcHVhM1JaTTA1NlNubHJOMWhITlRKWldFbG5ZMGQ0TVdKWFNteGphVUZuU1VOQloxQlRRbmxhV0VZeFlWaEtiRXREWkc1a1YzaDNURmhDYzJSWE1XbGFXRWx1UzFSMFkySnVXbWhqYVVKM1kyMVdiV0ZZYUd4amFVRm5TVU5CT1VsSVNteGpXRlp3WTIxVmIwb3laREZpU0VGMFdWaFdNR0l6UW5sYVYxcHdaVWRXZVVwNWF6ZFlSelV5V1ZoSloyTnRWblZaVnpGc1NVTkJaMGxEUVdkUVUwSjVXbGhHTVdGWVNteExRMlJ1WkZkNGQweFlTbXhpYlVaMFdsTmpjRTh4ZUhWa2JVWjVTVWhXYm1KSGJHMWxVMEZuU1VOQlowbEVNR2RqYlZaNFpGZHNlVnBUWjI1YU0xWnpZME14TVZveWVIQmFibXR1UzFSMFkySnVXbWhqYVVKNldWaE9la2xEUVdkSlEwRm5TVU5CT1VsSVNteGpXRlp3WTIxVmIwb3laREZpU0VGMFl6SkdlbU41WTNCUE1YaDFaRzFHZVVsSVZuUmFRMEZuU1VOQlowbERRV2RKUkRCblkyMVdlR1JYYkhsYVUyZHVXak5XYzJORE1UTmpiVVozVEZoV2RGcERZM0JQTVhoMVdFYzBka3g1UWxkWldFcHdXVmRLYzFwWVRtTmlibHBvWTJsQ2EyRllUakJTUjJ4NVNVUXdaMHA1TkhaYVIyeDZaRU5qTjFoSE5USlpXRWxuWTBkMGJrbEVNR2RqYlZaNFpGZHNlVnBUWjI1TWFUbDNXVmRPY2xsWFpHeE1iWEI2WWpJMGJrdFVkR05pYmxwb1kybENhVmxYTlhWYVdFbG5VRk5DWWtwNU9IRkpVMk56U1VoQ2NscDVOWFZaVnpGc1RFTkNkMkV5WTNWa2JWWjVZekpzZG1KcGQyZEtlVzkyV0VaNGRVb3hNSFZoYlRsd1ltbG5ia2xEWTNCUE1YaDFaRzFHZVVsSVZuUmFSVGwzWkVkc2RtSnVUV2RRVTBJM1dFYzBaMGxIVmpSalJ6bDVaRWhOTmtsRFpGVmFXRkp2V2xoSmJreEdlSFZKUTBKMVdWY3hiR016UW1oWk1sVTJTVU5rVlZwWVVtOWFXRWx1V0VjMU9VOHhlSFZZUnpWalltazRka2xGVG5OYVYwWjFXRWMxYm1SWGVIZE1ibEpvWXpKemIwb3lUbk5hVjBaMVNubDNaMXB1Vm5WWk0xSndZakkwYjB0VFFqZFlSelJuU1VkU2JHSkROWHBsVnpWcVMwWjBhMkZZVGpCU1IyeDVXRk5yTjFoSE5UbExWSFJqWW14NGRWaEhOSFpNZVVKTFdWaGFhR015VG5saFdFSXdXRWMxYm1SWGVIZE1ibEpvWXpKemIwb3ljSHBLZVhkbldtNVdkVmt6VW5CaU1qUnZTMU5DTjFoSE5HZEpSMlF4WWtoQmRXTXpTbXBMUm5SalltbEJaMGxEUVc1TWFUbDZZMjFOZG1GdVRYWmtXRkp3WWtoTmRXRnVUVzVNUm5oMVNVTkJaMGxEWTNWTU0wNTVXWGs1Y1dONU9UQmFXRkp2V2xoSmRXRnVUVzVNUm5oMVNVTkJaMGxEWTNWTU0wNTVXWGs1Y1dONU9XcGlNalY2WkVoS2FHRlhOVEJNYlhCNlNubDRZMkpwUVdkSlEwRnVUR2s1ZW1OdFRYWmhiazEyV1ZkS01XUkhNV3hpYmxGMVlXNU5ia3hHZUhWSlEwRm5TVU5qZFV3elRubFplVGx4WTNrNWVtRkhiRzFrUXpWeFkzbGtZMkpwUVdkWVUyeGpZbWxCWjBsRFFYVmpSMngzV2xOb2QySklWblJaYlZaNVMwTnJjRmhITkdkSlEwRm5URzVDY0dOSFZXOVpiVVpwV2xkM2IwdFRiR05pYVVGblNVTkJkV05IYkhkYVUyaHFZakkxYWxsWVVXOUtNMUpzWkVkb2JHTnBOWEZqZVdOd1MxWjRkVWxEUVdkSlF6VjNZVmhDYkV0SVZuUmFRMmd4WWxkU1VHTklVbkJpTWpWNlMxTnNZMkpwUVdkSlEwRjFZMGRzZDFwVGFHOWFWMFpyV2xoSmIxbHRSblZpYlZaNVMxTnNZMkpzZUhWSlEwRm5TVU00ZGtsRk9YbGhWMlJ3WW0xR2MxaEhOR2RKUTBGblRHNUNjR05IVlc5YU0xWnpZME0xYTFwWVRqQkxSMUp3WXpOU1JXRllTV2RMZVVGdVRESndla3A1YTNCWVJ6VmpZbWxCWjBsRFFYWk1lVUpPWVZjMWNGcHRiR3hhUm5oMVNVTkJaMGxETlhkaFdFSnNTMGhXYm1KSGJHMWxVMmR3UzFaNGRVbERRV2RKUXpWM1lWaENiRXRJU214aWJVWjBXbE5vTjJNelZtMWFiV3cwVDJsQmJreHRNWEJpYVdRNVMxTnNZMkpwUVdkSlEwRjFZMGRzZDFwVGFHNWtWM2gzVEcxU2JHTXpVVzlhUjJ4NlpFVlNjR05wUVhKSlEyTjJZVzVOYmt0VGF6ZFlSelU1UzFSMFkySnNlSFZZUnpSMlRIbENSRlV4VG1OaWJXUXhZa2hCZFdSSFJucGhlV2R1V1ROT2VrcDVkMmRhYmxaMVdUTlNjR0l5Tkc5TFUwSTNXRWMwWjBsSFpERmlTRUYxWXpOS2FrdERZM1ZNTTA1NVdYazVhbU16VFhaTGFXOTJTMmsxZWxsWVRucEtlV3hqWW1sQlowbERRWFZqUjJ4M1dsTm9kMkpJVm5SWmJWWjVTME5yY0ZoSE5HZEpRMEZuVEc1Q2NHTkhWVzlqTWtaNlkzbG5jRXRXZUhWSlEwRm5TVU0xZDJGWVFteExTRUo1V2xkYWNHVkhWbmxMUTJ0d1dFYzFZMkpwUVdkSlEwRjJUSGxDVUdOdGJHNWhWelZvWWtaNGRVbERRV2RKUXpWM1lWaENiRXRIWkRGaVNFRjFXa2RXZW1SRGFHdGhXRTR3VWtkc2VVbERjMmRLZVRscVl6Tk5ia3RUYkdOaWJIaDFTVU5CWjBsRE9IWkpSVEZ3WW0xc2JXRlhWbXRZUnpSblNVTkJaMHh1UW5CalIxVnZZbGRzZFdGWFdqVkxRMnR3V0VjMFowbERRV2RNYmtKd1kwZFZiMk50Vm5WWlZ6RnNTMGgwZW1SWFdtMWhXR2MyU1VOamRXSlhiSFZLTXpCd1MxWjRkVWxEUVdkSlF6VjNZVmhDYkV0SFpERmlTRUYxV2tkV2VtUkRhR3RoV0U0d1VrZHNlVWxEYzJkS2VUbHFZek5OYmt0VGF6ZFlSelU1UzFSMFkySnNlSFZZUnpSMlRIbENWMXBZU25waFZ6bDFTVWRLTVdKWVFtTmlibHBvWTJsQ1YxSldTbFJUVlRsUFZYbEJPVWxHYzI1alIwWXdXVEpuYmt4RFFXNWlWMngxWWpOSmJreERRVzVpVjBaeFlqTkpibGhVZEdOaWJWcDJZMmxCYjJSdFJubEpSMnRuVUZOQmQwOTVRbkJKUkhkblZtdFdVMVV3YkZCVWJFMTFZa2RXZFZvelVtOVBlVUZ5U3pKcmNHVXhlSFZKUTBGdldtNVdkVmt6VW5CaU1qUnZaRzFXZVdNeWJIWmlhV3RuWlRGNGRVbERRV2RKUjJReFlraEJkV1JIUm5waGVXZHVaRzFXZVdNeWJIWmlhbTl1U1VOeloyUnRWbmxqTW14MlltbDNaMXB1Vm5WWk0xSndZakkwYjB0VFFqZFlSelJuU1VOQlowbERRbTVrVjNoM1RHNU9lVmw1YUdKS00wSm9XVEowYUZveVZYVmhiazUyWW1samMwbERaR2xpTTJSc1kyazFjV015T1hWS2VYZG5TakpPZG1KWVFuWmliVloxWkVNMWNXTXlPWFZLTVRCd1dFYzBaMGxEUVdkSlEwRm5TVU0xZDJGWVFteExSMG94WWxoQmIyVXpValZqUjFVMlNVaGFiR051VG5CaU1qVTVTMU5zWTJKcFFXZEpRMEZuU1VOQloweHVRbkJqUjFWdldqTldjMk5ETld0YVdFNHdTME5qZFVwNWEzQlBNWGgxU1VOQlowbElNSEJQTVhoMVNVTkNPVXRUYUZkU1ZrcFVVMVU1VDFVeGRIQllVMnMzV0VjMU9WaEhOV05pYkhoMVRIazRaMVl5UmpCWk1taGpZbTFrTVdKSVFYVmtSMFo2WVhsbmJtUXlSakJaTW1kdVRFTkNZa295Y0hwS2VYZG5TakpPZW1ONVpHUk1RMEp0WkZjMWFtUkhiSFppYVdkd1NVaDBZMkpwUVdkYU0xWnpZME0xTTFsWVVtcGhRMmR1VEdrNWVtTnRUWFpoYmsxMlMybHZka3RwWTNOSlJuTnVZVzVOYmxoVGF6ZFlSelJuU1Vka01XSklRWFZrTWtZd1dUSm5iMHA1Tkhaak0wcHFUREpPZW1ONU9IRkxhVGh4U25sM1oxZDVaR3BqTTAxdVdGTnJOMWhITlRsTFZIUmpZbXg0ZFZoSE5IWk1lVUpGV2xkYWFHUlhlREJqTVhoMVdqTldjMk5ETlRCWldFNXlTME5rYVdSWGJITmFRMk56U1VaemJtRnVUVzVNUTBGdVdUTk9la294TUhCUE1YaDFXak5XYzJORE5UQlpXRTV5UzBOa2ExcFhXbWhrVjNnd1NubDNaMWQ1Wkdsa1YyeHpXa05rWkV0VWRHTmliSGgxU1d3eE9WeHVJbDE5XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1GemMyVjBjeTl3WVdOcmN5OTBaWFJvWlhJdlozVnNjR1pwYkdVdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzU1VGQlNTeEhRVUZITEVkQlFVY3NUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8wRkJRM3BDTEVsQlFVa3NTVUZCU1N4SFFVRkhMRTlCUVU4c1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF6dEJRVU16UWl4SlFVRkpMRXRCUVVzc1IwRkJSeXhQUVVGUExFTkJRVU1zV1VGQldTeERRVUZETEVOQlFVTTdRVUZEYkVNc1NVRkJTU3hKUVVGSkxFZEJRVWNzVDBGQlR5eERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRPMEZCUTJoRExFbEJRVWtzVFVGQlRTeEhRVUZITEU5QlFVOHNRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenRCUVVOd1F5eEpRVUZKTEUxQlFVMHNSMEZCUnl4UFFVRlBMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU03UVVGRGNFTXNTVUZCU1N4TlFVRk5MRWRCUVVjc1QwRkJUeXhEUVVGRExHbENRVUZwUWl4RFFVRkRMRU5CUVVNN1FVRkRlRU1zU1VGQlNTeFBRVUZQTEVkQlFVY3NUMEZCVHl4RFFVRkRMR05CUVdNc1EwRkJReXhEUVVGRE8wRkJRM1JETEVsQlFVa3NVVUZCVVN4SFFVRkhMRTlCUVU4c1EwRkJReXh0UWtGQmJVSXNRMEZCUXl4RFFVRkRPMEZCUXpWRExFbEJRVWtzVFVGQlRTeEhRVUZITEU5QlFVOHNRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenRCUVVOd1F5eEpRVUZKTEUxQlFVMHNSMEZCUnl4UFFVRlBMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU03UVVGRGNFTXNTVUZCU1N4SlFVRkpMRWRCUVVjc1QwRkJUeXhEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETzBGQlEyaERMRWxCUVVrc1IwRkJSeXhIUVVGSExFOUJRVThzUTBGQlF5eGxRVUZsTEVOQlFVTXNRMEZCUXp0QlFVTnVReXhaUVVGWk8wRkJRMW9zU1VGQlNTeFBRVUZQTEVkQlFVY3NVVUZCVVN4RFFVRkRPMEZCUTNaQ0xFbEJRVWtzUjBGQlJ5eEhRVUZITEU5QlFVOHNRMEZCUXl4blFrRkJaMElzUTBGQlF5eERRVUZETzBGQlEzQkRMRWxCUVVrc1RVRkJUU3hIUVVGSExFTkJRVU1zUzBGQlN5eEZRVUZGTEVkQlFVY3NRMEZCUXl4SlFVRkpMRVZCUVVVc1IwRkJSeXhEUVVGRExFOUJRVThzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU03UVVGRE9VUXNTVUZCU1N4VlFVRlZMRWRCUVVjN1NVRkRZaXhQUVVGUExFVkJRVVVzVVVGQlVUdEpRVU5xUWl4VFFVRlRMRVZCUVVVc1VVRkJVVHREUVVOMFFpeERRVUZETzBGQlEwWXNVVUZCVVR0QlFVTlNMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eEZRVUZGTzBsQlEyWXNSMEZCUnl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZEZUVJc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRFNDeGhRVUZoTzBGQlEySXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFVkJRVVU3U1VGRFdpeEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRPMUZCUTB3c2JVSkJRVzFDTzFGQlEyNUNMRzlDUVVGdlFqdFJRVU53UWl4M1FrRkJkMEk3VVVGRGVFSXNjMEpCUVhOQ08xRkJRM1JDTEcxQ1FVRnRRanRMUVVOMFFpeERRVUZETzFOQlEwY3NTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSU3hEUVVGRE8xTkJRMllzU1VGQlNTeERRVUZETEV0QlFVc3NSVUZCUlN4RFFVRkRPMU5CUTJJc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXp0VFFVTjZRaXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRPMU5CUTNKQ0xFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNN1UwRkRjRUlzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhIUVVGSExFdEJRVXNzUTBGQlF5eERRVUZETzFOQlEyaERMRWxCUVVrc1EwRkJReXhOUVVGTkxFVkJRVVVzUTBGQlF6dFRRVU5rTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVFVGQlRTeEZRVUZGTEVOQlFVTXNRMEZCUXp0VFFVTm9ReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU14UXl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVOSUxFMUJRVTA3UVVGRFRpeEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1JVRkJSVHRKUVVOaUxFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNjVUpCUVhGQ0xFTkJRVU03VTBGRE1VSXNTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSU3hEUVVGRE8xTkJRMllzU1VGQlNTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMU5CUTFvc1NVRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJTeERRVUZETzFOQlEyaENMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNSMEZCUnl4TlFVRk5MRU5CUVVNc1EwRkJRenRUUVVOcVF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNN1UwRkRaQ3hKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRTFCUVUwc1JVRkJSU3hEUVVGRExFTkJRVU03VTBGRGFFTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eEhRVUZITEUxQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRNME1zUTBGQlF5eERRVUZETEVOQlFVTTdRVUZEU0N4bFFVRmxPMEZCUTJZc1NVRkJTU3hSUVVGUkxFZEJRVWNzUTBGQlF5eFBRVUZQTEVWQlFVVXNUMEZCVHl4RlFVRkZMRTlCUVU4c1EwRkJReXhEUVVGRE8wRkJRek5ETEVkQlFVY3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NVVUZCVVN4RFFVRkRMRTFCUVUwc1JVRkJSU3hGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETzBsQlEzWkRMRU5CUVVNc1ZVRkJWU3hQUVVGUE8xRkJRMlFzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1QwRkJUeXhGUVVGRk8xbEJRelZDTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhqUVVGakxFVkJRVVVzV1VGQldTeEZRVUZGTEdkQ1FVRm5RaXhEUVVGRExFTkJRVU03YVVKQlEzSkVMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJTeEpRVUZKTEVWQlFVVXNUMEZCVHl4RlFVRkZMRU5CUVVNc1EwRkJRenRwUWtGRE4wSXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTTVRaXhEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU5RTEVOQlFVTXNRMEZCUXl4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBGQlEzQkNMRU5CUVVNN1FVRkRSQ3hSUVVGUk8wRkJRMUlzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRVZCUVVVc1EwRkJReXhKUVVGSkxFVkJRVVVzUzBGQlN5eERRVUZETEVWQlFVVTdTVUZET1VJc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGxRVUZsTEVWQlFVVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRE8wbEJRM0JETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1owSkJRV2RDTEVWQlFVVXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRekZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUTBnc1YwRkJWenRCUVVOWUxFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RlFVRkZMRU5CUVVNc1NVRkJTU3hGUVVGRkxFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZEYkVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFRRVUZUTEVWQlFVVXNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRMmhETERJMVRrRkJNalZPTzBGQlJUTTFUaXgxYkdkQ1FVRjFiR2RDSWl3aVptbHNaU0k2SW1GemMyVjBjeTl3WVdOcmN5OTBaWFJvWlhJdlozVnNjR1pwYkdVdWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUoyWVhJZ1pHVnNJRDBnY21WeGRXbHlaU2duWkdWc0p5azdYRzUyWVhJZ1ozVnNjQ0E5SUhKbGNYVnBjbVVvSjJkMWJIQW5LVHRjYm5aaGNpQmlZV0psYkNBOUlISmxjWFZwY21Vb0oyZDFiSEF0WW1GaVpXd25LVHRjYm5aaGNpQmlkVzF3SUQwZ2NtVnhkV2x5WlNnblozVnNjQzFpZFcxd0p5azdYRzUyWVhJZ1kyOXVZMkYwSUQwZ2NtVnhkV2x5WlNnblozVnNjQzFqYjI1allYUW5LVHRjYm5aaGNpQm9aV0ZrWlhJZ1BTQnlaWEYxYVhKbEtDZG5kV3h3TFdobFlXUmxjaWNwTzF4dWRtRnlJRzFwYm1sbWVTQTlJSEpsY1hWcGNtVW9KMmQxYkhBdGJXbHVhV1o1TFdOemN5Y3BPMXh1ZG1GeUlIQnNkVzFpWlhJZ1BTQnlaWEYxYVhKbEtDZG5kV3h3TFhCc2RXMWlaWEluS1R0Y2JuWmhjaUJ3Y21WbWFYaGxjaUE5SUhKbGNYVnBjbVVvSjJkMWJIQXRZWFYwYjNCeVpXWnBlR1Z5SnlrN1hHNTJZWElnY21WdVlXMWxJRDBnY21WeGRXbHlaU2duWjNWc2NDMXlaVzVoYldVbktUdGNiblpoY2lCMVoyeHBabmtnUFNCeVpYRjFhWEpsS0NkbmRXeHdMWFZuYkdsbWVTY3BPMXh1ZG1GeUlITmhjM01nUFNCeVpYRjFhWEpsS0NkbmRXeHdMWE5oYzNNbktUdGNiblpoY2lCMWJXUWdQU0J5WlhGMWFYSmxLQ2RuZFd4d0xYZHlZWEF0ZFcxa0p5azdYRzR2THlCV1lYSnBZV0pzWlhOY2JuWmhjaUJrYVhOMFJHbHlJRDBnSnk0dlpHbHpkQ2M3WEc1MllYSWdjR3RuSUQwZ2NtVnhkV2x5WlNnbkxpOXdZV05yWVdkbExtcHpiMjRuS1R0Y2JuWmhjaUJpWVc1dVpYSWdQU0JiSnk4cUlTY3NJSEJyWnk1dVlXMWxMQ0J3YTJjdWRtVnljMmx2Yml3Z0p5b3ZYRnh1SjEwdWFtOXBiaWduSUNjcE8xeHVkbUZ5SUhWdFpFOXdkR2x2Ym5NZ1BTQjdYRzRnSUNBZ1pYaHdiM0owY3pvZ0oxUmxkR2hsY2ljc1hHNGdJQ0FnYm1GdFpYTndZV05sT2lBblZHVjBhR1Z5SjF4dWZUdGNiaTh2SUVOc1pXRnVYRzVuZFd4d0xuUmhjMnNvSjJOc1pXRnVKeXdnWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUdSbGJDNXplVzVqS0Z0a2FYTjBSR2x5WFNrN1hHNTlLVHRjYmk4dklFcGhkbUZ6WTNKcGNIUmNibWQxYkhBdWRHRnpheWduYW5NbkxDQm1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdaM1ZzY0M1emNtTW9XMXh1SUNBZ0lDQWdJQ0FuTGk5emNtTXZhbk12ZFhScGJITXVhbk1uTEZ4dUlDQWdJQ0FnSUNBbkxpOXpjbU12YW5NdmRHVjBhR1Z5TG1wekp5eGNiaUFnSUNBZ0lDQWdKeTR2YzNKakwycHpMMk52Ym5OMGNtRnBiblF1YW5NbkxGeHVJQ0FnSUNBZ0lDQW5MaTl6Y21NdmFuTXZZV0oxZEcxbGJuUXVhbk1uTEZ4dUlDQWdJQ0FnSUNBbkxpOXpjbU12YW5NdmMyaHBablF1YW5NblhHNGdJQ0FnWFNsY2JpQWdJQ0FnSUNBZ0xuQnBjR1VvY0d4MWJXSmxjaWdwS1Z4dUlDQWdJQ0FnSUNBdWNHbHdaU2hpWVdKbGJDZ3BLVnh1SUNBZ0lDQWdJQ0F1Y0dsd1pTaGpiMjVqWVhRb0ozUmxkR2hsY2k1cWN5Y3BLVnh1SUNBZ0lDQWdJQ0F1Y0dsd1pTaDFiV1FvZFcxa1QzQjBhVzl1Y3lrcFhHNGdJQ0FnSUNBZ0lDNXdhWEJsS0dobFlXUmxjaWhpWVc1dVpYSXBLVnh1SUNBZ0lDQWdJQ0F1Y0dsd1pTaG5kV3h3TG1SbGMzUW9aR2x6ZEVScGNpQXJJQ2N2YW5NbktTbGNiaUFnSUNBZ0lDQWdMbkJwY0dVb2RXZHNhV1o1S0NrcFhHNGdJQ0FnSUNBZ0lDNXdhWEJsS0hKbGJtRnRaU2g3SUhOMVptWnBlRG9nSnk1dGFXNG5JSDBwS1Z4dUlDQWdJQ0FnSUNBdWNHbHdaU2huZFd4d0xtUmxjM1FvWkdsemRFUnBjaUFySUNjdmFuTW5LU2s3WEc1OUtUdGNiaTh2SUVOVFUxeHVaM1ZzY0M1MFlYTnJLQ2RqYzNNbkxDQm1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdaM1ZzY0M1emNtTW9KeTR2YzNKakwyTnpjeThxS2k4cUxuTmhjM01uS1Z4dUlDQWdJQ0FnSUNBdWNHbHdaU2h3YkhWdFltVnlLQ2twWEc0Z0lDQWdJQ0FnSUM1d2FYQmxLSE5oYzNNb0tTbGNiaUFnSUNBZ0lDQWdMbkJwY0dVb2NISmxabWw0WlhJb0tTbGNiaUFnSUNBZ0lDQWdMbkJwY0dVb1ozVnNjQzVrWlhOMEtHUnBjM1JFYVhJZ0t5QW5MMk56Y3ljcEtWeHVJQ0FnSUNBZ0lDQXVjR2x3WlNodGFXNXBabmtvS1NsY2JpQWdJQ0FnSUNBZ0xuQnBjR1VvY21WdVlXMWxLSHNnYzNWbVptbDRPaUFuTG0xcGJpY2dmU2twWEc0Z0lDQWdJQ0FnSUM1d2FYQmxLR2QxYkhBdVpHVnpkQ2hrYVhOMFJHbHlJQ3NnSnk5amMzTW5LU2s3WEc1OUtUdGNiaTh2SUZabGNuTnBiMjRnWW5WdGNGeHVkbUZ5SUZaRlVsTkpUMDVUSUQwZ1d5ZHdZWFJqYUNjc0lDZHRhVzV2Y2ljc0lDZHRZV3B2Y2lkZE8xeHVabTl5SUNoMllYSWdhU0E5SURBN0lHa2dQQ0JXUlZKVFNVOU9VeTVzWlc1bmRHZzdJQ3NyYVNrZ2UxeHVJQ0FnSUNobWRXNWpkR2x2YmlBb2RtVnljMmx2YmlrZ2UxeHVJQ0FnSUNBZ0lDQm5kV3h3TG5SaGMyc29KM1psY25OcGIyNDZKeUFySUhabGNuTnBiMjRzSUdaMWJtTjBhVzl1SUNncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdkMWJIQXVjM0pqS0ZzbmNHRmphMkZuWlM1cWMyOXVKeXdnSjJKdmQyVnlMbXB6YjI0bkxDQW5ZMjl0Y0c5dVpXNTBMbXB6YjI0blhTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVjR2x3WlNoaWRXMXdLSHNnZEhsd1pUb2dkbVZ5YzJsdmJpQjlLU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1Y0dsd1pTaG5kV3h3TG1SbGMzUW9KeTRuS1NrN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lIMHBLRlpGVWxOSlQwNVRXMmxkS1R0Y2JuMWNiaTh2SUZkaGRHTm9YRzVuZFd4d0xuUmhjMnNvSjNkaGRHTm9KeXdnV3lkcWN5Y3NJQ2RqYzNNblhTd2dablZ1WTNScGIyNGdLQ2tnZTF4dUlDQWdJR2QxYkhBdWQyRjBZMmdvSnk0dmMzSmpMMnB6THlvcUx5b25MQ0JiSjJwekoxMHBPMXh1SUNBZ0lHZDFiSEF1ZDJGMFkyZ29KeTR2YzNKakwyTnpjeThxS2k4cUp5d2dXeWRqYzNNblhTazdYRzU5S1R0Y2JpOHZJRVJsWm1GMWJIUnpYRzVuZFd4d0xuUmhjMnNvSjJKMWFXeGtKeXdnV3lkcWN5Y3NJQ2RqYzNNblhTazdYRzVuZFd4d0xuUmhjMnNvSjJSbFptRjFiSFFuTENCYkoySjFhV3hrSjEwcE8xeHVMeThqSUhOdmRYSmpaVTFoY0hCcGJtZFZVa3c5WkdGMFlUcGhjSEJzYVdOaGRHbHZiaTlxYzI5dU8yTm9ZWEp6WlhROWRYUm1PRHRpWVhObE5qUXNaWGxLTWxwWVNucGhWemwxU1dwdmVreERTbnBpTTFaNVdUSldla2xxY0dKSmJVWjZZekpXTUdONU9YZFpWMDV5WTNrNU1GcFlVbTlhV0VsMldqTldjMk5IV25CaVIxVjFZVzVOYVZoVGQybGliVVowV2xoTmFVOXNkR1JNUTBwMFdWaENkMkZYTlc1amVVazJTV3RHUWxGVlJYTlRWVVpDVTFONFNGRlZSa2hNUldSQ1VWWmpjMVF3UmtKVWVYaEVVVlZHUkV4RmRFSlJWWE56VVRCR1FsRjVlRVJSVlVaRVR6QkdRbEV5Y0VSTVJXeENVVlZyYzFOVlJrSlRVM2hJVVZWR1ZreEZPVUpSVlRoelVUQkdRbEY1ZUU1UlZVWk9URVZPUWxGVlRYTlJNRVpDVVhwMFFsRlZUbk5SZVhoS1VWVkdTa3hGZEVKUlZYTnpVakJHUWxWNWVGQlJWVVpRVEVWT1FsRlZUWE5YVlVaQ1YxTjRSRkZWUmtSTVJVNUNVVlZOTjFGVlJrUmxSVTF6VTFWR1FsTlRlRXBSVlVaS1RFVmtRbEZXVlhOVU1FWkNWSGw0UkZGVlJrUk1SbVJDVVZaamMxRXdSa0pSZVhoRVVWVkdSRTh3UmtKUk0xcEVURVZzUWxGVmEzTlVWVVpDVkZONFNGRlZSbEpNUlRsQ1VWVTRjMUV3UmtKUmVYaG9VVlZHYUV4RlRrSlJWVTF6VVRCR1FsRjZkRUpSVlU0MlVYbDRTbEZWUmtwTVJURkNVVlV3YzFJd1JrSlZVM2hRVVZWR1VFeEZUa0pSVlUxeldWVkdRbGxUZUVSUlZVWkVURVZPUWxGVlRUZFJWVVpFWld0TmMxTlZSa0pUVTNoT1VWVkdUa3hGWkVKUlZrVnpWREJHUWxSNWVFUlJWVVpFVEVkc1ExRlZSbkJSYVhoRVVWVkdSRXhGVGtKUlZVMDNVVlZHUkU0d1RYTlRWVVpDVTFONFVGRlZSbEJNUldSQ1VWVTRjMVF3UmtKVWVYaEVVVlZHUkV4SFRrSlJWMDF6VVRCR1FsRjVlRVJSVlVaRVR6QkdRbEY2UmtSTVJXeENVVlZyYzFWVlJrSlZVM2hJVVZWR1RreEZPVUpSVlRoelVUQkdRbEY1ZUhSUmEwWkNZbFZKYzFFd1JrSlJlWGhFVVZWR1JFOHdSa0pSZVRsRVRFVnNRbEZWYTNOVVZVWkNWRk40U0ZGVlJsSk1SVGxDVVZVNGMxRXdSa0pSZVhob1VWVkdhRXhGVGtKUlZVMXpVVEJHUWxGNmRFSlJWVTQyVVhsNFNsRlZSa3BNUlRGQ1VWVXdjMUl3UmtKVlUzaFFVVlZHVUV4RlRrSlJWVTF6V1ZWR1FsbFRlRVJSVlVaRVRFVk9RbEZWVFRkUlZVWkVaV3ROYzFOVlJrSlRVM2hLVVZWR1NreEZaRUpSVmxWelZEQkdRbFI1ZUVSUlZVWkVURVprUWxGV1kzTlJNRVpDVVhsNFJGRlZSa1JQTUVaQ1VUTmFSRXhGYkVKUlZXdHpVakJHUWxKNWVFaFJWVVpZVEVVNVFsRlZPSE5STUVaQ1VYbDRiRkZWUm14TVJVNUNVVlZOYzFFd1JrSlJlblJDVVZWVmVsRjVlRnBSVlVaYVR6QkdRbEV4YjNOVFZVWkNVMU40VUZGVlJsQk1SV1JDVVZWamMxVlZSa0pWVTNoRVVWVkdSRTh3UmtKUk0xcERURVZzUWxGVmEzTlNNRVpDVW5sNFNGRlZSa2hNUlRsQ1VWVTRjMUV3UmtKUmVYaHVVV3RHUWxvd1NYTlJNRVpDVVhsNFJGRlZSa1JQTUVaQ1VUTkNSRXhGYkVKUlZXdHpWRlZHUWxSVGVFaFJWVVpJVEVWT1FsRlZUWE5UTUVaQ1UzbDRSbEZWUmtaTVJXUkNVVlZqYzFFd1JrSlJlWGhLVVZWR1NreEZWa0pSVlZWelVqQkdRbEo1ZUVSUlZVWkVURVU1UWxGVk9ITlNWVVpDVWxONFRsRlZSazVNUlU1Q1VWVk5jMUV3UmtKUmVYaEtVVlZHU2t4RlRrSlJWVTF6VWpCR1FsSjVlRVJSVlVaRVRFVk9RbEZWVFRkUlZVWkVUMVZSYzFOVlJrSlRVM2hXVVZWR1ZreEZaRUpSVldNM1UxVkdSRnBwZUZCUlZVWlFURVZXUWxGVlZYTlZWVVpDVlZSMFNsRlZUbkZSYVhoVVVWVkdWRXhGVmtKUlZWVnpWVlZHUWxWVWRFUlJWVTUzVVdsNFJGRlZSa1JQTUVaQ1VqQlpjMVZWUmtKVlZIUkNVVlZPVTB4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOVU1FWkNWSGw0UmxGVlJrWlBNR3hDVVRKd1EweEZaRUpSVldOelVUQkdRbEY1ZUVwUlZVWktURVZPUWxGVlRYTlJNRVpDVVhsNFVGRlZSbEJNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkU4d1JrSlJNMUpEVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1FWkNVakJuYzFsVlJrSlpWSFJDVVZWT2FVeEZiRUpSVld0elVUQkdRbEY1ZUVwUlZVWktURVZPUWxGVlRYTlRWVVpDVTFONFJsRlZSa1pQTUd4Q1VUSlJjMU5WUmtKVFUzaEVVVlZHUkV4RlpFSlJWV056VVRCR1FsRjZkRkpSVlU1UlRFY3hRMUZWUm5SUmFuUlNVVlZPZFZGcGVIWlJhMFpDWWpCSk4xVlZSa1JqUlVselpEQktRbEZZWkVOUE1VWkNVVE5vUTB4SVRrTlJWVVo2VVdwMFVsRlZUakJSYVhoMFVXdEdRbUpWU1RkVE1FWkVZMFZKYzFFd1JrSlJlblJVVVZWT1JFeEZiRUpSVld0elVUQkdRbEY1ZUZCUlZVWlFURVZXUWxGVlZYTlJNRVpDVVhwMFZGRlZUbTFNUld4Q1VWVnJjMUV3UmtKUmVYaE1VVlZHVEV4RlZrSlJWVlZ6VVRCR1FsRjZkRlJSVlU1cFRFVnNRbEZWYTNOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWTmMxWXdSa0pXZVhoRVVWVkdSRXhGVGtKUlZVMDNWVEJHUkdWclNYTlRWVVpDVTFONFJGRlZSa1JNUldSQ1VWVmpjMUV3UmtKUmVYaFdVVlZHVmt4RlRrSlJWVTF6VVRCR1FsRjZkRlJSVlU1NVVXbDRTbEZWUmtwTVJVNUNVVlZOYzFSVlJrSlVVM2hFVVZWR1JFeEZNVUpSVlRCelVUQkdRbEY1ZUVSUlZVWkVUekZPUWxJelFrTk1SV3hDVVZWcmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVVNVFsRlZPSE5TTUVaQ1VubDRURkZWUmt4TVJVNUNVVlZOYzFFd1JrSlJlblJVVVZWa2IxRjVlRXBSVlVaS1RFVk9RbEZWVFhOVVZVWkNWRk40UmxGVlJrWk1SVTVDVVZWTk4xVXdSa1JhUTNoS1VWVkdTa3hGVGtKUlZVMXpWRlZHUWxSVGVFUlJWVVpFVEVWV1FsRlZUWE5VVlVaQ1ZGTjRSbEZWUmtaTVJURkNVVlV3YzFKVlJrSlJlWGhFVVZWR1JFeEZUa0pSVlUwM1ZUQkdSRTlWU1hOVFZVWkNVMU40UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpWREJHUWxSNWVFaFJWVVpJVEVWMFFsRlZjM05STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFGVlJrUmtSVTF6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkUlZVWklVME40VGxGVlJrNVBNRVpDVVRBMGMxTlZSa0pUVTNoRVVWVkdSRXhGYkVKUlZXdHpVVEJHUWxGNWVFeFJWVVpNVEVWV1FsRlZWVGRUVlVaRVdtbDRTbEZWUmtwTVJVNUNVVlZOYzFJd1JrSlNlWGhFVVZWR1JFeElSa05SVlVaNFVXbDRSRkZWUmtSUE1VNUNVWHBXUTB4RmJFSlJWV3R6VVRCR1FsRjVlRkJSVlVaUVRFVldRbEZWVlhOUk1FWkNVWHAwVkZGVlRtMU1SV3hDVVZWcmMxRXdSa0pSZVhoS1VWVkdTa3hGVmtKUlZWVnpVVEJHUWxGNmRGUlJWVTVoVEVWc1FsRlZhM05STUVaQ1VYbDRVbEZWUmxKTVJWWkNVVlZWYzFFd1JrSlJlblJVVVZWa2IxRnBlRXBSVlVaS1RFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoUVVWVkdVRXhGWkVKUlZXTnpWRlZHUWxSVGVFUlJWVVpFVEVWT1FsRlZUVGRWTUVaSVlXdE5jMU5WUmtKVFUzaEVVVlZHUkV4Rk1VSlJWVEJ6VWxWR1FsSlRlRVJSVlVaRVR6Rk9RbEV5VVhOVFZVWkNVMU40UkZGVlJrUk1SVEZDVVZVd2MxRXdSa0pSZVhoR1VWVkdSRXhGTVVKUlZUQnpVbFZHUWxKVGVFNVJWVVpPVEVWV1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1VNUNVWHBzUTB4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SVGxDVVZVNGMxSXdSa0pTZVhoT1VWVkdUa3hGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVHpCR1FsRXpXa1JNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkU4d1JrSlNNR2R6V2xWR1FscFVkRUpSVlU1dFRFVnNRbEZWYTNOVlZVWkNWVk40U0ZGVlJraE1SVTVDVVZWTmMxUXdSa0pVZVhoR1VWVkdSa3hGT1VKUlZUaHpVbFZHUWxKVGVGQlJWVVpRVEVWT1FsRlZUWE5STUVaQ1VYcDBRbEZWVFhwUmVYaElVVlZHU0V4RlRrSlJWVTF6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOU01FWkNVbmw0UkZGVlJrUk1SVlpDVVZWVmMxRXdSa0pSZVhoSVVWVkdTRXhHUmtKUlZrVnpVVEJHUWxGNWVFNVJWVVpPVEVWV1FsRlZWWE5TVlVaQ1VsTjRSRkZWUmtSTVJWWkNVVlZOYzFFd1JrSlJlblJLVVZWT05GRjVlRVJSVlVaRVRFWldRbEZXVFhOVU1FWkNWSHAwVWxGVlRtMU1SV3hDVVZWcmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpWbFZHUWxaVGVFaFJWVVpJVEVVNVFsRlZPSE5TVlVaQ1VsUjBXbEZWVFRWUmFYaEtVVlZHU2t4RlRrSlJWVTF6VWpCR1FsSjVlRVJSVlVaRVRFVk9RbEZWVFhOWk1FWkNXWGw0UmxGVlJrWk1SbXhDVVZacmMxSlZSa0pTVTNodVVXdEdRbG93U1hOUk1FWkNVWGw0UkZGVlJrUlBNbXhEVVZWT01sSkRlRXBSVlVaS1RFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SVlpDVVZWTmMxTlZSa0pUVTNoR1VWVkdSa3hGT1VKUlZUaHpVbFZHUWxGNWVFUlJWVVpFVEVWT1FsRlZUVGRoVlVwQ1VYcE9RMHhGYkVKUlZXdHpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSTVJXUkNVVlZqYzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUwM1ZWVkdSRTFWU1hOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4xTlZSa1JVUTNoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNWVGSlJWVVpTVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlblJDVVZWT2MxRnBlRVJSVlVaRVR6QkdRbEl3VVhOVlZVWkNWVlIwUWxGVlRsTk1SV3hDVVZWcmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpWREJHUWxSNWVFWlJWVVpHVEVWT1FsRlZUWE5UVlVaQ1UxTjRSbEZWUmtaTVJYUkNVVlZ6YzFFd1JrSlJlWGhHVVZWR1JrOHdiRUpSTW1oRVRFVnNRbEZWYTNOUk1FWkNVWGw0VEZGVlJreE1SVTVDVVZWTmMxcFZSa0phVTNoR1VWVkdSa3hGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBTbEZWVG5kUmVYaEtVVlZHU2t4RlRrSlJWVTF6VXpCR1FsTjVlRVJSVlVaRVRFZGtRMUZWUm01UmFYaEdVVlZHUmt4RlRrSlJWVTF6VXpCR1FsTjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwUWxGVlRqUlJlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEVKUlZXUkpURVprUWxGV1l6ZFJWVVpFVjBONFNsRlZSa3BNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4Rk9VSlJWVGh6VWxWR1FsSlRlRVJSVlVaRVRFVnNRbEZWYTNOU1ZVWkNVbE40VEZGVlJreE1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRTh3UmtKUk1uaEVURVZzUWxGVmEzTlJNRVpDVVhsNFNsRlZSa3BNUlU1Q1VWVk5jMVV3UmtKVmVYaEdVVlZHUmt4RlRrSlJWVTF6VkRCR1FsUjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGxKYzBsdFduQmlSMVZwVDJsS2FHTXpUbXhrU0UxMlkwZEdhbUV6VFhaa1IxWXdZVWRXZVV3eVpERmlTRUp0WVZkNGJFeHRjSHBKYVhkcFl6STVNV050VG14ak1FNTJZbTVTYkdKdVVXbFBiSE5wWkcxR2VVbEhVbXhpUTBGblNVTkJaMGxEUVdkSlJEQm5ZMjFXZUdSWGJIbGFVMmR1V2tkV2MwcDVhemRZUnpVeVdWaEpaMW96Vm5OalEwRm5TVU5CWjBsRFFXZFFVMEo1V2xoR01XRllTbXhMUTJSdVpGZDRkMHA1YXpkWVJ6VXlXVmhKWjFsdFJtbGFWM2RuU1VOQlowbERRV2RRVTBKNVdsaEdNV0ZZU214TFEyUnVaRmQ0ZDB4WFNtaFpiVlp6U25sck4xaEhOVEpaV0VsbldXNVdkR05EUVdkSlEwRm5TVU5CWjFCVFFubGFXRVl4WVZoS2JFdERaRzVrVjNoM1RGZEtNV0pZUVc1TFZIUmpZbTVhYUdOcFFtcGlNalZxV1ZoUlowbERRV2RKUTBFNVNVaEtiR05ZVm5CamJWVnZTakprTVdKSVFYUlpNamwxV1RKR01FcDVhemRZUnpVeVdWaEpaMkZIVm1oYVIxWjVTVU5CWjBsRFFXZFFVMEo1V2xoR01XRllTbXhMUTJSdVpGZDRkMHhYYUd4WlYxSnNZMmxqY0U4eGVIVmtiVVo1U1VjeGNHSnRiRzFsVTBGblNVTkJaMGxFTUdkamJWWjRaRmRzZVZwVFoyNWFNMVp6WTBNeGRHRlhOWEJhYm10MFdUTk9la3A1YXpkWVJ6VXlXVmhKWjJOSGVERmlWMHBzWTJsQlowbERRV2RRVTBKNVdsaEdNV0ZZU214TFEyUnVaRmQ0ZDB4WVFuTmtWekZwV2xoSmJrdFVkR05pYmxwb1kybENkMk50Vm0xaFdHaHNZMmxCWjBsRFFUbEpTRXBzWTFoV2NHTnRWVzlLTW1ReFlraEJkRmxZVmpCaU0wSjVXbGRhY0dWSFZubEtlV3MzV0VjMU1sbFlTV2RqYlZaMVdWY3hiRWxEUVdkSlEwRm5VRk5DZVZwWVJqRmhXRXBzUzBOa2JtUlhlSGRNV0Vwc1ltMUdkRnBUWTNCUE1YaDFaRzFHZVVsSVZtNWlSMnh0WlZOQlowbERRV2RKUkRCblkyMVdlR1JYYkhsYVUyZHVXak5XYzJORE1URmFNbmh3V201cmJrdFVkR05pYmxwb1kybENlbGxZVG5wSlEwRm5TVU5CWjBsRFFUbEpTRXBzWTFoV2NHTnRWVzlLTW1ReFlraEJkR015Um5wamVXTndUekY0ZFdSdFJubEpTRlowV2tOQlowbERRV2RKUTBGblNVUXdaMk50Vm5oa1YyeDVXbE5uYmxvelZuTmpRekV6WTIxR2QweFlWblJhUTJOd1R6RjRkVmhITkhaTWVVSlhXVmhLY0ZsWFNuTmFXRTVqWW01YWFHTnBRbXRoV0U0d1VrZHNlVWxFTUdkS2VUUjJXa2RzZW1SRFl6ZFlSelV5V1ZoSloyTkhkRzVKUkRCblkyMVdlR1JYYkhsYVUyZHVUR2s1ZDFsWFRuSlpWMlJzVEcxd2VtSXlORzVMVkhSalltNWFhR05wUW1sWlZ6VjFXbGhKWjFCVFFtSktlVGh4U1ZOamMwbElRbkphZVRWMVdWY3hiRXhEUW5kaE1tTjFaRzFXZVdNeWJIWmlhWGRuU25sdmRsaEdlSFZLTVRCMVlXMDVjR0pwWjI1SlEyTndUekY0ZFdSdFJubEpTRlowV2tVNWQyUkhiSFppYmsxblVGTkNOMWhITkdkSlIxWTBZMGM1ZVdSSVRUWkpRMlJWV2xoU2IxcFlTVzVNUm5oMVNVTkNkVmxYTVd4ak0wSm9XVEpWTmtsRFpGVmFXRkp2V2xoSmJsaEhOVGxQTVhoMVdFYzFZMkpwT0haSlJVNXpXbGRHZFZoSE5XNWtWM2gzVEc1U2FHTXljMjlLTWs1eldsZEdkVXA1ZDJkYWJsWjFXVE5TY0dJeU5HOUxVMEkzV0VjMFowbEhVbXhpUXpWNlpWYzFha3RHZEd0aFdFNHdVa2RzZVZoVGF6ZFlSelU1UzFSMFkySnNlSFZZUnpSMlRIbENTMWxZV21oak1rNTVZVmhDTUZoSE5XNWtWM2gzVEc1U2FHTXljMjlLTW5CNlNubDNaMXB1Vm5WWk0xSndZakkwYjB0VFFqZFlSelJuU1Vka01XSklRWFZqTTBwcVMwWjBZMkpwUVdkSlEwRnVUR2s1ZW1OdFRYWmhiazEyWkZoU2NHSklUWFZoYmsxdVRFWjRkVWxEUVdkSlEyTjFURE5PZVZsNU9YRmplVGt3V2xoU2IxcFlTWFZoYmsxdVRFWjRkVWxEUVdkSlEyTjFURE5PZVZsNU9YRmplVGxxWWpJMWVtUklTbWhoVnpVd1RHMXdla3A1ZUdOaWFVRm5TVU5CYmt4cE9YcGpiVTEyWVc1TmRsbFhTakZrUnpGc1ltNVJkV0Z1VFc1TVJuaDFTVU5CWjBsRFkzVk1NMDU1V1hrNWNXTjVPWHBoUjJ4dFpFTTFjV041WkdOaWFVRm5XRk5zWTJKcFFXZEpRMEYxWTBkc2QxcFRhSGRpU0ZaMFdXMVdlVXREYTNCWVJ6Um5TVU5CWjB4dVFuQmpSMVZ2V1cxR2FWcFhkMjlMVTJ4alltbEJaMGxEUVhWalIyeDNXbE5vYW1JeU5XcFpXRkZ2U2pOU2JHUkhhR3hqYVRWeFkzbGpjRXRXZUhWSlEwRm5TVU0xZDJGWVFteExTRlowV2tOb01XSlhVbEJqU0ZKd1lqSTFla3RUYkdOaWFVRm5TVU5CZFdOSGJIZGFVMmh2V2xkR2ExcFlTVzlaYlVaMVltMVdlVXRUYkdOaWJIaDFTVU5CWjBsRE9IWkpSVGw1WVZka2NHSnRSbk5ZUnpSblNVTkJaMHh1UW5CalIxVnZXak5XYzJORE5XdGFXRTR3UzBkU2NHTXpVa1ZoV0VsblMzbEJia3d5Y0hwS2VXdHdXRWMxWTJKcFFXZEpRMEYyVEhsQ1RtRlhOWEJhYld4c1drWjRkVWxEUVdkSlF6VjNZVmhDYkV0SVZtNWlSMnh0WlZObmNFdFdlSFZKUTBGblNVTTFkMkZZUW14TFNFcHNZbTFHZEZwVGFEZGpNMVp0V20xc05FOXBRVzVNYlRGd1ltbGtPVXRUYkdOaWFVRm5TVU5CZFdOSGJIZGFVMmh1WkZkNGQweHRVbXhqTTFGdldrZHNlbVJGVW5CamFVRnlTVU5qZG1GdVRXNUxVMnMzV0VjMU9VdFVkR05pYkhoMVdFYzBka3g1UWtSVk1VNWpZbTFrTVdKSVFYVmtSMFo2WVhsbmJsa3pUbnBLZVhkbldtNVdkVmt6VW5CaU1qUnZTMU5DTjFoSE5HZEpSMlF4WWtoQmRXTXpTbXBMUTJOMVRETk9lVmw1T1dwak0wMTJTMmx2ZGt0cE5YcFpXRTU2U25sc1kySnBRV2RKUTBGMVkwZHNkMXBUYUhkaVNGWjBXVzFXZVV0RGEzQllSelJuU1VOQloweHVRbkJqUjFWdll6SkdlbU41WjNCTFZuaDFTVU5CWjBsRE5YZGhXRUpzUzBoQ2VWcFhXbkJsUjFaNVMwTnJjRmhITldOaWFVRm5TVU5CZGt4NVFsQmpiV3h1WVZjMWFHSkdlSFZKUTBGblNVTTFkMkZZUW14TFIyUXhZa2hCZFZwSFZucGtRMmhyWVZoT01GSkhiSGxKUTNOblNuazVhbU16VFc1TFUyeGpZbXg0ZFVsRFFXZEpRemgyU1VVeGNHSnRiRzFoVjFacldFYzBaMGxEUVdkTWJrSndZMGRWYjJKWGJIVmhWMW8xUzBOcmNGaEhOR2RKUTBGblRHNUNjR05IVlc5amJWWjFXVmN4YkV0SWRIcGtWMXB0WVZobk5rbERZM1ZpVjJ4MVNqTXdjRXRXZUhWSlEwRm5TVU0xZDJGWVFteExSMlF4WWtoQmRWcEhWbnBrUTJocllWaE9NRkpIYkhsSlEzTm5Tbms1YW1NelRXNUxVMnMzV0VjMU9VdFVkR05pYkhoMVdFYzBka3g1UWxkYVdFcDZZVmM1ZFVsSFNqRmlXRUpqWW01YWFHTnBRbGRTVmtwVVUxVTVUMVY1UVRsSlJuTnVZMGRHTUZreVoyNU1RMEZ1WWxkc2RXSXpTVzVNUTBGdVlsZEdjV0l6U1c1WVZIUmpZbTFhZG1OcFFXOWtiVVo1U1VkcloxQlRRWGRQZVVKd1NVUjNaMVpyVmxOVk1HeFFWR3hOZFdKSFZuVmFNMUp2VDNsQmNrc3lhM0JsTVhoMVNVTkJiMXB1Vm5WWk0xSndZakkwYjJSdFZubGpNbXgyWW1scloyVXhlSFZKUTBGblNVZGtNV0pJUVhWa1IwWjZZWGxuYm1SdFZubGpNbXgyWW1wdmJrbERjMmRrYlZaNVl6SnNkbUpwZDJkYWJsWjFXVE5TY0dJeU5HOUxVMEkzV0VjMFowbERRV2RKUTBKdVpGZDRkMHh1VG5sWmVXaGlTak5DYUZreWRHaGFNbFYxWVc1T2RtSnBZM05KUTJScFlqTmtiR05wTlhGak1qbDFTbmwzWjBveVRuWmlXRUoyWW0xV2RXUkROWEZqTWpsMVNqRXdjRmhITkdkSlEwRm5TVU5CWjBsRE5YZGhXRUpzUzBkS01XSllRVzlsTTFJMVkwZFZOa2xJV214amJrNXdZakkxT1V0VGJHTmlhVUZuU1VOQlowbERRV2RNYmtKd1kwZFZiMW96Vm5OalF6VnJXbGhPTUV0RFkzVktlV3R3VHpGNGRVbERRV2RKU0RCd1R6RjRkVWxEUWpsTFUyaFhVbFpLVkZOVk9VOVZNWFJ3V0ZOck4xaEhOVGxZUnpWallteDRkVXg1T0dkV01rWXdXVEpvWTJKdFpERmlTRUYxWkVkR2VtRjVaMjVrTWtZd1dUSm5ia3hEUW1KS01uQjZTbmwzWjBveVRucGplV1JrVEVOQ2JXUlhOV3BrUjJ4MlltbG5jRWxJZEdOaWFVRm5Xak5XYzJORE5UTlpXRkpxWVVObmJreHBPWHBqYlUxMllXNU5ka3RwYjNaTGFXTnpTVVp6Ym1GdVRXNVlVMnMzV0VjMFowbEhaREZpU0VGMVpESkdNRmt5WjI5S2VUUjJZek5LYWt3eVRucGplVGh4UzJrNGNVcDVkMmRYZVdScVl6Tk5ibGhUYXpkWVJ6VTVTMVIwWTJKc2VIVllSelIyVEhsQ1JWcFhXbWhrVjNnd1l6RjRkVm96Vm5OalF6VXdXVmhPY2t0RFpHbGtWMnh6V2tOamMwbEdjMjVoYmsxdVRFTkJibGt6VG5wS01UQndUekY0ZFZvelZuTmpRelV3V1ZoT2NrdERaR3RhVjFwb1pGZDRNRXA1ZDJkWGVXUnBaRmRzYzFwRFpHUkxWSFJqWW14NGRVbHNNVGxjYmx4dUx5OGpJSE52ZFhKalpVMWhjSEJwYm1kVlVrdzlaR0YwWVRwaGNIQnNhV05oZEdsdmJpOXFjMjl1TzJOb1lYSnpaWFE5ZFhSbU9EdGlZWE5sTmpRc1pYbEtNbHBZU25waFZ6bDFTV3B2ZWt4RFNucGlNMVo1V1RKV2VrbHFjR0pKYlVaNll6SldNR041T1hkWlYwNXlZM2s1TUZwWVVtOWFXRWwyV2pOV2MyTkhXbkJpUjFWMVlXNU5hVmhUZDJsaWJVWjBXbGhOYVU5c2RHUk1RMHAwV1ZoQ2QyRlhOVzVqZVVrMlNXdEdRbEZWUlhOVFZVWkNVMU40U0ZGVlJraE1SV1JDVVZWamMxUXdSa0pVZVhoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVFUlJWVVpFVHpCR1FsRXpjRU5NUld4Q1VWVnJjMU5WUmtKVFUzaElVVlZHU0V4Rk9VSlJWVGh6VVRCR1FsRjVlRTVSVlVaT1RFVk9RbEZWVFhOUk1FWkNVWHAwUWxGVlRYcFJhWGhLVVZWR1NreEZkRUpSVlhOelVqQkdRbEo1ZUZCUlZVWlFURVZPUWxGVlRYTlhWVVpDVjFONFJGRlZSa1JNUlU1Q1VWVk5OMUZWUmtSaVJVMXpVMVZHUWxOVGVFcFJWVVpLVEVWa1FsRlZZM05VTUVaQ1ZIbDRSRkZWUmtSTVJtUkNVVlpqYzFFd1JrSlJlWGhFVVZWR1JFOHdSa0pSTW1oRVRFVnNRbEZWYTNOVVZVWkNWRk40U0ZGVlJraE1SVGxDVVZVNGMxRXdSa0pSZVhob1VWVkdhRXhGVGtKUlZVMXpVVEJHUWxGNmRFSlJWVTUzVVhsNFNsRlZSa3BNUlRGQ1VWVXdjMUl3UmtKU2VYaFFVVlZHVUV4RlRrSlJWVTF6V1ZWR1FsbFRlRVJSVlVaRVRFVk9RbEZWVFRkUlZVWkVZMFZOYzFOVlJrSlRVM2hPVVZWR1RreEZaRUpSVldOelZEQkdRbFI1ZUVSUlZVWkVURWRzUTFGVlJuQlJhWGhFVVZWR1JFeEZUa0pSVlUwM1VWVkdSR1ZGVFhOVFZVWkNVMU40VUZGVlJsQk1SV1JDVVZWamMxUXdSa0pVZVhoRVVWVkdSRXhIVGtKUlYwMXpVVEJHUWxGNWVFUlJWVVpFVHpCR1FsRXpVa1JNUld4Q1VWVnJjMVZWUmtKVlUzaElVVlZHU0V4Rk9VSlJWVGh6VVRCR1FsRjVlSFJSYTBaQ1lsVkpjMUV3UmtKUmVYaEVVVlZHUkU4d1JrSlJlbFpFVEVWc1FsRlZhM05VVlVaQ1ZGTjRTRkZWUmtoTVJUbENVVlU0YzFFd1JrSlJlWGhvVVZWR2FFeEZUa0pSVlUxelVUQkdRbEY2ZEVKUlZVNTNVWGw0U2xGVlJrcE1SVEZDVVZVd2MxSXdSa0pTZVhoUVVWVkdVRXhGVGtKUlZVMXpXVlZHUWxsVGVFUlJWVVpFVEVWT1FsRlZUVGRSVlVaRVkwVk5jMU5WUmtKVFUzaEtVVlZHU2t4RlpFSlJWV056VkRCR1FsUjVlRVJSVlVaRVRFWmtRbEZXWTNOUk1FWkNVWGw0UkZGVlJrUlBNRVpDVVRKb1JFeEZiRUpSVld0elVqQkdRbEo1ZUVoUlZVWklURVU1UWxGVk9ITlJNRVpDVVhsNGJGRlZSbXhNUlU1Q1VWVk5jMUV3UmtKUmVuUkNVVlZPZFZGNWVGcFJWVVphVHpCR1FsRXhiM05UVlVaQ1UxTjRVRkZWUmxCTVJXUkNVVlZqYzFWVlJrSlZVM2hFVVZWR1JFOHdSa0pSTTFwRFRFVnNRbEZWYTNOU01FWkNVbmw0U0ZGVlJraE1SVGxDVVZVNGMxRXdSa0pSZVhodVVXdEdRbG93U1hOUk1FWkNVWGw0UkZGVlJrUlBNRVpDVVROQ1JFeEZiRUpSVld0elZGVkdRbFJUZUVoUlZVWklURVZPUWxGVlRYTlRNRVpDVTNsNFJsRlZSa1pNUldSQ1VWVmpjMUV3UmtKUmVYaEtVVlZHU2t4RlZrSlJWVlZ6VWpCR1FsSjVlRVJSVlVaRVRFVTVRbEZWT0hOU1ZVWkNVbE40VGxGVlJrNU1SVTVDVVZWTmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVakJHUWxKNWVFUlJWVVpFVEVWT1FsRlZUVGRSVlVaRVQxVlJjMU5WUmtKVFUzaFdVVlZHVmt4RlpFSlJWV00zVTFWR1JGbHBlRkJSVlVaUVRFVldRbEZWVlhOVlZVWkNWVlIwU2xGVlRuRlJhWGhVVVZWR1ZFeEZWa0pSVlZWelZWVkdRbFZVZEVSUlZVNHdVV2w0UkZGVlJrUlBNRVpDVVRCWmMxVlZSa0pWVkhSQ1VWVk9VMHhGYkVKUlZXdHpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5VTUVaQ1ZIbDRSbEZWUmtaUE1HeENVVEpaYzFJd1JrSlNlWGhFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY1ZUVSUlZVWkVURVU1UWxGVk9ITlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5OMUZWUmtSbFJVbHpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUVGRSVlVaRVUwTjRhRkZWUm1oUE1FWkNVVEpKYzFOVlJrSlRVM2hFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY1ZUVwUlZVWktURVZXUWxGVlZUZFRWVVpFVjJsNFNsRlZSa3BNUlU1Q1VWVk5jMUl3UmtKU2VYaEVVVlZHUkU4eFJrSlJNSGR6WWxWS1FsRlhNVU5QTVVaQ1VUSTFRMHhIT1VOUlZVWjJVV3AwVWxGVlRuZFJhWGd6VVd0R1FtUXdTVGRWVlVaRVpVVkpjMk13U2tKUldFNURUekZHUWxFelVrTk1SekZEVVZWR2RGRnFkRXhSVlU0d1VXbDRSRkZWUmtSUE1VNUNVVEJqYzFOVlJrSlRVM2hFVVZWR1JFeEZPVUpSVlRoelVsVkdRbEpUZUVSUlZVWkVUekZPUWxFeVdYTlRWVVpDVTFONFJGRlZSa1JNUlhSQ1VWVnpjMUpWUmtKU1UzaEVVVlZHUkU4eFRrSlJNa2x6VTFWR1FsTlRlRVJSVlVaRVRFVXhRbEZWTUhOUk1FWkNVWGw0V0ZGVlJsaE1SVTVDVVZWTmMxRXdSa0pSZW5SVVVWVk9ObEZwZUVwUlZVWktURVZPUWxGVlRYTlNNRVpDVW5sNFJGRlZSa1JNUmxaQ1VWWlZjMUV3UmtKUmVYaEVVVlZHUkU4eFRrSlJNMHBEVEVWc1FsRlZhM05STUVaQ1VYbDRUbEZWUms1TVJVNUNVVlZOYzFSVlJrSlVVM2hFVVZWR1JFeEZUa0pSVlUwM1ZUQkdSR05GU1hOVFZVWkNVMU40UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpWREJHUWxSNWVFaFJWVVpJVEVWMFFsRlZjM05STUVaQ1VYbDRSRkZWUmtSUE1VNUNVVEpvUkV4RmJFSlJWV3R6VVRCR1FsRjVlRTVSVlVaT1RFVldRbEZWVlhOUk1FWkNVWHAwVkZGVlRtdE1SV3hDVVZWcmMxRXdSa0pSZVhoT1VWVkdUa3hGVGtKUlZVMXpVbFZHUWxKVGVFNVJWVVpPVEVWV1FsRlZWWE5VVlVaQ1ZGTjRSbEZWUmtaTVJVNUNVVlZOYzFFd1JrSlJlblJVVVZWT2IxRjVlRXBSVlVaS1RFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoUVVWVkdVRXhGWkVKUlZXTnpVekJHUWxONWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBRbEZWVFhoUmVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjZkRUpSVlU1SlRFVXhRbEZWTURkUlZVWkVWR2w0U2xGVlJrcE1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGZEVKUlZYTnpVbFZHUWxKVWRFcFJWVTVwVEVWc1FsRlZhM05STUVaQ1VYbDRTRkZWUmtoTVJVNUNVVlZOYzJOVlNrSlJXRVpEVEVWT1FsRlZUVGRWTUVaRVRWVkpjMU5WUmtKVFUzaEVVVlZHUkV4Rk9VSlJWVGh6VWxWR1FsSlRlRVJSVlVaRVR6Rk9RbEV5V1hOVFZVWkNVMU40UkZGVlJrUk1SV3hDVVZWcmMxSlZSa0pTVTNoRVVWVkdSRTh4VGtKUk1XOXpVMVZHUWxOVGVFUlJWVVpFVEVaR1FsRldSWE5TVlVaQ1VsTjRSRkZWUmtSUE1VNUNVVEpvUTB4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SVGxDVVZVNGMxSXdSa0pTZVhoT1VWVkdUa3hGVGtKUlZVMXpVVEJHUWxGNmRGUlJWVTV4VVhsNFNsRlZSa3BNUlU1Q1VWVk5jMVJWUmtKVVUzaEdVVlZHUmt4RlRrSlJWVTAzVlRCR1JGcERlRXBSVlVaS1RFVk9RbEZWVFhOVVZVWkNWRk40UkZGVlJrUk1SVlpDVVZWVmMxUlZSa0pVVTNoR1VWVkdSa3hGTVVKUlZUQnpVbFZHUWxKVGVFUlJWVVpFVEVWT1FsRlZUVGRWTUVaRVlVVk5jMU5WUmtKVFUzaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOVU1FWkNWSGw0U0ZGVlJraE1SVEZDVVZVd2MxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMDNVVlZHUkUwd1RYTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5OMUZWUmtSVFEzaHNVVlZHYkU4d1JrSlJNbGx6VTFWR1FsTlRlRkpSVlVaU1RFVmtRbEZWWTNOUk1FWkNVWGw0VUZGVlJsQk1SVlpDVVZWVmMxUXdSa0pVZVhoR1VWVkdSa3hGT1VKUlZUaHpVVEJHUWxGNWVFUlJWVVpFVHpCR1FsRjZUa1JNUldSQ1VWVmpjMUV3UmtKUmVYaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRWhSVlVaSVRFVk9RbEZWVFhOU1ZVWkNVbE40UkZGVlJrUk1SV1JDVVZWamMxVlZSa0pWVTNoRVVWVkdSRXhGTVVKUlZUQnpVbFZHUWxKVGVFWlJWVVpHVEVWT1FsRlZUWE5TVlVaQ1VsTjRSRkZWUmtSUE1HeENVVE5hUkV4RlRrSlJWVTF6VmxWR1FsWlRlRkJSVlVaUVR6RkdRbEV5VVhOVFZVWkNVMU40UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoV1VWVkdWa3hGWkVKUlZXTnpWREJHUWxSNWVFWlJWVVpHVHpGc1FsRjZWa05NUld4Q1VWVnJjMUV3UmtKUmVYaElVVlZHU0V4RlRrSlJWVTF6VVRCR1FsRjVlR3BSVlVacVRFVldRbEZWVlhOWFZVWkNWMU40UmxGVlJrWk1SMlJEVVZWR2JsRnBlRVJSVlVaRVRFVk9RbEZWVFRkaFZVcENVVE5LUlV4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOU1ZVWkNVbE40U2xGVlJrcE1SVlpDVVZWVmMxUXdSa0pVZVhoR1VWVkdSa3hGVGtKUlZVMXpVVEJHUWxGNmRIQlJhMFpFVGpCSmMxTlZSa0pUVTNoRVVWVkdSRXhGYkVKUlZXdHpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5TTUVaQ1VubDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlblJTVVZWTk5WRnBlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwU2xGVlRsRk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhHUmtKUlZrVnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1FWkNVVE5DUTB4RlRrSlJWVTAzVVZWR1JGSkRlRkpSVlVaU1R6QkdRbEV4U1hOVFZVWkNVMU40UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoUVVWVkdVRXhGVmtKUlZWVnpVVEJHUWxGNWVFcFJWVVpLVEVWV1FsRlZWWE5UTUVaQ1UzbDRSRkZWUmtSTVJWWkNVVlZWTjFOVlJrUlBWVWx6VTFWR1FsTlRlRVJSVlVaRVRFVjBRbEZWYzNOUk1FWkNVWGw0YkZGVlJteE1SVlpDVVZWVmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVHpCc1FsRXpRa1JNUld4Q1VWVnJjMUV3UmtKUmVYaE1VVlZHVEV4RlRrSlJWVTF6V2pCS1FsRlhaRU5NUlZaQ1VWVlZjMUV3UmtKUmVYaE1VVlZHVEV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVR6QkdRbEY2UmtSTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFOHdSa0pSTUdkelZqQkdRbFo2ZEVKUlZVNVpURVZzUWxGVmEzTlJNRVpDVVhsNFNsRlZSa3BNUlU1Q1VWVk5jMVF3UmtKVWVYaEdVVlZHUmt4RlRrSlJWVTF6VTFWR1FsTlRlRVpSVlVaR1RFVjBRbEZWYzNOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4xRlZSa1JpUlUxelUxVkdRbE5UZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFZGRlZSbFJNUlZaQ1VWVlZjMUV3UmtKUmVYaFFVVlZHVUV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVR6QkdRbEpYYUVSTVJFa3hWR3RHUWsxcVZrOUphWGRwV20xc2MxcFRTVFpKYlVaNll6SldNR041T1hkWlYwNXlZM2s1TUZwWVVtOWFXRWwyV2pOV2MyTkhXbkJpUjFWMVlXNU5hVXhEU25waU0xWjVXVEpXZWxFeU9YVmtSMVoxWkVOSk5sZDVTakpaV0VsbldrZFdjMGxFTUdkamJWWjRaRmRzZVZwVFoyNWFSMVp6U25sck4xaEhOVEpaV0VsbldqTldjMk5EUVRsSlNFcHNZMWhXY0dOdFZXOUtNbVF4WWtoQmJrdFVkR05pYmxwb1kybENhVmxYU214aVEwRTVTVWhLYkdOWVZuQmpiVlZ2U2pKa01XSklRWFJaYlVacFdsZDNia3RVZEdOaWJscG9ZMmxDYVdSWE1YZEpSREJuWTIxV2VHUlhiSGxhVTJkdVdqTldjMk5ETVdsa1Z6RjNTbmxyTjFoSE5USlpXRWxuV1RJNWRWa3lSakJKUkRCblkyMVdlR1JYYkhsYVUyZHVXak5XYzJORE1XcGlNalZxV1ZoUmJrdFVkR05pYmxwb1kybENiMXBYUm10YVdFbG5VRk5DZVZwWVJqRmhXRXBzUzBOa2JtUlhlSGRNVjJoc1dWZFNiR05wWTNCUE1YaDFaRzFHZVVsSE1YQmliV3h0WlZOQk9VbElTbXhqV0Zad1kyMVZiMG95WkRGaVNFRjBZbGRzZFdGWFdqVk1WMDU2WTNsamNFOHhlSFZrYlVaNVNVaENjMlJYTVdsYVdFbG5VRk5DZVZwWVJqRmhXRXBzUzBOa2JtUlhlSGRNV0VKelpGY3hhVnBZU1c1TFZIUmpZbTVhYUdOcFFuZGpiVlp0WVZob2JHTnBRVGxKU0Vwc1kxaFdjR050Vlc5S01tUXhZa2hCZEZsWVZqQmlNMEo1V2xkYWNHVkhWbmxLZVdzM1dFYzFNbGxZU1dkamJWWjFXVmN4YkVsRU1HZGpiVlo0WkZkc2VWcFRaMjVhTTFaelkwTXhlVnBYTldoaVYxVnVTMVIwWTJKdVdtaGphVUl4V2pKNGNGcHVhMmRRVTBKNVdsaEdNV0ZZU214TFEyUnVaRmQ0ZDB4WVZtNWlSMnh0WlZOamNFOHhlSFZrYlVaNVNVaE9hR016VFdkUVUwSjVXbGhHTVdGWVNteExRMlJ1WkZkNGQweFlUbWhqTTAxdVMxUjBZMkp1V21oamFVSXhZbGRSWjFCVFFubGFXRVl4WVZoS2JFdERaRzVrVjNoM1RGaGtlVmxZUVhSa1Z6RnJTbmxyTjFoSE5IWk1lVUpYV1ZoS2NGbFhTbk5hV0U1alltNWFhR05wUW10aFdFNHdVa2RzZVVsRU1HZEtlVFIyV2tkc2VtUkRZemRZUnpVeVdWaEpaMk5IZEc1SlJEQm5ZMjFXZUdSWGJIbGFVMmR1VEdrNWQxbFhUbkpaVjJSc1RHMXdlbUl5Tkc1TFZIUmpZbTVhYUdOcFFtbFpWelYxV2xoSloxQlRRbUpLZVRoeFNWTmpjMGxJUW5KYWVUVjFXVmN4YkV4RFFuZGhNbU4xWkcxV2VXTXliSFppYVhkblNubHZkbGhHZUhWS01UQjFZVzA1Y0dKcFoyNUpRMk53VHpGNGRXUnRSbmxKU0ZaMFdrVTVkMlJIYkhaaWJrMW5VRk5DTjFoSE5HZEpRMEZuV2xob2QySXpTakJqZW05blNqRlNiR1JIYUd4amFXTnpXRWMwWjBsRFFXZGliVVowV2xoT2QxbFhUbXhQYVVGdVZrZFdNR0ZIVm5sS01YaDFabFIwWTJKcE9IWkpSVTV6V2xkR2RWaEhOVzVrVjNoM1RHNVNhR015YzI5S01rNXpXbGRHZFVwNWQyZGFibFoxV1ROU2NHSXlOR2RMUTJ0blpURjRkVWxEUVdkSlIxSnNZa00xZW1WWE5XcExSblJyWVZoT01GSkhiSGxZVTJzM1dFYzFPVXRVZEdOaWFUaDJTVVZ3YUdSdFJucFpNMHB3WTBoU1kySnRaREZpU0VGMVpFZEdlbUY1WjI1aGJrMXVURU5DYldSWE5XcGtSMngyWW1sQmIwdFRRamRZUnpSblNVTkJaMW96Vm5OalF6VjZZMjFOYjFjeGVIVkpRMEZuU1VOQlowbERRVzVNYVRsNlkyMU5kbUZ1VFhaa1dGSndZa2hOZFdGdVRXNU1SbmgxU1VOQlowbERRV2RKUTBGdVRHazVlbU50VFhaaGJrMTJaRWRXTUdGSFZubE1iWEI2U25sNFkySnBRV2RKUTBGblNVTkJaMHA1Tkhaak0wcHFUREp3ZWt3eVRuWmliazR3WTIxR2NHSnVVWFZoYmsxdVRFWjRkVWxEUVdkSlEwRm5TVU5CYmt4cE9YcGpiVTEyWVc1TmRsbFhTakZrUnpGc1ltNVJkV0Z1VFc1TVJuaDFTVU5CWjBsRFFXZEpRMEZ1VEdrNWVtTnRUWFpoYmsxMll6Sm9jRnB1VVhWaGJrMXVXRWMwWjBsRFFXZFlVMnhqWW1sQlowbERRV2RKUTBGblRHNUNjR05IVlc5alIzZ3hZbGRLYkdOcFozQkxWbmgxU1VOQlowbERRV2RKUTBGMVkwZHNkMXBUYUdsWlYwcHNZa05uY0V0V2VIVkpRMEZuU1VOQlowbERRWFZqUjJ4M1dsTm9hbUl5TldwWldGRnZTak5TYkdSSGFHeGphVFZ4WTNsamNFdFdlSFZKUTBGblNVTkJaMGxEUVhWalIyeDNXbE5vTVdKWFVXOWtWekZyVkROQ01HRlhPWFZqZVd0d1dFYzBaMGxEUVdkSlEwRm5TVU0xZDJGWVFteExSMmhzV1ZkU2JHTnBhR2xaVnpWMVdsaEpjRXRXZUhWSlEwRm5TVU5CWjBsRFFYVmpSMngzV2xOb2JtUlhlSGRNYlZKc1l6TlJiMXBIYkhwa1JWSndZMmxCY2tsRFkzWmhiazF1UzFOc1kySnBRV2RKUTBGblNVTkJaMHh1UW5CalIxVnZaRmRrYzJGWFdqVkxRMnR3V0VjMFowbERRV2RKUTBGblNVTTFkMkZZUW14TFNFcHNZbTFHZEZwVGFEZEpTRTR4V20xYWNHVkViMmRLZVRWMFlWYzBia2xJTUhCTFZuaDFTVU5CWjBsRFFXZEpRMEYxWTBkc2QxcFRhRzVrVjNoM1RHMVNiR016VVc5YVIyeDZaRVZTY0dOcFFYSkpRMk4yWVc1TmJrdFRhemRZUnpVNVMxUjBZMkpwT0haSlJVNVVWVEY0ZFZvelZuTmpRelV3V1ZoT2NrdERaR3BqTTAxdVRFTkNiV1JYTldwa1IyeDJZbWxCYjB0VFFqZFlSelJuU1VOQloxb3pWbk5qUXpWNlkyMU5iMHA1Tkhaak0wcHFUREpPZW1ONU9IRkxhVGh4VEc1T2FHTXpUVzVMVm5oMVNVTkJaMGxEUVdkSlEwRjFZMGRzZDFwVGFIZGlTRlowV1cxV2VVdERhM0JZUnpSblNVTkJaMGxEUVdkSlF6VjNZVmhDYkV0SVRtaGpNMDF2UzFOc1kySnBRV2RKUTBGblNVTkJaMHh1UW5CalIxVnZZMGhLYkZwdGJEUmFXRWx2UzFOc1kySnBRV2RKUTBGblNVTkJaMHh1UW5CalIxVnZXak5XYzJORE5XdGFXRTR3UzBkU2NHTXpVa1ZoV0VsblMzbEJia3d5VG5wamVXTndTMVo0ZFVsRFFXZEpRMEZuU1VOQmRXTkhiSGRhVTJoMFlWYzFjRnB1YTI5TFUyeGpZbWxCWjBsRFFXZEpRMEZuVEc1Q2NHTkhWVzlqYlZaMVdWY3hiRXRJYzJkak0xWnRXbTFzTkU5cFFXNU1iVEZ3WW1saloyWlRhM0JZUnpSblNVTkJaMGxEUVdkSlF6VjNZVmhDYkV0SFpERmlTRUYxV2tkV2VtUkRhR3RoV0U0d1VrZHNlVWxEYzJkS2VUbHFZek5OYmt0VGF6ZFlSelU1UzFSMFkySnBPSFpKUmxwc1kyNU9jR0l5TkdkWmJsWjBZMFo0ZFdSdFJubEpSbHBHVld4T1NsUXdOVlJKUkRCblYzbGtkMWxZVW1waFEyTnpTVU5rZEdGWE5YWmphV056U1VOa2RGbFhjSFpqYVdSa1R6RjRkVnB0T1hsSlEyZ3lXVmhKWjJGVFFUbEpSRUUzU1VkcloxQkRRbGRTVmtwVVUxVTVUMVY1TlhOYVZ6VnVaRWRuTjBsRGMzSmhVMnRuWlRGNGRVbERRV2RKUTJodFpGYzFhbVJIYkhaaWFVRnZaRzFXZVdNeWJIWmlhV3RuWlRGNGRVbERRV2RKUTBGblNVTkNibVJYZUhkTWJsSm9Zekp6YjBveldteGpiazV3WWpJME5rcDVRWEpKU0Zwc1kyNU9jR0l5TkhOSlIxb3hZbTFPTUdGWE9YVkpRMmR3U1VoMFkySnBRV2RKUTBGblNVTkJaMGxEUVdkSlIyUXhZa2hCZFdNelNtcExSbk51WTBkR2FtRXlSbTVhVXpWeFl6STVkVXA1ZDJkS01rcDJaREpXZVV4dGNIcGlNalJ1VEVOQmJsa3lPWFJqUnpsMVdsYzFNRXh0Y0hwaU1qUnVXRk5zWTJKcFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJkV05IYkhkYVUyaHBaRmN4ZDB0SWMyZGtTR3gzV2xSdloyUnRWbmxqTW14MlltbENPVXRUYkdOaWFVRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRWFZqUjJ4M1dsTm9ibVJYZUhkTWJWSnNZek5SYjBwNU5HNUxVMnMzV0VjMFowbERRV2RKUTBGblNVZ3djRTh4ZUhWSlEwRm5TVWd3Y0V0R1drWlZiRTVLVkRBMVZGY3liR1JMVkhSalltNHhZMkpwT0haSlJtUm9aRWRPYjFoSE5XNWtWM2gzVEc1U2FHTXljMjlLTTJSb1pFZE9iMHA1ZDJkWGVXUnhZM2xqYzBsRFpHcGpNMDF1V0ZOM1oxcHVWblZaTTFKd1lqSTBaMHREYTJkbE1YaDFTVU5CWjBsSFpERmlTRUYxWkRKR01Ga3laMjlLZVRSMll6Tktha3d5Y0hwTWVXOXhUSGx2Ymt4RFFtSktNbkI2U2pFd2NFOHhlSFZKUTBGblNVZGtNV0pJUVhWa01rWXdXVEpuYjBwNU5IWmpNMHBxVERKT2VtTjVPSEZMYVRoeFNubDNaMWQ1Wkdwak0wMXVXRk5yTjFoSE5UbExWSFJqWW1rNGRrbEZVbXhhYlVZeFlraFNlbGhITlc1a1YzaDNURzVTYUdNeWMyOUtNa294WVZkNGEwcDVkMmRYZVdSeFkzbGpjMGxEWkdwak0wMXVXRk5yTjFoSE5XNWtWM2gzVEc1U2FHTXljMjlLTWxKc1dtMUdNV0pJVVc1TVEwSmlTakpLTVdGWGVHdEtNVEJ3VHpGNGRWaEhOSFpNZVUxbll6STVNV050VG14VVYwWjNZMGRzZFZveFZsTlVSREZyV1ZoU2FFOXRSbmRqUjNod1dUSkdNR0ZYT1hWTU1uQjZZakkwTjFreWFHaGpiazVzWkVReE1XUkhXVFJQTWtwb1l6SlZNazVEZUd4bFZXOTVWMnhvUzJWdFJsaFBXRlpLWVcwNU5sUkZUa3RsYlVsNlZtNXNXazFzV2paVFYzQjNXV3RzZEZKdWNHcE5iRmwzV1ROck5XUXhiRmhVYmtwcVpWUnJkMWRzYUZOaU1YQlpVMWhhWVUweFducFpNR1JoWTBkS1NGWllWbWhpYXpGd1YwWk9NMkZYU25SU2JsSmhWMFV4Y0ZReWVEQmFSWGhFVTI1U1dsZEZTak5aVm1NeFltMU9OVk5VV2twaE1GcERWVlpXUm1NeFRsWlNhMHBVVlROb1NWVldWa2RUUlhoR1drVktVbFp0VG5wV1JFSkhVV3hTTldWRlVsSldWVnBGVkVWV01GRnNSbFpqTTA1U1RVVmFRMVZZYkRSU1JrWldVbXRTVUUxRldrTlZWRXAzVWtWNFJtSkZTbEpXVjNSNlZURldSMUZzVGxSbFJXaFNWbFZhVjFSRlZUVlJiRVpXVDBoT1VrMUZXa05WV0d3MFZHeEdWbEpyTlUxU1ZUVkRWVlpXVG1NeFJYZFNhMHBTWlc1U1ExVldWazlqTVVZMVpVVndVbFpWV2t0VVJWWXdVV3hHVm1NelRsTk5SVnBEVmxoc05GVkdSbFpTYkVKTlVsVTFRMVZXVms1ak1XUldVbXRLV0ZVemFFVlZWbFpIVWtWNFJsUnJTbEpXVlRBelZWWldSMUpIVmtaVVdFNVVWbFZhUTFVeFRqUlRiRVpXVW10d1RWSlhVa05WVmxwV1l6RlJkMUpyU2xWbFdHaEZWVlpXUjFKRmVFZGFSVXBTVm0xT2VsVlVRa2RSYkVZMVpVVlNVbFpWV2tWVWVrSkhVV3hGZWxkclVrMVNWM2hEVlZaV2NtTXhVbFpTYTBwVlZUTm9TVlZXVmtkVmEzaEdUMVZLVWxaVWFIcFZWRUpIVVd4R05XVkhhRkpXVlZwdlZFVldUMUZzUmxaVVdFNVNUVVZhUTFWWWNEQlJiRVpXVkdwYVVtVllhRXRWVmxaSFUydDRSazFWU2xKV1ZFSjZWV3BDUjFGc1ZsUmxSa0pTVmxWYVVWUkZWazlSYkVaV1ZGaE9XbFpWV2tOWFZrNDBVa1pHVmxKclVrMVNWVFZEVlZaV1RrNHhSbFpTYTFKc1lUQXhlbFV4VmtkUmJFNVVaVVUxVWxaVldrOVVSVlpyVVd4R1YxSllUbFZOUlZwRFZraHNORkpHUmxaU2ExSk5Vako0UkZWV1ZrZGpSa1p3WlVWU1VsWlZXa1ZVUlZaUFVXeEdWbFJVWkZKV1ZWcEZWR3BDVG1NeFRsWlNhMHBVVlROb1VWVldWa2RWUlhoR1drVktVbFpVYUhwV1JFSkhVV3hTTldWRlVsSldWVnBGVkVWa1QxRnNSbGhVV0U1U1RVVmFRMVZZYkRSU1JrWldVbXRTVUUxRldrTlZXSEJIVWtWNFJtSkZTbEpXVjNSNlZsWldSMUZzVmxSbFJXaFNWbFZhVDFSRlZUVlJiRVpXVDBoT1VrMUZXa05WV0d3MFpFWkdjbEpyU21sV1ZXeDZWVlJDUjFGc1JqVmxSVkpTVmxWYVJWUjZRa2RSYkVZMVQxVlNUVkpYZUVOVlZsWnlZekZTVmxKclNsVlZNMmhKVlZaV1IxVnJlRVpQVlVwU1ZsUm9lbFZVUWtkUmJFWTFaVWRvVWxaVldtOVVSVlpQVVd4R1ZsUllUbEpOUlZwRFZWaHdNRkZzUmxaVWFscFNaVmhvUzFWV1ZrZFRhM2hHVFZWS1VsWlVRbnBWYWtKSFVXeFdWR1ZHUWxKV1ZWcFJWRVZXVDFGc1JsWlVXRTVhVmxWYVExZFdUalJTUmtaV1VtdFNUVkpWTlVOVlZsWk9UakZHVmxKclVteGhNREY2VlRGV1IxRnNUbFJsUlhCU1ZsVmFTMVJGVm10UmJFWlhWbGhPVlUxRldrTldTR3cwVWtaR1ZsSnJVazFTYlZKRFZWWmFhbU14UlhkU2EwcFNaVmhvUlZWV1ZrZFNSVGgzVW10S1VrMHhjRVZVUlZaelVXeEdWbUV6VGxOTlJWcERWVzVzTkZOR1JsWlNiR2hOVWxSc1ExVldWVFJqTVVWM1VtdEtVbVZZYUhOVlZsWkhZa1Y0UmxSclNsSldWVEY2VlZSQ1IxRnNSalprUlVwU1ZsWldObFZZYkRSWGJFWldVbXh3VUUxRldrTlZWRVoyWXpGT1ZsSnJTbFJWTTJoUlZWWldSMVZGZUVaYVJVcFNWbGRPZWxaV1ZrZFJiRlpVWlVWU1VsWlZXa1ZVZWtKSFVXeEZlbGRyVGsxU1YzaERWVlpXY21NeFNYZFNhMHBUWlZob1NWVldWa2RUUlhoR1QxVktVbFpVYUhwVlZFSkhVV3hHTldWSE5WSmhNRnBEVjJwQ1NtTXhSWGRTYTBwU1pWaG9SVlZXVmtkU1JUaDNVbXRLVWswd1NrVlVSVlp6VVd4R1ZtRXpUbFZXVlZwRFZrWk9ORk5HUmxaU2EyaE5VbFUxUTFWV1ZrNWpNVTEzVW10S1ZHVllhRWRWVmxaSFVtdDRSbHBGU2xKV1YwNTZWVlJDUjFGc1JqVmxSWEJTVmxWYVMxUkZWbGRSYkVaV1ZsaE9VMDFGV2tOVmJtdzBVa1pHVmxKclVrMVNWR3hEVlZaVk5HTXhTbFpTYTBwVFZUTm9UMVZXVmtkVWEzaEdWR3RLVWxaVk1YcFZWRUpIVVd4R05XVkZjRkpXVlZwTFZFVldUMUZzUmxaVVdFNVRUVVZhUTFWdWJEUlNSa1pXVW10U1RWSlZOVU5WVmxaT1RqRkdWbEpyVWxCV1ZrWjZWVEZXUjFGc1RsUmxSbHBTVmxWYVYxUkZWbXRSYkVaV1dYcGtWRlpWV2tWWGJXdzBWVVpHVmxKc1FrMVNWbHBEVlZaV1ZtTXhWbFpTYTBwV1ZraFNTMVZXVms5alZrWndaVVpTVWxaVldsVlVSVlpYVVd4R1ZsWllUbFpXVlZwRFZsWlNNRkpHUmxaVWJtUlNZVmhvUlZWV1ZrZFNSVGgzVW10S1UwMUdiSHBXVmxaSFVXeFdWV1JGU2xKV1ZUVlVWRVZXYzFGc1JsWmhNMDVTVFVWYVExVlliRFJUYkVaV1VtdHdUVkpWTlVOVlZsWk9ZekZSZDFKclNsVmxXR2hIVlZaV1IxSnJPSGRpUlVwU1RXNUNSRlJGVm10UmJFWldXVE5PVWsxRldrTlZXR3cwVTJ4R1ZsSnJjRTFTVlRWRFZWWldUbU14UlhkU2EwcFNaVmhvVVZWV1ZrZFZSWGhHVkd0S1VsWlZNWHBWVkVKSFVXeEdOV1ZGVWxKV1ZWcEZWSHBDUjFGc1JYcFZhMDVOVWxVMVExVldWazVqTVVWM1VtdEtVbVZZYUVWVlZsWkhVa1U0ZDFKclNsTk5SMlI2VjFaV1IxRnNiRlZrUlVwU1ZsVTFjRlJGVm5OUmJFWldZVE5PVWsxRldrTlZXR3cwVTJ4R1ZsSnJjRTFTVlRWRFZWWldUbU14VGxaU2EwcFVWVE5vUjFWV1ZrZFNhemgzWWtWS1VrMXNSbnBWTVZaSFVXeE9WR1ZGVWxKV1ZWcEZWRVZXYTFGc1JsWlpNMDVTVFVWYVExVlljREJWYkVaV1ZHeEdUVko2UmtSVlZsWkhaRVpHY1dSR1NsSldWVFV4VlZkc05HUnNSbkpTYTBwcFRVVnJNMVpXVmtkU1IwNUdVMWhPYTAxRmNFTlZWbWhyVVRBNGVGSnJTbEpOTW1oRVZFVm9UMUV4UmxaU2JuQlNZVzVTVTFWV1ZrOU5Sa1p3WlVoU1VtRXdXa05aYkZaS1RqRk5kMUpyVW1wU1ZXeDZWVlJDUjFGc1JqWmtSbEpTVmxVMVJWUkZWbk5SYkVaV1lUTk9VazFGV2tOVldHdzBWVVpHVmxKc1FrMVNWbHBEVlZaV1ZtTXhSWGRTYTBwU1pXNVNWVlZXVms5aVZYaEdZa1ZLVWxaWGRIcFZWRUpIVVd4R05XVkZlRkpXVlZwTlZFVldWMUZzUmxaV1dFNVNUVVZhUTFWWWNEQldSa1pXVkcxc1RWSlhlRU5WVmxaeVl6RkZkMUpyU2xKbFdHaFBWVlpXUjFScmVFWlVhMHBTVmxVeGVsWnFRa2RSYkZvMVpVVlNVbFpWV2tWVVJWWlBVV3hHVmxSVVpGWk5SVnBGV2xkMFNtTXhUbFpTYTBwVVZUTm9SVlZXVmtkU1JYaEdXa1ZLVWxaWFRucFZWRUpIVVd4R05XVkdXbEpXVlZwWFZFVldUMUZzUmxaVVdFNVNUVVZhUTFWWWNEQldSa1pXVkc1c1VtRllhRXRWVmxaSFUydDRSbFJyU2xKV1ZURjZWa1pXUjFGc1VsUmxSVkpTVmxWYVJWUkZWWGhSYkVaV1RVaE9VazFGV2tOVldHdzBVa1pHVmxKclVsQk5WVFZEVldwT1ExRXdlRVppUlVwU1ZsZDBlbFZVUWtkUmJFWTFaVVZ3VWxaVldrdFVSVlpQVVd4R1ZsUllUbFJXVlZwRFZURk9ORkpHUmxaU2ExSk5VbFJzUTFWV1ZUUmpNVWwzVW10S1UyVllhRTFWVmxaSFZFVjRSbFJyU2xKV1ZURjZWVlJDUjFGc1JqWmtSbEpTVmxkU2RsVlliRFJUYkVaV1VtdHdUVkpWTlVOVlZsWk9ZekZTVmxKclNsVlZNMmhIVlZaV1IxSnJlRVpVYTBwU1ZsVXdNMVpVUWtkU1JuQkVaVVZ3VWxaVldrdFVSVlpQVVd4R1ZsUllUbFZXVlZwRFZrWk9ORkpHUmxaU2ExSk5VbFphUTFWV1ZrNWpNVkpXVW10S1ZWVXphRWRWVmxaSFVtdDRSazFWU2xKV1ZFSjZWV3hXUjFGc1JqVmxSVkpTVmxWYVJWUkZWazlSYkVaV1ZGUmtWazFGV2tWVU1WWktZekZPVmxKclNsUlZNMmhGVlZaV1IxSkZlRVppUlVwU1ZsZDBlbFZVUWtkUmJFWTFaVVZ3VWxaVldrdFVSVlpQVVd4R1ZsUllUbFZOUlZwRFZraHNORk5HUmxaU2EyaE5VbGhTUTFWV1ZucGpNVVYzVW10S1VtVllhRVZWVmxaSFVrVjRSbFJyU2xKV1ZUQXpWVlpXUjFKSFVrWlVXRTVTVFVWYVExVlliRFJTUmtaV1VtdFNUVkpWTlVOVlZsWk9UakZHVmxKcmFGUlJNMmhQVlZaV1IxUnJPSGRTYTBwU1RVUlNlbFV4VmtkUmJFNVVaVVZTVWxaVldrVlVSVlp6VVd4R1ZtRXpUbEpOUlZwRFZWaHNORlJHUmxaU2EzaE5VbFphUTFWV1ZsWk9NVTVXVW10U1lXRllhRXRWVmxaSFUydDRSbFJyU2xKV1ZURjZWV3BDUjFGc1NqVmxSVkpTVmxWYVJWUkZhRWRSTVVaV1VtNW9VbUZZYUVWVlZsWkhVa1U0ZUZSclNsSmxiRnBFVkVWV2MxRnNSbFpoTTA1U1RVVmFRMVZZYkRSVlJrWldVbXhDVFZKV1drTlZWbFpXWXpGRmQxSnJTbEpsYmxKVlZWWldUMkpWZUVaaVJVcFNWbGQwZWxWVVFrZFJiRVkxWlVWd1VsWlZXa3RVUlZaWFVXeEdWbFpZVGxKTlJWcERWVmh3TUZaR1JsWlViVVpOVWxkNFExVldWbkpqTVVWM1VtdEtVbVZZYUZOVlZsWkhWV3Q0UmxaclNsSldWbFo2VlZSQ1IxRnNSalprUmxKU1ZsZFNkbFZYYkRSVGJFWldVbXR3VFZKVk5VTlZWbFpPWXpGT1ZsSnJTbFJWTTJoRlZWWldSMUpGZUVaaVJVcFNWbGQwZWxWVVFrZFJiRVkxWlVaQ1VsWlZXbEZVUlZaclVXeEdWbGt6VGxWV1ZWcERWa1pPTkZKR1JsWlNhMUpOVWxVMVExVldWazVPTVZWM1VtdG9hR0V3TVhwVk1WWkhVV3hPVkdWRlVsSldWVnBGVkVWVmVGRnNSbFpOU0U1VFZsVmFRMVZzVGpSU1JrWldVbXRTVUUxVk5VTlZWRXBTWXpGT1ZsSnJTbFJWTTJoRlZWWldSMUpGZUVaTlZVcFNWbFJDZWxWVVFrZFJiRVkxWlVWYVVsWlZXa1ZVUlZWNFVXeEdWazFJVGxOV1ZWcERWV3hPTkZSc1JsWlNhelZOVWxaYVExVldWazVqTVVWM1VtdEtVbVZZYUVWVlZsWkhVa1U0ZUZSclNsSmxiWGhFVkVWV2MxRnNSbFpoTTA1U1RVVmFRMVZZYkRSVGJFWldVbXR3VFZKVk5VTlZWbFpPWXpGT1ZsSnJTbFJWTTJoRlZWWldSMUpGZUVaUFZVcFNWbFJvZWxWcVFrZFJiRW8xWlVVMVVsWlZXazlVUlZaUFVXeEdWbFJZVGxKTlJWcERWVmhzTkZKR1JsWlNhMUpRVFVWYVExVlVUbUZTUlhoR1ZHdEtVbFpWTVhwVlZFSkhVV3hHTldWRlVsSldWVnBGVkhwQ1IxRnNTWGRhTTA1aFZsVmFRMWRzVWpCUmJFWldWRzB4VFZKWGVFTlZWbFp5WXpGV1ZsSnJTbFpWTTJoSlZWWldSMU5GZUVaVWEwcFNWbFV4ZWxaRVFrZFJiRkkxWlVWYVVsWlZXa2RVUlZVMVVXeEdWazlJVGxOV1ZWcERWV3hPTkZWR1JsWlNiRUpOVWxVMVExVldWazVqTVVWM1VtdEtVbVZ1VWtOVlZsWk9aV3hHTldWRmFGSldWVnBKVkVWV1QxRnNSbFpVV0U1U1RVVmFRMVZZYkRSVGJFWldVbXR3VFZKVk5VTlZWbFpPWXpGSmQxSnJTbE5sV0doRlZWWldSMUpGZUVaV2EwcFNWbFpXZWxWVVFrZFJiRVkxWlVWb1VsWlZXa2xVUlZwSFVXeEdWMUpZVGxKTlJWcERWVmhzTkZSc1JsWlNhelZOVWxaYVExVldWbFpqTVVwV1VtdEtVMVV6YUVWVlZsWkhVa1Y0UmxaclNsSldWVEY2VlZSQ1IxRnNSalprUlhCU1ZsVTBNRlZZYkRSU1JrWldVbXRTVFZKc1drTlZWbHBPWXpGUmQxSnJTbFZsYmxKVFZWWldUMkpWZUVaaVJVcFNWbGQwZWxWVVFrZFJiRVkxWlVWd1VsWlZXa3RVUlZaUFVXeEdWbFJZVGxkV1ZWcERWbXhPTkZOR1JsWlNhMmhOVWxSc1ExVldWVFJqTVVwV1VtdEtVMVpJVW1GVlZsWk9UbFpHY0dWRmNGSldWVnBMVkVWV1QxRnNSbFpVV0U1VFRVVmFRMVZ1YkRSU1JrWldVbXRTVFZKVk5VTlZWbFpPWXpGcmQxSnJTbHBsV0doSFZWWldSMUpyZUVkaVJVcFNWbTEwZWxWc1ZrZFJiRXBVWlVjMVVtRXdXa05YYWtKS1l6RkZkMUpyU2xKbFdHaEZWVlpXUjFKRk9IbGlSVTVTVmxVMGVWVnJUalJUYkVaV1VtdHdUVkpWTlVOVlZsWk9ZekZPVmxKclNsUlZNMmhGVlZaV1IxSkZlRVpXYTBwU1ZsVXhlbFV4VmtkUmJFNVVaVVZhVWxaVldrZFVSVlUxVVd4R1ZrOUlUbE5XVlZwRFZWaHNORkpHUmxaU2ExSk5VbFUxUTFWV1ZrNU9Na1pXVTJ0S1VtVnJOVVJVUlZaelVXeEdWbUV6VGxKTlJWcERWVmhzTkZOc1JsWlNhM0JOVWxVMVExVldWazVqTVU1V1VtdEtWRlV6YUVWVlZsWkhVa1Y0UmxwRlNsSldWMDU2VlZSQ1IxRnNSalZsUlZKU1ZsVmFSVlJGVms5UmJFWldWRlJrVmxaVldrVlVWbFpLWXpGRmQxSnJTbEpsV0doRlZWWldSMUpGZUVaVWEwcFNWbFV3TTFVeFZrZFNSbEpFWlVWU1VsWlZXa1ZVUlZaUFVXeEdWbFJZVGxKTlJWcERWVmhzTkZWc1JsWlNiRXBOVWxVMVExVldWazVqTVVWM1VtdEtVbVZZYUVWVlZsWkhVa1Y0UmxSclNsSldWVEY2VlZSQ1IxRnNSalprUlVwU1ZsVTFlbFZYYkRSU1JrWldVbXRTVUUxRldrTlZha0pTWXpGV1ZsSnJTbFpXU0ZKRFZWWldUMVV3ZUVaaVJVcFNWbGQwZWxWVVFrZFJiRVkxWlVWd1VsWlZXa3RVUlZaUFVXeEdWbFJZVGxWTlJWcERWa2hzTkZKc1JsWlNhMXBOVWxVMVExVldWazVqTVU1V1VtdEtWRlV6YUVkVlZsWkhVbXQ0Um1SRlNsSldXRTU2VlZSQ1IxRnNSalZsUlZwU1ZsVmFSMVI2UW5OUmJFVjVZVVZTVFZKWGVFTlZWbFp5WXpGRmQxSnJTbEpsV0doTlZWWldSMVJGZUVaVWEwcFNWbFV4ZWxkc1ZrZFJiSEJVWlVWYVVsWlZXa2RVUlZaUFVXeEdWbFJZVGxSV1ZWcERWVEZPTkZKR1JsWlNhMUpOVWxVMVExVldWazVqTVVWM1VtdEtVbVZ1VWt0VlZsWlBaREZHTldWRmNGSldWVnBMVkVWV1QxRnNSbFpVV0U1VVRVVmFRMVV6YkRSU1JrWldVbXRTVFZJeVVrUlZWbFpIWW14R2NHVkZXbEpXVlZwSFZFVldUMUZzUmxaVVdFNVVUVVZhUTFVemJEUlNSa1pXVW10U1RWSlZOVU5WVmxaT1l6RkZkMUpyU2xKbGJsSkRWVlpXVDA1R1JqVmxSVkpTVmxWYVJWUkZWazlSYkVaV1ZGaE9VazFGV2tOVldIQXdVV3hHVmxwRmJFMVNiVkpEVlZaYWFrNHhSbFpTYTFKWVVUTm9TMVZXVmtkVGEzaEdWR3RLVWxaVk1YcFZNVlpIVVd4T1ZHVkZVbEpXVlZwRlZFVlZOVkZzUmxaUFNFNVRWbFZhUTFWc1RqUlNSa1pXVW10U1RWSlhlRU5WVmxaeVl6RktWbEpyU2xOVk0yaE5WVlpXUjFSRmVFWlVhMHBTVmxVeGVsVlVRa2RSYkVZMVpVVlNVbFpWV2tWVWVrSkhVV3hGZVdWRlVrMVNWM2hEVlZaV2NtTXhSWGRTYTBwU1pWaG9TMVZXVmtkVGEzaEdWR3RLVWxaVk1YcFdWRUpIVVd4V05XVkZXbEpXVlZwSFZFVldUMUZzUmxaVVdFNVZUVVZhUTFaSWJEUlNSa1pXVW10U1RWSlZOVU5WVmxaT1l6RkZkMUpyU2xKbFZXeDZVMWN4WVdOSFNraFdWMnhRWVZWd2IxbDZUazlpUjFKSlZGaGFhbEl3V25GWlZFNU9aRzFTU0ZacVFtaFNNVm8xVkVSS2EwMVhTa2xSYlRGb1ZqTm9jMVJITVhkbGEyeHdaREpzYWsxcWEzaFpNakZQWWtkTmQxUnVXbWxpYkVweldXMDFVbUZWT1hOak1teHJZbFZhTlZOVlpGTmlSMHBFVVZka1NsRXdSbTVUVlU1Q1dqQnNSVTFIWkdwaVZsbzBXa1prYzJWV2NGUmFNalZoVWpGYWVsTnViSEpPTVdoSVRsUktXbGRGYkc1WGFrNVhZekpPUkZGWFpFcFJNRVp1VTFWT1Fsb3hRbFJSYm14aFYwVlplRmxXYUV0aVJYUkVXa2MxYTFZemFETlRibXh5VGpGb1NFNVVTbHBYUld4dVYxY3hSMkZXY0Zoa01tUktVVEJHYmxOVlRrSmFNVUpVVVc1c1lWZEZXWGhaVm1oTFlrVjBSRnBITld0V00yZ3pWRVprUzJGR2JIUldiazVMWlZkek0xZEZZekZOYkd4WlUxZGtXbUpzV2pCWk1FNUNXakJzUkZGWFpFcFJNRVp1VlVaT1EyVldjRmxTYWtab1YwVndjMU13VG10aWJWSllaVWhrVFZZd2IzaFpiR2hDWW10MFZXUkhUbWxpYkhCdldUSnNRMkZ0U1hsT1YzQmFWMFpHYmxOVlRrSmFNR3hFVVZSc1NsTkZjSE5aTVdoWFkwZE9kRlpYT1V0TmJWRjRXV3RvUW1SR2EzbFBXRlphVFd0WmQxTnViSEpPTVdoSVRsUktXbGRGYkc1WlZXUlhZVVp3U0ZadWJFcFJNRVp1VTFWT1Fsb3hRbFJSYm14aFYwVlplRmxXYUV0aVJYUkVXa2MxYTFZemFETlVSbVJ2WWtac1dGVnRlR3BoVjA1M1ZIcEdOR1JYVW5SU2JteEtVbnBHZDFsdE1YTmlWMVpVVVZka1NsRXdSbTVUVlZGM1dqSk9kRlp1YUd0V01uZzFWMnhPYm1Kc2IzcFdiazVxVVhwR01GbFdZekZqUm5CMVlUTlNXazB3TlRaVGJteHlUakZvU0U1VVNscFhSV3h1V1RCa05FMVhTbGhUYlhocVlWVkdibE5WVGtKYU1VSlVVVzVzWVZkRldYaFpWbWhMWWtWMFJGcEhOV3RXTTJnelZFWm9RMk15VWxoTlYyeGhWMFZzZFZNeFVqQlpNa3AxVjIxb2FtRlZTak5aTWpGWFlsZEdXV0ZIZUdwaFZVWnVVMVZPUWs5VmJFbFRiWGhxVjBaYWQxa3lNVlppTUc5NVdrUkdhVk5GUmpCWFZtaFhUVWRKZWxGdWJHRldNWEIzV2xWa1YyVlZjRFZoZW1SWlVucFZlVmRXYUVwYU1rNTBWbTVXV2xaNlJuTlRWVTVDV2pCc1JGRlhaRkZWTUVvMVYyeG9SMDFYUmxsVGJYaE1VVEpTZFZwR1pEUmtNSGhaVTIxNGFXSlZXakJYYkU1cVkwVTRlR1ZJVm10aVZWbzFVMVZvVjJKdFNraGlSekZzVlRCR2JsTlZUa0phTUd4RlRVZGthbUpXV2pSYVJtUnpaVlp3VkZveU5XRk5NVnA2V1RCTmVFMVdiM2xsU0VKaFltMTBkVk14VWpCWk1rcDFWMjFvYW1GVlNqWlhWbWhQWld0c1JGRlhaRXBSTUVadVUxVk9RazlWYkVsVGJYaHFWMFphZDFreU1WWmlNRzk1V2tSR2FWTkZSakJaZWtwSFpXMU9OVmt6UWxCTldHZ3hXa2N4UjJWVmJFbFdibEpoVVRCR2JsTlZUa0phTUd4RVVWZGtTbEpFUW01Wk1qRlhaVWRTV0dKSWJHRlZNbVIxVjJwT1YyTXlUa1JOVkU1cVlsVmFNMVJHYUZka1JuQkVXVE5DVUUxWWFERlhSV013Wkd0NE5WRnNaRnBYUlhCM1YxWmtTMk14Y0ZsVWJVNXBZbXh3YjFreWJFTmhNa1paVkdwQ1UxSXllRFZUVlZGM1dqQndOVTVJV21GU01uZzJXa1ZPYWs0eGFFaE9WRXBhVjBWc2Jsa3daREJpYTJ4RlRVZGthbUpXV2pSYVJtUnpaVlp3VkZveU5VMWhWR3d6VjFaa1QyTnNiRmhhUjNoTllsaENObGxxU1RCaWEzUlZaRWRPYVdKc2NHOVpNbXhEWVZac1dFNVlWbUZYUld4dVZVWk9RMWxyY0RWUFNFWktWVEpPZWxOVmFFTmpiSEExVGxoV1dsWjZSbk5VUlU1RFpESkZlVmt6Vm10aVZsbzFXWHBLYzJSdFNuQmtNbVJMWlZjNU1sZEZXalJrVlc5NFRVaFdhR0pVYkhkWmJXeHVZbXRzUkZrelFsQk5XR2d4V2tjeFIyVlZiRWxXYmxKaFVsUnNNMXBGWkhOa2JVcDFWRmRrVVZVd1NUTlhSV013V2pCc1NGWnFVbXBTZW13MVdrVm9UazVyYkVSYVJsWmhWMFpLZGxkc2FFcGlhM2hIWlVoV1NsRXdTakZYVm1ONFlrZE5lbEZ0YUZwTmJGVXlVMVZPYTFaV2NGbFZiVGxoVjBWc2RWZEZZekZQVlRoNFpVaFdXVko2Vm1wWmJXczBaR3RzUmxSdVRtRldNRm94VjBWak1XSnRVbGhsU0dSTllteEtiMWw2U25waU1HOTVWRzVPWVZZd1dqRlRibXd6V2pGd2RWWnVWbHBOTVVwM1dXcEpNR0l3ZEZSUmFtUlpVbnBTYmxOVlpGTmlSMHBFVGxod2JGWjZWbkZUTUZvd1lUSkdXVlJxUWxOU01uZzFWMFpPY2s0eGFFaE9WR3hNVmtoU2FsbHRlRFJrVm1oSVRraGFUV1ZWU2t4WFZtaGhZVWROZVZSdWJHaFhSVWwzVjBWak1XSnRVbGhsU0dSTllteEtiMWw2U25waU1HOTVZMGh3UzJWWVpHNVhiVFZYWkZacmVsVnVRbWxOYWxKMlV6Rk9RMDR4YUVoT1IyUktVakpSZUZscmFFSmtWMDE2VTIxd1RGSnVVbXBaYld4Q1dqQnNSRkZYTlUxaFZHdzJXVEl4VG1SdFJuVlVXRnByVjBaS2QxbHJhRTVrVjBaMVZGYzFUVkp1YURGVFZVNUNXakJzUkZrelZrMU5NRFUxVjFock5XTlhUalZQVkVKaFYwWktkbGRzYUVwa1YwWjFWRmMxVFZKdWFERlRWVTVDV2pCc1JGa3pWazFOTURVMVYxaHJOV05YVGpWUFYzQnBUV3BXTmxwRmFFdGhSMFpZVGxSQ1RXSllRalpUYm13MFdUSktjRkZYWkVwUk1FWjFWRWRyTldWdFRuUlVXRnBvWW1zeE1sZFdaRXROVjFKSVRWZDRhV0pzUmpGWlZ6Vk9ZbXQ0UjJWSVZrcFJNRVp1VTFWT2FtUlZkM3BVYm14YVpWUnNlRmt6YXpWbGJVWklZa2N4YTFGNlZuaFpNMnhyV1RKS2NGRlhaRmxWTW5ocVdXMXNRbG93YkVSUldGWnFVako0TTFkc1RtOWtNa3BKVm01U1dtSldXalZUTUU1eVkwWm9TRTVIWkVwUk1FWnVWRWMxUTJOSFRraFdWemxhWWxWYWNGZHNaRE5pTUhSVVlrZE9hV0ZWUm01VFZVNUNaRmRPU0dKSVpHRlZNbWh4V1dwSk1XRnNiRmxWVnpsTFRURktjMXBGWkc5aVIwNXdUbGhHYW1WWFRuZFRNVm8wWkZWc1JGRlhaRXBSZWxZeldWWm9RMkpGZEVsV2JsSmhVVEpuZUZsc1pGTlZSMDVKVlc1Q2FVMXFWalpUTVU1eldUSktjRkZYWkVwUk1FWXhXVEJrYzJReGNGUmhSemxoVmpCYWNsZHNhRXBpTVd4MFVtNVdhV0pXV2pWVE1VNXpXVEpLYzJWSVZrcFJNRVp1VTFWTk5HUnJiRVpQV0d4b1ZqSlNkMWx0TVVkak1XaElUa2RrU2xFd1JtNVVSelZEWTBkT1NGWlhPV0ZOTVZwNldUQk5NV0V4Y0ZsVWFrSk1VakZLZDFsNlRsTlNWMFpaVTFka1RHVlZSblZVUkVwM1pXdHdOV0V6UWxsU2VsWnFXVzFzUWxvd2JFUlJXRnBOWlZWS1QxbFdZekZqUm5CMFlrZDRZVkp1YURGVFZVNUNXakJzUkU1WVpHaFhSVXB6VXpCb1YySnRTa2hpUnpGc1ZUSmtkMU14V2pSa1ZXeEVVVmRrU2xGNlZqTlpWbWhEWWtWMFNWTnRlR2xpVlZvd1YyeE9iMDR5VFhwV2JURmhZbGQzTUZReWJFSmlhM2gwVFZoQ2FXRlhVVFZUTVU1eldUSktjRkZYWkVwUk1FWXhXVEJrYzJReGNGUmhSelZyVmpOb00xUkhNVk5pUjAxNlZWYzVZVkl5ZURaYVJWWlRZMGRPY0ZGWVNrcFJNazR5V1ZjMVRtSnJkRlJoZW1SWlVucFZOVk14VWpCWk1rcHpaVWhXV1ZKNlVqSlVTR3hEVWtaVmVGUnRUbWxpVjFGNFdXdG9RbVJYVWtoU2JuQm9aVmRrZFZkVVRrOWxhM0ExWkRKa1lXSnNXakZYVkU1VFkwZEplVTVIT1V4Vk1Fa3pWMFZqTUZvd2JFaGFSRVpwVTBWR01WbDZUa3RoYTNSRVdUTldUVTB3TlRWWFdHczFZVzFOZWxSWVdreGhWemt5VXpKck1XVnNiRmxVYm5CTFpWZDRhbGx0YkVKYU1HeEVVVmhXYWxJeWVETlhiRTV2WkRKS1NWWnVVbHBpVmxvMVV6Qk9jbU5HYUVoT1IyUktVVEJHYmxSSE5VTmpSMDVJVmxjNWFrMXJXalpaTTJ4dVkwVjBWMlZJVmtwUk1FWnVVMVZOTVdReVJsbFJiWGhNVTBWS05WZHNaR0ZqUjFaSVZtNXNURkV5ZEhkWFJXTXhXVEpLY0ZGWFpFcFJNRVl5VkVoc1ExVkhUblJpUnpWb1ZucFdiMWxyV2pSa1ZXeEVVVmRrU2xGNlZqTlpWbWhEWWtWMFNGcEVSbWxUUlVZeFYydGtWMlZ0VWtSaFIzUm9WMFUwZDFWclpITmxWV3hFWXpKa1MyVlViSEZaZWs1T1ltdDBWR0pIVG1saVNHZ3hVMVZPUWxvd2JFUlBTRnBLVWxSR2QxbHRNWE5pVjBaWVZtMTBXVko2VW01VFZVNUNXakI0ZFZGdVFtcFNNVloyV1d4a2MyUlhSbGhYYWxaTVVUSjBkMWRGWXpCYU1HeEVVVmRrVFdKclNuZFpNR1JXWWpKT2RGWnVWbHBXZWtaelV6Qm9NR1Z0VWxoWGJURm9WMGRqTWxOVlRtcGtWMHBZWWtoV1MwMTZRbmRUTVZvMFpGVnNSRkZYWkVwUmVsWXpXVlpvUTJKRmRFaGFSRVpwVTBWR01WZHJaRmRsYlZKRVlVZDBhRmRGTkhkVmEyUnpaVlZzUkdNeVpFdGxWR3h4V1hwT1RtSnJkRlJoZW1SWlVucFZOVk14VWpCWk1rcHpaVWhXV1ZKNlVqSlVTR3hEVmpGd1dWTnVjR2hXZW13eFUxVmtTMDFYU2xsUmJVNXBZbXh3YjFreWJFTldNVXBYVTJ4U1ZGWlViRkJXV0d4Q1QxVnNSMk15TldwU01GbDNWMVJLYm1KcmVFUlJWelZwVmpKNE1WbHFUa3BpYTNoRVVWYzFhVll3V25oWmFrNUtZbXhvVldSSFRtbGlWbkF5V1RKc1FtSXlVblJTYm14S1VqSjBibFZHVGtKa01EazFVVzVDU2xKSVpHNVdiWFJYVlRGVmQySkdRbFZpUlRFeFdXdGtWMlJXYjNwVmJUbFFaVlZHZVZONlNuSmpSMVY0WlVoV1NsRXdSblpYYlRWWFpGWnJlbFZ1UW1sTmFsSjJXa2N4VjJWWFRYbGlTRnBwWVZkMGJscFVSalJrVld4RVVWZGtTbEl5VVhoWmEyaENaRmRTU0ZKdWNHaGxWMlIxV2tjeFYyVlhUWGxpU0ZwcFlXMDVkVk5WVG5wYU1sSjBWbTVzYWsxdGVESlpiV3d6V2pGd2RWWnVWbHBOTVVwM1dXcEpNR0l3ZEZSUmFtUlpVbnBTYmxOVlRrSmFNR3hFVVcwMWExWXphRE5VUnpWUFpWWnNOV0ZIU2t0Tk1FcHZWMVJLTUdGR2IzbFdXRlpvWW1zMU1sbHRiR3BqTUd4RVdrZHNhVTB5VW5OWk1tc3hZMWROZVU5WVZrdGxXR1J1VTJwS1QyUnRTbGxSYmxwcFlsWmFNVnBGVFRGalYwMTVUMWhXUzAxVVFuZFhSV013V2pCc1JGRlhaRXBSTUVadVUxVk5NV1F5UmxsUmJYaE1VakJ2ZUZsc2FFSmlNbFY2VldwV2FsSXhWVEpUVldoaFlrZE9kVlJ1UW1sTmFsVTFVekZPYzFreVNuQlJWMlJLVVRCR2JsTlZUa0phTUhoMVVXNUNhbEl4Vm5aWGFrNVhZekpPUkU1WGRHRlhSVFIzVXpCT2FtUlZjRFZoTTBKUVRWaG9NVk5WVGtKYU1HeEpUVWhDVUUxWWFERlRWVTVEVDFWMFZHRkdaRk5XYTNCVlZURlZOVlF4Vlhoa1NFSlpWVEp6TTFkRll6RlBWbWhJVGxkT2FXSklhREZVU0dzMFdqRlplVkpxUWxwTmJXaHFXVzB4YTAxWFNrbFJXRlpyVWpCYU5sbFliRzVpYlZGNVVtcENXazF0WkhWVVJVNURXV3R2ZVdOSWNFdGxXR1J1VTJwS1QyVnRUalZhUjFKTlVUQktkRnBHWXpGaGJWSklZa2hhYVdGWFpIZFRWV2d3V1RKS2NGRlhaR0ZOTVZwNldUQk5NVTB4YkZsVmJYQm9VVEprZFZSSGF6VmxiVTUwVkZoYWFHSnJNVEpUTW14MlpHdDBjRmt6VGtwU2JrNTFXVmMxVG1Kc2FGUmhlbVJaVW5wU2JsTlZaR3ROVjBwSlVWaFdhMDFyV1hkWFZFcHVZakJ3TlU1SVdtcE5NSEJ4VkVSS1QyVnRUalZQU0VaTVlWUm9lRk51YkROYU1XUTFXa2R3YWswd01YVlhSazV5VGpGb1NFNVViRXhXU0ZKcVdXMTROR1JXYUVoT1NGcE5aVlZLUmxkc1pHRmhSMUpZWlVSQ2FrMVlhREZYYWs1WFl6Sk9SRTVVUWxwWFJUVjVVekJPYTJGWFVsaGlTRTVoVVRKT2VsTlZXbnBpYlVaMVZGYzFUVkV3Um5WWFZFNVBaV3R2ZUUxSVFsQk5XR2d4VjJwT1YyTXlUa1JPVkVKYVYwVTFlVk13VG10aE1YQllWMjFvYTFZelozZFRibXd6V2pGa05WcEhiR3RXTW5oNlYydE9hMXBGZEZWa1IwNXBZa2hvTVZOWGQzaFBWbmgxU1d3eE9WeHVJbDE5XG4iXX0=
