"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) {
            for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p];
        };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var tooltip_1 = require("./tooltip");
/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): popover.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Popover = (function ($) {
    /**
     * ------------------------------------------------------------------------
     * Constants
     * ------------------------------------------------------------------------
     */
    var NAME = 'popover';
    var VERSION = '4.0.0-alpha.6';
    var DATA_KEY = 'bs.popover';
    var EVENT_KEY = "." + DATA_KEY;
    var JQUERY_NO_CONFLICT = $.fn[NAME];
    var Default = $.extend({}, tooltip_1.default.Default, {
        placement: 'right',
        trigger: 'click',
        content: '',
        template: '<div class="popover" role="tooltip">'
            + '<h3 class="popover-title"></h3>'
            + '<div class="popover-content"></div></div>'
    });
    var DefaultType = $.extend({}, tooltip_1.default.DefaultType, {
        content: '(string|element|function)'
    });
    var ClassName = {
        FADE: 'fade',
        SHOW: 'show'
    };
    var Selector = {
        TITLE: '.popover-title',
        CONTENT: '.popover-content'
    };
    var Event = {
        HIDE: "hide" + EVENT_KEY,
        HIDDEN: "hidden" + EVENT_KEY,
        SHOW: "show" + EVENT_KEY,
        SHOWN: "shown" + EVENT_KEY,
        INSERTED: "inserted" + EVENT_KEY,
        CLICK: "click" + EVENT_KEY,
        FOCUSIN: "focusin" + EVENT_KEY,
        FOCUSOUT: "focusout" + EVENT_KEY,
        MOUSEENTER: "mouseenter" + EVENT_KEY,
        MOUSELEAVE: "mouseleave" + EVENT_KEY
    };
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */
    var Popover = (function (_super) {
        __extends(Popover, _super);
        function Popover() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(Popover, "VERSION", {
            // getters
            get: function () {
                return VERSION;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Popover, "Default", {
            get: function () {
                return Default;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Popover, "NAME", {
            get: function () {
                return NAME;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Popover, "DATA_KEY", {
            get: function () {
                return DATA_KEY;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Popover, "Event", {
            get: function () {
                return Event;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Popover, "EVENT_KEY", {
            get: function () {
                return EVENT_KEY;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Popover, "DefaultType", {
            get: function () {
                return DefaultType;
            },
            enumerable: true,
            configurable: true
        });
        // overrides
        Popover.prototype.isWithContent = function () {
            return this.getTitle() || this._getContent();
        };
        Popover.prototype.getTipElement = function () {
            return this.tip = this.tip || $(this.config.template)[0];
        };
        Popover.prototype.setContent = function () {
            var $tip = $(this.getTipElement());
            // we use append for html objects to maintain js events
            this.setElementContent($tip.find(Selector.TITLE), this.getTitle());
            this.setElementContent($tip.find(Selector.CONTENT), this._getContent());
            $tip.removeClass(ClassName.FADE + " " + ClassName.SHOW);
            this.cleanupTether();
        };
        // private
        Popover.prototype._getContent = function () {
            return this.element.getAttribute('data-content')
                || (typeof this.config.content === 'function' ?
                    this.config.content.call(this.element) :
                    this.config.content);
        };
        // static
        Popover._jQueryInterface = function (config) {
            return this.each(function () {
                var data = $(this).data(DATA_KEY);
                var _config = typeof config === 'object' ? config : null;
                if (!data && /destroy|hide/.test(config)) {
                    return;
                }
                if (!data) {
                    data = new Popover(this, _config);
                    $(this).data(DATA_KEY, data);
                }
                if (typeof config === 'string') {
                    if (data[config] === undefined) {
                        throw new Error("No method named \"" + config + "\"");
                    }
                    data[config]();
                }
            });
        };
        return Popover;
    }(tooltip_1.default));
    /**
     * ------------------------------------------------------------------------
     * jQuery
     * ------------------------------------------------------------------------
     */
    $.fn[NAME] = Popover._jQueryInterface;
    $.fn[NAME].Constructor = Popover;
    $.fn[NAME].noConflict = function () {
        $.fn[NAME] = JQUERY_NO_CONFLICT;
        return Popover._jQueryInterface;
    };
    return Popover;
})(jQuery);
exports.default = Popover;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
