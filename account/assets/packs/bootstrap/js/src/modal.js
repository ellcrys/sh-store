"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("./util");
/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0-alpha.6): modal.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Modal = (function ($) {
    /**
     * ------------------------------------------------------------------------
     * Constants
     * ------------------------------------------------------------------------
     */
    var NAME = 'modal';
    var VERSION = '4.0.0-alpha.6';
    var DATA_KEY = 'bs.modal';
    var EVENT_KEY = "." + DATA_KEY;
    var DATA_API_KEY = '.data-api';
    var JQUERY_NO_CONFLICT = $.fn[NAME];
    var TRANSITION_DURATION = 300;
    var BACKDROP_TRANSITION_DURATION = 150;
    var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key
    var Default = {
        backdrop: true,
        keyboard: true,
        focus: true,
        show: true
    };
    var DefaultType = {
        backdrop: '(boolean|string)',
        keyboard: 'boolean',
        focus: 'boolean',
        show: 'boolean'
    };
    var Event = {
        HIDE: "hide" + EVENT_KEY,
        HIDDEN: "hidden" + EVENT_KEY,
        SHOW: "show" + EVENT_KEY,
        SHOWN: "shown" + EVENT_KEY,
        FOCUSIN: "focusin" + EVENT_KEY,
        RESIZE: "resize" + EVENT_KEY,
        CLICK_DISMISS: "click.dismiss" + EVENT_KEY,
        KEYDOWN_DISMISS: "keydown.dismiss" + EVENT_KEY,
        MOUSEUP_DISMISS: "mouseup.dismiss" + EVENT_KEY,
        MOUSEDOWN_DISMISS: "mousedown.dismiss" + EVENT_KEY,
        CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY
    };
    var ClassName = {
        SCROLLBAR_MEASURER: 'modal-scrollbar-measure',
        BACKDROP: 'modal-backdrop',
        OPEN: 'modal-open',
        FADE: 'fade',
        SHOW: 'show'
    };
    var Selector = {
        DIALOG: '.modal-dialog',
        DATA_TOGGLE: '[data-toggle="modal"]',
        DATA_DISMISS: '[data-dismiss="modal"]',
        FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'
    };
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */
    var Modal = (function () {
        function Modal(element, config) {
            this._config = this._getConfig(config);
            this._element = element;
            this._dialog = $(element).find(Selector.DIALOG)[0];
            this._backdrop = null;
            this._isShown = false;
            this._isBodyOverflowing = false;
            this._ignoreBackdropClick = false;
            this._isTransitioning = false;
            this._originalBodyPadding = 0;
            this._scrollbarWidth = 0;
        }
        Object.defineProperty(Modal, "VERSION", {
            // getters
            get: function () {
                return VERSION;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Modal, "Default", {
            get: function () {
                return Default;
            },
            enumerable: true,
            configurable: true
        });
        // public
        Modal.prototype.toggle = function (relatedTarget) {
            return this._isShown ? this.hide() : this.show(relatedTarget);
        };
        Modal.prototype.show = function (relatedTarget) {
            var _this = this;
            if (this._isTransitioning) {
                throw new Error('Modal is transitioning');
            }
            if (util_1.default.supportsTransitionEnd() &&
                $(this._element).hasClass(ClassName.FADE)) {
                this._isTransitioning = true;
            }
            var showEvent = $.Event(Event.SHOW, {
                relatedTarget: relatedTarget
            });
            $(this._element).trigger(showEvent);
            if (this._isShown || showEvent.isDefaultPrevented()) {
                return;
            }
            this._isShown = true;
            this._checkScrollbar();
            this._setScrollbar();
            $(document.body).addClass(ClassName.OPEN);
            this._setEscapeEvent();
            this._setResizeEvent();
            $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, function (event) { return _this.hide(event); });
            $(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {
                $(_this._element).one(Event.MOUSEUP_DISMISS, function (event) {
                    if ($(event.target).is(_this._element)) {
                        _this._ignoreBackdropClick = true;
                    }
                });
            });
            this._showBackdrop(function () { return _this._showElement(relatedTarget); });
        };
        Modal.prototype.hide = function (event) {
            var _this = this;
            if (event) {
                event.preventDefault();
            }
            if (this._isTransitioning) {
                throw new Error('Modal is transitioning');
            }
            var transition = util_1.default.supportsTransitionEnd() &&
                $(this._element).hasClass(ClassName.FADE);
            if (transition) {
                this._isTransitioning = true;
            }
            var hideEvent = $.Event(Event.HIDE);
            $(this._element).trigger(hideEvent);
            if (!this._isShown || hideEvent.isDefaultPrevented()) {
                return;
            }
            this._isShown = false;
            this._setEscapeEvent();
            this._setResizeEvent();
            $(document).off(Event.FOCUSIN);
            $(this._element).removeClass(ClassName.SHOW);
            $(this._element).off(Event.CLICK_DISMISS);
            $(this._dialog).off(Event.MOUSEDOWN_DISMISS);
            if (transition) {
                $(this._element)
                    .one(util_1.default.TRANSITION_END, function (event) { return _this._hideModal(event); })
                    .emulateTransitionEnd(TRANSITION_DURATION);
            }
            else {
                this._hideModal();
            }
        };
        Modal.prototype.dispose = function () {
            $.removeData(this._element, DATA_KEY);
            $(window, document, this._element, this._backdrop).off(EVENT_KEY);
            this._config = null;
            this._element = null;
            this._dialog = null;
            this._backdrop = null;
            this._isShown = null;
            this._isBodyOverflowing = null;
            this._ignoreBackdropClick = null;
            this._originalBodyPadding = null;
            this._scrollbarWidth = null;
        };
        // private
        Modal.prototype._getConfig = function (config) {
            config = $.extend({}, Default, config);
            util_1.default.typeCheckConfig(NAME, config, DefaultType);
            return config;
        };
        Modal.prototype._showElement = function (relatedTarget) {
            var _this = this;
            var transition = util_1.default.supportsTransitionEnd() &&
                $(this._element).hasClass(ClassName.FADE);
            if (!this._element.parentNode ||
                this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
                // don't move modals dom position
                document.body.appendChild(this._element);
            }
            this._element.style.display = 'block';
            this._element.removeAttribute('aria-hidden');
            this._element.scrollTop = 0;
            if (transition) {
                util_1.default.reflow(this._element);
            }
            $(this._element).addClass(ClassName.SHOW);
            if (this._config.focus) {
                this._enforceFocus();
            }
            var shownEvent = $.Event(Event.SHOWN, {
                relatedTarget: relatedTarget
            });
            var transitionComplete = function () {
                if (_this._config.focus) {
                    _this._element.focus();
                }
                _this._isTransitioning = false;
                $(_this._element).trigger(shownEvent);
            };
            if (transition) {
                $(this._dialog)
                    .one(util_1.default.TRANSITION_END, transitionComplete)
                    .emulateTransitionEnd(TRANSITION_DURATION);
            }
            else {
                transitionComplete();
            }
        };
        Modal.prototype._enforceFocus = function () {
            var _this = this;
            $(document)
                .off(Event.FOCUSIN) // guard against infinite focus loop
                .on(Event.FOCUSIN, function (event) {
                if (document !== event.target &&
                    _this._element !== event.target &&
                    !$(_this._element).has(event.target).length) {
                    _this._element.focus();
                }
            });
        };
        Modal.prototype._setEscapeEvent = function () {
            var _this = this;
            if (this._isShown && this._config.keyboard) {
                $(this._element).on(Event.KEYDOWN_DISMISS, function (event) {
                    if (event.which === ESCAPE_KEYCODE) {
                        _this.hide();
                    }
                });
            }
            else if (!this._isShown) {
                $(this._element).off(Event.KEYDOWN_DISMISS);
            }
        };
        Modal.prototype._setResizeEvent = function () {
            var _this = this;
            if (this._isShown) {
                $(window).on(Event.RESIZE, function (event) { return _this._handleUpdate(event); });
            }
            else {
                $(window).off(Event.RESIZE);
            }
        };
        Modal.prototype._hideModal = function () {
            var _this = this;
            this._element.style.display = 'none';
            this._element.setAttribute('aria-hidden', 'true');
            this._isTransitioning = false;
            this._showBackdrop(function () {
                $(document.body).removeClass(ClassName.OPEN);
                _this._resetAdjustments();
                _this._resetScrollbar();
                $(_this._element).trigger(Event.HIDDEN);
            });
        };
        Modal.prototype._removeBackdrop = function () {
            if (this._backdrop) {
                $(this._backdrop).remove();
                this._backdrop = null;
            }
        };
        Modal.prototype._showBackdrop = function (callback) {
            var _this = this;
            var animate = $(this._element).hasClass(ClassName.FADE) ?
                ClassName.FADE : '';
            if (this._isShown && this._config.backdrop) {
                var doAnimate = util_1.default.supportsTransitionEnd() && animate;
                this._backdrop = document.createElement('div');
                this._backdrop.className = ClassName.BACKDROP;
                if (animate) {
                    $(this._backdrop).addClass(animate);
                }
                $(this._backdrop).appendTo(document.body);
                $(this._element).on(Event.CLICK_DISMISS, function (event) {
                    if (_this._ignoreBackdropClick) {
                        _this._ignoreBackdropClick = false;
                        return;
                    }
                    if (event.target !== event.currentTarget) {
                        return;
                    }
                    if (_this._config.backdrop === 'static') {
                        _this._element.focus();
                    }
                    else {
                        _this.hide();
                    }
                });
                if (doAnimate) {
                    util_1.default.reflow(this._backdrop);
                }
                $(this._backdrop).addClass(ClassName.SHOW);
                if (!callback) {
                    return;
                }
                if (!doAnimate) {
                    callback();
                    return;
                }
                $(this._backdrop)
                    .one(util_1.default.TRANSITION_END, callback)
                    .emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);
            }
            else if (!this._isShown && this._backdrop) {
                $(this._backdrop).removeClass(ClassName.SHOW);
                var callbackRemove = function () {
                    _this._removeBackdrop();
                    if (callback) {
                        callback();
                    }
                };
                if (util_1.default.supportsTransitionEnd() &&
                    $(this._element).hasClass(ClassName.FADE)) {
                    $(this._backdrop)
                        .one(util_1.default.TRANSITION_END, callbackRemove)
                        .emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);
                }
                else {
                    callbackRemove();
                }
            }
            else if (callback) {
                callback();
            }
        };
        // ----------------------------------------------------------------------
        // the following methods are used to handle overflowing modals
        // todo (fat): these should probably be refactored out of modal.js
        // ----------------------------------------------------------------------
        Modal.prototype._handleUpdate = function () {
            this._adjustDialog();
        };
        Modal.prototype._adjustDialog = function () {
            var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;
            if (!this._isBodyOverflowing && isModalOverflowing) {
                this._element.style.paddingLeft = this._scrollbarWidth + "px";
            }
            if (this._isBodyOverflowing && !isModalOverflowing) {
                this._element.style.paddingRight = this._scrollbarWidth + "px";
            }
        };
        Modal.prototype._resetAdjustments = function () {
            this._element.style.paddingLeft = '';
            this._element.style.paddingRight = '';
        };
        Modal.prototype._checkScrollbar = function () {
            this._isBodyOverflowing = document.body.clientWidth < window.innerWidth;
            this._scrollbarWidth = this._getScrollbarWidth();
        };
        Modal.prototype._setScrollbar = function () {
            var bodyPadding = parseInt($(Selector.FIXED_CONTENT).css('padding-right') || 0, 10);
            this._originalBodyPadding = document.body.style.paddingRight || '';
            if (this._isBodyOverflowing) {
                document.body.style.paddingRight =
                    bodyPadding + this._scrollbarWidth + "px";
            }
        };
        Modal.prototype._resetScrollbar = function () {
            document.body.style.paddingRight = this._originalBodyPadding;
        };
        Modal.prototype._getScrollbarWidth = function () {
            var scrollDiv = document.createElement('div');
            scrollDiv.className = ClassName.SCROLLBAR_MEASURER;
            document.body.appendChild(scrollDiv);
            var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
            document.body.removeChild(scrollDiv);
            return scrollbarWidth;
        };
        // static
        Modal._jQueryInterface = function (config, relatedTarget) {
            return this.each(function () {
                var data = $(this).data(DATA_KEY);
                var _config = $.extend({}, Modal.Default, $(this).data(), typeof config === 'object' && config);
                if (!data) {
                    data = new Modal(this, _config);
                    $(this).data(DATA_KEY, data);
                }
                if (typeof config === 'string') {
                    if (data[config] === undefined) {
                        throw new Error("No method named \"" + config + "\"");
                    }
                    data[config](relatedTarget);
                }
                else if (_config.show) {
                    data.show(relatedTarget);
                }
            });
        };
        return Modal;
    }());
    /**
     * ------------------------------------------------------------------------
     * Data Api implementation
     * ------------------------------------------------------------------------
     */
    $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {
        var _this = this;
        var target;
        var selector = util_1.default.getSelectorFromElement(this);
        if (selector) {
            target = $(selector)[0];
        }
        var config = $(target).data(DATA_KEY) ?
            'toggle' : $.extend({}, $(target).data(), $(this).data());
        if (this.tagName === 'A' || this.tagName === 'AREA') {
            event.preventDefault();
        }
        var $target = $(target).one(Event.SHOW, function (showEvent) {
            if (showEvent.isDefaultPrevented()) {
                // only register focus restorer if modal will actually get shown
                return;
            }
            $target.one(Event.HIDDEN, function () {
                if ($(_this).is(':visible')) {
                    _this.focus();
                }
            });
        });
        Modal._jQueryInterface.call($(target), config, this);
    });
    /**
     * ------------------------------------------------------------------------
     * jQuery
     * ------------------------------------------------------------------------
     */
    $.fn[NAME] = Modal._jQueryInterface;
    $.fn[NAME].Constructor = Modal;
    $.fn[NAME].noConflict = function () {
        $.fn[NAME] = JQUERY_NO_CONFLICT;
        return Modal._jQueryInterface;
    };
    return Modal;
})(jQuery);
exports.default = Modal;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
