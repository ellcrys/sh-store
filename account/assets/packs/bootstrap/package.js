// package metadata file for Meteor.js
/* global Package:true */
Package.describe({
    name: 'twbs:bootstrap',
    summary: 'The most popular front-end framework for developing responsive, mobile first projects on the web.',
    version: '4.0.0-alpha.6',
    git: 'https://github.com/twbs/bootstrap.git'
});
Package.onUse(function (api) {
    api.versionsFrom('METEOR@1.0');
    api.use('jquery', 'client');
    api.addFiles([
        'dist/css/bootstrap.css',
        'dist/js/bootstrap.js'
    ], 'client');
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9ib290c3RyYXAvcGFja2FnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBc0M7QUFFdEMseUJBQXlCO0FBRXpCLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDZixJQUFJLEVBQUUsZ0JBQWdCO0lBQ3RCLE9BQU8sRUFBRSxtR0FBbUc7SUFDNUcsT0FBTyxFQUFFLGVBQWU7SUFDeEIsR0FBRyxFQUFFLHVDQUF1QztDQUM3QyxDQUFDLENBQUM7QUFFSCxPQUFPLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRztJQUN6QixHQUFHLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQy9CLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzVCLEdBQUcsQ0FBQyxRQUFRLENBQUM7UUFDWCx3QkFBd0I7UUFDeEIsc0JBQXNCO0tBQ3ZCLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDZixDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJhc3NldHMvcGFja3MvYm9vdHN0cmFwL3BhY2thZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlIG1ldGFkYXRhIGZpbGUgZm9yIE1ldGVvci5qc1xuXG4vKiBnbG9iYWwgUGFja2FnZTp0cnVlICovXG5cblBhY2thZ2UuZGVzY3JpYmUoe1xuICBuYW1lOiAndHdiczpib290c3RyYXAnLCAgLy8gaHR0cHM6Ly9hdG1vc3BoZXJlanMuY29tL3R3YnMvYm9vdHN0cmFwXG4gIHN1bW1hcnk6ICdUaGUgbW9zdCBwb3B1bGFyIGZyb250LWVuZCBmcmFtZXdvcmsgZm9yIGRldmVsb3BpbmcgcmVzcG9uc2l2ZSwgbW9iaWxlIGZpcnN0IHByb2plY3RzIG9uIHRoZSB3ZWIuJyxcbiAgdmVyc2lvbjogJzQuMC4wLWFscGhhLjYnLFxuICBnaXQ6ICdodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAuZ2l0J1xufSk7XG5cblBhY2thZ2Uub25Vc2UoZnVuY3Rpb24gKGFwaSkge1xuICBhcGkudmVyc2lvbnNGcm9tKCdNRVRFT1JAMS4wJyk7XG4gIGFwaS51c2UoJ2pxdWVyeScsICdjbGllbnQnKTtcbiAgYXBpLmFkZEZpbGVzKFtcbiAgICAnZGlzdC9jc3MvYm9vdHN0cmFwLmNzcycsXG4gICAgJ2Rpc3QvanMvYm9vdHN0cmFwLmpzJ1xuICBdLCAnY2xpZW50Jyk7XG59KTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9wYWNrcy9ib290c3RyYXAvcGFja2FnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBc0M7QUFDdEMseUJBQXlCO0FBQ3pCLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDYixJQUFJLEVBQUUsZ0JBQWdCO0lBQ3RCLE9BQU8sRUFBRSxtR0FBbUc7SUFDNUcsT0FBTyxFQUFFLGVBQWU7SUFDeEIsR0FBRyxFQUFFLHVDQUF1QztDQUMvQyxDQUFDLENBQUM7QUFDSCxPQUFPLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRztJQUN2QixHQUFHLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQy9CLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzVCLEdBQUcsQ0FBQyxRQUFRLENBQUM7UUFDVCx3QkFBd0I7UUFDeEIsc0JBQXNCO0tBQ3pCLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDakIsQ0FBQyxDQUFDLENBQUM7QUFFSCwyK0NBQTIrQyIsImZpbGUiOiJhc3NldHMvcGFja3MvYm9vdHN0cmFwL3BhY2thZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlIG1ldGFkYXRhIGZpbGUgZm9yIE1ldGVvci5qc1xuLyogZ2xvYmFsIFBhY2thZ2U6dHJ1ZSAqL1xuUGFja2FnZS5kZXNjcmliZSh7XG4gICAgbmFtZTogJ3R3YnM6Ym9vdHN0cmFwJyxcbiAgICBzdW1tYXJ5OiAnVGhlIG1vc3QgcG9wdWxhciBmcm9udC1lbmQgZnJhbWV3b3JrIGZvciBkZXZlbG9waW5nIHJlc3BvbnNpdmUsIG1vYmlsZSBmaXJzdCBwcm9qZWN0cyBvbiB0aGUgd2ViLicsXG4gICAgdmVyc2lvbjogJzQuMC4wLWFscGhhLjYnLFxuICAgIGdpdDogJ2h0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC5naXQnXG59KTtcblBhY2thZ2Uub25Vc2UoZnVuY3Rpb24gKGFwaSkge1xuICAgIGFwaS52ZXJzaW9uc0Zyb20oJ01FVEVPUkAxLjAnKTtcbiAgICBhcGkudXNlKCdqcXVlcnknLCAnY2xpZW50Jyk7XG4gICAgYXBpLmFkZEZpbGVzKFtcbiAgICAgICAgJ2Rpc3QvY3NzL2Jvb3RzdHJhcC5jc3MnLFxuICAgICAgICAnZGlzdC9qcy9ib290c3RyYXAuanMnXG4gICAgXSwgJ2NsaWVudCcpO1xufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1GemMyVjBjeTl3WVdOcmN5OWliMjkwYzNSeVlYQXZjR0ZqYTJGblpTNXFjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4elEwRkJjME03UVVGRmRFTXNlVUpCUVhsQ08wRkJSWHBDTEU5QlFVOHNRMEZCUXl4UlFVRlJMRU5CUVVNN1NVRkRaaXhKUVVGSkxFVkJRVVVzWjBKQlFXZENPMGxCUTNSQ0xFOUJRVThzUlVGQlJTeHRSMEZCYlVjN1NVRkROVWNzVDBGQlR5eEZRVUZGTEdWQlFXVTdTVUZEZUVJc1IwRkJSeXhGUVVGRkxIVkRRVUYxUXp0RFFVTTNReXhEUVVGRExFTkJRVU03UVVGRlNDeFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRMRlZCUVZVc1IwRkJSenRKUVVONlFpeEhRVUZITEVOQlFVTXNXVUZCV1N4RFFVRkRMRmxCUVZrc1EwRkJReXhEUVVGRE8wbEJReTlDTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1VVRkJVU3hGUVVGRkxGRkJRVkVzUTBGQlF5eERRVUZETzBsQlF6VkNMRWRCUVVjc1EwRkJReXhSUVVGUkxFTkJRVU03VVVGRFdDeDNRa0ZCZDBJN1VVRkRlRUlzYzBKQlFYTkNPMHRCUTNaQ0xFVkJRVVVzVVVGQlVTeERRVUZETEVOQlFVTTdRVUZEWml4RFFVRkRMRU5CUVVNc1EwRkJReUlzSW1acGJHVWlPaUpoYzNObGRITXZjR0ZqYTNNdlltOXZkSE4wY21Gd0wzQmhZMnRoWjJVdWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2THlCd1lXTnJZV2RsSUcxbGRHRmtZWFJoSUdacGJHVWdabTl5SUUxbGRHVnZjaTVxYzF4dVhHNHZLaUJuYkc5aVlXd2dVR0ZqYTJGblpUcDBjblZsSUNvdlhHNWNibEJoWTJ0aFoyVXVaR1Z6WTNKcFltVW9lMXh1SUNCdVlXMWxPaUFuZEhkaWN6cGliMjkwYzNSeVlYQW5MQ0FnTHk4Z2FIUjBjSE02THk5aGRHMXZjM0JvWlhKbGFuTXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndYRzRnSUhOMWJXMWhjbms2SUNkVWFHVWdiVzl6ZENCd2IzQjFiR0Z5SUdaeWIyNTBMV1Z1WkNCbWNtRnRaWGR2Y21zZ1ptOXlJR1JsZG1Wc2IzQnBibWNnY21WemNHOXVjMmwyWlN3Z2JXOWlhV3hsSUdacGNuTjBJSEJ5YjJwbFkzUnpJRzl1SUhSb1pTQjNaV0l1Snl4Y2JpQWdkbVZ5YzJsdmJqb2dKelF1TUM0d0xXRnNjR2hoTGpZbkxGeHVJQ0JuYVhRNklDZG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdVoybDBKMXh1ZlNrN1hHNWNibEJoWTJ0aFoyVXViMjVWYzJVb1puVnVZM1JwYjI0Z0tHRndhU2tnZTF4dUlDQmhjR2t1ZG1WeWMybHZibk5HY205dEtDZE5SVlJGVDFKQU1TNHdKeWs3WEc0Z0lHRndhUzUxYzJVb0oycHhkV1Z5ZVNjc0lDZGpiR2xsYm5RbktUdGNiaUFnWVhCcExtRmtaRVpwYkdWektGdGNiaUFnSUNBblpHbHpkQzlqYzNNdlltOXZkSE4wY21Gd0xtTnpjeWNzWEc0Z0lDQWdKMlJwYzNRdmFuTXZZbTl2ZEhOMGNtRndMbXB6SjF4dUlDQmRMQ0FuWTJ4cFpXNTBKeWs3WEc1OUtUdGNiaUpkZlE9PVxuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
