/**
 * `linkAssetsBuildProd`
 *
 * ---------------------------------------------------------------
 *
 * This Grunt tasklist is not designed to be used directly-- rather
 * it is a helper called by the `buildProd` tasklist.
 *
 * For more information see:
 *   http://sailsjs.org/documentation/anatomy/my-app/tasks/register/link-assets-build-prod-js
 *
 */
module.exports = function (grunt) {
    grunt.registerTask('linkAssetsBuildProd', [
        'sails-linker:prodJsRelative',
        'sails-linker:prodStylesRelative',
        'sails-linker:devTpl',
        'sails-linker:prodJsRelativeJade',
        'sails-linker:prodStylesRelativeJade',
        'sails-linker:devTplJade'
    ]);
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tzL3JlZ2lzdGVyL2xpbmtBc3NldHNCdWlsZFByb2QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0dBV0c7QUFDSCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVMsS0FBSztJQUM3QixLQUFLLENBQUMsWUFBWSxDQUFDLHFCQUFxQixFQUFFO1FBQ3hDLDZCQUE2QjtRQUM3QixpQ0FBaUM7UUFDakMscUJBQXFCO1FBQ3JCLGlDQUFpQztRQUNqQyxxQ0FBcUM7UUFDckMseUJBQXlCO0tBQzFCLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyIsImZpbGUiOiJ0YXNrcy9yZWdpc3Rlci9saW5rQXNzZXRzQnVpbGRQcm9kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBgbGlua0Fzc2V0c0J1aWxkUHJvZGBcbiAqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqXG4gKiBUaGlzIEdydW50IHRhc2tsaXN0IGlzIG5vdCBkZXNpZ25lZCB0byBiZSB1c2VkIGRpcmVjdGx5LS0gcmF0aGVyXG4gKiBpdCBpcyBhIGhlbHBlciBjYWxsZWQgYnkgdGhlIGBidWlsZFByb2RgIHRhc2tsaXN0LlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIHNlZTpcbiAqICAgaHR0cDovL3NhaWxzanMub3JnL2RvY3VtZW50YXRpb24vYW5hdG9teS9teS1hcHAvdGFza3MvcmVnaXN0ZXIvbGluay1hc3NldHMtYnVpbGQtcHJvZC1qc1xuICpcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihncnVudCkge1xuICBncnVudC5yZWdpc3RlclRhc2soJ2xpbmtBc3NldHNCdWlsZFByb2QnLCBbXG4gICAgJ3NhaWxzLWxpbmtlcjpwcm9kSnNSZWxhdGl2ZScsXG4gICAgJ3NhaWxzLWxpbmtlcjpwcm9kU3R5bGVzUmVsYXRpdmUnLFxuICAgICdzYWlscy1saW5rZXI6ZGV2VHBsJyxcbiAgICAnc2FpbHMtbGlua2VyOnByb2RKc1JlbGF0aXZlSmFkZScsXG4gICAgJ3NhaWxzLWxpbmtlcjpwcm9kU3R5bGVzUmVsYXRpdmVKYWRlJyxcbiAgICAnc2FpbHMtbGlua2VyOmRldlRwbEphZGUnXG4gIF0pO1xufTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tzL3JlZ2lzdGVyL2xpbmtBc3NldHNCdWlsZFByb2QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0dBV0c7QUFDSCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsS0FBSztJQUM1QixLQUFLLENBQUMsWUFBWSxDQUFDLHFCQUFxQixFQUFFO1FBQ3RDLDZCQUE2QjtRQUM3QixpQ0FBaUM7UUFDakMscUJBQXFCO1FBQ3JCLGlDQUFpQztRQUNqQyxxQ0FBcUM7UUFDckMseUJBQXlCO0tBQzVCLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQztBQUVGLCs2Q0FBKzZDIiwiZmlsZSI6InRhc2tzL3JlZ2lzdGVyL2xpbmtBc3NldHNCdWlsZFByb2QuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGBsaW5rQXNzZXRzQnVpbGRQcm9kYFxuICpcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqIFRoaXMgR3J1bnQgdGFza2xpc3QgaXMgbm90IGRlc2lnbmVkIHRvIGJlIHVzZWQgZGlyZWN0bHktLSByYXRoZXJcbiAqIGl0IGlzIGEgaGVscGVyIGNhbGxlZCBieSB0aGUgYGJ1aWxkUHJvZGAgdGFza2xpc3QuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gc2VlOlxuICogICBodHRwOi8vc2FpbHNqcy5vcmcvZG9jdW1lbnRhdGlvbi9hbmF0b215L215LWFwcC90YXNrcy9yZWdpc3Rlci9saW5rLWFzc2V0cy1idWlsZC1wcm9kLWpzXG4gKlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChncnVudCkge1xuICAgIGdydW50LnJlZ2lzdGVyVGFzaygnbGlua0Fzc2V0c0J1aWxkUHJvZCcsIFtcbiAgICAgICAgJ3NhaWxzLWxpbmtlcjpwcm9kSnNSZWxhdGl2ZScsXG4gICAgICAgICdzYWlscy1saW5rZXI6cHJvZFN0eWxlc1JlbGF0aXZlJyxcbiAgICAgICAgJ3NhaWxzLWxpbmtlcjpkZXZUcGwnLFxuICAgICAgICAnc2FpbHMtbGlua2VyOnByb2RKc1JlbGF0aXZlSmFkZScsXG4gICAgICAgICdzYWlscy1saW5rZXI6cHJvZFN0eWxlc1JlbGF0aXZlSmFkZScsXG4gICAgICAgICdzYWlscy1saW5rZXI6ZGV2VHBsSmFkZSdcbiAgICBdKTtcbn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5SaGMydHpMM0psWjJsemRHVnlMMnhwYm10QmMzTmxkSE5DZFdsc1pGQnliMlF1YW5NaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdPenM3T3pzN096czdPMGRCVjBjN1FVRkRTQ3hOUVVGTkxFTkJRVU1zVDBGQlR5eEhRVUZITEZWQlFWTXNTMEZCU3p0SlFVTTNRaXhMUVVGTExFTkJRVU1zV1VGQldTeERRVUZETEhGQ1FVRnhRaXhGUVVGRk8xRkJRM2hETERaQ1FVRTJRanRSUVVNM1FpeHBRMEZCYVVNN1VVRkRha01zY1VKQlFYRkNPMUZCUTNKQ0xHbERRVUZwUXp0UlFVTnFReXh4UTBGQmNVTTdVVUZEY2tNc2VVSkJRWGxDTzB0QlF6RkNMRU5CUVVNc1EwRkJRenRCUVVOTUxFTkJRVU1zUTBGQlF5SXNJbVpwYkdVaU9pSjBZWE5yY3k5eVpXZHBjM1JsY2k5c2FXNXJRWE56WlhSelFuVnBiR1JRY205a0xtcHpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpTHlvcVhHNGdLaUJnYkdsdWEwRnpjMlYwYzBKMWFXeGtVSEp2WkdCY2JpQXFYRzRnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQXFYRzRnS2lCVWFHbHpJRWR5ZFc1MElIUmhjMnRzYVhOMElHbHpJRzV2ZENCa1pYTnBaMjVsWkNCMGJ5QmlaU0IxYzJWa0lHUnBjbVZqZEd4NUxTMGdjbUYwYUdWeVhHNGdLaUJwZENCcGN5QmhJR2hsYkhCbGNpQmpZV3hzWldRZ1lua2dkR2hsSUdCaWRXbHNaRkJ5YjJSZ0lIUmhjMnRzYVhOMExseHVJQ3BjYmlBcUlFWnZjaUJ0YjNKbElHbHVabTl5YldGMGFXOXVJSE5sWlRwY2JpQXFJQ0FnYUhSMGNEb3ZMM05oYVd4emFuTXViM0puTDJSdlkzVnRaVzUwWVhScGIyNHZZVzVoZEc5dGVTOXRlUzFoY0hBdmRHRnphM012Y21WbmFYTjBaWEl2YkdsdWF5MWhjM05sZEhNdFluVnBiR1F0Y0hKdlpDMXFjMXh1SUNwY2JpQXFMMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaWhuY25WdWRDa2dlMXh1SUNCbmNuVnVkQzV5WldkcGMzUmxjbFJoYzJzb0oyeHBibXRCYzNObGRITkNkV2xzWkZCeWIyUW5MQ0JiWEc0Z0lDQWdKM05oYVd4ekxXeHBibXRsY2pwd2NtOWtTbk5TWld4aGRHbDJaU2NzWEc0Z0lDQWdKM05oYVd4ekxXeHBibXRsY2pwd2NtOWtVM1I1YkdWelVtVnNZWFJwZG1VbkxGeHVJQ0FnSUNkellXbHNjeTFzYVc1clpYSTZaR1YyVkhCc0p5eGNiaUFnSUNBbmMyRnBiSE10YkdsdWEyVnlPbkJ5YjJSS2MxSmxiR0YwYVhabFNtRmtaU2NzWEc0Z0lDQWdKM05oYVd4ekxXeHBibXRsY2pwd2NtOWtVM1I1YkdWelVtVnNZWFJwZG1WS1lXUmxKeXhjYmlBZ0lDQW5jMkZwYkhNdGJHbHVhMlZ5T21SbGRsUndiRXBoWkdVblhHNGdJRjBwTzF4dWZUdGNiaUpkZlE9PVxuIl19

//# sourceMappingURL=data:application/json;charset=utf8;base64,
