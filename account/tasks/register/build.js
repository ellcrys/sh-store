/**
 * `build`
 *
 * ---------------------------------------------------------------
 *
 * This Grunt tasklist will be executed if you run `sails www` or
 * `grunt build` in a development environment.  It generates a
 * folder containing your compiled assets, e.g. for troubleshooting
 * issues with other Grunt plugins, bundling assets for an Electron
 * or PhoneGap app, or deploying your app's flat files to a CDN.
 *
 * Note that when running `sails www` in a production environment (with the
 * `NODE_ENV` environment variable set to 'production') the `buildProd` task
 * will be run instead of this one.
 *
 * For more information see:
 *   http://sailsjs.org/documentation/anatomy/my-app/tasks/register/build-js
 *
 */
module.exports = function (grunt) {
    grunt.registerTask('build', [
        'compileAssets',
        'linkAssetsBuild',
        'clean:build',
        'copy:build'
    ]);
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tzL3JlZ2lzdGVyL2J1aWxkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FrQkc7QUFDSCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVMsS0FBSztJQUM3QixLQUFLLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRTtRQUMxQixlQUFlO1FBQ2YsaUJBQWlCO1FBQ2pCLGFBQWE7UUFDYixZQUFZO0tBQ2IsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDIiwiZmlsZSI6InRhc2tzL3JlZ2lzdGVyL2J1aWxkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBgYnVpbGRgXG4gKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICogVGhpcyBHcnVudCB0YXNrbGlzdCB3aWxsIGJlIGV4ZWN1dGVkIGlmIHlvdSBydW4gYHNhaWxzIHd3d2Agb3JcbiAqIGBncnVudCBidWlsZGAgaW4gYSBkZXZlbG9wbWVudCBlbnZpcm9ubWVudC4gIEl0IGdlbmVyYXRlcyBhXG4gKiBmb2xkZXIgY29udGFpbmluZyB5b3VyIGNvbXBpbGVkIGFzc2V0cywgZS5nLiBmb3IgdHJvdWJsZXNob290aW5nXG4gKiBpc3N1ZXMgd2l0aCBvdGhlciBHcnVudCBwbHVnaW5zLCBidW5kbGluZyBhc3NldHMgZm9yIGFuIEVsZWN0cm9uXG4gKiBvciBQaG9uZUdhcCBhcHAsIG9yIGRlcGxveWluZyB5b3VyIGFwcCdzIGZsYXQgZmlsZXMgdG8gYSBDRE4uXG4gKlxuICogTm90ZSB0aGF0IHdoZW4gcnVubmluZyBgc2FpbHMgd3d3YCBpbiBhIHByb2R1Y3Rpb24gZW52aXJvbm1lbnQgKHdpdGggdGhlXG4gKiBgTk9ERV9FTlZgIGVudmlyb25tZW50IHZhcmlhYmxlIHNldCB0byAncHJvZHVjdGlvbicpIHRoZSBgYnVpbGRQcm9kYCB0YXNrXG4gKiB3aWxsIGJlIHJ1biBpbnN0ZWFkIG9mIHRoaXMgb25lLlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIHNlZTpcbiAqICAgaHR0cDovL3NhaWxzanMub3JnL2RvY3VtZW50YXRpb24vYW5hdG9teS9teS1hcHAvdGFza3MvcmVnaXN0ZXIvYnVpbGQtanNcbiAqXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZ3J1bnQpIHtcbiAgZ3J1bnQucmVnaXN0ZXJUYXNrKCdidWlsZCcsIFtcbiAgICAnY29tcGlsZUFzc2V0cycsXG4gICAgJ2xpbmtBc3NldHNCdWlsZCcsXG4gICAgJ2NsZWFuOmJ1aWxkJyxcbiAgICAnY29weTpidWlsZCdcbiAgXSk7XG59O1xuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tzL3JlZ2lzdGVyL2J1aWxkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FrQkc7QUFDSCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsS0FBSztJQUM1QixLQUFLLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRTtRQUN4QixlQUFlO1FBQ2YsaUJBQWlCO1FBQ2pCLGFBQWE7UUFDYixZQUFZO0tBQ2YsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDO0FBRUYsK29EQUErb0QiLCJmaWxlIjoidGFza3MvcmVnaXN0ZXIvYnVpbGQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGBidWlsZGBcbiAqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqXG4gKiBUaGlzIEdydW50IHRhc2tsaXN0IHdpbGwgYmUgZXhlY3V0ZWQgaWYgeW91IHJ1biBgc2FpbHMgd3d3YCBvclxuICogYGdydW50IGJ1aWxkYCBpbiBhIGRldmVsb3BtZW50IGVudmlyb25tZW50LiAgSXQgZ2VuZXJhdGVzIGFcbiAqIGZvbGRlciBjb250YWluaW5nIHlvdXIgY29tcGlsZWQgYXNzZXRzLCBlLmcuIGZvciB0cm91Ymxlc2hvb3RpbmdcbiAqIGlzc3VlcyB3aXRoIG90aGVyIEdydW50IHBsdWdpbnMsIGJ1bmRsaW5nIGFzc2V0cyBmb3IgYW4gRWxlY3Ryb25cbiAqIG9yIFBob25lR2FwIGFwcCwgb3IgZGVwbG95aW5nIHlvdXIgYXBwJ3MgZmxhdCBmaWxlcyB0byBhIENETi5cbiAqXG4gKiBOb3RlIHRoYXQgd2hlbiBydW5uaW5nIGBzYWlscyB3d3dgIGluIGEgcHJvZHVjdGlvbiBlbnZpcm9ubWVudCAod2l0aCB0aGVcbiAqIGBOT0RFX0VOVmAgZW52aXJvbm1lbnQgdmFyaWFibGUgc2V0IHRvICdwcm9kdWN0aW9uJykgdGhlIGBidWlsZFByb2RgIHRhc2tcbiAqIHdpbGwgYmUgcnVuIGluc3RlYWQgb2YgdGhpcyBvbmUuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gc2VlOlxuICogICBodHRwOi8vc2FpbHNqcy5vcmcvZG9jdW1lbnRhdGlvbi9hbmF0b215L215LWFwcC90YXNrcy9yZWdpc3Rlci9idWlsZC1qc1xuICpcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZ3J1bnQpIHtcbiAgICBncnVudC5yZWdpc3RlclRhc2soJ2J1aWxkJywgW1xuICAgICAgICAnY29tcGlsZUFzc2V0cycsXG4gICAgICAgICdsaW5rQXNzZXRzQnVpbGQnLFxuICAgICAgICAnY2xlYW46YnVpbGQnLFxuICAgICAgICAnY29weTpidWlsZCdcbiAgICBdKTtcbn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5SaGMydHpMM0psWjJsemRHVnlMMkoxYVd4a0xtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCT3pzN096czdPenM3T3pzN096czdPenM3UjBGclFrYzdRVUZEU0N4TlFVRk5MRU5CUVVNc1QwRkJUeXhIUVVGSExGVkJRVk1zUzBGQlN6dEpRVU0zUWl4TFFVRkxMRU5CUVVNc1dVRkJXU3hEUVVGRExFOUJRVThzUlVGQlJUdFJRVU14UWl4bFFVRmxPMUZCUTJZc2FVSkJRV2xDTzFGQlEycENMR0ZCUVdFN1VVRkRZaXhaUVVGWk8wdEJRMklzUTBGQlF5eERRVUZETzBGQlEwd3NRMEZCUXl4RFFVRkRJaXdpWm1sc1pTSTZJblJoYzJ0ekwzSmxaMmx6ZEdWeUwySjFhV3hrTG1weklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeW9xWEc0Z0tpQmdZblZwYkdSZ1hHNGdLbHh1SUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdLbHh1SUNvZ1ZHaHBjeUJIY25WdWRDQjBZWE5yYkdsemRDQjNhV3hzSUdKbElHVjRaV04xZEdWa0lHbG1JSGx2ZFNCeWRXNGdZSE5oYVd4eklIZDNkMkFnYjNKY2JpQXFJR0JuY25WdWRDQmlkV2xzWkdBZ2FXNGdZU0JrWlhabGJHOXdiV1Z1ZENCbGJuWnBjbTl1YldWdWRDNGdJRWwwSUdkbGJtVnlZWFJsY3lCaFhHNGdLaUJtYjJ4a1pYSWdZMjl1ZEdGcGJtbHVaeUI1YjNWeUlHTnZiWEJwYkdWa0lHRnpjMlYwY3l3Z1pTNW5MaUJtYjNJZ2RISnZkV0pzWlhOb2IyOTBhVzVuWEc0Z0tpQnBjM04xWlhNZ2QybDBhQ0J2ZEdobGNpQkhjblZ1ZENCd2JIVm5hVzV6TENCaWRXNWtiR2x1WnlCaGMzTmxkSE1nWm05eUlHRnVJRVZzWldOMGNtOXVYRzRnS2lCdmNpQlFhRzl1WlVkaGNDQmhjSEFzSUc5eUlHUmxjR3h2ZVdsdVp5QjViM1Z5SUdGd2NDZHpJR1pzWVhRZ1ptbHNaWE1nZEc4Z1lTQkRSRTR1WEc0Z0tseHVJQ29nVG05MFpTQjBhR0YwSUhkb1pXNGdjblZ1Ym1sdVp5QmdjMkZwYkhNZ2QzZDNZQ0JwYmlCaElIQnliMlIxWTNScGIyNGdaVzUyYVhKdmJtMWxiblFnS0hkcGRHZ2dkR2hsWEc0Z0tpQmdUazlFUlY5RlRsWmdJR1Z1ZG1seWIyNXRaVzUwSUhaaGNtbGhZbXhsSUhObGRDQjBieUFuY0hKdlpIVmpkR2x2YmljcElIUm9aU0JnWW5WcGJHUlFjbTlrWUNCMFlYTnJYRzRnS2lCM2FXeHNJR0psSUhKMWJpQnBibk4wWldGa0lHOW1JSFJvYVhNZ2IyNWxMbHh1SUNwY2JpQXFJRVp2Y2lCdGIzSmxJR2x1Wm05eWJXRjBhVzl1SUhObFpUcGNiaUFxSUNBZ2FIUjBjRG92TDNOaGFXeHphbk11YjNKbkwyUnZZM1Z0Wlc1MFlYUnBiMjR2WVc1aGRHOXRlUzl0ZVMxaGNIQXZkR0Z6YTNNdmNtVm5hWE4wWlhJdlluVnBiR1F0YW5OY2JpQXFYRzRnS2k5Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1puVnVZM1JwYjI0b1ozSjFiblFwSUh0Y2JpQWdaM0oxYm5RdWNtVm5hWE4wWlhKVVlYTnJLQ2RpZFdsc1pDY3NJRnRjYmlBZ0lDQW5ZMjl0Y0dsc1pVRnpjMlYwY3ljc1hHNGdJQ0FnSjJ4cGJtdEJjM05sZEhOQ2RXbHNaQ2NzWEc0Z0lDQWdKMk5zWldGdU9tSjFhV3hrSnl4Y2JpQWdJQ0FuWTI5d2VUcGlkV2xzWkNkY2JpQWdYU2s3WEc1OU8xeHVJbDE5XG4iXX0=

//# sourceMappingURL=data:application/json;charset=utf8;base64,
