/**
 * `watch`
 *
 * ---------------------------------------------------------------
 *
 * Run predefined tasks whenever watched file patterns are added, changed or deleted.
 *
 * Watch for changes on:
 * - files in the `assets` folder
 * - the `tasks/pipeline.js` file
 * and re-run the appropriate tasks.
 *
 * For usage docs see:
 *   https://github.com/gruntjs/grunt-contrib-watch
 *
 */
module.exports = function (grunt) {
    grunt.config.set('watch', {
        assets: {
            // Assets to watch:
            files: ['assets/**/*', 'tasks/pipeline.js', '!**/node_modules/**'],
            // When assets are changed:
            tasks: ['syncAssets', 'linkAssets']
        }
    });
    grunt.loadNpmTasks('grunt-contrib-watch');
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tzL2NvbmZpZy93YXRjaC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFDSCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVMsS0FBSztJQUU3QixLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUU7UUFDeEIsTUFBTSxFQUFFO1lBRU4sbUJBQW1CO1lBQ25CLEtBQUssRUFBRSxDQUFDLGFBQWEsRUFBRSxtQkFBbUIsRUFBRSxxQkFBcUIsQ0FBQztZQUVsRSwyQkFBMkI7WUFDM0IsS0FBSyxFQUFFLENBQUMsWUFBWSxFQUFHLFlBQVksQ0FBRTtTQUN0QztLQUNGLENBQUMsQ0FBQztJQUVILEtBQUssQ0FBQyxZQUFZLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQUM1QyxDQUFDLENBQUMiLCJmaWxlIjoidGFza3MvY29uZmlnL3dhdGNoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBgd2F0Y2hgXG4gKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICogUnVuIHByZWRlZmluZWQgdGFza3Mgd2hlbmV2ZXIgd2F0Y2hlZCBmaWxlIHBhdHRlcm5zIGFyZSBhZGRlZCwgY2hhbmdlZCBvciBkZWxldGVkLlxuICpcbiAqIFdhdGNoIGZvciBjaGFuZ2VzIG9uOlxuICogLSBmaWxlcyBpbiB0aGUgYGFzc2V0c2AgZm9sZGVyXG4gKiAtIHRoZSBgdGFza3MvcGlwZWxpbmUuanNgIGZpbGVcbiAqIGFuZCByZS1ydW4gdGhlIGFwcHJvcHJpYXRlIHRhc2tzLlxuICpcbiAqIEZvciB1c2FnZSBkb2NzIHNlZTpcbiAqICAgaHR0cHM6Ly9naXRodWIuY29tL2dydW50anMvZ3J1bnQtY29udHJpYi13YXRjaFxuICpcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihncnVudCkge1xuXG4gIGdydW50LmNvbmZpZy5zZXQoJ3dhdGNoJywge1xuICAgIGFzc2V0czoge1xuXG4gICAgICAvLyBBc3NldHMgdG8gd2F0Y2g6XG4gICAgICBmaWxlczogWydhc3NldHMvKiovKicsICd0YXNrcy9waXBlbGluZS5qcycsICchKiovbm9kZV9tb2R1bGVzLyoqJ10sXG5cbiAgICAgIC8vIFdoZW4gYXNzZXRzIGFyZSBjaGFuZ2VkOlxuICAgICAgdGFza3M6IFsnc3luY0Fzc2V0cycgLCAnbGlua0Fzc2V0cycgXVxuICAgIH1cbiAgfSk7XG5cbiAgZ3J1bnQubG9hZE5wbVRhc2tzKCdncnVudC1jb250cmliLXdhdGNoJyk7XG59O1xuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tzL2NvbmZpZy93YXRjaC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFDSCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsS0FBSztJQUM1QixLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUU7UUFDdEIsTUFBTSxFQUFFO1lBQ0osbUJBQW1CO1lBQ25CLEtBQUssRUFBRSxDQUFDLGFBQWEsRUFBRSxtQkFBbUIsRUFBRSxxQkFBcUIsQ0FBQztZQUNsRSwyQkFBMkI7WUFDM0IsS0FBSyxFQUFFLENBQUMsWUFBWSxFQUFFLFlBQVksQ0FBQztTQUN0QztLQUNKLENBQUMsQ0FBQztJQUNILEtBQUssQ0FBQyxZQUFZLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQUM5QyxDQUFDLENBQUM7QUFFRixtbkRBQW1uRCIsImZpbGUiOiJ0YXNrcy9jb25maWcvd2F0Y2guanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGB3YXRjaGBcbiAqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqXG4gKiBSdW4gcHJlZGVmaW5lZCB0YXNrcyB3aGVuZXZlciB3YXRjaGVkIGZpbGUgcGF0dGVybnMgYXJlIGFkZGVkLCBjaGFuZ2VkIG9yIGRlbGV0ZWQuXG4gKlxuICogV2F0Y2ggZm9yIGNoYW5nZXMgb246XG4gKiAtIGZpbGVzIGluIHRoZSBgYXNzZXRzYCBmb2xkZXJcbiAqIC0gdGhlIGB0YXNrcy9waXBlbGluZS5qc2AgZmlsZVxuICogYW5kIHJlLXJ1biB0aGUgYXBwcm9wcmlhdGUgdGFza3MuXG4gKlxuICogRm9yIHVzYWdlIGRvY3Mgc2VlOlxuICogICBodHRwczovL2dpdGh1Yi5jb20vZ3J1bnRqcy9ncnVudC1jb250cmliLXdhdGNoXG4gKlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChncnVudCkge1xuICAgIGdydW50LmNvbmZpZy5zZXQoJ3dhdGNoJywge1xuICAgICAgICBhc3NldHM6IHtcbiAgICAgICAgICAgIC8vIEFzc2V0cyB0byB3YXRjaDpcbiAgICAgICAgICAgIGZpbGVzOiBbJ2Fzc2V0cy8qKi8qJywgJ3Rhc2tzL3BpcGVsaW5lLmpzJywgJyEqKi9ub2RlX21vZHVsZXMvKionXSxcbiAgICAgICAgICAgIC8vIFdoZW4gYXNzZXRzIGFyZSBjaGFuZ2VkOlxuICAgICAgICAgICAgdGFza3M6IFsnc3luY0Fzc2V0cycsICdsaW5rQXNzZXRzJ11cbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGdydW50LmxvYWROcG1UYXNrcygnZ3J1bnQtY29udHJpYi13YXRjaCcpO1xufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJblJoYzJ0ekwyTnZibVpwWnk5M1lYUmphQzVxY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUczdPenM3T3pzN096czdPenM3TzBkQlpVYzdRVUZEU0N4TlFVRk5MRU5CUVVNc1QwRkJUeXhIUVVGSExGVkJRVk1zUzBGQlN6dEpRVVUzUWl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRExFZEJRVWNzUTBGQlF5eFBRVUZQTEVWQlFVVTdVVUZEZUVJc1RVRkJUU3hGUVVGRk8xbEJSVTRzYlVKQlFXMUNPMWxCUTI1Q0xFdEJRVXNzUlVGQlJTeERRVUZETEdGQlFXRXNSVUZCUlN4dFFrRkJiVUlzUlVGQlJTeHhRa0ZCY1VJc1EwRkJRenRaUVVWc1JTd3lRa0ZCTWtJN1dVRkRNMElzUzBGQlN5eEZRVUZGTEVOQlFVTXNXVUZCV1N4RlFVRkhMRmxCUVZrc1EwRkJSVHRUUVVOMFF6dExRVU5HTEVOQlFVTXNRMEZCUXp0SlFVVklMRXRCUVVzc1EwRkJReXhaUVVGWkxFTkJRVU1zY1VKQlFYRkNMRU5CUVVNc1EwRkJRenRCUVVNMVF5eERRVUZETEVOQlFVTWlMQ0ptYVd4bElqb2lkR0Z6YTNNdlkyOXVabWxuTDNkaGRHTm9MbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUx5b3FYRzRnS2lCZ2QyRjBZMmhnWEc0Z0tseHVJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0tseHVJQ29nVW5WdUlIQnlaV1JsWm1sdVpXUWdkR0Z6YTNNZ2QyaGxibVYyWlhJZ2QyRjBZMmhsWkNCbWFXeGxJSEJoZEhSbGNtNXpJR0Z5WlNCaFpHUmxaQ3dnWTJoaGJtZGxaQ0J2Y2lCa1pXeGxkR1ZrTGx4dUlDcGNiaUFxSUZkaGRHTm9JR1p2Y2lCamFHRnVaMlZ6SUc5dU9seHVJQ29nTFNCbWFXeGxjeUJwYmlCMGFHVWdZR0Z6YzJWMGMyQWdabTlzWkdWeVhHNGdLaUF0SUhSb1pTQmdkR0Z6YTNNdmNHbHdaV3hwYm1VdWFuTmdJR1pwYkdWY2JpQXFJR0Z1WkNCeVpTMXlkVzRnZEdobElHRndjSEp2Y0hKcFlYUmxJSFJoYzJ0ekxseHVJQ3BjYmlBcUlFWnZjaUIxYzJGblpTQmtiMk56SUhObFpUcGNiaUFxSUNBZ2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwyZHlkVzUwYW5NdlozSjFiblF0WTI5dWRISnBZaTEzWVhSamFGeHVJQ3BjYmlBcUwxeHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpaG5jblZ1ZENrZ2UxeHVYRzRnSUdkeWRXNTBMbU52Ym1acFp5NXpaWFFvSjNkaGRHTm9KeXdnZTF4dUlDQWdJR0Z6YzJWMGN6b2dlMXh1WEc0Z0lDQWdJQ0F2THlCQmMzTmxkSE1nZEc4Z2QyRjBZMmc2WEc0Z0lDQWdJQ0JtYVd4bGN6b2dXeWRoYzNObGRITXZLaW92S2ljc0lDZDBZWE5yY3k5d2FYQmxiR2x1WlM1cWN5Y3NJQ2NoS2lvdmJtOWtaVjl0YjJSMWJHVnpMeW9xSjEwc1hHNWNiaUFnSUNBZ0lDOHZJRmRvWlc0Z1lYTnpaWFJ6SUdGeVpTQmphR0Z1WjJWa09seHVJQ0FnSUNBZ2RHRnphM002SUZzbmMzbHVZMEZ6YzJWMGN5Y2dMQ0FuYkdsdWEwRnpjMlYwY3ljZ1hWeHVJQ0FnSUgxY2JpQWdmU2s3WEc1Y2JpQWdaM0oxYm5RdWJHOWhaRTV3YlZSaGMydHpLQ2RuY25WdWRDMWpiMjUwY21saUxYZGhkR05vSnlrN1hHNTlPMXh1SWwxOVxuIl19

//# sourceMappingURL=data:application/json;charset=utf8;base64,
