/**
 * `coffee`
 *
 * ---------------------------------------------------------------
 *
 * Compile CoffeeScript files located in `assets/js` into Javascript
 * and generate new `.js` files in `.tmp/public/js`.
 *
 * For usage docs see:
 *   https://github.com/gruntjs/grunt-contrib-coffee
 *
 */
module.exports = function (grunt) {
    grunt.config.set('coffee', {
        dev: {
            options: {
                bare: true,
                sourceMap: true,
                sourceRoot: './'
            },
            files: [{
                    expand: true,
                    cwd: 'assets/js/',
                    src: ['**/*.coffee'],
                    dest: '.tmp/public/js/',
                    ext: '.js'
                }]
        }
    });
    grunt.loadNpmTasks('grunt-contrib-coffee');
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tzL2NvbmZpZy9jb2ZmZWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0dBV0c7QUFDSCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVMsS0FBSztJQUU3QixLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUU7UUFDekIsR0FBRyxFQUFFO1lBQ0gsT0FBTyxFQUFFO2dCQUNQLElBQUksRUFBRSxJQUFJO2dCQUNWLFNBQVMsRUFBRSxJQUFJO2dCQUNmLFVBQVUsRUFBRSxJQUFJO2FBQ2pCO1lBQ0QsS0FBSyxFQUFFLENBQUM7b0JBQ04sTUFBTSxFQUFFLElBQUk7b0JBQ1osR0FBRyxFQUFFLFlBQVk7b0JBQ2pCLEdBQUcsRUFBRSxDQUFDLGFBQWEsQ0FBQztvQkFDcEIsSUFBSSxFQUFFLGlCQUFpQjtvQkFDdkIsR0FBRyxFQUFFLEtBQUs7aUJBQ1gsQ0FBQztTQUNIO0tBQ0YsQ0FBQyxDQUFDO0lBRUgsS0FBSyxDQUFDLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0FBQzdDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YXNrcy9jb25maWcvY29mZmVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBgY29mZmVlYFxuICpcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqIENvbXBpbGUgQ29mZmVlU2NyaXB0IGZpbGVzIGxvY2F0ZWQgaW4gYGFzc2V0cy9qc2AgaW50byBKYXZhc2NyaXB0XG4gKiBhbmQgZ2VuZXJhdGUgbmV3IGAuanNgIGZpbGVzIGluIGAudG1wL3B1YmxpYy9qc2AuXG4gKlxuICogRm9yIHVzYWdlIGRvY3Mgc2VlOlxuICogICBodHRwczovL2dpdGh1Yi5jb20vZ3J1bnRqcy9ncnVudC1jb250cmliLWNvZmZlZVxuICpcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihncnVudCkge1xuXG4gIGdydW50LmNvbmZpZy5zZXQoJ2NvZmZlZScsIHtcbiAgICBkZXY6IHtcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgYmFyZTogdHJ1ZSxcbiAgICAgICAgc291cmNlTWFwOiB0cnVlLFxuICAgICAgICBzb3VyY2VSb290OiAnLi8nXG4gICAgICB9LFxuICAgICAgZmlsZXM6IFt7XG4gICAgICAgIGV4cGFuZDogdHJ1ZSxcbiAgICAgICAgY3dkOiAnYXNzZXRzL2pzLycsXG4gICAgICAgIHNyYzogWycqKi8qLmNvZmZlZSddLFxuICAgICAgICBkZXN0OiAnLnRtcC9wdWJsaWMvanMvJyxcbiAgICAgICAgZXh0OiAnLmpzJ1xuICAgICAgfV1cbiAgICB9XG4gIH0pO1xuXG4gIGdydW50LmxvYWROcG1UYXNrcygnZ3J1bnQtY29udHJpYi1jb2ZmZWUnKTtcbn07XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tzL2NvbmZpZy9jb2ZmZWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0dBV0c7QUFDSCxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsS0FBSztJQUM1QixLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUU7UUFDdkIsR0FBRyxFQUFFO1lBQ0QsT0FBTyxFQUFFO2dCQUNMLElBQUksRUFBRSxJQUFJO2dCQUNWLFNBQVMsRUFBRSxJQUFJO2dCQUNmLFVBQVUsRUFBRSxJQUFJO2FBQ25CO1lBQ0QsS0FBSyxFQUFFLENBQUM7b0JBQ0EsTUFBTSxFQUFFLElBQUk7b0JBQ1osR0FBRyxFQUFFLFlBQVk7b0JBQ2pCLEdBQUcsRUFBRSxDQUFDLGFBQWEsQ0FBQztvQkFDcEIsSUFBSSxFQUFFLGlCQUFpQjtvQkFDdkIsR0FBRyxFQUFFLEtBQUs7aUJBQ2IsQ0FBQztTQUNUO0tBQ0osQ0FBQyxDQUFDO0lBQ0gsS0FBSyxDQUFDLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0FBQy9DLENBQUMsQ0FBQztBQUVGLDJ1REFBMnVEIiwiZmlsZSI6InRhc2tzL2NvbmZpZy9jb2ZmZWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGBjb2ZmZWVgXG4gKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICogQ29tcGlsZSBDb2ZmZWVTY3JpcHQgZmlsZXMgbG9jYXRlZCBpbiBgYXNzZXRzL2pzYCBpbnRvIEphdmFzY3JpcHRcbiAqIGFuZCBnZW5lcmF0ZSBuZXcgYC5qc2AgZmlsZXMgaW4gYC50bXAvcHVibGljL2pzYC5cbiAqXG4gKiBGb3IgdXNhZ2UgZG9jcyBzZWU6XG4gKiAgIGh0dHBzOi8vZ2l0aHViLmNvbS9ncnVudGpzL2dydW50LWNvbnRyaWItY29mZmVlXG4gKlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChncnVudCkge1xuICAgIGdydW50LmNvbmZpZy5zZXQoJ2NvZmZlZScsIHtcbiAgICAgICAgZGV2OiB7XG4gICAgICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgICAgICAgYmFyZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzb3VyY2VNYXA6IHRydWUsXG4gICAgICAgICAgICAgICAgc291cmNlUm9vdDogJy4vJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZpbGVzOiBbe1xuICAgICAgICAgICAgICAgICAgICBleHBhbmQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGN3ZDogJ2Fzc2V0cy9qcy8nLFxuICAgICAgICAgICAgICAgICAgICBzcmM6IFsnKiovKi5jb2ZmZWUnXSxcbiAgICAgICAgICAgICAgICAgICAgZGVzdDogJy50bXAvcHVibGljL2pzLycsXG4gICAgICAgICAgICAgICAgICAgIGV4dDogJy5qcydcbiAgICAgICAgICAgICAgICB9XVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgZ3J1bnQubG9hZE5wbVRhc2tzKCdncnVudC1jb250cmliLWNvZmZlZScpO1xufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJblJoYzJ0ekwyTnZibVpwWnk5amIyWm1aV1V1YW5NaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdPenM3T3pzN096czdPMGRCVjBjN1FVRkRTQ3hOUVVGTkxFTkJRVU1zVDBGQlR5eEhRVUZITEZWQlFWTXNTMEZCU3p0SlFVVTNRaXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETEVkQlFVY3NRMEZCUXl4UlFVRlJMRVZCUVVVN1VVRkRla0lzUjBGQlJ5eEZRVUZGTzFsQlEwZ3NUMEZCVHl4RlFVRkZPMmRDUVVOUUxFbEJRVWtzUlVGQlJTeEpRVUZKTzJkQ1FVTldMRk5CUVZNc1JVRkJSU3hKUVVGSk8yZENRVU5tTEZWQlFWVXNSVUZCUlN4SlFVRkpPMkZCUTJwQ08xbEJRMFFzUzBGQlN5eEZRVUZGTEVOQlFVTTdiMEpCUTA0c1RVRkJUU3hGUVVGRkxFbEJRVWs3YjBKQlExb3NSMEZCUnl4RlFVRkZMRmxCUVZrN2IwSkJRMnBDTEVkQlFVY3NSVUZCUlN4RFFVRkRMR0ZCUVdFc1EwRkJRenR2UWtGRGNFSXNTVUZCU1N4RlFVRkZMR2xDUVVGcFFqdHZRa0ZEZGtJc1IwRkJSeXhGUVVGRkxFdEJRVXM3YVVKQlExZ3NRMEZCUXp0VFFVTklPMHRCUTBZc1EwRkJReXhEUVVGRE8wbEJSVWdzUzBGQlN5eERRVUZETEZsQlFWa3NRMEZCUXl4elFrRkJjMElzUTBGQlF5eERRVUZETzBGQlF6ZERMRU5CUVVNc1EwRkJReUlzSW1acGJHVWlPaUowWVhOcmN5OWpiMjVtYVdjdlkyOW1abVZsTG1weklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeW9xWEc0Z0tpQmdZMjltWm1WbFlGeHVJQ3BjYmlBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ3BjYmlBcUlFTnZiWEJwYkdVZ1EyOW1abVZsVTJOeWFYQjBJR1pwYkdWeklHeHZZMkYwWldRZ2FXNGdZR0Z6YzJWMGN5OXFjMkFnYVc1MGJ5QktZWFpoYzJOeWFYQjBYRzRnS2lCaGJtUWdaMlZ1WlhKaGRHVWdibVYzSUdBdWFuTmdJR1pwYkdWeklHbHVJR0F1ZEcxd0wzQjFZbXhwWXk5cWMyQXVYRzRnS2x4dUlDb2dSbTl5SUhWellXZGxJR1J2WTNNZ2MyVmxPbHh1SUNvZ0lDQm9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZaM0oxYm5ScWN5OW5jblZ1ZEMxamIyNTBjbWxpTFdOdlptWmxaVnh1SUNwY2JpQXFMMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaWhuY25WdWRDa2dlMXh1WEc0Z0lHZHlkVzUwTG1OdmJtWnBaeTV6WlhRb0oyTnZabVpsWlNjc0lIdGNiaUFnSUNCa1pYWTZJSHRjYmlBZ0lDQWdJRzl3ZEdsdmJuTTZJSHRjYmlBZ0lDQWdJQ0FnWW1GeVpUb2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ2MyOTFjbU5sVFdGd09pQjBjblZsTEZ4dUlDQWdJQ0FnSUNCemIzVnlZMlZTYjI5ME9pQW5MaThuWEc0Z0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnWm1sc1pYTTZJRnQ3WEc0Z0lDQWdJQ0FnSUdWNGNHRnVaRG9nZEhKMVpTeGNiaUFnSUNBZ0lDQWdZM2RrT2lBbllYTnpaWFJ6TDJwekx5Y3NYRzRnSUNBZ0lDQWdJSE55WXpvZ1d5Y3FLaThxTG1OdlptWmxaU2RkTEZ4dUlDQWdJQ0FnSUNCa1pYTjBPaUFuTG5SdGNDOXdkV0pzYVdNdmFuTXZKeXhjYmlBZ0lDQWdJQ0FnWlhoME9pQW5MbXB6SjF4dUlDQWdJQ0FnZlYxY2JpQWdJQ0I5WEc0Z0lIMHBPMXh1WEc0Z0lHZHlkVzUwTG14dllXUk9jRzFVWVhOcmN5Z25aM0oxYm5RdFkyOXVkSEpwWWkxamIyWm1aV1VuS1R0Y2JuMDdYRzRpWFgwPVxuIl19
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
